2
00:00:00.267 --> 00:00:02.269 line:-1 position:50%
[MAC STARTUP CHIME]


3
00:00:02.269 --> 00:00:05.572 line:-1 position:50%
♪ Bass music playing ♪


4
00:00:05.572 --> 00:00:07.941 line:-1 position:50%
[KEYSTROKES]


5
00:00:07,941 --> 00:00:09,042 position:90% size:2% align:right
♪


6
00:00:09,042 --> 00:00:10,777 line:-1
Patrick Angle: Hi! I’m Patrick,


7
00:00:10,777 --> 00:00:13,380 line:-1
an engineer on the WebKit
Developer Experience team,


8
00:00:13,380 --> 00:00:14,882 line:-1
and it is my pleasure
to show you


9
00:00:14,882 --> 00:00:17,985 line:-1
some of the many exciting
features and improvements


10
00:00:17,985 --> 00:00:20,654 line:-1
that are new
in Web Inspector this year.


11
00:00:20.654 --> 00:00:23.323 line:-1 position:50%
Web Inspector is part
of Safari on macOS


12
00:00:23,323 --> 00:00:25,592 line:-1
and gives web developers
and designers


13
00:00:25,592 --> 00:00:27,427 line:-1
access to a rich set of tools


14
00:00:27,427 --> 00:00:30,597 line:-1
to inspect their web pages
and web applications.


15
00:00:30,597 --> 00:00:31,732 line:-1
It allows you to inspect


16
00:00:31,732 --> 00:00:34,501 line:-1
all the resources and activity
on a web page,


17
00:00:34,501 --> 00:00:40,374 line:-1
and works seamlessly across
macOS, iOS, iPadOS, and tvOS.


18
00:00:40,374 --> 00:00:42,242 line:-1
This year, I am thrilled
to show you


19
00:00:42,242 --> 00:00:44,044 line:-1
new features in Web Inspector


20
00:00:44.044 --> 00:00:49.316 line:-1 position:50%
starting with a new overlay
for visualizing your CSS Grids,


21
00:00:49.316 --> 00:00:51.785 line:-1 position:50%
enhancements to breakpoints,


22
00:00:51.785 --> 00:00:54.554 line:-1 position:50%
and the ability
to author and edit audits


23
00:00:54.554 --> 00:00:57.024 line:-1 position:50%
right in Web Inspector.


24
00:00:57.024 --> 00:00:59.092 line:-1 position:50%
Before I talk about
these new features,


25
00:00:59,092 --> 00:01:00,994 line:-1
if you haven’t
used Web Inspector before,


26
00:01:00,994 --> 00:01:02,562 line:-1
you’ll have to enable it.


27
00:01:02,562 --> 00:01:04,932 line:-1
In the Advanced tab
of Safari’s Preferences,


28
00:01:04,932 --> 00:01:08,468 line:-1
enable
“Show Develop menu in menu bar”.


29
00:01:08,468 --> 00:01:10,504 line:-1
Web Inspector
can then be opened using


30
00:01:10.504 --> 00:01:15.342 line:-1 position:50%
the Show Web Inspector item
in the Develop menu.


31
00:01:15,342 --> 00:01:17,077 line:-1
Now that Web Inspector
is enabled,


32
00:01:17,077 --> 00:01:20,847 line:-1
let’s look at our first new tool
this year: grid overlays.


33
00:01:20.847 --> 00:01:24.151 line:-1 position:50%
Web page layout these days
can be quite complicated.


34
00:01:24.151 --> 00:01:26.720 line:-1 position:50%
CSS Grid is a
two-dimensional layout system


35
00:01:26.720 --> 00:01:29.523 line:-1 position:50%
that makes it easy
for designers to lay out content


36
00:01:29,523 --> 00:01:31,658 line:-1
in a way that is both
incredibly powerful


37
00:01:31,658 --> 00:01:33,160 line:-1
as well as instantly familiar


38
00:01:33.160 --> 00:01:36.730 line:-1 position:50%
to anyone who has ever
worked in printed design.


39
00:01:36.730 --> 00:01:39.366 line:-1 position:50%
A structure of rows and columns
is defined


40
00:01:39.366 --> 00:01:42.269 line:-1 position:50%
where elements are then placed
or distributed in the grid


41
00:01:42.269 --> 00:01:45.572 line:-1 position:50%
to achieve a flexible
yet predictable layout.


42
00:01:45.572 --> 00:01:48.709 line:-1 position:50%
Grid is a highly capable way
to lay out your web page,


43
00:01:48,709 --> 00:01:51,778 line:-1
but it can bring a host
of new questions and confusion


44
00:01:51,778 --> 00:01:54,348 line:-1
as your layouts
become more complex.


45
00:01:54,348 --> 00:01:57,250 line:-1
Like, Why is my column
this size?


46
00:01:57.250 --> 00:02:02.356 line:-1 position:50%
Or, Why is this blue box
down here?


47
00:02:02.356 --> 00:02:03.957 line:-1 position:50%
Previously in Web Inspector,


48
00:02:03.957 --> 00:02:06.927 line:-1 position:50%
the primary source of answers
to these pressing questions


49
00:02:06,927 --> 00:02:09,463 line:-1
was the Style sidebar
in the Elements tab,


50
00:02:09.463 --> 00:02:13.033 line:-1 position:50%
which this year has moved
to its own independent sidebar,


51
00:02:13.033 --> 00:02:15.202 line:-1 position:50%
allowing you to view
matching CSS rules


52
00:02:15.202 --> 00:02:20.474 line:-1 position:50%
alongside other panels
like Computed styles.


53
00:02:20,474 --> 00:02:22,275 line:-1
If you look at
a grid’s authored style,


54
00:02:22,275 --> 00:02:25,245 line:-1
you can glean some information
about its layout.


55
00:02:25,245 --> 00:02:27,047 line:-1
But the grid’s authored style


56
00:02:27.047 --> 00:02:29.249 line:-1 position:50%
only gets you
part of the way there.


57
00:02:29,249 --> 00:02:31,418 line:-1
Wouldn’t it be great
if there was a more visual way


58
00:02:31.418 --> 00:02:34.154 line:-1 position:50%
to digest this information
with Web Inspector?


59
00:02:34,154 --> 00:02:35,322 line:-1
Well, now there is!


60
00:02:35,322 --> 00:02:37,824 line:-1
If you look at the elements
in the DOM tree,


61
00:02:37.824 --> 00:02:40.093 line:-1 position:50%
you’ll see a new
clickable grid badge


62
00:02:40,093 --> 00:02:43,063 line:-1
next to each of the elements
that are a CSS Grid.


63
00:02:43.063 --> 00:02:45.932 line:-1 position:50%
Here, we see the badge
for one of the two CSS Grids


64
00:02:45,932 --> 00:02:47,300 line:-1
on our page.


65
00:02:47,300 --> 00:02:50,537 line:-1
If we click this new badge
and return to our web page,


66
00:02:50.537 --> 00:02:52.305 line:-1 position:50%
you can see
the new grid overlay


67
00:02:52,305 --> 00:02:54,274 line:-1
on top of your existing content,


68
00:02:54,274 --> 00:02:57,244 line:-1
allowing you to visualize
the layout of the grid inline


69
00:02:57.244 --> 00:03:00.380 line:-1 position:50%
without the mental gymnastics
of reading your authored CSS


70
00:03:00,380 --> 00:03:03,817 line:-1
and hoping it does
what you think it will.


71
00:03:03,817 --> 00:03:05,619 line:-1
But what if this isn’t
the exact information


72
00:03:05,619 --> 00:03:07,721 line:-1
you want to see about your grid?


73
00:03:07.721 --> 00:03:11.324 line:-1 position:50%
What about grid areas,
line names, and other options?


74
00:03:11,324 --> 00:03:14,227 line:-1
To answer that,
let’s return to Web Inspector.


75
00:03:14,227 --> 00:03:16,396 line:-1
Here, you can find
another new feature,


76
00:03:16.396 --> 00:03:20.167 line:-1 position:50%
the Layout panel, which shows
all the options and controls


77
00:03:20,167 --> 00:03:22,302 line:-1
related to grid overlays.


78
00:03:22.302 --> 00:03:26.473 line:-1 position:50%
First, let's take a look at
the list of grids on the page.


79
00:03:26,473 --> 00:03:27,574 line:-1
Here you have the option


80
00:03:27.574 --> 00:03:32.612 line:-1 position:50%
to toggle all of the grid
overlays on or off all at once.


81
00:03:32,612 --> 00:03:36,950 line:0
Or you can toggle a single
grid’s overlay off or on.


82
00:03:36,950 --> 00:03:40,554 line:0
Each grid is listed with
its corresponding CSS selector


83
00:03:40,554 --> 00:03:42,823 line:0
to help identify it in the list.


84
00:03:42,823 --> 00:03:45,492 line:0
Next to each listed grid
is a color swatch


85
00:03:45,492 --> 00:03:47,127 line:0
that allows you
to interactively change


86
00:03:47,127 --> 00:03:48,895 position:50%
the color of the grid overlay,


87
00:03:48,895 --> 00:03:51,731 position:50%
and the badges on each element
will use this color


88
00:03:51,731 --> 00:03:54,367 line:0
when that grid overlay
is enabled.


89
00:03:54.367 --> 00:03:57.270 line:-1 position:50%
Web Inspector will remember
your color for each element


90
00:03:57,270 --> 00:03:59,406 line:-1
the next time the same page
is loaded.


91
00:03:59,406 --> 00:04:01,675 line:-1
Now let’s take a look
at the options we have


92
00:04:01.675 --> 00:04:04.077 line:-1 position:50%
to control how these overlays
are displayed,


93
00:04:04.077 --> 00:04:05.946 line:-1 position:50%
starting with track sizes,


94
00:04:05,946 --> 00:04:08,381 line:-1
which show the authored sizes
of each track --


95
00:04:08.381 --> 00:04:11.118 line:-1 position:50%
which is a row or column --
of your grid.


96
00:04:11.118 --> 00:04:13.053 line:-1 position:50%
Like here, where a mix
of fractional units


97
00:04:13.053 --> 00:04:15.021 line:-1 position:50%
and min-content are used.


98
00:04:15,021 --> 00:04:17,924 line:-1
Next, line numbers show you
the values that can be used


99
00:04:17.924 --> 00:04:20.961 line:-1 position:50%
to place child elements
at specific rows or columns


100
00:04:20,961 --> 00:04:22,429 line:-1
in your grid.


101
00:04:22.429 --> 00:04:24.197 line:-1 position:50%
We’ve placed
negative line numbers --


102
00:04:24.197 --> 00:04:25.565 line:-1 position:50%
which represent line numbers


103
00:04:25,565 --> 00:04:27,767 line:-1
counting from
the last explicit grid line --


104
00:04:27.767 --> 00:04:30.604 line:-1 position:50%
inside the label, alongside
the positive line numbers


105
00:04:30,604 --> 00:04:34,007 line:-1
to allow you to choose
how you want to place your item.


106
00:04:34.007 --> 00:04:36.076 line:-1 position:50%
Line names provide another way


107
00:04:36,076 --> 00:04:39,079 line:-1
to refer to your lines
in your grid based on area names


108
00:04:39.079 --> 00:04:43.183 line:-1 position:50%
as well as lines
that have been explicitly named.


109
00:04:43,183 --> 00:04:45,018 line:-1
Area names allow you to see


110
00:04:45,018 --> 00:04:46,987 line:-1
each of the named areas
in your grid,


111
00:04:46.987 --> 00:04:49.489 line:-1 position:50%
which is helpful if you want
to place children in your grid


112
00:04:49.489 --> 00:04:50.724 line:-1 position:50%
without addressing the lines


113
00:04:50,724 --> 00:04:53,426 line:-1
on each side
of your desired placement.


114
00:04:53,426 --> 00:04:55,962 line:-1
We’ve placed area names
in the center of each area


115
00:04:55.962 --> 00:04:58.698 line:-1 position:50%
and outlined each area
in a thick stroke.


116
00:04:58,698 --> 00:05:01,034 line:-1
Lastly, turning on
extended gridlines


117
00:05:01.034 --> 00:05:03.670 line:-1 position:50%
on this second grid container
allows you to see


118
00:05:03,670 --> 00:05:06,373 line:-1
the track lines extended
to the edge of the page,


119
00:05:06,373 --> 00:05:08,842 line:-1
allowing you to visually compare
the grid’s alignment


120
00:05:08,842 --> 00:05:11,611 line:-1
to other elements on your page.


121
00:05:11,611 --> 00:05:14,347 line:-1
We’ve built our overlays
with performance in mind,


122
00:05:14.347 --> 00:05:17.150 line:-1 position:50%
and you can enable
as many as you need,


123
00:05:17.150 --> 00:05:20.387 line:-1 position:50%
all while smoothly scrolling
through your page.


124
00:05:20,387 --> 00:05:23,056 line:-1
Dozens of grids
can be shown simultaneously,


125
00:05:23,056 --> 00:05:26,560 line:-1
all while providing you
buttery-smooth scrolling.


126
00:05:26.560 --> 00:05:29.796 line:-1 position:50%
They work for all writing modes
like this vertically set text


127
00:05:29,796 --> 00:05:31,398 line:-1
originally from Wikipedia,


128
00:05:31,398 --> 00:05:33,099 line:-1
right-to-left text direction,


129
00:05:33,099 --> 00:05:35,435 line:-1
and combinations thereof.


130
00:05:35,435 --> 00:05:37,637 line:-1
And these overlays
are also available


131
00:05:37.637 --> 00:05:40.340 line:-1 position:50%
on iOS 15 and iPadOS 15


132
00:05:40,340 --> 00:05:43,510 line:-1
when inspecting remotely
from a Mac with Safari 15


133
00:05:43.510 --> 00:05:47.047 line:-1 position:50%
or the latest
Safari Technology Preview.


134
00:05:47,047 --> 00:05:48,682 line:-1
We believe that grid


135
00:05:48.682 --> 00:05:51.785 line:-1 position:50%
is an incredibly important
layout tool on the web,


136
00:05:51.785 --> 00:05:54.588 line:-1 position:50%
and that is why we have brought
these tools to Web Inspector,


137
00:05:54.588 --> 00:05:57.157 line:-1 position:50%
enabling you to visualize
and debug grid


138
00:05:57,157 --> 00:05:59,025 line:-1
across all of our platforms


139
00:05:59,025 --> 00:06:02,295 line:-1
to continue to create
incredible layouts.


140
00:06:02.295 --> 00:06:05.565 line:-1 position:50%
Now let’s take a look at
how grid overlays can help us


141
00:06:05,565 --> 00:06:09,703 line:-1
to better understand and solve
problems on our web pages.


142
00:06:09,703 --> 00:06:12,172 line:-1
Let’s take a look at a web page
I’ve been working on


143
00:06:12,172 --> 00:06:13,573 line:-1
that gives me a quick overview


144
00:06:13,573 --> 00:06:16,176 line:-1
of information I want to see
each morning.


145
00:06:16.176 --> 00:06:19.079 line:-1 position:50%
I can see my commute, the
weather forecast for the day --


146
00:06:19,079 --> 00:06:20,914 line:-1
looks like I’ll want
a jacket tonight! --


147
00:06:20.914 --> 00:06:22.949 line:-1 position:50%
and a list of things
to pick up at the store


148
00:06:22,949 --> 00:06:25,118 line:-1
after work today.


149
00:06:25,118 --> 00:06:27,487 line:-1
This page is laid out
with CSS Grid,


150
00:06:27.487 --> 00:06:30.090 line:-1 position:50%
which made it easy to create
these varying sized tiles


151
00:06:30,090 --> 00:06:32,225 line:-1
and place them on my page.


152
00:06:32,225 --> 00:06:35,895 line:-1
But wait, it looks like I forgot
to place one of these fun emojis


153
00:06:35,895 --> 00:06:38,031 line:-1
I used to decorate my dashboard.


154
00:06:38,031 --> 00:06:41,301 line:0
It belongs down here
with the rest of my emojis!


155
00:06:41,301 --> 00:06:43,637 line:-1
No problem.
I can use our new grid overlay


156
00:06:43.637 --> 00:06:46.740 line:-1 position:50%
to help me place it
exactly where I’d like.


157
00:06:46,740 --> 00:06:48,408 line:-1
To begin inspecting my page,


158
00:06:48,408 --> 00:06:50,277 line:-1
I’ll right-click on
my problematic element


159
00:06:50,277 --> 00:06:52,646 line:-1
and select Inspect Element.


160
00:06:52,646 --> 00:06:54,481 line:0
If you don’t see
Inspect Element,


161
00:06:54,481 --> 00:06:56,116 line:0
make sure to enable
Web Inspector


162
00:06:56,116 --> 00:06:58,852 position:50%
like we discussed earlier.


163
00:06:58,852 --> 00:07:02,222 line:0
I’ll then select the Layout
panel in the Details sidebar,


164
00:07:02,222 --> 00:07:05,692 line:0
where I can see all
the grid contexts on my page.


165
00:07:05,692 --> 00:07:07,627 position:50%
I can’t quite remember
which of these grids


166
00:07:07,627 --> 00:07:09,763 position:50%
I want to work with,
but I can enable


167
00:07:09,763 --> 00:07:12,966 position:50%
all of the overlays at once
by checking the top checkbox


168
00:07:12,966 --> 00:07:15,769 position:50%
for all grid overlays.


169
00:07:15,769 --> 00:07:18,004 position:50%
I now see the grid context
I want to work with


170
00:07:18,004 --> 00:07:21,441 position:50%
is the pink one,
which holds all of my tiles.


171
00:07:21,441 --> 00:07:23,410 line:0
I’ll just turn off
the other two overlays


172
00:07:23,410 --> 00:07:27,347 position:50%
by unchecking them
in this list of grid contexts.


173
00:07:27,347 --> 00:07:32,719 position:50%
And now I’m left with only the
grid overlay I’m interested in.


174
00:07:32,719 --> 00:07:35,388 line:-1
If you're like me,
you may only want to see


175
00:07:35.388 --> 00:07:39.759 line:-1 position:50%
exactly the information you need
to perform the task at hand,


176
00:07:39.759 --> 00:07:42.228 line:-1 position:50%
so I’m going to disable
Track Sizes labels


177
00:07:42.228 --> 00:07:44.431 line:-1 position:50%
so I can focus
just on the line numbers


178
00:07:44.431 --> 00:07:47.067 line:-1 position:50%
for placing my stray emoji.


179
00:07:47.067 --> 00:07:49.269 line:-1 position:50%
And now the remaining
line number labels


180
00:07:49.269 --> 00:07:52.272 line:-1 position:50%
let me see exactly
where I want to place my emoji:


181
00:07:52,272 --> 00:07:58,445 line:-1
at column track line 6
and row track line 4.


182
00:07:58.445 --> 00:08:00.046 line:-1 position:50%
Because I explicitly
right-clicked


183
00:08:00,046 --> 00:08:02,849 line:-1
and inspected the tile
for my problematic emoji,


184
00:08:02.849 --> 00:08:04.584 line:-1 position:50%
it's already selected for me,


185
00:08:04.584 --> 00:08:08.188 line:-1 position:50%
and I can jump right to editing
its style to test my fix.


186
00:08:08,188 --> 00:08:10,590 line:-1
And with our new
three-panel layout,


187
00:08:10.590 --> 00:08:13.927 line:-1 position:50%
I can keep the Layout panel
visible at the same time,


188
00:08:13.927 --> 00:08:15.695 line:-1 position:50%
which is great for
when I want to switch


189
00:08:15,695 --> 00:08:17,931 line:-1
which labels or grid overlays
I’m showing


190
00:08:17,931 --> 00:08:20,266 line:-1
while testing different styles
on my page


191
00:08:20,266 --> 00:08:23,303 line:-1
without constantly
switching between panels.


192
00:08:23,303 --> 00:08:25,305 line:-1
In the Styles panel,
I'm going to click


193
00:08:25,305 --> 00:08:31,111 line:-1
in the Style Attribute section
and add a new property,


194
00:08:31,111 --> 00:08:32,812 line:-1
grid-area.


195
00:08:32.812 --> 00:08:34.948 line:-1 position:50%
I can then type a colon
to jump to editing


196
00:08:34,948 --> 00:08:39,152 line:-1
my new property's value
where I will enter "4 / 6"


197
00:08:39.152 --> 00:08:43.957 line:-1 position:50%
for row track line 4
and column track line 6.


198
00:08:43,957 --> 00:08:46,893 line:-1
Perfect, my emoji
is right where I want it now.


199
00:08:46,893 --> 00:08:48,828 line:-1
But now that I think
about it some more,


200
00:08:48,828 --> 00:08:52,165 line:-1
I really want to make sure this
emoji is always in this corner,


201
00:08:52,165 --> 00:08:57,404 line:-1
even if I add or remove rows
or columns from my grid later.


202
00:08:57,404 --> 00:08:59,372 line:-1
In the same labels
that gave me values


203
00:08:59,372 --> 00:09:02,475 line:-1
of row track line 4
and column track line 6,


204
00:09:02,475 --> 00:09:06,312 line:-1
I see a second line number,
-3, for each.


205
00:09:06.312 --> 00:09:09.215 line:-1 position:50%
This negative line number
will actually keep my emoji


206
00:09:09,215 --> 00:09:11,251 line:-1
three track lines
from the end of the grid


207
00:09:11,251 --> 00:09:12,719 line:-1
I’ve explicitly defined,


208
00:09:12.719 --> 00:09:16.055 line:-1 position:50%
and will be perfect
for my situation.


209
00:09:16.055 --> 00:09:18.124 line:-1 position:50%
I’ll update my
grid-area property’s value


210
00:09:18,124 --> 00:09:23,296 line:-1
to these new values, "-3 / -3",


211
00:09:23.296 --> 00:09:26.166 line:-1 position:50%
and see that my emoji
is still in the correct place,


212
00:09:26,166 --> 00:09:28,668 line:-1
and will continue to be
if I add another row


213
00:09:28,668 --> 00:09:31,471 line:-1
or remove another column
from my grid.


214
00:09:31.471 --> 00:09:33.706 line:-1 position:50%
This new overlay
coming to Web Inspector


215
00:09:33,706 --> 00:09:36,109 line:-1
helped me quickly
adjust the layout of my page,


216
00:09:36,109 --> 00:09:39,012 line:-1
and is great for understanding
existing layouts


217
00:09:39,012 --> 00:09:41,815 line:-1
as well as
designing new layouts.


218
00:09:41,815 --> 00:09:43,583 line:-1
Now let’s talk about
improvements


219
00:09:43,583 --> 00:09:46,953 line:-1
in JavaScript debugging
with breakpoints.


220
00:09:46.953 --> 00:09:50.056 line:-1 position:50%
For scripts,
we often start with console.log


221
00:09:50,056 --> 00:09:52,358 line:-1
as we try to figure out
why our script isn’t working


222
00:09:52,358 --> 00:09:54,127 line:-1
the way we think it should.


223
00:09:54,127 --> 00:09:56,863 line:-1
Alternatively, if you’ve
never tried breakpoints,


224
00:09:56.863 --> 00:09:58.998 line:-1 position:50%
I highly recommend
checking them out.


225
00:09:58,998 --> 00:10:01,601 line:-1
They are powerful and,
as we’ll see in just a moment,


226
00:10:01.601 --> 00:10:05.338 line:-1 position:50%
even more configurable
than before.


227
00:10:05.338 --> 00:10:06.673 line:-1 position:50%
If you're new to breakpoints,


228
00:10:06.673 --> 00:10:09.476 line:-1 position:50%
the easiest way to get started
is in the Sources tab


229
00:10:09,476 --> 00:10:11,911 line:-1
by clicking in the line gutter
of your JavaScript


230
00:10:11,911 --> 00:10:14,180 line:-1
on a line at which
you’d like to pause.


231
00:10:14,180 --> 00:10:16,816 line:-1
This creates a breakpoint
which, when reached,


232
00:10:16.816 --> 00:10:19.018 line:-1 position:50%
will pause your script
at the beginning of that line,


233
00:10:19.018 --> 00:10:20.920 line:-1 position:50%
waiting to execute the line;


234
00:10:20.920 --> 00:10:22.355 line:-1 position:50%
allow you to step
through your code


235
00:10:22,355 --> 00:10:24,157 line:-1
one statement at a time;


236
00:10:24,157 --> 00:10:27,293 line:-1
or dive deeper into
a specific statement;


237
00:10:27,293 --> 00:10:29,462 line:-1
and view the state
of your variables


238
00:10:29.462 --> 00:10:32.031 line:-1 position:50%
every step of the way.


239
00:10:32,031 --> 00:10:34,033 line:-1
But there's so much more
to breakpoints!


240
00:10:34,033 --> 00:10:36,769 line:-1
In fact, there are five
different types of breakpoints,


241
00:10:36.769 --> 00:10:39.272 line:-1 position:50%
one for every occasion.


242
00:10:39,272 --> 00:10:41,140 line:-1
There are breakpoints
for debugger statements,


243
00:10:41,140 --> 00:10:43,810 line:-1
exceptions,
and assertions;


244
00:10:43,810 --> 00:10:44,978 line:-1
JavaScript breakpoints,


245
00:10:44,978 --> 00:10:48,281 line:-1
which you can set
on lines of JavaScript;


246
00:10:48,281 --> 00:10:49,916 line:-1
event breakpoints,
which pause


247
00:10:49.916 --> 00:10:52.552 line:-1 position:50%
when an event like click,
timeouts, intervals,


248
00:10:52,552 --> 00:10:55,421 line:-1
or animation frames
are handled;


249
00:10:55,421 --> 00:10:56,222 line:-1
DOM breakpoints,


250
00:10:56.222 --> 00:10:59.826 line:-1 position:50%
which pause when actions
related to a DOM node occur.


251
00:10:59,826 --> 00:11:01,995 line:-1
These can be added
in the Elements tab,


252
00:11:01.995 --> 00:11:05.031 line:-1 position:50%
or from the context menu
for any node preview


253
00:11:05,031 --> 00:11:06,332 line:-1
in Web Inspector.


254
00:11:06.332 --> 00:11:09.168 line:-1 position:50%
And URL breakpoints,
which pause


255
00:11:09,168 --> 00:11:12,272 line:-1
when a network request
is about to be made for a URL


256
00:11:12,272 --> 00:11:17,176 line:-1
via APIs such as XMLHttpRequest
or Fetch.


257
00:11:17.176 --> 00:11:19.145 line:-1 position:50%
You can configure
your JavaScript breakpoints


258
00:11:19,145 --> 00:11:21,147 line:-1
by right-clicking
on a breakpoint


259
00:11:21.147 --> 00:11:23.950 line:-1 position:50%
and selecting Edit Breakpoint.


260
00:11:23,950 --> 00:11:27,854 line:-1
Here, you can control numerous
aspects of the breakpoint.


261
00:11:27.854 --> 00:11:31.624 line:-1 position:50%
Let’s take a look
at each of these options.


262
00:11:31.624 --> 00:11:33.092 line:-1 position:50%
We can set a condition,


263
00:11:33.092 --> 00:11:35.962 line:-1 position:50%
which must be true
for the breakpoint to be hit.


264
00:11:35.962 --> 00:11:38.965 line:-1 position:50%
New this year, we now support
using Web Inspector’s


265
00:11:38,965 --> 00:11:41,534 line:-1
Console tab API
inside expressions


266
00:11:41.534 --> 00:11:43.903 line:-1 position:50%
in breakpoint conditions
and actions,


267
00:11:43,903 --> 00:11:47,340 line:-1
like this one that refers to
the currently selected DOM node


268
00:11:47,340 --> 00:11:50,109 line:-1
in the Elements tab.


269
00:11:50.109 --> 00:11:52.011 line:-1 position:50%
In some cases,
a breakpoint condition


270
00:11:52,011 --> 00:11:54,180 line:-1
may be better expressed
as a number of times


271
00:11:54,180 --> 00:11:56,583 line:-1
to ignore the breakpoint
before it is hit,


272
00:11:56,583 --> 00:11:58,952 line:-1
like while inside a loop
where we don’t want to stop


273
00:11:58.952 --> 00:12:03.022 line:-1 position:50%
until some number of iterations
have been completed.


274
00:12:03,022 --> 00:12:06,960 line:-1
This can be used in addition to
or instead of a condition


275
00:12:06,960 --> 00:12:09,228 line:-1
to control when the breakpoint
will fire.


276
00:12:09.228 --> 00:12:11.965 line:-1 position:50%
When used in addition
to a condition,


277
00:12:11,965 --> 00:12:14,634 line:-1
the count of ignored invocations
is incremented


278
00:12:14,634 --> 00:12:18,071 line:-1
only if the condition
was satisfied.


279
00:12:18.071 --> 00:12:20.239 line:-1 position:50%
Next, you can define actions
that are taken


280
00:12:20,239 --> 00:12:21,874 line:-1
when your breakpoint is hit,


281
00:12:21.874 --> 00:12:24.110 line:-1 position:50%
like evaluating JavaScript
in context


282
00:12:24,110 --> 00:12:25,445 line:-1
with access to variables,


283
00:12:25,445 --> 00:12:29,115 line:-1
as if the code was inline
in your JavaScript source;


284
00:12:29,115 --> 00:12:31,517 line:-1
log messages
to the console easily


285
00:12:31,517 --> 00:12:34,354 line:-1
with a template string literal;


286
00:12:34,354 --> 00:12:36,522 line:-1
play a system beep
so you audibly know


287
00:12:36,522 --> 00:12:38,691 line:-1
the breakpoint was hit;


288
00:12:38,691 --> 00:12:40,560 position:50%
and define a probe expression,


289
00:12:40,560 --> 00:12:43,563 position:50%
which is evaluated with its
result saved in the Probe panel


290
00:12:43,563 --> 00:12:46,132 position:50%
of the Details sidebar
of the Sources tab,


291
00:12:46,132 --> 00:12:48,434 line:0
allowing you to see
the results of the expression


292
00:12:48,434 --> 00:12:52,639 line:0
as it changes over the lifetime
of your web page.


293
00:12:52.639 --> 00:12:54.440 line:-1 position:50%
New this year,
the action types


294
00:12:54.440 --> 00:12:56.175 line:-1 position:50%
that support JavaScript
expressions


295
00:12:56,175 --> 00:12:58,745 line:-1
can be set to emulate
a user gesture,


296
00:12:58,745 --> 00:13:01,614 line:-1
which can be helpful when
interacting with JavaScript APIs


297
00:13:01.614 --> 00:13:04.684 line:-1 position:50%
that normally require
a user to have initiated them,


298
00:13:04,684 --> 00:13:06,119 line:-1
like playing a video,


299
00:13:06.119 --> 00:13:08.588 line:-1 position:50%
enabling you to quickly
test new behavior


300
00:13:08,588 --> 00:13:12,592 line:-1
before implementing the change
in the web page’s source.


301
00:13:12,592 --> 00:13:15,061 position:50%
You can mix and match
any number of these actions


302
00:13:15,061 --> 00:13:16,496 line:0
to customize your breakpoints,


303
00:13:16,496 --> 00:13:20,233 line:0
including multiple
of any action type.


304
00:13:20,233 --> 00:13:22,135 position:50%
Lastly, you can have
your breakpoint


305
00:13:22,135 --> 00:13:24,504 position:50%
automatically continue
after evaluating


306
00:13:24,504 --> 00:13:26,372 line:0
and performing your actions


307
00:13:26,372 --> 00:13:27,940 line:0
for situations
where you just wanted


308
00:13:27,940 --> 00:13:30,743 line:0
to add some logging
or a quick patch to test


309
00:13:30,743 --> 00:13:34,614 position:50%
without modifying
the underlying web page.


310
00:13:34.614 --> 00:13:36.783 line:-1 position:50%
These options
for configuring breakpoints


311
00:13:36.783 --> 00:13:38.551 line:-1 position:50%
are incredibly versatile,


312
00:13:38,551 --> 00:13:40,319 line:-1
and this year
I’m pleased to tell you


313
00:13:40,319 --> 00:13:43,189 line:-1
that they are now available
for all breakpoint types,


314
00:13:43.189 --> 00:13:45.591 line:-1 position:50%
not just JavaScript breakpoints.


315
00:13:45.591 --> 00:13:48.561 line:-1 position:50%
This enables you to set
powerful breakpoint conditions,


316
00:13:48,561 --> 00:13:50,496 line:-1
like only pausing
on click events


317
00:13:50,496 --> 00:13:53,199 line:-1
for a specific type of element,
like button;


318
00:13:53,199 --> 00:13:56,402 line:-1
or playing a system beep
when a network request


319
00:13:56.402 --> 00:13:59.706 line:-1 position:50%
is made for a specific URL.


320
00:13:59.706 --> 00:14:01.708 line:-1 position:50%
These configuration options
being available


321
00:14:01,708 --> 00:14:05,178 line:-1
for all breakpoint types make
already great debugging tools


322
00:14:05,178 --> 00:14:08,014 line:-1
even better by helping you
cut through the noise --


323
00:14:08.014 --> 00:14:12.318 line:-1 position:50%
or even make a little noise --
at just the right time.


324
00:14:12.318 --> 00:14:14.987 line:-1 position:50%
Now, let’s return
to my dashboard web page


325
00:14:14,987 --> 00:14:17,423 line:-1
and take a look at an issue
that these new tools


326
00:14:17,423 --> 00:14:20,893 line:-1
will make a breeze to debug
and test a patch for.


327
00:14:20.893 --> 00:14:23.563 line:-1 position:50%
I recently added a button
to my commute tile


328
00:14:23,563 --> 00:14:25,765 line:-1
that I want to use to share
my estimated commute time


329
00:14:25,765 --> 00:14:27,200 line:-1
with someone else.


330
00:14:27.200 --> 00:14:30.136 line:-1 position:50%
You never know when you might
end up running late.


331
00:14:30.136 --> 00:14:32.672 line:-1 position:50%
Unfortunately,
when I click my Share button,


332
00:14:32,672 --> 00:14:34,340 line:-1
nothing happens.


333
00:14:34,340 --> 00:14:37,243 line:-1
Even worse, it’s been a few days
since I’ve worked on this tile


334
00:14:37.243 --> 00:14:38.344 line:-1 position:50%
and I don’t remember


335
00:14:38,344 --> 00:14:42,081 line:-1
where I handle click events
for this button.


336
00:14:42.081 --> 00:14:44.350 line:-1 position:50%
Fortunately, I can use
an event breakpoint


337
00:14:44,350 --> 00:14:48,688 line:-1
to pause in my click event
handler to find my code.


338
00:14:48.688 --> 00:14:52.525 line:-1 position:50%
I can create event breakpoints
here in the Sources tab.


339
00:14:52,525 --> 00:14:53,960 line:0
Clicking the plus
in the top right


340
00:14:53,960 --> 00:14:56,929 position:50%
of the breakpoint section
of the Navigation Sidebar,


341
00:14:56,929 --> 00:14:59,465 position:50%
and selecting Event Breakpoint,


342
00:14:59,465 --> 00:15:02,268 line:0
allows me to define
a new event breakpoint.


343
00:15:02,268 --> 00:15:04,704 position:50%
I’ll set the event to click,


344
00:15:04,704 --> 00:15:08,441 line:0
and then press the Return key
to create my new breakpoint.


345
00:15:08,441 --> 00:15:09,776 line:-1
I now see my click breakpoint


346
00:15:09.776 --> 00:15:12.211 line:-1 position:50%
listed in
the Navigation Sidebar.


347
00:15:12.211 --> 00:15:14.080 line:-1 position:50%
This event breakpoint
should pause


348
00:15:14,080 --> 00:15:16,048 line:-1
when I click my button.


349
00:15:16,048 --> 00:15:17,817 line:-1
But first, I want to make sure
I’m sharing


350
00:15:17,817 --> 00:15:20,486 line:-1
the most up-to-date
time estimate for my commute,


351
00:15:20.486 --> 00:15:24.991 line:-1 position:50%
so I’ll click my Refresh button
and -- Oops!


352
00:15:24.991 --> 00:15:26.993 line:-1 position:50%
My event breakpoint
will actually pause


353
00:15:26,993 --> 00:15:30,062 line:-1
for all click events,
including my Refresh button,


354
00:15:30,062 --> 00:15:31,831 line:-1
even though
I really only want to pause


355
00:15:31,831 --> 00:15:34,300 line:-1
when I click on my Share button.


356
00:15:34,300 --> 00:15:37,570 line:-1
Let’s modify my breakpoint using
the new configuration options


357
00:15:37.570 --> 00:15:40.306 line:-1 position:50%
that are available this year.


358
00:15:40,306 --> 00:15:42,909 line:-1
I can edit my breakpoint
by right-clicking on it


359
00:15:42,909 --> 00:15:45,878 line:-1
and choosing Edit Breakpoint.


360
00:15:45,878 --> 00:15:48,848 line:0
Here, I get a popover
with the configuration options


361
00:15:48,848 --> 00:15:50,917 position:50%
for the event breakpoint.


362
00:15:50,917 --> 00:15:51,984 position:50%
I need to add a condition


363
00:15:51,984 --> 00:15:55,621 position:50%
to make sure I only pause
when I need to.


364
00:15:55,621 --> 00:15:58,958 line:0
In this case, I can use
some Web Inspector console API


365
00:15:58,958 --> 00:16:03,663 line:0
to get the current event
with "$event",


366
00:16:03,663 --> 00:16:09,368 position:50%
and check if the event’s target
is equal to my Share button.


367
00:16:09,368 --> 00:16:11,070 line:0
Instead of hard-coding
my breakpoint


368
00:16:11,070 --> 00:16:12,738 line:0
for this specific button,


369
00:16:12,738 --> 00:16:14,607 position:50%
I’ll use another piece
of console API


370
00:16:14,607 --> 00:16:16,209 position:50%
to check if the event’s target


371
00:16:16,209 --> 00:16:19,745 line:0
is the currently selected
DOM node in the Elements tab


372
00:16:19,745 --> 00:16:22,448 line:0
with "$0".


373
00:16:22,448 --> 00:16:24,617 line:0
I can click out of
the configuration popover


374
00:16:24,617 --> 00:16:28,621 position:50%
and all my changes
are automatically applied.


375
00:16:28,621 --> 00:16:30,223 line:0
I’m still paused
on my breakpoint


376
00:16:30,223 --> 00:16:31,858 line:0
from clicking
on the Refresh button,


377
00:16:31,858 --> 00:16:33,359 position:50%
so I’ll click
the Continue button


378
00:16:33,359 --> 00:16:36,162 position:50%
to resume script execution
on my page.


379
00:16:36.162 --> 00:16:38.397 line:-1 position:50%
Now, when I click
on my Refresh button,


380
00:16:38,397 --> 00:16:41,901 line:-1
my commute time updates
and my breakpoint isn’t hit.


381
00:16:41,901 --> 00:16:44,203 line:-1
But if I right-click
on my Share button,


382
00:16:44,203 --> 00:16:48,007 line:-1
and select Inspect Element
to make it the selected element,


383
00:16:48.007 --> 00:16:52.278 line:-1 position:50%
I can now click
on my Share button and bingo!


384
00:16:52,278 --> 00:16:55,348 line:-1
The breakpoint paused
exactly where I wanted it to,


385
00:16:55,348 --> 00:16:58,084 line:-1
and now I see why
my Share button doesn’t work:


386
00:16:58.084 --> 00:17:00.720 line:-1 position:50%
I forgot to write this function.


387
00:17:00,720 --> 00:17:04,457 line:-1
Breakpoints can save the day --
or at least this demo -- again,


388
00:17:04,457 --> 00:17:07,493 line:-1
and help me patch sharing in
right now to test my changes


389
00:17:07.493 --> 00:17:11.097 line:-1 position:50%
before I go back to the source
to implement them.


390
00:17:11,097 --> 00:17:13,165 line:0
I’ll add a breakpoint
in my share function


391
00:17:13,165 --> 00:17:15,401 line:0
by clicking in the line gutter,


392
00:17:15,401 --> 00:17:17,536 line:0
right-clicking
on the breakpoint indicator,


393
00:17:17,536 --> 00:17:20,072 line:0
and choosing Edit Breakpoint.


394
00:17:20,072 --> 00:17:22,041 line:0
I don’t need a condition
on this breakpoint,


395
00:17:22,041 --> 00:17:24,911 position:50%
but I want to add an action.


396
00:17:24,911 --> 00:17:27,546 line:0
The default action type,
Evaluate JavaScript,


397
00:17:27,546 --> 00:17:29,949 line:0
is exactly what I want here.


398
00:17:29,949 --> 00:17:32,251 line:0
I’ll add my JavaScript
to the action,


399
00:17:32,251 --> 00:17:35,655 line:0
which will call
"navigator.share"


400
00:17:35,655 --> 00:17:38,524 line:0
with an object I’ve already
prepared with my data,


401
00:17:38,524 --> 00:17:42,695 position:50%
"this.shareData".


402
00:17:42,695 --> 00:17:44,363 position:50%
I don’t actually
need to pause my script


403
00:17:44,363 --> 00:17:47,233 line:0
as part of testing this fix,
so I’ll also enable


404
00:17:47,233 --> 00:17:50,469 line:0
Automatically continue
after evaluating.


405
00:17:50,469 --> 00:17:52,171 position:50%
Like before,


406
00:17:52,171 --> 00:17:55,341 line:0
clicking outside the popover
saves my changes.


407
00:17:55,341 --> 00:17:57,677 position:50%
I'm done with my click event
breakpoint for now,


408
00:17:57,677 --> 00:18:00,513 line:0
so let's click
on its indicator to disable it.


409
00:18:00,513 --> 00:18:02,081 line:0
I'll also click
the Continue button


410
00:18:02,081 --> 00:18:06,819 line:0
to resume script execution
on my page.


411
00:18:06,819 --> 00:18:08,487 line:-1
I can now click
on my Share button,


412
00:18:08.487 --> 00:18:10.723 line:-1 position:50%
and am presented
with the Share menu.


413
00:18:10,723 --> 00:18:14,126 line:-1
I'll select Notes to confirm
my share data is correct.


414
00:18:14.126 --> 00:18:16.963 line:-1 position:50%
This looks correct, so now
I can go back to my source code


415
00:18:16.963 --> 00:18:18.931 line:-1 position:50%
and make this change.


416
00:18:18,931 --> 00:18:20,232 line:-1
Awesome!


417
00:18:20,232 --> 00:18:22,001 line:-1
These enhancements
to breakpoints


418
00:18:22,001 --> 00:18:25,237 line:-1
made it possible to identify
and test a solution


419
00:18:25.237 --> 00:18:26.739 line:-1 position:50%
without having
to pepper my source


420
00:18:26,739 --> 00:18:28,874 line:-1
with console.log statements.


421
00:18:28,874 --> 00:18:30,743 line:-1
And now that
I have a working solution,


422
00:18:30,743 --> 00:18:33,312 line:-1
I can go add my fix
to my source.


423
00:18:33.312 --> 00:18:37.249 line:-1 position:50%
Now let’s take a look at an
exciting new feature for audits:


424
00:18:37,249 --> 00:18:39,819 line:-1
the ability to create
and edit your tests


425
00:18:39,819 --> 00:18:42,555 line:-1
right in Web Inspector.


426
00:18:42,555 --> 00:18:45,524 line:-1
Each test in the Audit tab
is written in JavaScript


427
00:18:45.524 --> 00:18:48.194 line:-1 position:50%
and is run against
the inspected web page.


428
00:18:48,194 --> 00:18:51,163 line:-1
These tests can check
for incorrect DOM structure,


429
00:18:51.163 --> 00:18:52.732 line:-1 position:50%
help enforce
design system rules,


430
00:18:52,732 --> 00:18:56,802 line:-1
or help make sure you haven’t
missed accessibility attributes.


431
00:18:56,802 --> 00:18:58,938 line:-1
In addition to individual tests,


432
00:18:58,938 --> 00:19:02,174 line:-1
you can share
and run groups of tests.


433
00:19:02,174 --> 00:19:05,945 line:-1
By default, Web Inspector
has two test groups:


434
00:19:05,945 --> 00:19:09,248 line:-1
the Demo Audit, which provides
a tour of the way audits work


435
00:19:09,248 --> 00:19:11,217 line:-1
and the functionality
they support,


436
00:19:11,217 --> 00:19:14,920 line:-1
and a suite of accessibility
tests that check for a subset


437
00:19:14.920 --> 00:19:17.256 line:-1 position:50%
of the DOM accessibility
best practices


438
00:19:17.256 --> 00:19:19.692 line:-1 position:50%
in accordance
with the ARIA specification,


439
00:19:19,692 --> 00:19:22,294 line:-1
such as ensuring that
a title or alternate text


440
00:19:22,294 --> 00:19:24,864 line:-1
is set on all image elements.


441
00:19:24.864 --> 00:19:26.766 line:-1 position:50%
You can run a test
by selecting it


442
00:19:26,766 --> 00:19:29,735 line:-1
and using the Start button
next to the audit name,


443
00:19:29,735 --> 00:19:32,104 line:-1
or run all of your tests
with the Start button


444
00:19:32,104 --> 00:19:35,741 line:-1
at the top of
the Navigation Sidebar.


445
00:19:35,741 --> 00:19:37,043 line:-1
After your tests have run,


446
00:19:37.043 --> 00:19:38.611 line:-1 position:50%
you can see the results
of each test


447
00:19:38.611 --> 00:19:42.515 line:-1 position:50%
as well as an overall summary
of passes and failures.


448
00:19:42,515 --> 00:19:43,749 line:-1
If there are any failures,


449
00:19:43.749 --> 00:19:45.751 line:-1 position:50%
you can see information
about those failures


450
00:19:45,751 --> 00:19:48,354 line:-1
so you can get them patched up.


451
00:19:48,354 --> 00:19:49,722 line:-1
To share your tests,


452
00:19:49.722 --> 00:19:52.091 line:-1 position:50%
or to edit them
in an external text editor,


453
00:19:52,091 --> 00:19:54,493 line:-1
you can export the test,


454
00:19:54,493 --> 00:19:57,530 line:-1
make your changes
to the resulting JSON file,


455
00:19:57.530 --> 00:20:01.901 line:-1 position:50%
and then import the modified
test back into Web Inspector.


456
00:20:01,901 --> 00:20:04,503 line:-1
This process of exporting
and importing


457
00:20:04,503 --> 00:20:07,406 line:-1
is great for sharing your tests
across your team


458
00:20:07,406 --> 00:20:09,141 line:-1
or with the community.


459
00:20:09.141 --> 00:20:11.710 line:-1 position:50%
And this year, we are making
creating and editing tests


460
00:20:11.710 --> 00:20:15.681 line:-1 position:50%
even easier
with a new Edit mode.


461
00:20:15,681 --> 00:20:17,116 line:0
When you click
on the Edit button


462
00:20:17,116 --> 00:20:19,351 position:50%
in the bottom
of the Navigation Sidebar,


463
00:20:19,351 --> 00:20:22,021 line:0
the Audit tab transforms
into Editing mode,


464
00:20:22,021 --> 00:20:24,723 line:0
where you now have
the ability to create new tests


465
00:20:24,723 --> 00:20:27,393 position:50%
as well as edit
your existing tests.


466
00:20:27,393 --> 00:20:30,996 line:-1
Note that the default Demo Audit
and Accessibility test groups


467
00:20:30.996 --> 00:20:35.034 line:-1 position:50%
cannot be deleted or edited,
but can be duplicated


468
00:20:35.034 --> 00:20:37.036 line:-1 position:50%
and then the duplicate
can be edited.


469
00:20:37.036 --> 00:20:39.705 line:-1 position:50%
For now, let’s look
at creating a new test


470
00:20:39,705 --> 00:20:43,142 line:-1
by using the Create item
in the Navigation Sidebar.


471
00:20:43.142 --> 00:20:46.879 line:-1 position:50%
You can create a new test case,
or a group of test cases.


472
00:20:46.879 --> 00:20:51.517 line:-1 position:50%
For now, let’s look at creating
a new test case.


473
00:20:51,517 --> 00:20:53,519 line:-1
When we create a new test case,


474
00:20:53.519 --> 00:20:56.455 line:-1 position:50%
you see that it is added
to the Navigation Sidebar,


475
00:20:56,455 --> 00:20:59,959 line:-1
and the default contents of the
test appear for you to edit.


476
00:20:59,959 --> 00:21:04,029 line:-1
Here you have several different
things available to configure.


477
00:21:04,029 --> 00:21:07,133 line:-1
The name, as well as
the description of the test,


478
00:21:07.133 --> 00:21:10.035 line:-1 position:50%
and the minimum audit version
the test supports,


479
00:21:10,035 --> 00:21:11,770 line:-1
which makes sure
the audit is not run


480
00:21:11,770 --> 00:21:13,772 line:-1
in an older version
of Web Inspector


481
00:21:13,772 --> 00:21:17,476 line:-1
where some features
may not be supported.


482
00:21:17.476 --> 00:21:20.513 line:-1 position:50%
The setup script is JavaScript
that will be executed


483
00:21:20.513 --> 00:21:24.250 line:-1 position:50%
before every top-level test
or test group.


484
00:21:24,250 --> 00:21:26,785 line:-1
This allows you to perform
common setup functions


485
00:21:26.785 --> 00:21:30.923 line:-1 position:50%
that all tests under
this top-level test rely on.


486
00:21:30,923 --> 00:21:32,925 line:-1
And last,
but certainly not least,


487
00:21:32.925 --> 00:21:36.061 line:-1 position:50%
there is the test itself,
which is a JavaScript function


488
00:21:36.061 --> 00:21:39.064 line:-1 position:50%
that can return true or false
or a result object


489
00:21:39,064 --> 00:21:41,901 line:-1
with more information
about the test’s run.


490
00:21:41.901 --> 00:21:45.504 line:-1 position:50%
A special WebInspectorAudit
object is also available,


491
00:21:45,504 --> 00:21:49,308 line:-1
which exposes additional API
specifically for tests to use


492
00:21:49,308 --> 00:21:52,878 line:-1
in both the test itself as well
as the setup for the test.


493
00:21:52,878 --> 00:21:54,747 line:-1
You can learn more
about this API


494
00:21:54,747 --> 00:21:57,383 line:-1
in the Web Inspector Reference.


495
00:21:57,383 --> 00:21:59,418 line:-1
Your changes
are automatically saved,


496
00:21:59,418 --> 00:22:02,488 line:-1
and all of this can now be done
in Web Inspector


497
00:22:02.488 --> 00:22:03.889 line:-1 position:50%
without exporting.


498
00:22:03,889 --> 00:22:07,193 line:-1
But to really get a feel for
the flexibility of these tests,


499
00:22:07.193 --> 00:22:10.429 line:-1 position:50%
I’d like to show you them
in action.


500
00:22:10,429 --> 00:22:12,665 line:-1
Let’s return to my dashboard
one last time


501
00:22:12.665 --> 00:22:14.300 line:-1 position:50%
and see how audits
can help me catch


502
00:22:14.300 --> 00:22:16.235 line:-1 position:50%
some types
of accessibility problems


503
00:22:16,235 --> 00:22:20,005 line:-1
as well as design issues
in my web page.


504
00:22:20.005 --> 00:22:23.409 line:-1 position:50%
The first thing I like to do
when I open the Audit tab


505
00:22:23,409 --> 00:22:26,845 line:-1
is to run the default
Accessibility test cases.


506
00:22:26,845 --> 00:22:29,315 line:-1
These will help me get
a good baseline reading


507
00:22:29,315 --> 00:22:33,018 line:-1
for how I’m doing on common
accessibility best practices.


508
00:22:33,018 --> 00:22:36,255 line:0
I can quickly run these tests
by clicking on the Run button


509
00:22:36,255 --> 00:22:40,392 position:50%
next to the test group.


510
00:22:40,392 --> 00:22:42,928 line:0
And not bad,
but I can do better.


511
00:22:42,928 --> 00:22:44,296 position:50%
I can look at the test failures


512
00:22:44,296 --> 00:22:47,933 position:50%
by clicking the Passed filter
button to hide those results,


513
00:22:47,933 --> 00:22:50,436 position:50%
leaving only my test failure
to view.


514
00:22:50,436 --> 00:22:52,071 line:-1
Let’s get this fixed.


515
00:22:52,071 --> 00:22:54,707 line:-1
This test provides a list
of DOM nodes that failed,


516
00:22:54.707 --> 00:22:56.642 line:-1 position:50%
making it easy
to jump to that node


517
00:22:56,642 --> 00:23:02,581 line:0
using the Reveal in Elements Tab
button that appears on hover.


518
00:23:02,581 --> 00:23:05,918 position:50%
In the Elements tab, I’ll test
adding a title to my image


519
00:23:05,918 --> 00:23:08,087 line:0
by right-clicking
on the DOM node


520
00:23:08,087 --> 00:23:12,157 line:0
choosing Add > Attribute,
and typing my new title.


521
00:23:15,461 --> 00:23:16,895 line:0
I’ll return to the Audit tab


522
00:23:16,895 --> 00:23:19,798 line:0
and run the same
test group again.


523
00:23:19,798 --> 00:23:24,036 line:0
And this time,
I see that I pass all the tests.


524
00:23:24,036 --> 00:23:26,538 line:-1
Another great use for audits
is checking to make sure


525
00:23:26,538 --> 00:23:29,575 line:-1
my web page meets
my own design standards.


526
00:23:29,575 --> 00:23:31,877 line:-1
One of my rules while
working on this project


527
00:23:31,877 --> 00:23:34,013 line:-1
was to make sure
I was consistently using


528
00:23:34.013 --> 00:23:37.783 line:-1 position:50%
a small set of font families
for all of my elements.


529
00:23:37,783 --> 00:23:39,785 line:-1
Let’s use the new
Audit Edit Mode,


530
00:23:39,785 --> 00:23:43,555 line:-1
added to Web Inspector this year,
to do just that.


531
00:23:43,555 --> 00:23:46,225 position:50%
I’ll begin editing by clicking
on the Edit button


532
00:23:46,225 --> 00:23:49,561 line:0
at the bottom
of the Navigation Sidebar.


533
00:23:49,561 --> 00:23:50,863 position:50%
Now I’m in Edit Mode.


534
00:23:50,863 --> 00:23:52,631 position:50%
Here I can create
a new test case


535
00:23:52,631 --> 00:23:55,934 position:50%
using the Create button
at the top of the sidebar.


536
00:23:55,934 --> 00:23:57,936 line:0
I’ll keep the default option
of Test Case,


537
00:23:57,936 --> 00:24:01,373 position:50%
and name my test case "Fonts."


538
00:24:01,373 --> 00:24:03,942 line:0
I can now edit
the rest of my test case.


539
00:24:03,942 --> 00:24:06,612 line:0
I’ll start by adding
a description


540
00:24:06,612 --> 00:24:10,015 line:0
to help me remember
what this test case does.


541
00:24:10,015 --> 00:24:14,353 line:0
Now let’s insert my actual
test code I’ve prepared.


542
00:24:19,291 --> 00:24:21,527 position:50%
My test will have
three main steps.


543
00:24:21,527 --> 00:24:24,730 line:0
First, I’ll create an array
of expected font families.


544
00:24:24.730 --> 00:24:27.066 line:-1 position:50%
Next, I’ll collect
all the elements on my page


545
00:24:27.066 --> 00:24:28.967 line:-1 position:50%
with a font family
that isn’t listed


546
00:24:28.967 --> 00:24:31.303 line:-1 position:50%
in my expected font families.


547
00:24:31,303 --> 00:24:33,772 line:-1
Lastly, I’ll return
my result object,


548
00:24:33.772 --> 00:24:37.843 line:-1 position:50%
including any elements
that failed my test.


549
00:24:37,843 --> 00:24:39,378 line:0
When I’m done writing my audit,


550
00:24:39,378 --> 00:24:45,551 line:0
I just click Done at the bottom
of the Navigation Sidebar.


551
00:24:45,551 --> 00:24:47,953 position:50%
I can now run my audit
by clicking the Run button


552
00:24:47,953 --> 00:24:49,855 line:0
next to its name.


553
00:24:49,855 --> 00:24:51,123 line:0
It looks like I have an issue


554
00:24:51,123 --> 00:24:53,158 line:0
with one of the nodes
on my page,


555
00:24:53,158 --> 00:24:55,594 position:50%
so let’s take a look
at what's wrong.


556
00:24:55,594 --> 00:24:58,364 position:50%
I can again use the
Reveal in Elements Tab button


557
00:24:58,364 --> 00:25:02,468 line:0
to go to the element
and look at its style.


558
00:25:02,468 --> 00:25:04,236 position:50%
Well, this is embarrassing.


559
00:25:04,236 --> 00:25:05,971 line:0
Comic Sans!


560
00:25:05,971 --> 00:25:07,906 line:0
I really don't want
to use this font,


561
00:25:07,906 --> 00:25:12,144 line:0
so let's change this to the
ui-rounded font family instead.


562
00:25:18,150 --> 00:25:21,387 position:50%
Now, I’ll return
to the Audit tab,


563
00:25:21,387 --> 00:25:24,790 line:0
run my test again,
and perfect!


564
00:25:24,790 --> 00:25:27,025 position:50%
The last thing I want to do
is export my test


565
00:25:27,025 --> 00:25:29,895 position:50%
using the Export Audit button


566
00:25:29.895 --> 00:25:32.097 line:-1 position:50%
so that I can share it
with my colleagues


567
00:25:32,097 --> 00:25:35,401 line:-1
to help them avoid the same
embarrassing mistake I made --


568
00:25:35.401 --> 00:25:36.769 line:-1 position:50%
although maybe I’ll leave out


569
00:25:36,769 --> 00:25:40,472 line:-1
the Comic Sans
part of the story.


570
00:25:40.472 --> 00:25:43.308 line:-1 position:50%
Not only were
the built-in accessibility tests


571
00:25:43,308 --> 00:25:46,178 line:-1
able to catch an issue I missed,
I was able to write a test


572
00:25:46.178 --> 00:25:49.381 line:-1 position:50%
to enforce my own design system
rules for my web page,


573
00:25:49.381 --> 00:25:51.183 line:-1 position:50%
making it even easier for teams


574
00:25:51.183 --> 00:25:53.352 line:-1 position:50%
to make sure everyone
is on the same page


575
00:25:53.352 --> 00:25:56.388 line:-1 position:50%
before ever checking in
their changes.


576
00:25:56.388 --> 00:25:59.091 line:-1 position:50%
And with that, we’ve covered
these big new features


577
00:25:59,091 --> 00:26:00,459 line:-1
in Web Inspector!


578
00:26:00.459 --> 00:26:03.796 line:-1 position:50%
A new overlay for CSS Grid
helps make sure your content


579
00:26:03,796 --> 00:26:05,798 line:-1
looks just right.


580
00:26:05.798 --> 00:26:08.834 line:-1 position:50%
Breakpoint improvements
make it easier to find, debug,


581
00:26:08.834 --> 00:26:12.704 line:-1 position:50%
and test fixes for issues
without leaving Web Inspector.


582
00:26:12.704 --> 00:26:15.040 line:-1 position:50%
And with the new audit
creating and editing


583
00:26:15,040 --> 00:26:16,542 line:-1
right in Web Inspector,


584
00:26:16,542 --> 00:26:19,211 line:-1
you can quickly create tests
to make sure web pages


585
00:26:19.211 --> 00:26:23.248 line:-1 position:50%
meet accessibility standards
as well as your own standards.


586
00:26:23,248 --> 00:26:24,883 line:-1
Along with these new features,


587
00:26:24,883 --> 00:26:26,618 line:-1
we’ve made tweaks
and enhancements


588
00:26:26,618 --> 00:26:28,487 line:-1
as well as fixed numerous bugs


589
00:26:28.487 --> 00:26:31.156 line:-1 position:50%
to further improve
Web Inspector.


590
00:26:31,156 --> 00:26:33,225 line:-1
Before I go, there are
some helpful resources


591
00:26:33,225 --> 00:26:35,727 line:-1
I’d like to leave you with.


592
00:26:35,727 --> 00:26:37,729 line:-1
You may not have realized
that Web Inspector


593
00:26:37.729 --> 00:26:40.065 line:-1 position:50%
is part of the open source
WebKit project,


594
00:26:40,065 --> 00:26:42,201 line:-1
which is the fast,
private, and secure


595
00:26:42.201 --> 00:26:45.771 line:-1 position:50%
web browser engine used by
Safari, Mail, App Store,


596
00:26:45,771 --> 00:26:49,441 line:-1
and many other apps
on macOS and iOS.


597
00:26:49,441 --> 00:26:52,511 line:0
You can learn more about the
WebKit project at webkit.org,


598
00:26:52,511 --> 00:26:54,179 position:50%
where you'll also find
blog posts


599
00:26:54,179 --> 00:26:55,981 position:50%
about new features in WebKit,


600
00:26:55,981 --> 00:26:59,952 position:50%
including this one about grid
overlays in Web Inspector.


601
00:26:59,952 --> 00:27:03,088 line:0
In addition to blog posts about
new features in Web Inspector,


602
00:27:03,088 --> 00:27:05,591 line:0
you can also find documentation
which covers


603
00:27:05,591 --> 00:27:08,794 line:0
a wide range of Web Inspector’s
features and interface,


604
00:27:08,794 --> 00:27:12,164 position:50%
and goes deep on many of
the features we discussed today,


605
00:27:12,164 --> 00:27:14,500 line:0
like audits and breakpoints.


606
00:27:14,500 --> 00:27:17,002 line:0
There's so much more depth
to those features


607
00:27:17,002 --> 00:27:19,838 line:0
than I was able to cover today,
and I highly recommend


608
00:27:19,838 --> 00:27:21,507 line:0
checking out
the documentation


609
00:27:21,507 --> 00:27:24,776 line:0
if you’d like to learn more.


610
00:27:24,776 --> 00:27:26,745 line:-1
We also would love
to hear from you!


611
00:27:26.745 --> 00:27:29.047 line:-1 position:50%
If you come across a bug
or have a suggestion


612
00:27:29.047 --> 00:27:31.450 line:-1 position:50%
on how we can improve
Web Inspector,


613
00:27:31.450 --> 00:27:34.520 line:-1 position:50%
please file feedback for macOS
in Feedback Assistant,


614
00:27:34.520 --> 00:27:39.057 line:-1 position:50%
and select WebKit as the area
for your feedback.


615
00:27:39,057 --> 00:27:40,726 line:0
I’d also like to invite you
to download


616
00:27:40,726 --> 00:27:42,561 line:0
Safari Technology Preview,


617
00:27:42,561 --> 00:27:44,897 line:0
released approximately
every two weeks,


618
00:27:44,897 --> 00:27:47,065 position:50%
which is designed specifically
for developers


619
00:27:47,065 --> 00:27:50,936 position:50%
to get early access to new
WebKit and Web Inspector tools,


620
00:27:50,936 --> 00:27:52,237 position:50%
features, and fixes


621
00:27:52,237 --> 00:27:55,007 line:0
before they appear
in the version of Safari


622
00:27:55,007 --> 00:27:59,478 line:0
included on every Mac,
iPhone, and iPad.


623
00:27:59,478 --> 00:28:02,581 line:0
Lastly, please check out
these other great sessions,


624
00:28:02,581 --> 00:28:04,816 line:0
including
“Design for Safari 15,”


625
00:28:04,816 --> 00:28:08,687 line:0
to learn how to adapt and design
beautiful content for Safari;


626
00:28:08,687 --> 00:28:12,791 position:50%
and “Develop advanced web
content,” to learn all about


627
00:28:12,791 --> 00:28:14,993 line:0
new JavaScript
and WebAssembly features


628
00:28:14,993 --> 00:28:19,231 line:0
you can use to further enhance
your web pages.


629
00:28:19,231 --> 00:28:20,866 position:50%
Also take a look
at our session,


630
00:28:20,866 --> 00:28:24,403 line:0
“What’s new in Web Inspector,”
from WWDC 2020


631
00:28:24,403 --> 00:28:28,540 position:50%
to see even more improvements
we’ve made in Web Inspector.


632
00:28:28,540 --> 00:28:30,275 line:0
You can find these
fabulous sessions,


633
00:28:30,275 --> 00:28:33,879 position:50%
and many more,
in your Developer app.


634
00:28:33,879 --> 00:28:35,347 line:0
Thank you!


635
00:28:35,347 --> 00:28:38,817 size:2% line:0 align:right
♪

