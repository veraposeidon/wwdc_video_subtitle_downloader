2
00:00:02.035 --> 00:00:05.005 line:-1 align:center
[upbeat music]


3
00:00:05,038 --> 00:00:09,009 line:-1
♪ ♪


4
00:00:09,042 --> 00:00:10,310 line:-2
[Brian]
Hello and welcome.


5
00:00:10.344 --> 00:00:12.713 line:-2 align:center
I’m Brian Goldberg, an engineer
on the App Clips team.


6
00:00:12,746 --> 00:00:15,182 line:-2
I can’t wait to show you
some great tips


7
00:00:15.215 --> 00:00:17.684 line:-2 align:center
and techniques to build
light and fast App Clips.


8
00:00:17.718 --> 00:00:19.019 line:-1 align:center
Let’s get started.


9
00:00:19.052 --> 00:00:21.655 line:-2 align:center
App Clips are a great
way for your customers


10
00:00:21.688 --> 00:00:25.459 line:-2 align:center
to quickly access and experience
what your app has to offer.


11
00:00:25.492 --> 00:00:27.294 line:-2 align:center
An App Clip is a small
part of your app


12
00:00:27.327 --> 00:00:29.096 line:-2 align:center
that’s discoverable
and downloaded


13
00:00:29.129 --> 00:00:30.364 line:-1 align:center
at the moment it’s needed.


14
00:00:32.065 --> 00:00:34.668 line:-2 align:center
App Clips are deeply integrated
into the OS.


15
00:00:34.701 --> 00:00:37.304 line:-2 align:center
They can be invoked in Safari
and Messages


16
00:00:37,337 --> 00:00:40,174 line:-2
as well as out in the real world
by scanning an App Clip Code,


17
00:00:40.207 --> 00:00:43.544 line:-2 align:center
a QR code,
or by tapping an NFC tag.


18
00:00:43,577 --> 00:00:46,813 align:center
App Clips are also surfaced
in Maps and Siri suggestions.


19
00:00:46,847 --> 00:00:49,449 line:-2
This session is loaded
with best practices


20
00:00:49,483 --> 00:00:51,818 line:-2
and troubleshooting tips
that will help you build


21
00:00:51,852 --> 00:00:54,655 line:-2
and deliver great experiences
for your customers.


22
00:00:54,688 --> 00:00:57,591 line:-2
I’ll show you a plan for getting
your clip under the size limit.


23
00:00:58,825 --> 00:01:01,295 line:-2
Maybe your App Clip isn’t being
surfaced on your web page


24
00:01:01.328 --> 00:01:04.231 line:-2 align:center
or the App Clip card does
not appear when you scan a code.


25
00:01:05.699 --> 00:01:07.835 line:-2 align:center
Perhaps you’re looking
for some tips on maintaining


26
00:01:07,868 --> 00:01:10,237 line:-2
quality in your code base,
while taking on


27
00:01:10,270 --> 00:01:13,240 line:-2
the added complexity that comes
with adopting new features.


28
00:01:14.808 --> 00:01:17.110 line:-2 align:center
And maybe you’re curious to know
what functionality


29
00:01:17.144 --> 00:01:20.647 line:-2 align:center
you can leverage that’s specific
and unique to App Clips.


30
00:01:20.681 --> 00:01:22.282 line:-2 align:center
Whether you’re
building from scratch


31
00:01:22,316 --> 00:01:24,818 line:-2
or adding a clip target
to an existing app,


32
00:01:24,852 --> 00:01:27,721 line:-2
I’ll walk you through real-world
issues developers face


33
00:01:27.754 --> 00:01:29.656 line:-2 align:center
on a daily basis,
and I’ll give you


34
00:01:29.690 --> 00:01:31.058 line:-1 align:center
actionable next steps


35
00:01:31,091 --> 00:01:33,627 line:-2
for building better clips
and apps.


36
00:01:33.660 --> 00:01:35.562 line:-2 align:center
Even when your users
are in areas


37
00:01:35,596 --> 00:01:37,664 line:-2
with good mobile
network coverage,


38
00:01:37,698 --> 00:01:39,233 line:-1
their download speeds can vary.


39
00:01:40,901 --> 00:01:43,604 line:-2
To ensure that App Clips
can be provided on demand


40
00:01:43.637 --> 00:01:46.173 line:-2 align:center
at a moment’s notice,
the maximum size


41
00:01:46,206 --> 00:01:47,708 line:-1
of an App Clip is limited.


42
00:01:49,142 --> 00:01:50,944 line:-1
Therefore, as a developer,


43
00:01:50.978 --> 00:01:54.815 line:-2 align:center
it’s important to optimize
your content for size.


44
00:01:54,848 --> 00:01:57,618 line:-2
It’s good to know early on
and often during development


45
00:01:57.651 --> 00:02:01.054 line:-2 align:center
if your clip is compact enough
to be delivered on-demand.


46
00:02:02.389 --> 00:02:04.858 line:-2 align:center
Many of you are familiar
with the iterative process


47
00:02:04.892 --> 00:02:07.928 line:-2 align:center
of profiling and optimization
in software development.


48
00:02:09.429 --> 00:02:11.331 line:-2 align:center
I’d like to show you a process
where you


49
00:02:11.365 --> 00:02:14.168 line:-2 align:center
can use Xcode
to generate a size report


50
00:02:14,201 --> 00:02:16,603 line:-2
and export an IPA
for each device variant.


51
00:02:17,871 --> 00:02:19,139 line:-2
Then I'll walk you
through a set


52
00:02:19.173 --> 00:02:21.441 line:-2 align:center
of basic
and advanced optimizations


53
00:02:21.475 --> 00:02:24.811 line:-2 align:center
you can perform to reduce
the size of your App Clip.


54
00:02:24.845 --> 00:02:26.780 line:-2 align:center
The goal is to avoid
being surprised


55
00:02:26.813 --> 00:02:28.248 line:-1 align:center
at app submission time


56
00:02:28.282 --> 00:02:30.250 line:-2 align:center
if your clip
is over the limit.


57
00:02:30,284 --> 00:02:33,020 line:-2
I put together
a fun example for us to look at.


58
00:02:33,053 --> 00:02:34,721 line:-2
It’s a version
of the Fruta sample


59
00:02:34,755 --> 00:02:38,258 line:-2
that has a number of gotchas
that put it over the size limit.


60
00:02:38.292 --> 00:02:41.395 line:-2 align:center
The gotchas are simple
to illustrate some key points.


61
00:02:41.428 --> 00:02:43.697 line:-2 align:center
Your apps are undoubtedly
more complicated


62
00:02:43.730 --> 00:02:46.567 line:-2 align:center
and have tons more features,
so please use my example


63
00:02:46.600 --> 00:02:49.536 line:-2 align:center
as a starting point
for further exploration.


64
00:02:49.570 --> 00:02:51.872 line:-2 align:center
Let’s start by launching
into Xcode


65
00:02:51.905 --> 00:02:54.308 line:-2 align:center
to go through the steps
to generate the size report


66
00:02:54.341 --> 00:02:56.376 line:-1 align:center
and export the IPA files,


67
00:02:56.410 --> 00:02:57.911 line:-1 align:center
and we’ll uncover these gotchas


68
00:02:57.945 --> 00:02:59.613 line:-2 align:center
and learn
how to fix them together.


69
00:03:00.981 --> 00:03:02.549 line:-2 align:center
First select
the full app scheme.


70
00:03:04.184 --> 00:03:06.286 line:-2 align:center
Then go to the Product menu
and choose Archive.


71
00:03:09.523 --> 00:03:12.025 line:-2 align:center
This builds the project
using the configuration


72
00:03:12,059 --> 00:03:13,660 line:-1
specified in the scheme editor.


73
00:03:16,129 --> 00:03:19,499 line:-2
When the organizer opens,
click Distribute App.


74
00:03:19,533 --> 00:03:21,034 line:-1
Choose Development.


75
00:03:22.803 --> 00:03:24.371 line:-1 align:center
Now select your App Clip.


76
00:03:28,942 --> 00:03:30,344 line:-1
In the App Thinning dropdown,


77
00:03:30.377 --> 00:03:33.013 line:-2 align:center
choose
all compatible device variants.


78
00:03:33.046 --> 00:03:35.349 line:-2 align:center
Make sure that rebuild
from bitcode is checked.


79
00:03:37,885 --> 00:03:40,454 line:-2
When the archive
is done preparing, click Export.


80
00:03:42.122 --> 00:03:45.559 line:-2 align:center
Then select a location
on the file system to export to.


81
00:03:46,994 --> 00:03:49,429 line:-2
Now open
the Export folder in Finder...


82
00:03:52,132 --> 00:03:54,768 line:-2
And then open the App Thinning
Size Report.txt.


83
00:03:57,037 --> 00:03:59,406 line:-2
There’s a section
for each device variant.


84
00:04:01.508 --> 00:04:03.844 line:-2 align:center
The second to the last line
in each section


85
00:04:03,877 --> 00:04:05,779 line:-2
will tell us
the uncompressed size


86
00:04:05.812 --> 00:04:06.780 line:-1 align:center
for that variant.


87
00:04:06.813 --> 00:04:08.515 line:-1 align:center
That’s what we’re interested in.


88
00:04:08,549 --> 00:04:11,018 line:-2
Looking at the size,
this tells me two things.


89
00:04:11.051 --> 00:04:13.654 line:-1 align:center
One, I’m over the size limit.


90
00:04:13.687 --> 00:04:16.590 line:-2 align:center
Two, I’m not seeing the effects
of app thinning


91
00:04:16,623 --> 00:04:19,826 line:-2
because all the device variants
are around the same size.


92
00:04:21,895 --> 00:04:24,531 line:-2
Let’s close the size report
and dig a bit deeper


93
00:04:24.565 --> 00:04:25.899 line:-1 align:center
to see why that is.


94
00:04:27.568 --> 00:04:29.570 line:-1 align:center
Open the Apps subfolder.


95
00:04:29.603 --> 00:04:32.873 line:-2 align:center
Rename one of the variant
IPAs extension to .zip,


96
00:04:32,906 --> 00:04:35,108 line:-1
and confirm.


97
00:04:35.142 --> 00:04:37.644 line:-1 align:center
Double-click to uncompress.


98
00:04:37.678 --> 00:04:39.079 line:-1 align:center
Open the Payload folder


99
00:04:39.112 --> 00:04:41.381 line:-2 align:center
and Control-click to show
the package contents.


100
00:04:45,219 --> 00:04:46,787 line:-1
Let’s look closely.


101
00:04:46,820 --> 00:04:51,024 line:-2
Looks like my images
are individual bundle resources.


102
00:04:51.058 --> 00:04:52.626 line:-1 align:center
Perhaps I’ll save some space


103
00:04:52.659 --> 00:04:54.394 line:-2 align:center
if I put these
in an asset catalog.


104
00:04:56,096 --> 00:04:59,132 line:-2
I see a documentation zip
and a README file


105
00:04:59.166 --> 00:05:01.702 line:-2 align:center
that don’t belong here
in the installable product.


106
00:05:04,238 --> 00:05:06,673 line:-2
There’s a framework
being used by my clip.


107
00:05:06.707 --> 00:05:08.609 line:-2 align:center
I bet that’s taking up
some space too.


108
00:05:11.245 --> 00:05:13.847 line:-2 align:center
I see some
localization folders present,


109
00:05:13.881 --> 00:05:15.549 line:-2 align:center
and I know that sometimes
these files


110
00:05:15.582 --> 00:05:17.317 line:-1 align:center
can grow if left unchecked.


111
00:05:18.819 --> 00:05:22.923 line:-2 align:center
The compiled executable
is relatively small...


112
00:05:22.956 --> 00:05:25.192 line:-2 align:center
but maybe there’s a way
to get it even smaller.


113
00:05:25,225 --> 00:05:27,227 line:-1
Every little bit helps.


114
00:05:27.261 --> 00:05:28.795 line:-1 align:center
Let’s continue on and see


115
00:05:28,829 --> 00:05:31,231 line:-2
what can be done
to fix some of these issues.


116
00:05:31,265 --> 00:05:33,500 line:-2
That process
of generating a size report


117
00:05:33,534 --> 00:05:36,303 line:-2
and looking through the IPA
was very helpful


118
00:05:36.336 --> 00:05:38.238 line:-2 align:center
because it identified
a number of steps


119
00:05:38.272 --> 00:05:40.908 line:-2 align:center
I can take
to reduce the App Clip size.


120
00:05:40,941 --> 00:05:43,110 line:-2
Let’s start
with some basic steps first,


121
00:05:43,143 --> 00:05:45,779 line:-2
and then we’ll move on
to more advanced techniques.


122
00:05:45,812 --> 00:05:47,981 line:-2
We’ll double-check
the build settings,


123
00:05:48.015 --> 00:05:51.084 line:-2 align:center
we’ll go over the benefits
of using asset catalogs,


124
00:05:51.118 --> 00:05:53.554 line:-2 align:center
we’ll exclude any files
from making their way


125
00:05:53,587 --> 00:05:55,956 line:-2
to the final product
that don’t belong,


126
00:05:55.989 --> 00:05:57.324 line:-1 align:center
and we’ll go through our code


127
00:05:57,357 --> 00:06:00,027 line:-2
and settings and refactor
for size reduction.


128
00:06:00.060 --> 00:06:03.063 line:-2 align:center
Keep in mind the optimizations
we’ll cover apply


129
00:06:03.096 --> 00:06:06.600 line:-2 align:center
to both your app and App Clip,
so feel free to apply


130
00:06:06.633 --> 00:06:09.002 line:-2 align:center
these tips
to both types of products.


131
00:06:09,036 --> 00:06:11,438 line:-2
Now let’s explore each
topic in more detail.


132
00:06:11,471 --> 00:06:13,740 line:-2
The compiled code portion
of the App Clip package


133
00:06:13,774 --> 00:06:17,110 line:-2
certainly wasn’t the largest
contributor to the clip’s size.


134
00:06:17.144 --> 00:06:20.080 line:-2 align:center
It was definitely the assets,
which we’ll get to in a moment.


135
00:06:20.113 --> 00:06:22.015 line:-1 align:center
But every little bit helps.


136
00:06:22.049 --> 00:06:24.017 line:-1 align:center
By default, Xcode will build


137
00:06:24.051 --> 00:06:26.887 line:-2 align:center
using the smallest,
fastest optimization setting,


138
00:06:26,920 --> 00:06:28,355 line:-1
but let’s double-check


139
00:06:28.388 --> 00:06:30.958 line:-2 align:center
to make sure that’s what’s
set in my project.


140
00:06:30.991 --> 00:06:33.427 line:-2 align:center
Make sure the full app
is set as the active scheme


141
00:06:33,460 --> 00:06:36,396 line:-2
and Option-click to display
the scheme settings.


142
00:06:36,430 --> 00:06:38,765 line:-2
Our archive build
should be set to release,


143
00:06:38.799 --> 00:06:40.734 line:-2 align:center
but it looks like I changed it
at some point


144
00:06:40,767 --> 00:06:42,769 line:-1
and forgot to change it back.


145
00:06:42,803 --> 00:06:45,172 line:-2
I was also experimenting a bit
in build settings


146
00:06:45.205 --> 00:06:47.074 line:-2 align:center
and moved
the release optimization level


147
00:06:47.107 --> 00:06:48.775 line:-1 align:center
off of the default.


148
00:06:48.809 --> 00:06:50.544 line:-2 align:center
Let’s change it back
so that we’re using


149
00:06:50,577 --> 00:06:53,514 line:-2
the best combination
of small binary size


150
00:06:53,547 --> 00:06:55,949 line:-1
and fast runtime execution.


151
00:06:55.983 --> 00:07:00.254 line:-2 align:center
Most of the time, as in my case,
assets like images,


152
00:07:00.287 --> 00:07:03.156 line:-2 align:center
audio, and video
take up the most space.


153
00:07:03.190 --> 00:07:05.259 line:-2 align:center
The most important step
you can take


154
00:07:05.292 --> 00:07:07.227 line:-2 align:center
to reduce the impact
these assets


155
00:07:07.261 --> 00:07:10.531 line:-2 align:center
have on your App Clip size
is to use asset catalogs,


156
00:07:10,564 --> 00:07:12,432 line:-1
and this is for two reasons.


157
00:07:12,466 --> 00:07:15,269 line:-2
One, the media you add
to asset catalogs


158
00:07:15,302 --> 00:07:16,970 line:-1
is automatically optimized


159
00:07:17.004 --> 00:07:19.907 line:-2 align:center
as part
of the Xcode build process.


160
00:07:19,940 --> 00:07:23,243 line:-2
And two, when customers
download your app or clip,


161
00:07:23.277 --> 00:07:25.779 line:-2 align:center
the product they download
will be made small enough


162
00:07:25,812 --> 00:07:28,782 line:-2
to only contain assets
suitable for their device.


163
00:07:28,815 --> 00:07:30,584 line:-2
This is also
known as app thinning,


164
00:07:30.617 --> 00:07:32.419 line:-2 align:center
and we should certainly
take advantage of it.


165
00:07:33.687 --> 00:07:35.789 line:-2 align:center
In my project,
I really should have put


166
00:07:35.822 --> 00:07:37.824 line:-2 align:center
those images
in an asset catalog.


167
00:07:37.858 --> 00:07:39.660 line:-1 align:center
We can actually do even better.


168
00:07:39.693 --> 00:07:41.995 line:-2 align:center
I’ll create
a second asset catalog,


169
00:07:42,029 --> 00:07:43,830 line:-2
and I’ll move all the images
that are shared


170
00:07:43,864 --> 00:07:46,533 line:-2
between my app
and App Clip into this catalog.


171
00:07:49.803 --> 00:07:52.272 line:-2 align:center
Let’s bring both catalogs
side by side.


172
00:07:57.578 --> 00:08:00.581 line:-2 align:center
We’ll move the icons and colors
into the shared catalog.


173
00:08:06.320 --> 00:08:07.821 line:-1 align:center
Then we’ll put the ingredient


174
00:08:07,855 --> 00:08:09,923 line:-2
and smoothie images
into the shared catalog.


175
00:08:11.592 --> 00:08:14.695 line:-2 align:center
Since the recipe images
are only needed by the full app,


176
00:08:14,728 --> 00:08:16,530 line:-2
I’ll put those
in the unshared catalog


177
00:08:16,563 --> 00:08:19,533 line:-2
so they don’t count
against the size of my App Clip.


178
00:08:19.566 --> 00:08:21.702 line:-2 align:center
I’ll make sure to remove
those images that I copied


179
00:08:21,735 --> 00:08:23,170 line:-1
over to the asset library.


180
00:08:24.304 --> 00:08:26.673 line:-2 align:center
And last, I’ll use
the target membership editor


181
00:08:26,707 --> 00:08:28,642 line:-2
to exclude
the unshared asset catalog


182
00:08:28,675 --> 00:08:29,843 line:-1
from my App Clip.


183
00:08:29,877 --> 00:08:32,613 line:-2
For a deep dive
on the asset catalog,


184
00:08:32,646 --> 00:08:35,549 align:center
check out the sessions on
optimizing storage in your app


185
00:08:35,582 --> 00:08:37,284 line:0
and optimizing app assets.


186
00:08:38,852 --> 00:08:41,855 line:0
Earlier, we inspected
the IPA on the file system,


187
00:08:41.889 --> 00:08:44.258 line:-2 align:center
and we saw a few things
that didn’t belong


188
00:08:44.291 --> 00:08:46.193 line:-2 align:center
like a README file
and a zip


189
00:08:46,226 --> 00:08:48,428 line:-1
containing documentation.


190
00:08:48,462 --> 00:08:50,964 line:-2
Let’s go ahead and use
the target membership editor


191
00:08:50.998 --> 00:08:55.536 line:-2 align:center
in Xcode to exclude these files
from all of our build products.


192
00:08:55,569 --> 00:08:57,171 line:-2
Ensure you’re
only including code


193
00:08:57,204 --> 00:08:58,438 line:-1
in your App Clip target


194
00:08:58.472 --> 00:09:01.008 line:-2 align:center
that’s necessary
for the task being performed.


195
00:09:02.743 --> 00:09:05.045 line:-2 align:center
I find it helpful to look
in the build phases


196
00:09:05,078 --> 00:09:07,247 line:-2
to get an overview
of every source file


197
00:09:07,281 --> 00:09:09,416 line:-2
that is contributing
to my App Clip.


198
00:09:09.449 --> 00:09:11.785 line:-2 align:center
If I see something
that looks unnecessary,


199
00:09:11,818 --> 00:09:15,055 line:-2
I remove it from the list
of sources and rebuild.


200
00:09:15.088 --> 00:09:17.891 line:-2 align:center
The recipe and rewards
functionality of Fruta


201
00:09:17.925 --> 00:09:20.027 line:-2 align:center
are necessary
for the full app


202
00:09:20.060 --> 00:09:23.463 line:-2 align:center
but not the App Clip,
so let’s remove those files.


203
00:09:23.497 --> 00:09:25.732 line:-2 align:center
You can even
let the compiler assist.


204
00:09:25,766 --> 00:09:27,935 line:-2
If there are build errors,
either the file


205
00:09:27,968 --> 00:09:30,604 line:-2
was necessary,
there’s more to remove,


206
00:09:30,637 --> 00:09:32,172 line:-2
or perhaps there’s code
that needs


207
00:09:32.206 --> 00:09:35.542 line:-2 align:center
to be conditionally compiled
out of the App Clip target.


208
00:09:35,576 --> 00:09:38,011 line:-2
Over time,
localized strings files


209
00:09:38.045 --> 00:09:39.513 line:-2 align:center
can become inflated
with duplicates


210
00:09:39.546 --> 00:09:40.781 line:-1 align:center
and unused strings.


211
00:09:41.915 --> 00:09:44.484 line:-2 align:center
Inspect the strings files
and delete anything


212
00:09:44,518 --> 00:09:46,153 line:-1
that’s not needed.


213
00:09:46,186 --> 00:09:48,388 line:-2
Similar to what we did
for asset catalogs,


214
00:09:48,422 --> 00:09:50,757 line:-2
you can create
a dedicated strings file


215
00:09:50.791 --> 00:09:52.159 line:-1 align:center
so that you aren’t including


216
00:09:52.192 --> 00:09:53.961 line:-2 align:center
your full app’s
localized strings


217
00:09:53,994 --> 00:09:54,995 line:-1
with your App Clip.


218
00:09:56.763 --> 00:09:58.632 line:-2 align:center
I’ve covered
some basic optimizations


219
00:09:58.665 --> 00:09:59.867 line:-1 align:center
you can implement today


220
00:09:59.900 --> 00:10:01.668 line:-2 align:center
to get your App Clip
ready for submission.


221
00:10:03,136 --> 00:10:06,406 line:-2
Now suppose, as part
of this iterative process,


222
00:10:06.440 --> 00:10:08.976 line:-2 align:center
you measure again,
you look at the size report,


223
00:10:09,009 --> 00:10:11,678 line:-2
and you still aren’t
where you need to be.


224
00:10:11.712 --> 00:10:12.880 line:-1 align:center
That’s OK.


225
00:10:12,913 --> 00:10:15,449 align:center
I have several
advanced optimization strategies


226
00:10:15,482 --> 00:10:16,650 line:0
for you to consider.


227
00:10:18.085 --> 00:10:21.088 line:-2 align:center
First, evaluate
your external dependencies


228
00:10:21.121 --> 00:10:23.190 line:-2 align:center
and take their size
into consideration.


229
00:10:23.223 --> 00:10:26.159 line:-2 align:center
Remember, App Clips
are bite-sized versions


230
00:10:26,193 --> 00:10:28,595 line:-2
of your app, so make sure
you are only linking


231
00:10:28.629 --> 00:10:30.931 line:-2 align:center
what's needed
for your clip’s functionality.


232
00:10:30.964 --> 00:10:33.467 line:-2 align:center
Remember that
SmoothieAccountLogin framework


233
00:10:33.500 --> 00:10:35.736 line:-2 align:center
that was adding
to my App Clip’s size?


234
00:10:35,769 --> 00:10:38,038 line:-2
Most of the time,
there’s an Apple framework


235
00:10:38,071 --> 00:10:39,907 line:-2
already integrated
into the OS


236
00:10:39.940 --> 00:10:41.675 line:-2 align:center
that will help you
accomplish your goal.


237
00:10:45,112 --> 00:10:47,381 align:center
Using one of these
built-in frameworks is free,


238
00:10:47,414 --> 00:10:50,584 align:center
and it’ll make your app
and App Clip lighter and faster,


239
00:10:50,617 --> 00:10:53,520 align:center
which means it’ll
download faster, launch faster,


240
00:10:53,554 --> 00:10:54,755 align:center
and allow your customers


241
00:10:54,788 --> 00:10:56,623 line:0
to complete the task
at hand faster.


242
00:10:57,724 --> 00:10:59,993 line:0
Use Sign in with Apple
to make it easy for users


243
00:11:00,027 --> 00:11:02,829 line:0
to sign in to your service
with just their Apple ID.


244
00:11:02,863 --> 00:11:05,899 line:0
For payments, Apple Pay
is fast and easy both for you,


245
00:11:05,933 --> 00:11:08,135 line:0
the developer,
and for your customers.


246
00:11:08,168 --> 00:11:09,937 align:center
For communication
over the network,


247
00:11:09,970 --> 00:11:11,638 align:center
use NSURLSession.


248
00:11:11,672 --> 00:11:15,242 line:0
For 3D graphics,
leverage RealityKit and Metal.


249
00:11:15,275 --> 00:11:17,611 align:center
For more in-depth
authentication flows,


250
00:11:17,644 --> 00:11:20,414 line:0
check out
ASWebAuthenticationSession.


251
00:11:20,447 --> 00:11:23,016 line:-2
It’s almost always the assets
and not the code


252
00:11:23.050 --> 00:11:25.719 line:-2 align:center
that pushes the size
of an App Clip over the limit.


253
00:11:25.752 --> 00:11:29.356 line:-2 align:center
More often than not,
those assets are images.


254
00:11:29,389 --> 00:11:33,093 line:-2
In the basic steps, I moved
all my images to asset catalogs


255
00:11:33.126 --> 00:11:35.295 line:-2 align:center
to take advantage
of built-in optimization


256
00:11:35,329 --> 00:11:36,597 line:-1
and app thinning.


257
00:11:36,630 --> 00:11:39,333 line:-2
Sometimes that’s not enough
and you need to take


258
00:11:39.366 --> 00:11:42.002 line:-2 align:center
further action to reduce
the size of your images.


259
00:11:42,035 --> 00:11:45,239 line:-2
The format and options you use
when saving the source image


260
00:11:45,272 --> 00:11:49,343 line:-2
can often have a profound effect
both on size and quality.


261
00:11:49,376 --> 00:11:51,245 line:-2
So how do you
make the best choice?


262
00:11:51,278 --> 00:11:54,314 line:-2
Generally speaking,
a PNG image will consume


263
00:11:54.348 --> 00:11:55.916 line:-1 align:center
more space than a JPEG image,


264
00:11:55.949 --> 00:11:58.519 line:-2 align:center
so use PNG
if you need a specific feature


265
00:11:58.552 --> 00:12:00.821 line:-2 align:center
that format provides
like transparency...


266
00:12:02.289 --> 00:12:04.491 line:-2 align:center
Or when JPEG's lossy compression
would result


267
00:12:04.525 --> 00:12:07.094 line:-2 align:center
in an unacceptable loss
of quality.


268
00:12:07.127 --> 00:12:09.563 line:-2 align:center
These examples contain
high-frequency features,


269
00:12:09,596 --> 00:12:11,765 line:-2
crisp edges,
and defined highlights.


270
00:12:11,798 --> 00:12:13,867 line:-2
The lossless compression
of PNG


271
00:12:13.901 --> 00:12:16.403 line:-2 align:center
will preserve these features
much better than JPEG.


272
00:12:18.005 --> 00:12:19.940 line:-2 align:center
And while we’re
on the subject of PNG,


273
00:12:19.973 --> 00:12:22.910 line:-2 align:center
consider PNG8
for non-photographic material.


274
00:12:24,411 --> 00:12:26,980 align:center
The image on the right
was saved out as PNG8


275
00:12:27,014 --> 00:12:29,349 line:0
for a huge
reduction in file size.


276
00:12:29,383 --> 00:12:32,953 line:0
When you export your images,
do a side-by-side comparison


277
00:12:32,986 --> 00:12:35,656 align:center
to make sure
your optimizations hold up.


278
00:12:35,689 --> 00:12:38,659 align:center
A reduction in color depth
can save a lot of space


279
00:12:38,692 --> 00:12:41,161 line:0
but is only appropriate
for certain imagery


280
00:12:41,195 --> 00:12:43,597 align:center
that won’t suffer
from quantization artifacts.


281
00:12:45.732 --> 00:12:48.769 line:-2 align:center
For photographic material,
when you need to save space,


282
00:12:48,802 --> 00:12:51,839 line:-2
use JPEG and lean a bit
on lossy compression.


283
00:12:51,872 --> 00:12:52,973 line:-1
You don’t have to accept


284
00:12:53,006 --> 00:12:54,775 line:-2
your content creation
tool’s defaults


285
00:12:54.808 --> 00:12:56.343 line:-1 align:center
when saving your images.


286
00:12:56,376 --> 00:12:59,646 line:0
In my case, I reduced
the file size significantly


287
00:12:59,680 --> 00:13:01,815 align:center
without
a perceptible loss in quality.


288
00:13:03.884 --> 00:13:06.253 line:-2 align:center
Let me show you a little trick
that you might be able to use


289
00:13:06.286 --> 00:13:08.522 line:-2 align:center
in your project
to make sure your image quality


290
00:13:08,555 --> 00:13:11,091 line:-2
holds up
under various optimizations.


291
00:13:11.124 --> 00:13:14.161 line:-2 align:center
I temporarily replaced
the pineapple with a mango


292
00:13:14.194 --> 00:13:17.030 line:-2 align:center
that was saved out
as a higher compression ratio.


293
00:13:17.064 --> 00:13:19.600 line:-2 align:center
This lets me do
a quick A/B comparison


294
00:13:19.633 --> 00:13:21.802 line:-1 align:center
in the actual app to verify


295
00:13:21.835 --> 00:13:24.071 line:-2 align:center
my changes didn’t result
in a loss of quality.


296
00:13:25.572 --> 00:13:29.042 line:-2 align:center
For video, encode using
the latest standards like HEVC.


297
00:13:30,611 --> 00:13:34,014 line:-2
As a general rule,
compress audio using AAC


298
00:13:34.047 --> 00:13:37.851 line:-2 align:center
or MP3 codecs, and experiment
with a reduced bit rate.


299
00:13:37,885 --> 00:13:40,087 line:-2
Quite often,
super-high bit rates


300
00:13:40.120 --> 00:13:42.689 line:-2 align:center
aren’t necessary,
and a lower bit rate clip


301
00:13:42,723 --> 00:13:45,692 line:-2
won’t result in
a perceptible drop in quality.


302
00:13:45.726 --> 00:13:48.262 line:-2 align:center
For certain kinds of images
like interface controls,


303
00:13:48.295 --> 00:13:50.764 line:-2 align:center
logos, and icons,
representing them


304
00:13:50.797 --> 00:13:54.101 line:-2 align:center
in SVG format can lead
to significant space savings,


305
00:13:54.134 --> 00:13:56.003 line:-2 align:center
and because
it’s a vector format,


306
00:13:56,036 --> 00:13:58,138 line:-2
it will look great
rendered at any size.


307
00:13:59.439 --> 00:14:02.276 line:-2 align:center
Speaking of the SVG format,
we love it so much


308
00:14:02.309 --> 00:14:05.779 line:-2 align:center
we chose it to back SF Symbols,
which I highly recommend.


309
00:14:05.812 --> 00:14:08.248 line:-2 align:center
There are over 2,000
configurable symbols


310
00:14:08.282 --> 00:14:09.349 line:-1 align:center
to choose from.


311
00:14:09,383 --> 00:14:12,019 line:-2
They come in a wide range
of weights and scales


312
00:14:12,052 --> 00:14:14,421 line:-2
that automatically align
with text labels,


313
00:14:14.454 --> 00:14:16.790 line:-2 align:center
and dynamic type
is supported out of the box.


314
00:14:18,158 --> 00:14:19,693 line:-2
Here’s some code
to get you started


315
00:14:19.726 --> 00:14:21.995 line:-2 align:center
using SF symbols
in your project.


316
00:14:22.029 --> 00:14:24.731 line:-2 align:center
This code snippet shows
how a similar text style


317
00:14:24.765 --> 00:14:28.101 line:-2 align:center
can be applied to both
a label and a symbol image.


318
00:14:28,135 --> 00:14:30,571 line:-2
A baseline constraint
keeps the label and symbol


319
00:14:30.604 --> 00:14:33.240 line:-1 align:center
image aligned perfectly.


320
00:14:33.273 --> 00:14:35.909 line:-2 align:center
Instead of including
several variations of an image


321
00:14:35,943 --> 00:14:38,979 line:-2
in your asset catalog,
include one base image


322
00:14:39.012 --> 00:14:41.582 line:-2 align:center
and build the variations
needed at runtime.


323
00:14:41,615 --> 00:14:44,685 line:-2
Check out the Fruta sample
for a fantastic example


324
00:14:44.718 --> 00:14:46.520 line:-2 align:center
of how
this is put into practice.


325
00:14:46.553 --> 00:14:48.622 line:-2 align:center
Instead of using
a separate image


326
00:14:48.655 --> 00:14:49.823 line:-1 align:center
for each presentation


327
00:14:49.857 --> 00:14:52.893 line:-2 align:center
of the orange ingredient--
one for this collection view,


328
00:14:52,926 --> 00:14:56,396 line:-2
another for the full image view
with vertical text and controls,


329
00:14:56.430 --> 00:14:58.565 line:-2 align:center
and a third
for the ingredient card back...


330
00:15:00,434 --> 00:15:01,668 line:-1
This one single image


331
00:15:01.702 --> 00:15:05.105 line:-2 align:center
serves as the backing asset
for three distinct uses.


332
00:15:05.138 --> 00:15:07.808 line:-2 align:center
The result
is a significant space savings


333
00:15:07.841 --> 00:15:10.944 line:-2 align:center
achieved by constructing
the variations at runtime.


334
00:15:10.978 --> 00:15:13.647 line:-2 align:center
Finally, if you’ve completed
all the other steps


335
00:15:13,680 --> 00:15:15,782 line:-2
and still have assets
that put your clip


336
00:15:15,816 --> 00:15:18,252 line:-2
over the size limit,
consider lazily loading


337
00:15:18.285 --> 00:15:20.454 line:-2 align:center
those assets
from a content delivery network.


338
00:15:21.955 --> 00:15:24.157 line:-2 align:center
For example,
ship good quality


339
00:15:24,191 --> 00:15:26,226 line:-2
but lower resolution
placeholder assets


340
00:15:26,260 --> 00:15:28,195 line:-1
with your App Clip


341
00:15:28.228 --> 00:15:30.330 line:-1 align:center
and use the new Async image API


342
00:15:30,364 --> 00:15:33,100 line:-2
to replace these assets
progressively after launch.


343
00:15:34,535 --> 00:15:37,271 line:0
Check out the What’s new
in SwiftUI session for more.


344
00:15:37,304 --> 00:15:39,907 line:0
And a tip:
use the network link conditioner


345
00:15:39,940 --> 00:15:41,942 align:center
to test your App Clip
under a variety


346
00:15:41,975 --> 00:15:43,810 line:0
of different bandwidth scenarios


347
00:15:43,844 --> 00:15:45,345 align:center
to make sure
you aren’t introducing


348
00:15:45,379 --> 00:15:48,782 line:0
any delays for your customers
in completing the task at hand.


349
00:15:48,815 --> 00:15:51,018 line:0
With these
advanced optimizations,


350
00:15:51,051 --> 00:15:52,953 align:center
we’ve reached the end
of the first topic.


351
00:15:52,986 --> 00:15:56,023 line:0
You can explore further
and discover more techniques


352
00:15:56,056 --> 00:15:59,526 line:0
in the developer documentation
for reducing your app’s size.


353
00:16:00,694 --> 00:16:02,529 line:-2
Say you’ve released
your App Clip to production


354
00:16:02.563 --> 00:16:03.931 line:-1 align:center
and you don’t see it offered


355
00:16:03.964 --> 00:16:07.067 line:-2 align:center
as expected when you view
your website in Safari.


356
00:16:07,100 --> 00:16:09,803 line:-2
Or maybe you scanned a QR code
and were directed


357
00:16:09.837 --> 00:16:12.172 line:-2 align:center
to Safari instead of seeing
the App Clip card.


358
00:16:14,007 --> 00:16:15,876 line:-1
Generally, these issues fall


359
00:16:15.909 --> 00:16:17.778 line:-2 align:center
into a couple
of different buckets:


360
00:16:17,811 --> 00:16:19,580 line:-1
registration of the experience


361
00:16:19.613 --> 00:16:22.082 line:-2 align:center
and associated
domain configuration.


362
00:16:22.115 --> 00:16:24.484 line:-2 align:center
Let’s do
a quick terminology refresher,


363
00:16:24,518 --> 00:16:28,055 line:-2
and then I’ll go over some steps
you can take to fix the issues.


364
00:16:28.088 --> 00:16:30.090 line:-2 align:center
In App Store Connect,
you have the ability


365
00:16:30.123 --> 00:16:32.359 line:-1 align:center
to add two types of experiences.


366
00:16:32.392 --> 00:16:35.128 line:-2 align:center
All App Clips must have
a default experience.


367
00:16:35.162 --> 00:16:37.898 line:-2 align:center
For the default experience,
you specify metadata


368
00:16:37.931 --> 00:16:39.433 line:-2 align:center
that populates
the App Clip card


369
00:16:39.466 --> 00:16:42.736 line:-2 align:center
when invoked from your web page
in Safari or when someone sends


370
00:16:42.769 --> 00:16:44.938 line:-2 align:center
a link to your web page
in Messages.


371
00:16:44,972 --> 00:16:47,608 line:-2
In order to take advantage
of physical invocation


372
00:16:47.641 --> 00:16:51.044 line:-2 align:center
like QR scanning, NFC,
and App Clip Codes,


373
00:16:51,078 --> 00:16:53,547 line:-2
you need to be sure to add
an advanced experience.


374
00:16:55.315 --> 00:16:57.718 line:-2 align:center
Keep in mind,
registration takes time


375
00:16:57.751 --> 00:17:00.020 line:-2 align:center
to propagate to devices,
so changes


376
00:17:00,053 --> 00:17:03,123 line:-2
made in App Store Connect
won’t be instantly available.


377
00:17:03,156 --> 00:17:05,893 align:center
For an in-depth look
at registering experiences,


378
00:17:05,926 --> 00:17:06,927 line:0
please see the sessions


379
00:17:06,960 --> 00:17:08,896 align:center
for What’s new
in App Store Connect


380
00:17:08,929 --> 00:17:11,031 line:0
and Configure
and link Your App Clips.


381
00:17:11,064 --> 00:17:14,668 line:-2
Prior to displaying UI
that surfaces your App Clip,


382
00:17:14,701 --> 00:17:17,638 line:-2
the OS checks to make sure
that the invocation domain


383
00:17:17,671 --> 00:17:20,541 line:-2
is verifiably associated
with your App Clip.


384
00:17:20,574 --> 00:17:23,844 line:-2
In other words, that means
the URL viewed in Safari


385
00:17:23,877 --> 00:17:27,814 line:-2
or encoded in a QR code
must have a secure association


386
00:17:27,848 --> 00:17:30,617 line:-2
via entitlements
and an AASA file


387
00:17:30,651 --> 00:17:32,986 line:-1
with your app and App Clip.


388
00:17:33.020 --> 00:17:35.355 line:-2 align:center
If this is not
configured properly,


389
00:17:35.389 --> 00:17:37.391 line:-1 align:center
your clip will not be surfaced.


390
00:17:37,424 --> 00:17:39,293 line:0
For more information
on establishing


391
00:17:39,326 --> 00:17:41,728 align:center
this secure association,
please see


392
00:17:41,762 --> 00:17:43,864 align:center
the What’s new
in Universal Links session


393
00:17:43,897 --> 00:17:46,600 align:center
and the Configure and link
your App Clips session.


394
00:17:47,701 --> 00:17:49,036 align:center
Let’s say
you’ve configured everything


395
00:17:49,069 --> 00:17:50,170 line:-1
and you check Safari


396
00:17:50,204 --> 00:17:52,005 line:-2
and you expect
to see your App Clip card


397
00:17:52.039 --> 00:17:53.574 line:-1 align:center
presented inline like this.


398
00:17:55.475 --> 00:17:58.445 line:-2 align:center
But unfortunately
you just see your web page


399
00:17:58.478 --> 00:18:00.247 line:-1 align:center
and nothing else appears.


400
00:18:00.280 --> 00:18:01.982 line:-1 align:center
So what might be the problem,


401
00:18:02.015 --> 00:18:04.117 line:-2 align:center
and what troubleshooting steps
can you take?


402
00:18:05.419 --> 00:18:08.522 line:-2 align:center
First, verify the syntax
of your meta tag


403
00:18:08.555 --> 00:18:11.091 line:-2 align:center
and make sure it looks similar
to this template.


404
00:18:11.124 --> 00:18:12.860 line:-1 align:center
Replace the yellow placeholders


405
00:18:12.893 --> 00:18:14.728 line:-2 align:center
with your full app’s
App Store ID


406
00:18:14,761 --> 00:18:17,097 line:-2
and your App Clip’s bundleID
respectively.


407
00:18:18,365 --> 00:18:20,367 line:-2
I’ll show you a technique I use
to make sure


408
00:18:20.400 --> 00:18:22.769 line:-2 align:center
the meta tag
is constructed correctly.


409
00:18:22,803 --> 00:18:25,272 line:-2
Navigate to your web page
in Safari


410
00:18:25.305 --> 00:18:27.074 line:-1 align:center
and open the web inspector.


411
00:18:27.107 --> 00:18:30.644 line:-2 align:center
Expand the head element
and look closely at the source.


412
00:18:30,677 --> 00:18:32,546 line:-2
Then check the node attributes
to ensure


413
00:18:32,579 --> 00:18:34,381 line:-2
your meta tag
is parsed correctly


414
00:18:34.414 --> 00:18:37.351 line:-2 align:center
and that your App Clip bundleID
is exactly the same


415
00:18:37,384 --> 00:18:40,420 line:-2
as what is shown in Xcode
and App Store Connect.


416
00:18:40,454 --> 00:18:42,155 line:-1
Is forwarding or redirection


417
00:18:42,189 --> 00:18:44,258 line:-2
interfering
with domain validation?


418
00:18:44.291 --> 00:18:46.426 line:-1 align:center
Example.com is not considered


419
00:18:46.460 --> 00:18:49.496 line:-1 align:center
equal to www.example.com


420
00:18:49,530 --> 00:18:53,033 line:-2
as far as the domain validation
machinery is concerned.


421
00:18:53,066 --> 00:18:54,868 line:-2
The important thing
to remember here


422
00:18:54.902 --> 00:18:57.371 line:-2 align:center
is that the domain
serving the content,


423
00:18:57,404 --> 00:19:00,307 line:-2
the domain that’s at the end
of the redirection chain,


424
00:19:00,340 --> 00:19:02,943 line:-2
should be the domain
that serves the AASA file


425
00:19:02.976 --> 00:19:05.846 line:-2 align:center
and is included in your
associated domain’s entitlement.


426
00:19:07,247 --> 00:19:10,717 line:-2
Also remember that Safari won’t
display the full App Clip card


427
00:19:10.751 --> 00:19:14.488 line:-2 align:center
or the Smart App banner
if private browsing is enabled.


428
00:19:14,521 --> 00:19:16,256 line:-1
If you’re still stuck,


429
00:19:16,290 --> 00:19:18,792 line:-2
verify the AASA
passes validation


430
00:19:18,825 --> 00:19:20,160 line:-1
in the ASC portal.


431
00:19:22.196 --> 00:19:24.965 line:-2 align:center
You can use the SWCutil
command line tool


432
00:19:24.998 --> 00:19:26.767 line:-1 align:center
to retrieve an AASA file


433
00:19:26.800 --> 00:19:29.469 line:-2 align:center
from your web site
at the expected location.


434
00:19:29,503 --> 00:19:32,039 line:-2
This is very similar
to the operation performed


435
00:19:32,072 --> 00:19:33,874 line:-1
by App Store Connect.


436
00:19:33,907 --> 00:19:36,243 line:-2
You can use this to ensure
there are no errors


437
00:19:36,276 --> 00:19:38,979 line:-2
preventing App Store Connect
from retrieving the file.


438
00:19:39.012 --> 00:19:41.081 line:-2 align:center
Check the JSON output
for common mistakes


439
00:19:41,114 --> 00:19:44,451 line:-2
such as bundleID specified
instead of applicationID.


440
00:19:45,619 --> 00:19:47,754 align:center
For more information,
please check out


441
00:19:47,788 --> 00:19:49,790 align:center
the What’s
new in App Store Connect session


442
00:19:49,823 --> 00:19:52,759 line:0
as well as the What’s new
in Universal Links session.


443
00:19:52,793 --> 00:19:55,562 line:0
Now for physical invocation
like App Clip Codes,


444
00:19:55.596 --> 00:20:00.267 line:-2 align:center
QR codes, and NFC tags,
here is the expected experience.


445
00:20:01.335 --> 00:20:03.570 line:-2 align:center
If not fully configured,
your web page


446
00:20:03,604 --> 00:20:06,273 line:-2
will be offered in Safari
instead of your customers


447
00:20:06.306 --> 00:20:08.108 line:-2 align:center
seeing the App Clip card
in Camera.


448
00:20:09.510 --> 00:20:11.812 line:-2 align:center
Many times the reason
this occurs is because


449
00:20:11.845 --> 00:20:14.414 line:-2 align:center
an advanced experience
has not been created


450
00:20:14,448 --> 00:20:17,484 line:-2
for the URL encoded
in your physical codes.


451
00:20:17.518 --> 00:20:21.054 line:-2 align:center
Even if your QR code URL
is the same as your website URL


452
00:20:21.088 --> 00:20:24.291 line:-2 align:center
and your experience
displays perfectly in Safari,


453
00:20:24.324 --> 00:20:27.361 line:-2 align:center
it’s still necessary
to create an advanced experience


454
00:20:27,394 --> 00:20:30,430 line:-2
in App Store Connect
to power your physical codes.


455
00:20:30.464 --> 00:20:32.566 line:-2 align:center
Remember this slide from when
we were troubleshooting


456
00:20:32,599 --> 00:20:34,301 line:-1
Safari invocation?


457
00:20:34.334 --> 00:20:36.570 line:-2 align:center
For web traffic,
all redirects are followed


458
00:20:36,603 --> 00:20:39,239 line:-1
prior to domain validation.


459
00:20:39.273 --> 00:20:41.041 line:-1 align:center
I’d like to make you aware


460
00:20:41,074 --> 00:20:43,043 line:-2
of a subtle
yet important difference


461
00:20:43.076 --> 00:20:46.847 line:-2 align:center
in the way domain validation
is handled for physical codes.


462
00:20:46,880 --> 00:20:48,882 line:-2
Say you’ve been using
a unique domain


463
00:20:48,916 --> 00:20:50,384 line:-1
in your QR code URLs


464
00:20:50,417 --> 00:20:52,920 line:-2
and have been forwarding that
to your website


465
00:20:52.953 --> 00:20:55.856 line:-2 align:center
to provide consistency
across platforms.


466
00:20:55,889 --> 00:20:58,926 line:-2
You’re already serving
an AASA file from that domain


467
00:20:58,959 --> 00:21:01,528 line:-2
for customers that enter
directly through the web.


468
00:21:01.562 --> 00:21:03.931 line:-2 align:center
Now, here
comes the subtle difference.


469
00:21:03,964 --> 00:21:06,633 line:0
For code scanning,
it’s necessary to add


470
00:21:06,667 --> 00:21:09,570 align:center
the exact domain
to your App Clip’s entitlements


471
00:21:09,603 --> 00:21:13,340 line:0
and serve an AASA file
as well from this domain.


472
00:21:13,373 --> 00:21:16,310 line:0
The reason behind this
is to give quick feedback


473
00:21:16,343 --> 00:21:18,712 align:center
to the user that is scanning
a physical code.


474
00:21:18,745 --> 00:21:20,747 align:center
And we avoid performing
network requests


475
00:21:20,781 --> 00:21:24,618 line:0
that would typically result in
following a redirection chain.


476
00:21:24.651 --> 00:21:26.320 line:-2 align:center
Changes to
advanced experiences


477
00:21:26.353 --> 00:21:29.122 line:-2 align:center
or site association take time
to propagate to devices.


478
00:21:31,058 --> 00:21:33,293 line:-2
If you’ve made sure
the URL you’ve been scanning


479
00:21:33.327 --> 00:21:35.362 line:-2 align:center
has been added
as an advanced experience


480
00:21:35.395 --> 00:21:37.831 line:-2 align:center
and you still don’t see
the App Clip card,


481
00:21:37,865 --> 00:21:39,533 line:-2
try clearing
the experience cache


482
00:21:39.566 --> 00:21:41.301 line:-1 align:center
in Developer settings.


483
00:21:41,335 --> 00:21:42,970 line:-1
On to the next topic.


484
00:21:43,003 --> 00:21:45,305 line:-2
You’ve undertaken
some additional complexity


485
00:21:45,339 --> 00:21:47,708 line:-2
in your project,
and the upside is that you now


486
00:21:47.741 --> 00:21:50.944 line:-2 align:center
have a more modern,
platform-following experience.


487
00:21:50.978 --> 00:21:53.680 line:-2 align:center
I’d like to show you some steps
you can take to embrace


488
00:21:53,714 --> 00:21:56,483 line:-2
the extra functionality
while maintaining the level


489
00:21:56,517 --> 00:21:59,353 line:-2
of quality you’ve worked so hard
to achieve up to this point.


490
00:22:01.355 --> 00:22:03.323 line:-2 align:center
Let’s take a look
at a diagram that shows


491
00:22:03.357 --> 00:22:05.759 line:-2 align:center
functionality
for a basic restaurant app.


492
00:22:05,792 --> 00:22:08,629 line:-2
In this example,
customers start by browsing


493
00:22:08,662 --> 00:22:10,130 line:-1
the restaurant’s menu.


494
00:22:10,163 --> 00:22:12,332 line:-2
Next, they can customize
a burger


495
00:22:12,366 --> 00:22:14,501 line:-1
or a cocktail and then checkout.


496
00:22:14,535 --> 00:22:16,703 line:-2
After that,
they see their order status


497
00:22:16.737 --> 00:22:18.205 line:-1 align:center
and options for order pickup.


498
00:22:20.307 --> 00:22:22.509 line:-2 align:center
Now let’s say the restaurant
would like to enhance


499
00:22:22.543 --> 00:22:25.812 line:-2 align:center
the experience by adding
two features: pay at the table


500
00:22:25.846 --> 00:22:28.949 line:-2 align:center
with a QR code and send
the burger you customized


501
00:22:28,982 --> 00:22:31,518 line:-2
to a friend as a link
so they can order one too.


502
00:22:33.620 --> 00:22:35.989 line:-2 align:center
This will require
some significant redesign


503
00:22:36,023 --> 00:22:38,692 line:-2
because both of these features
rely on launching


504
00:22:38.725 --> 00:22:40.627 line:-1 align:center
directly to the checkout step.


505
00:22:40,661 --> 00:22:43,397 line:-2
The requested features
are really great opportunities


506
00:22:43,430 --> 00:22:45,365 line:-2
for an App Clip,
but shoehorning it


507
00:22:45,399 --> 00:22:46,967 line:-2
into the current design
will create


508
00:22:47.000 --> 00:22:49.369 line:-1 align:center
a lot of additional complexity.


509
00:22:49,403 --> 00:22:52,339 line:-2
What steps can be taken
to make the app more flexible?


510
00:22:53,907 --> 00:22:56,176 line:-2
First, I’d like encourage
you to create flattened,


511
00:22:56.210 --> 00:22:59.146 line:-2 align:center
modular functionality
where each component of your app


512
00:22:59.179 --> 00:23:01.949 line:-2 align:center
is independent and can be
directly launched into.


513
00:23:01,982 --> 00:23:04,751 line:-2
This approach is much
more suited to deep linking,


514
00:23:04.785 --> 00:23:06.753 line:-2 align:center
which is fundamental
to how App Clips


515
00:23:06,787 --> 00:23:08,922 line:-1
are invoked and provided state.


516
00:23:08,956 --> 00:23:12,125 line:-2
Design the checkout module to be
directly invoked by providing,


517
00:23:12.159 --> 00:23:16.663 line:-2 align:center
say, a list of menu items,
which you can encode in a URL.


518
00:23:16.697 --> 00:23:19.366 line:-2 align:center
By representing
the order as a URL


519
00:23:19,399 --> 00:23:22,336 line:-2
embedded in a visual code,
you give your customers


520
00:23:22.369 --> 00:23:24.605 line:-2 align:center
the ability to pay
for their check at the table.


521
00:23:24.638 --> 00:23:27.407 line:-2 align:center
Once a food item
is encodable in a URL,


522
00:23:27.441 --> 00:23:29.977 line:-2 align:center
you can use this paradigm
to encourage your customers


523
00:23:30.010 --> 00:23:32.346 line:-2 align:center
to share what they’ve ordered
with their friends


524
00:23:32,379 --> 00:23:33,881 line:-2
so they can buy
the same thing too.


525
00:23:35,516 --> 00:23:37,751 line:-2
With very
little overhead remaining,


526
00:23:37,784 --> 00:23:39,353 line:-1
you’re able to adopt App Clips


527
00:23:39.386 --> 00:23:41.021 line:-2 align:center
and increase your reach
by providing


528
00:23:41.054 --> 00:23:42.789 line:-1 align:center
this functionality on demand


529
00:23:42.823 --> 00:23:45.893 line:-2 align:center
to customers that haven’t yet
downloaded your app.


530
00:23:45.926 --> 00:23:48.428 line:-2 align:center
I just showed some ways
to think a bit differently


531
00:23:48.462 --> 00:23:50.664 line:-2 align:center
about the design
of your application,


532
00:23:50.697 --> 00:23:52.399 line:-1 align:center
to unlock extra functionality


533
00:23:52.432 --> 00:23:54.735 line:-2 align:center
while keeping
the overhead to a minimum.


534
00:23:54,768 --> 00:23:56,436 line:-2
Now let’s look
at how to minimize


535
00:23:56.470 --> 00:23:58.372 line:-2 align:center
some of the boilerplate code
that’s involved


536
00:23:58.405 --> 00:23:59.873 line:-1 align:center
in offering an App Clip.


537
00:23:59,907 --> 00:24:02,209 line:-2
In your app’s code,
you are likely responding


538
00:24:02.242 --> 00:24:04.578 line:-2 align:center
to life cycle events,
typically with these methods


539
00:24:04,611 --> 00:24:06,280 line:-2
that are called
when your app is launched


540
00:24:06,313 --> 00:24:07,648 line:-1
or resumed from background.


541
00:24:09,449 --> 00:24:12,085 line:-2
Adopting App Clips
adds another set of these


542
00:24:12,119 --> 00:24:13,954 line:-1
same exact life cycle methods.


543
00:24:13,987 --> 00:24:15,222 line:-1
You might be tempted


544
00:24:15.255 --> 00:24:17.591 line:-2 align:center
to place code in your App Clip’s
life cycle methods


545
00:24:17.624 --> 00:24:20.294 line:-2 align:center
that extracts the URL
from the UserActivity


546
00:24:20,327 --> 00:24:22,196 line:-1
and uses that extracted URL


547
00:24:22,229 --> 00:24:24,298 line:-2
to derive some state
and show some UI.


548
00:24:25,632 --> 00:24:28,368 line:-2
The concept is sound,
but before doing that,


549
00:24:28,402 --> 00:24:31,672 line:-2
I suggest refactoring
so that the code that handles


550
00:24:31.705 --> 00:24:34.842 line:-2 align:center
both your app
and App Clip launch is shared.


551
00:24:34,875 --> 00:24:37,611 line:-2
This eliminates a whole class
of bugs and headaches


552
00:24:37.644 --> 00:24:40.080 line:-2 align:center
of trying to maintain
similar functionality


553
00:24:40.113 --> 00:24:41.582 line:-1 align:center
in separate launch paths


554
00:24:41.615 --> 00:24:43.417 line:-2 align:center
between your App Clip
and full app.


555
00:24:45,252 --> 00:24:48,522 line:-2
Consider creating a method
like respondTo that takes


556
00:24:48,555 --> 00:24:50,757 line:-2
the user activity
as a parameter.


557
00:24:50,791 --> 00:24:53,427 line:-2
Use this method
as the main entry point


558
00:24:53,460 --> 00:24:55,996 line:-2
of your app
and clip by directly calling it


559
00:24:56.029 --> 00:24:58.298 line:-2 align:center
from all of
the relevant life cycle methods.


560
00:25:00.534 --> 00:25:01.935 line:-1 align:center
Now you’re executing code


561
00:25:01.969 --> 00:25:03.770 line:-2 align:center
that’s common
to both your app and clip,


562
00:25:03,804 --> 00:25:06,240 line:-2
which greatly reduces
the overhead.


563
00:25:06,273 --> 00:25:08,141 line:-2
Perhaps you respond
to that user activity


564
00:25:08.175 --> 00:25:10.244 line:-2 align:center
by extracting
restaurant menu items


565
00:25:10.277 --> 00:25:12.145 line:-1 align:center
from the URL to facilitate


566
00:25:12.179 --> 00:25:14.448 line:-2 align:center
the customer paying
the check at the table.


567
00:25:14.481 --> 00:25:16.283 line:-2 align:center
Since this is all code
that’s shared,


568
00:25:16.316 --> 00:25:17.651 line:-1 align:center
you can make changes once


569
00:25:17,684 --> 00:25:20,821 line:-2
and get the benefits
in both your app and App Clip.


570
00:25:20.854 --> 00:25:23.524 line:-2 align:center
Any discussion
on adopting modern features


571
00:25:23.557 --> 00:25:25.692 line:-2 align:center
in your project
while maintaining quality


572
00:25:25,726 --> 00:25:28,695 line:-2
would not be complete
without mentioning testing.


573
00:25:28,729 --> 00:25:31,131 line:-2
There are two techniques
specific to App Clips


574
00:25:31.164 --> 00:25:32.766 line:-2 align:center
that I’d
like to remind you about.


575
00:25:33,934 --> 00:25:36,436 line:-2
For iterative development,
when building and running


576
00:25:36.470 --> 00:25:40.240 line:-2 align:center
in Xcode, set the _XCAppClipURL
environment variable


577
00:25:40.274 --> 00:25:42.876 line:-2 align:center
to an invocation URL
of your choice.


578
00:25:42,910 --> 00:25:45,612 line:-2
When you run your clip,
the URL you set here


579
00:25:45.646 --> 00:25:47.514 line:-2 align:center
will be passed
through to your clip


580
00:25:47,548 --> 00:25:49,516 line:-2
just as it would be
on a customer’s device.


581
00:25:51.752 --> 00:25:54.588 line:-2 align:center
To see your in-development clip
surfaced by the OS


582
00:25:54.621 --> 00:25:58.125 line:-2 align:center
similar to production devices,
navigate to Developer settings


583
00:25:58,158 --> 00:25:59,560 line:-2
and create
a local experience.


584
00:26:00,961 --> 00:26:03,130 line:-2
You really need to try this out
before submitting


585
00:26:03,163 --> 00:26:05,465 line:-2
your clip to get a better feel
for how your customers


586
00:26:05.499 --> 00:26:08.068 line:-2 align:center
will use your App Clip
on their devices.


587
00:26:08,101 --> 00:26:09,903 line:-1
Otherwise, you’re missing out


588
00:26:09,937 --> 00:26:12,573 line:-2
on some great opportunities
to test many of the ways


589
00:26:12,606 --> 00:26:15,742 line:-2
your clip can be invoked,
like scanning a code in Camera.


590
00:26:15,776 --> 00:26:18,779 line:-2
It’s also a great way to try out
new features in seed builds


591
00:26:18,812 --> 00:26:20,881 line:-2
before they’re
available in production


592
00:26:20,914 --> 00:26:23,217 line:-2
like the new App Clip card
experience in Safari.


593
00:26:24,818 --> 00:26:26,353 align:center
I’ve just
skimmed the surface


594
00:26:26,386 --> 00:26:29,656 align:center
on how awesome local experiences
are for testing App Clips.


595
00:26:29,690 --> 00:26:33,327 align:center
For more, please see this year’s
What’s new in App Clips session


596
00:26:33,360 --> 00:26:36,330 line:0
and, for a detailed description
on testing App Clips,


597
00:26:36,363 --> 00:26:38,365 line:0
please see
the developer documentation


598
00:26:38,398 --> 00:26:41,435 line:0
titled Testing Your App Clip’s
Launch Experience.


599
00:26:41,468 --> 00:26:45,372 line:0
Last, there’s some functionality
that’s specific to App Clips


600
00:26:45,405 --> 00:26:47,574 line:-2
that all developers
should take advantage of.


601
00:26:49,376 --> 00:26:50,911 line:-1
When App Clips were introduced,


602
00:26:50.944 --> 00:26:52.513 line:-2 align:center
two streamlined
permissions items


603
00:26:52.546 --> 00:26:54.781 line:-2 align:center
were made available
just for App Clips.


604
00:26:54,815 --> 00:26:57,251 line:-2
These items are called
ephemeral notifications


605
00:26:57.284 --> 00:26:59.219 line:-1 align:center
and location confirmation.


606
00:26:59.253 --> 00:27:01.488 line:-2 align:center
You’re able to provide
pre-authorization


607
00:27:01.522 --> 00:27:03.624 line:-2 align:center
for your customers
to take advantage of


608
00:27:03,657 --> 00:27:06,426 line:-1
right on the App Clip card.


609
00:27:06,460 --> 00:27:09,029 line:-2
Ephemeral notifications
lets you send notifications


610
00:27:09.062 --> 00:27:12.399 line:-2 align:center
for 24 hours since your App Clip
was last launched,


611
00:27:12.432 --> 00:27:14.701 line:-2 align:center
and location confirmation
helps you confirm


612
00:27:14,735 --> 00:27:18,405 line:-2
the customer is within an area
you expect without asking for


613
00:27:18.438 --> 00:27:20.908 line:-2 align:center
or needing to know
their precise location.


614
00:27:20.941 --> 00:27:23.243 line:-2 align:center
This helps prevent
an accidental payment


615
00:27:23.277 --> 00:27:24.678 line:-1 align:center
at the wrong gas station


616
00:27:24,711 --> 00:27:26,680 line:-2
or ordering a smoothie
from a Fruta shop


617
00:27:26,713 --> 00:27:28,081 line:-1
in the wrong town.


618
00:27:30.150 --> 00:27:33.020 line:-2 align:center
As a developer,
you opt in to this functionality


619
00:27:33,053 --> 00:27:34,655 line:-1
in your Info.plist.


620
00:27:34.688 --> 00:27:36.023 line:-2 align:center
Now your App Clips
have access


621
00:27:36,056 --> 00:27:37,391 line:-1
to these unique permissions


622
00:27:37.424 --> 00:27:39.593 line:-2 align:center
without interrupting
the launch of your experience


623
00:27:39.626 --> 00:27:42.329 line:-2 align:center
with alerts that ask for more
than you actually need.


624
00:27:43.964 --> 00:27:45.999 line:-2 align:center
Location confirmation
is only available


625
00:27:46,033 --> 00:27:47,568 line:-1
for physical invocations


626
00:27:47,601 --> 00:27:50,904 line:-2
like an NFC tag,
an App Clip Code, or a QR code.


627
00:27:50,938 --> 00:27:53,540 line:-2
Customers can opt out
of location confirmation


628
00:27:53.574 --> 00:27:56.310 line:-2 align:center
for the current session
or for all requests.


629
00:27:58.478 --> 00:28:00.781 line:-2 align:center
Please be sure to handle
these states appropriately


630
00:28:00.814 --> 00:28:03.517 line:-2 align:center
by checking the error
from confirmAcquired


631
00:28:03,550 --> 00:28:05,352 line:-2
and offer the customer
helpful guidance


632
00:28:05,385 --> 00:28:08,121 line:-2
on what occurred
and perhaps options to resume


633
00:28:08.155 --> 00:28:11.391 line:-2 align:center
their transaction
under more favorable conditions.


634
00:28:11,425 --> 00:28:14,328 line:-2
A quick note about profiles
and signing in Xcode.


635
00:28:14.361 --> 00:28:17.631 line:-2 align:center
Most of you have enabled
automatically manage signing


636
00:28:17,664 --> 00:28:19,499 line:-2
in the Signing
and Capabilities section


637
00:28:19,533 --> 00:28:21,735 line:-2
of your project settings,
which is fantastic.


638
00:28:23.136 --> 00:28:25.138 line:-2 align:center
If you’re manually
managing signing,


639
00:28:25.172 --> 00:28:27.207 line:-2 align:center
make sure you obtain
a recent profile.


640
00:28:27.241 --> 00:28:29.543 line:-2 align:center
One immediate benefit
is when your customers


641
00:28:29.576 --> 00:28:31.979 line:-2 align:center
upgrade from
your App Clip to your full app,


642
00:28:32.012 --> 00:28:34.114 line:-2 align:center
their data
will be migrated faster.


643
00:28:34.147 --> 00:28:35.916 line:-1 align:center
This is one of the many benefits


644
00:28:35.949 --> 00:28:38.285 line:-2 align:center
to you that we’re
constantly working on.


645
00:28:38.318 --> 00:28:40.454 line:-2 align:center
Having a recent profile
ensures that your app


646
00:28:40.487 --> 00:28:42.356 line:-1 align:center
and clip have the capabilities


647
00:28:42.389 --> 00:28:44.958 line:-2 align:center
necessary to take advantage
of these improvements.


648
00:28:46.960 --> 00:28:48.996 line:-2 align:center
You’ve now learned
some great techniques


649
00:28:49.029 --> 00:28:51.064 line:-2 align:center
to build
light and fast App Clips.


650
00:28:51,098 --> 00:28:53,100 line:-1
It’s time to wrap it all up.


651
00:28:53,133 --> 00:28:56,103 line:-2
I’ve covered basic and advanced
techniques to get your clip


652
00:28:56.136 --> 00:28:59.406 line:-2 align:center
small enough to be delivered
lightning-quick on demand.


653
00:28:59,439 --> 00:29:01,808 line:-2
I showed you how to ensure
your App Clip is being


654
00:29:01.842 --> 00:29:04.511 line:-2 align:center
invoked
where and how you expect.


655
00:29:04.545 --> 00:29:07.114 line:-2 align:center
I showed some best practices
for getting your project


656
00:29:07.147 --> 00:29:10.684 line:-2 align:center
ready for deep linking, to adopt
App Clips and universal links.


657
00:29:10.717 --> 00:29:12.252 line:-1 align:center
And I covered functionality


658
00:29:12.286 --> 00:29:14.888 line:-2 align:center
that’s unique and streamlined
for App Clips.


659
00:29:14.922 --> 00:29:17.057 line:-2 align:center
I hope you can
launch Xcode today


660
00:29:17,090 --> 00:29:18,292 line:-1
and use some of these tips


661
00:29:18,325 --> 00:29:21,328 line:-2
to make your App Clip
lighter and faster.


662
00:29:21,361 --> 00:29:23,830 line:0
Please be sure to check out
my colleague Yongjun’s session


663
00:29:23,864 --> 00:29:26,266 line:0
on What’s new
in App Clips this year.


664
00:29:26.300 --> 00:29:29.970 line:-2 align:center
Thank you,
and have a wonderful WWDC.


665
00:29:30,003 --> 00:29:33,006 line:0
[upbeat music]

