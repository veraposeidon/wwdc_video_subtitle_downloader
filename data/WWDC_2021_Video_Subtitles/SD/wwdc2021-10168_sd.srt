2
00:00:02.069 --> 00:00:05.072 line:-1 align:center
[percussive music]


3
00:00:09,042 --> 00:00:10,811 line:-1
[Abhilash] Hello.


4
00:00:10.811 --> 00:00:12.846 line:-1 align:center
Mail is a crucial application,


5
00:00:12.846 --> 00:00:16.183 line:-2 align:center
and Mail app extensions
will let you enhance it


6
00:00:16.183 --> 00:00:18.919 line:-1 align:center
in some incredible new ways.


7
00:00:18.919 --> 00:00:21.889 line:-2 align:center
I'm Abhilash, and along with my
colleague, Seth,


8
00:00:21.889 --> 00:00:23.724 line:-1 align:center
we are going to walk you through


9
00:00:23.724 --> 00:00:27.094 line:-2 align:center
how to build
great Mail app extensions.


10
00:00:27,094 --> 00:00:31,164 line:-2
In macOS Monterey, we are
shipping a new framework,


11
00:00:31.164 --> 00:00:34.601 line:-2 align:center
MailKit,
for building Mail extensions.


12
00:00:34,601 --> 00:00:38,906 line:-2
These extensions are built on
the same underlying foundation


13
00:00:38.906 --> 00:00:41.041 line:-1 align:center
as other app extensions


14
00:00:41.041 --> 00:00:45.679 line:-2 align:center
like Safari app extensions
and share sheet extensions.


15
00:00:45,679 --> 00:00:49,883 line:-2
They are built with user
privacy and security in mind


16
00:00:49.883 --> 00:00:52.019 line:-1 align:center
in mind from the ground up.


17
00:00:52,019 --> 00:00:56,156 line:-2
MailKit APIs are well
documented and will be supported


18
00:00:56,156 --> 00:00:59,193 line:-1
across major macOS releases.


19
00:00:59.193 --> 00:01:02.429 line:-2 align:center
Like other app extensions,
they can be in any


20
00:01:02,429 --> 00:01:04,665 line:-1
properly signed Mac app,


21
00:01:04,665 --> 00:01:07,935 line:-2
can be bundled in your
existing apps,


22
00:01:07,935 --> 00:01:11,705 line:-2
and can also be distributed
in the App Store.


23
00:01:11,705 --> 00:01:16,143 line:-2
Mail extensions are
the future of extending Mail.


24
00:01:16,143 --> 00:01:20,514 line:-2
Plug-ins will stop functioning
in a future macOS release.


25
00:01:20,514 --> 00:01:24,017 line:-2
We are introducing four
new ways you can extend


26
00:01:24.017 --> 00:01:26.286 line:-1 align:center
Mail's user experience.


27
00:01:26,286 --> 00:01:30,490 line:-2
First, compose extensions
will allow new workflows


28
00:01:30,490 --> 00:01:33,560 line:-1
when composing mail messages.


29
00:01:33,560 --> 00:01:36,997 line:-2
Action extensions help
people manage their inbox


30
00:01:36.997 --> 00:01:41.802 line:-2 align:center
by providing custom rules
on incoming messages.


31
00:01:41,802 --> 00:01:45,606 line:-2
Content blocking extensions
provide WebKit content blockers


32
00:01:45,606 --> 00:01:48,809 line:-1
for Mail messages.


33
00:01:48.809 --> 00:01:51.712 line:-2 align:center
Finally,
message security extensions


34
00:01:51.712 --> 00:01:55.849 line:-2 align:center
can provide further security
by signing, encrypting,


35
00:01:55,849 --> 00:01:59,620 line:-2
and decrypting messages when
people send and receive mail.


36
00:01:59.620 --> 00:02:03.090 line:-2 align:center
This provides a full
suite of Mail extensions


37
00:02:03,090 --> 00:02:05,092 line:-1
to help compose messages,


38
00:02:05,092 --> 00:02:07,561 line:-2
take action
on incoming messages,


39
00:02:07,561 --> 00:02:09,796 line:-1
block undesired mail content


40
00:02:09.796 --> 00:02:13.233 line:-2 align:center
and provide encryption
and decryption.


41
00:02:13.233 --> 00:02:14.968 line:-1 align:center
They are easy to write.


42
00:02:14.968 --> 00:02:16.837 line:-1 align:center
They are very powerful.


43
00:02:16.837 --> 00:02:19.573 line:-2 align:center
They are stable
and will continue to work


44
00:02:19,573 --> 00:02:23,577 line:-2
as the OS and Mail app
change over time.


45
00:02:23.577 --> 00:02:25.879 line:-2 align:center
Before we dive in to build
a Mail extension


46
00:02:25,879 --> 00:02:27,347 line:-1
with these capabilities,


47
00:02:27.347 --> 00:02:30.617 line:-2 align:center
let's go through
an example of one in use.


48
00:02:30.617 --> 00:02:34.354 line:-2 align:center
Imagine I am working for a large
multinational corporation


49
00:02:34.354 --> 00:02:36.523 line:-2 align:center
where all my colleagues
are collaborating


50
00:02:36.523 --> 00:02:39.793 line:-2 align:center
on multiple
highly secretive projects.


51
00:02:39,793 --> 00:02:42,196 line:-2
To help preserve secrecy
of our projects,


52
00:02:42,196 --> 00:02:44,598 line:-2
we are using
a Big Secrecy Extension


53
00:02:44.598 --> 00:02:47.968 line:-2 align:center
that validates recipients
of a mail message.


54
00:02:47.968 --> 00:02:50.470 line:-2 align:center
I want to send a message
to my colleague Seth


55
00:02:50.470 --> 00:02:54.441 line:-2 align:center
for an update on our new
remote office on Mars.


56
00:02:54.441 --> 00:02:56.643 line:-2 align:center
The first thing you
notice is a button


57
00:02:56.643 --> 00:03:00.647 line:-2 align:center
for the Big Secrecy Extension
in the Mail compose window.


58
00:03:00,647 --> 00:03:03,350 line:-2
This extension provides
a list of projects


59
00:03:03.350 --> 00:03:08.055 line:-2 align:center
I'm working on,
and I pick Mars Remote Office.


60
00:03:08,055 --> 00:03:13,026 line:-2
I type in a subject
and Seth's email.


61
00:03:13.026 --> 00:03:14.862 line:-2 align:center
The extension was able
to validate


62
00:03:14.862 --> 00:03:17.965 line:-2 align:center
that Seth
is disclosed on this project


63
00:03:17,965 --> 00:03:21,335 line:-2
and annotates his email address
with a blue checkmark.


64
00:03:21.335 --> 00:03:25.105 line:-2 align:center
Of course, for a project of this
importance, we do want to keep


65
00:03:25,105 --> 00:03:27,007 line:-1
our manager, Mikey, informed,


66
00:03:27,007 --> 00:03:31,078 line:-1
so I'm going to add him.


67
00:03:31.078 --> 00:03:34.581 line:-2 align:center
Hmm, looks like Mikey
is not disclosed


68
00:03:34,581 --> 00:03:36,683 line:-1
about our new remote office.


69
00:03:36,683 --> 00:03:38,986 line:-2
Let me remove him
and send the message.


70
00:03:42.022 --> 00:03:44.858 line:-2 align:center
Oh, I received a reply
from Seth,


71
00:03:44.858 --> 00:03:48.462 line:-2 align:center
and it shows up in red
in the message list.


72
00:03:48,462 --> 00:03:51,365 line:-2
This is because
the Big Secrecy Extension


73
00:03:51,365 --> 00:03:53,867 line:-2
performed an action
to color messages


74
00:03:53,867 --> 00:03:57,237 line:-2
regarding the Mars project
as red.


75
00:03:57.237 --> 00:04:00.107 line:-2 align:center
There is also an icon
indicating that an extension


76
00:04:00.107 --> 00:04:03.310 line:-2 align:center
performed an action
on this message.


77
00:04:03.310 --> 00:04:05.145 line:-1 align:center
When I go to view the message,


78
00:04:05,145 --> 00:04:07,147 line:-2
there is
an icon in the Message Viewer


79
00:04:07.147 --> 00:04:10.217 line:-2 align:center
indicating that the message
from Seth was encrypted


80
00:04:10,217 --> 00:04:14,154 line:-2
and successfully decrypted
by the Big Secrecy Extension.


81
00:04:15.656 --> 00:04:20.093 line:-2 align:center
Now let's dive in and learn how
you can leverage MailKit APIs


82
00:04:20.093 --> 00:04:23.864 line:-2 align:center
to build powerful extensions
like the Big Secrecy Extension.


83
00:04:23.864 --> 00:04:27.167 line:-2 align:center
Let's start with compose
extensions which can provide


84
00:04:27.167 --> 00:04:31.572 line:-2 align:center
new features for users
while composing messages.


85
00:04:31,572 --> 00:04:34,608 line:-2
In macOS Monterey,
there are four ways


86
00:04:34.608 --> 00:04:37.878 line:-2 align:center
your extension can interact
with a Mail compose window.


87
00:04:39,046 --> 00:04:42,516 line:-2
An extension can validate
recipient email addresses


88
00:04:42,516 --> 00:04:45,319 line:-1
as the user is editing them,


89
00:04:45,319 --> 00:04:48,155 line:-2
provide a view controller
with additional context


90
00:04:48,155 --> 00:04:51,391 line:-2
about the message
being composed,


91
00:04:51,391 --> 00:04:55,629 line:-2
set additional headers
on outgoing messages,


92
00:04:55.629 --> 00:05:00.701 line:-2 align:center
or alert the user of errors in
the message before it is sent.


93
00:05:01,768 --> 00:05:04,638 line:-2
Let's walk through how to build
a compose extension.


94
00:05:06.206 --> 00:05:10.944 line:-2 align:center
You start by adding a new target
to an existing macOS App.


95
00:05:10.944 --> 00:05:15.215 line:-2 align:center
In Xcode 13, there is a new
Mail Extension template


96
00:05:15.215 --> 00:05:17.584 line:-2 align:center
that will get you started
on creating


97
00:05:17,584 --> 00:05:21,755 line:-1
a new Mail Extension target.


98
00:05:21.755 --> 00:05:24.858 line:-2 align:center
During setup,
Xcode will allow you to choose


99
00:05:24,858 --> 00:05:28,495 line:-2
the type of extension
you want to create.


100
00:05:28.495 --> 00:05:30.964 line:-2 align:center
For a compose extension,
you select


101
00:05:30.964 --> 00:05:34.134 line:-2 align:center
the Include Compose Session
Handler capability.


102
00:05:36.670 --> 00:05:40.207 line:-2 align:center
In the Info.plist
for the extension target,


103
00:05:40,207 --> 00:05:44,545 line:-2
you must also specify an icon
and a descriptive tooltip


104
00:05:44.545 --> 00:05:47.848 line:-2 align:center
in the MEComposeSession
dictionary.


105
00:05:47.848 --> 00:05:50.083 line:-2 align:center
Mail will
use the icon and tooltip


106
00:05:50.083 --> 00:05:54.988 line:-2 align:center
to display a toolbar button
in the compose window.


107
00:05:54,988 --> 00:05:57,257 line:-2
Now let's
look at the implementation


108
00:05:57,257 --> 00:05:59,860 line:-2
for your extension's
principal class.


109
00:05:59.860 --> 00:06:02.996 line:-2 align:center
The principal class
of your extension must conform


110
00:06:02.996 --> 00:06:05.632 line:-1 align:center
to the MEExtension protocol.


111
00:06:05,632 --> 00:06:09,269 line:-2
MEExtension exposes
optional handler methods


112
00:06:09,269 --> 00:06:12,539 line:-2
for each of the four
types of extensions.


113
00:06:12.539 --> 00:06:15.475 line:-2 align:center
For a compose extension,
your principal class


114
00:06:15.475 --> 00:06:18.679 line:-2 align:center
must implement the handler
for session method


115
00:06:18.679 --> 00:06:20.948 line:-2 align:center
and return an instance
that conforms


116
00:06:20.948 --> 00:06:24.685 line:-2 align:center
to the MEComposeSessionHandler
protocol.


117
00:06:24.685 --> 00:06:27.087 line:-2 align:center
Methods
in MEComposeSessionHandler


118
00:06:27,087 --> 00:06:30,157 line:0
are called by Mail
to inform the extension


119
00:06:30,157 --> 00:06:34,027 align:center
about a Compose window's
life cycle.


120
00:06:34,027 --> 00:06:36,163 align:center
The first method that
will be called


121
00:06:36,163 --> 00:06:38,198 line:0
is ComposeSessionDidBegin,


122
00:06:38,198 --> 00:06:42,402 align:center
which happens when a new
compose window is opened.


123
00:06:42,402 --> 00:06:45,906 align:center
There are also methods that
are called based on user actions


124
00:06:45,906 --> 00:06:49,877 line:0
like editing recipient email
addresses or sending an email.


125
00:06:52,212 --> 00:06:54,815 line:-2
All the methods
in MEComposeSessionHandler


126
00:06:54.815 --> 00:06:57.251 line:-1 align:center
have a MEComposeSession argument


127
00:06:57.251 --> 00:07:00.420 line:-2 align:center
which provides information
about a compose window.


128
00:07:00.420 --> 00:07:04.258 line:-2 align:center
Mail creates a unique
MEComposeSession instance


129
00:07:04.258 --> 00:07:06.693 line:-1 align:center
for every Mail compose window.


130
00:07:06.693 --> 00:07:11.598 line:-2 align:center
It has a MEMessage property
that exposes various details


131
00:07:11.598 --> 00:07:14.101 line:-1 align:center
of the message being edited.


132
00:07:14,101 --> 00:07:16,870 line:-2
You can utilize this
information to customize


133
00:07:16,870 --> 00:07:20,374 line:-2
the responses that you
provide when Mail calls


134
00:07:20.374 --> 00:07:24.745 line:-2 align:center
your extension's
MEComposeSessionHandler methods.


135
00:07:24,745 --> 00:07:27,447 line:-2
Let's look at an example
of how you can do this


136
00:07:27,447 --> 00:07:30,217 line:-2
to annotate recipient
email addresses.


137
00:07:31,318 --> 00:07:33,954 line:-2
Mail will call your
ComposeSessionHandler's


138
00:07:33,954 --> 00:07:36,356 line:-1
annotateAddressesForSession


139
00:07:36.356 --> 00:07:40.127 line:-2 align:center
whenever recipient
addresses are edited.


140
00:07:40.127 --> 00:07:44.097 line:-2 align:center
In this example, we are
using the allRecipientAddresses


141
00:07:44.097 --> 00:07:48.035 line:-2 align:center
property of MEMessage
to provide an error annotation


142
00:07:48.035 --> 00:07:53.707 line:-2 align:center
for emails that are not
matching seth@example.com.


143
00:07:53,707 --> 00:07:57,177 line:-2
Compose extensions can also
provide a view controller


144
00:07:57.177 --> 00:08:00.614 line:-2 align:center
that Mail will display
in the compose window.


145
00:08:00,614 --> 00:08:04,985 line:-2
Your view controller can provide
valuable context to the user


146
00:08:04.985 --> 00:08:07.087 line:-2 align:center
by customizing
the view controller


147
00:08:07,087 --> 00:08:09,723 line:-1
for each compose window.


148
00:08:09,723 --> 00:08:12,459 line:-2
Your extension's view
controller must be


149
00:08:12,459 --> 00:08:16,129 line:-2
a subclass
of MEExtensionViewController.


150
00:08:16,129 --> 00:08:19,366 line:-2
Mail will request an instance of
this view controller


151
00:08:19.366 --> 00:08:22.503 line:-2 align:center
by calling the
viewControllerForSession method


152
00:08:22.503 --> 00:08:25.072 line:-1 align:center
of MEComposeSessionHandler.


153
00:08:26,707 --> 00:08:29,476 align:center
You can learn more about these
compose APIs


154
00:08:29,476 --> 00:08:31,578 align:center
in the MailKit documentation


155
00:08:31,578 --> 00:08:34,448 line:0
and get started
on building new workflows.


156
00:08:34,448 --> 00:08:38,785 line:-2
Now let's talk about
Mail action extensions.


157
00:08:38,785 --> 00:08:42,322 line:-2
Action extensions perform
actions on incoming messages


158
00:08:42,322 --> 00:08:46,093 line:-2
to help users
manage their inbox.


159
00:08:46.093 --> 00:08:49.696 line:-2 align:center
In macOS Monterey,
we are exposing three types


160
00:08:49.696 --> 00:08:54.301 line:-2 align:center
of actions an extension
can perform on a new message.


161
00:08:54.301 --> 00:08:57.404 line:-2 align:center
An action extension
can modify read status


162
00:08:57,404 --> 00:09:00,607 line:-2
and flags
of incoming messages,


163
00:09:00.607 --> 00:09:03.010 line:-2 align:center
move messages
to system mailboxes


164
00:09:03,010 --> 00:09:06,346 line:-1
such as Junk, Trash or Archive,


165
00:09:06.346 --> 00:09:09.316 line:-2 align:center
or apply colors to messages
when they are displayed


166
00:09:09,316 --> 00:09:11,251 line:-1
in the message list.


167
00:09:11,251 --> 00:09:13,787 line:-2
You can add support
for message actions


168
00:09:13.787 --> 00:09:17.257 line:-2 align:center
by selecting the Include Message
Action Handler capability


169
00:09:17,257 --> 00:09:20,561 line:-2
when you are creating
the Mail extension target.


170
00:09:20.561 --> 00:09:23.163 line:-2 align:center
Similar to the compose
extension,


171
00:09:23.163 --> 00:09:25.832 line:-2 align:center
for action extensions,
your principal class


172
00:09:25,832 --> 00:09:28,235 line:-2
must return
a message action handler


173
00:09:28,235 --> 00:09:31,672 line:-2
by implementing a handler
for message actions.


174
00:09:31.672 --> 00:09:34.041 line:-2 align:center
In this example,
the principal class


175
00:09:34,041 --> 00:09:36,743 line:-2
is also acting
as an action handler


176
00:09:36.743 --> 00:09:39.780 line:-2 align:center
by adopting
MEMessageActionHandler.


177
00:09:39,780 --> 00:09:42,549 line:0
Your action extension
must implement


178
00:09:42,549 --> 00:09:47,521 line:0
MEMessageActionHandler's
decideAction for message method.


179
00:09:47,521 --> 00:09:50,157 align:center
DecideAction for message
is called


180
00:09:50,157 --> 00:09:52,860 align:center
with a MEMessage argument.


181
00:09:52,860 --> 00:09:55,295 line:0
Here, we are coloring
the message red


182
00:09:55,295 --> 00:10:00,067 align:center
by checking if the headers
property contains "Mars."


183
00:10:00,067 --> 00:10:03,470 line:-2
A few things to note
about action handlers.


184
00:10:03.470 --> 00:10:07.074 line:-2 align:center
Mail calls your handler's
decideAction for message


185
00:10:07.074 --> 00:10:09.743 line:-2 align:center
for every new message
that it downloads


186
00:10:09.743 --> 00:10:13.146 line:-2 align:center
before it is even visible
in the inbox.


187
00:10:13,146 --> 00:10:15,983 line:-2
The first time Mail
calls your extension's


188
00:10:15,983 --> 00:10:18,252 line:-1
decideAction for message method,


189
00:10:18,252 --> 00:10:22,055 line:-2
the MEMessage instance
will have only a subset


190
00:10:22.055 --> 00:10:24.458 line:-1 align:center
of the message headers.


191
00:10:24,458 --> 00:10:27,794 line:-2
You can provide a decision
such as coloring the message


192
00:10:27,794 --> 00:10:30,731 line:-1
based on the available headers.


193
00:10:30.731 --> 00:10:33.200 line:-2 align:center
Once Mail applies
the action on the message,


194
00:10:33,200 --> 00:10:37,771 line:-1
it will be visible in the inbox.


195
00:10:37,771 --> 00:10:41,475 line:-2
In some cases, you will need
the complete body and headers


196
00:10:41,475 --> 00:10:45,112 line:-2
of the message to return
an appropriate decision.


197
00:10:45.112 --> 00:10:48.949 line:-2 align:center
In this case, your decideAction
for message method


198
00:10:48,949 --> 00:10:52,920 line:-2
can return
an invokeAgainWithBody decision.


199
00:10:52.920 --> 00:10:55.989 line:-2 align:center
This will cause Mail
to fetch the complete


200
00:10:55,989 --> 00:11:00,360 line:-2
message body and headers
before invoking your handler's


201
00:11:00.360 --> 00:11:03.764 line:-2 align:center
decideAction
for message method again.


202
00:11:03.764 --> 00:11:06.099 line:-2 align:center
You can
now return a more accurate


203
00:11:06,099 --> 00:11:09,970 line:-2
decision before it is
visible in the inbox.


204
00:11:09,970 --> 00:11:13,807 line:-2
Now I am going to turn it over
to Seth, who will to show you


205
00:11:13.807 --> 00:11:17.578 line:-2 align:center
how to build content blocking
and security extensions.


206
00:11:17,578 --> 00:11:19,112 line:-1
[Seth] Thanks, Abhilash.


207
00:11:19,112 --> 00:11:20,948 line:-2
First, I am going
to walk you through


208
00:11:20.948 --> 00:11:23.283 line:-2 align:center
how to add
a content blocker extension.


209
00:11:23.283 --> 00:11:26.587 line:-2 align:center
Content blockers hook into
Mail's WebKit configuration


210
00:11:26.587 --> 00:11:29.723 line:-2 align:center
for its message view to allow
extensions to block


211
00:11:29.723 --> 00:11:34.161 line:-2 align:center
loading content based on
triggers in the message's HTML.


212
00:11:34.161 --> 00:11:37.865 line:-2 align:center
This allows extensions
to block loading content


213
00:11:37.865 --> 00:11:43.904 line:-2 align:center
based on criteria
of the HTML such as the URL.


214
00:11:43.904 --> 00:11:46.540 line:-2 align:center
In this example,
the extension was able


215
00:11:46,540 --> 00:11:49,076 line:-2
to block loading
the remote images


216
00:11:49,076 --> 00:11:52,846 line:-2
based on the rules in the
extension's content rule list.


217
00:11:52.846 --> 00:11:55.449 line:-2 align:center
You can add support
for content blocking


218
00:11:55,449 --> 00:11:58,385 line:-2
by selecting
Include Content Blocker


219
00:11:58,385 --> 00:12:02,356 line:-2
when you are creating
the Mail extension target.


220
00:12:02.356 --> 00:12:05.192 line:-2 align:center
Next, you return a handler
for the content blocker


221
00:12:05.192 --> 00:12:07.561 line:-2 align:center
in your extension's
principal class.


222
00:12:07.561 --> 00:12:10.330 line:-2 align:center
In this example,
the principal class is adopting


223
00:12:10.330 --> 00:12:14.935 line:-2 align:center
the MEContentBlocker protocol
so it returns self.


224
00:12:14,935 --> 00:12:17,538 align:center
The content rule lists
are specified


225
00:12:17,538 --> 00:12:20,874 align:center
using the same syntax as
Safari content blockers.


226
00:12:20,874 --> 00:12:22,943 align:center
So if you already have
a content rule list


227
00:12:22,943 --> 00:12:25,512 align:center
for your Safari
content blocker extension,


228
00:12:25,512 --> 00:12:29,316 align:center
you can use the same rules for
a Mail app extension as well.


229
00:12:29,316 --> 00:12:31,618 line:0
You can get more information
on how to create


230
00:12:31,618 --> 00:12:33,720 line:0
a content rule list
by referencing


231
00:12:33,720 --> 00:12:38,559 align:center
the "Introduction to Webkit
Content Blockers" documentation.


232
00:12:38,559 --> 00:12:41,628 line:-2
Once your rule list is complete,
you can provide it to Mail


233
00:12:41.628 --> 00:12:44.998 line:-2 align:center
by returning it
in the contentRulesJSON method.


234
00:12:44.998 --> 00:12:47.267 line:-2 align:center
This method expects
a Data encoding


235
00:12:47.267 --> 00:12:49.469 line:-1 align:center
of the Content Rule List JSON.


236
00:12:49,469 --> 00:12:53,073 line:-2
And that's it for Mail
content blockers.


237
00:12:53.073 --> 00:12:57.611 line:-2 align:center
Lastly, we're going to go over
Message security extensions.


238
00:12:57,611 --> 00:13:00,380 line:-2
The Message security
capability gives extensions


239
00:13:00,380 --> 00:13:03,984 line:-2
the ability to encode
and decode encrypted messages.


240
00:13:03,984 --> 00:13:06,887 line:-2
They can also sign
messages and provide a way


241
00:13:06.887 --> 00:13:10.390 line:-2 align:center
to view certificates
of signed messages.


242
00:13:10.390 --> 00:13:12.659 line:-2 align:center
You can add support
for message security


243
00:13:12,659 --> 00:13:15,395 line:-2
by selecting
Include Message Security Handler


244
00:13:15.395 --> 00:13:18.799 line:-2 align:center
when you're creating
the Mail extension target.


245
00:13:18.799 --> 00:13:21.768 line:-2 align:center
Next, you need to return
a handler from your extension


246
00:13:21,768 --> 00:13:24,538 line:-2
that supports
the MEMessageSecurityHandler


247
00:13:24.538 --> 00:13:28.275 line:-2 align:center
protocol in our extension's
principal class.


248
00:13:28,275 --> 00:13:31,778 line:-2
In this example, the extension's
principal class is also adopting


249
00:13:31,778 --> 00:13:34,114 line:-2
the MEMessageSecurityHandler
protocol,


250
00:13:34,114 --> 00:13:37,084 line:-1
so it returns self.


251
00:13:37.084 --> 00:13:40.187 line:-2 align:center
Now let's take a look
at how to encode messages


252
00:13:40.187 --> 00:13:41.855 line:-1 align:center
that are being composed.


253
00:13:41.855 --> 00:13:45.392 line:-2 align:center
Encoding a message is
broken down into two parts.


254
00:13:45.392 --> 00:13:49.530 line:-2 align:center
The first helps drive the UI
as the message is composed.


255
00:13:49,530 --> 00:13:52,266 line:-2
This lets the extension show
if it has the ability


256
00:13:52,266 --> 00:13:54,801 line:-2
to sign and encrypt
the current message.


257
00:13:54,801 --> 00:13:57,304 line:-2
The next
part is to actually encrypt


258
00:13:57.304 --> 00:14:01.275 line:-2 align:center
and sign the message
as it is being sent.


259
00:14:01,275 --> 00:14:04,278 line:-2
As a message is composed, Mail
will send the message,


260
00:14:04,278 --> 00:14:06,914 line:-2
including the sender
and current list of recipients


261
00:14:06.914 --> 00:14:08.515 line:-1 align:center
to the extension.


262
00:14:08.515 --> 00:14:10.651 line:-2 align:center
The extension can then
determine if it has


263
00:14:10,651 --> 00:14:13,687 line:-2
the ability to sign
and encrypt the message.


264
00:14:13.687 --> 00:14:16.123 line:-2 align:center
Based on what is returned
by the extension,


265
00:14:16,123 --> 00:14:19,159 line:-2
Mail will highlight the Lock
and Certificate icons,


266
00:14:19.159 --> 00:14:22.229 line:-2 align:center
depending on if the message
can be signed and encrypted.


267
00:14:25.332 --> 00:14:27.968 line:-2 align:center
Each time the sender
or recipients change,


268
00:14:27.968 --> 00:14:30.704 line:-2 align:center
Mail will call
the getEncodingStatus method


269
00:14:30.704 --> 00:14:33.507 line:-2 align:center
on the extension's
message security handler.


270
00:14:33,507 --> 00:14:36,009 line:-2
The extension will verify
if it can sign


271
00:14:36,009 --> 00:14:38,612 line:-2
and encrypt the message
and return to Mail


272
00:14:38,612 --> 00:14:40,614 line:-1
the current encoding status.


273
00:14:40.614 --> 00:14:43.550 line:-2 align:center
The example here is
importing an ExampleEncoder


274
00:14:43.550 --> 00:14:46.119 line:-2 align:center
to do the actual work
of checking the encoding status


275
00:14:46,119 --> 00:14:47,421 line:-1
of the message.


276
00:14:47.421 --> 00:14:48.922 line:-1 align:center
The Message Security Handler


277
00:14:48.922 --> 00:14:53.093 line:-2 align:center
returns the status
once available.


278
00:14:53.093 --> 00:14:56.029 line:-2 align:center
Next, when the message is sent,
Mail will take


279
00:14:56.029 --> 00:15:00.634 line:-2 align:center
the RFC822 message data
and pass it to the extension.


280
00:15:00,634 --> 00:15:02,870 line:-2
The extension will sign
and encrypt the message


281
00:15:02,870 --> 00:15:05,038 line:-2
as needed,
and return the signed


282
00:15:05,038 --> 00:15:09,610 line:-2
and encrypted RFC822
data back to Mail.


283
00:15:09.610 --> 00:15:13.080 line:-2 align:center
Mail will then send this
data to the outgoing server.


284
00:15:15.916 --> 00:15:17.784 line:-2 align:center
When the message is ready
to send,


285
00:15:17.784 --> 00:15:21.989 line:-2 align:center
Mail passes the current message
using the encodeMessage method


286
00:15:21,989 --> 00:15:24,525 line:-2
to the extension's
Message Security Handler.


287
00:15:24.525 --> 00:15:26.927 line:-2 align:center
The extension's
Message Security Handler


288
00:15:26,927 --> 00:15:29,162 line:-1
will return the encoded message.


289
00:15:29.162 --> 00:15:32.633 line:-2 align:center
Again, in this example,
we're using an ExampleEncoder


290
00:15:32,633 --> 00:15:35,369 line:-2
to do the actual work
of encoding the message.


291
00:15:35.369 --> 00:15:40.174 line:-2 align:center
The Message Security Handler
returns encoded message.


292
00:15:40.174 --> 00:15:43.944 line:-2 align:center
Message decoding works similarly
but in reverse.


293
00:15:43,944 --> 00:15:46,346 line:-2
When the message is viewed,
Mail will send


294
00:15:46,346 --> 00:15:51,185 line:-2
the encoded RFC822 message
data to the extension.


295
00:15:51.185 --> 00:15:54.588 line:-2 align:center
The extension will decode
the message into nonencrypted,


296
00:15:54,588 --> 00:15:59,459 line:-2
or signed, RFC822 data
and return that back to Mail.


297
00:15:59.459 --> 00:16:02.529 line:-2 align:center
Mail will then display
the decoded message.


298
00:16:05,399 --> 00:16:07,668 line:-2
When Mail is ready
to decode the message,


299
00:16:07,668 --> 00:16:10,103 line:-2
it will call into
the Extension's Security Handler


300
00:16:10,103 --> 00:16:12,472 line:-2
calling the decodedMessage
method.


301
00:16:12.472 --> 00:16:15.342 line:-2 align:center
If the extension has the ability
to decode the message,


302
00:16:15.342 --> 00:16:19.947 line:-2 align:center
it will do so and return
the decoded RFC822 message.


303
00:16:19.947 --> 00:16:23.250 line:-2 align:center
If the extension is not
needed for decoding the message,


304
00:16:23.250 --> 00:16:26.954 line:-1 align:center
it should quickly return nil.


305
00:16:26,954 --> 00:16:29,489 line:-2
When a message is viewed,
it can be determined


306
00:16:29.489 --> 00:16:31.692 line:-1 align:center
if it is signed and encrypted.


307
00:16:31,692 --> 00:16:34,261 line:-2
For signed messages,
the signer certificate


308
00:16:34.261 --> 00:16:37.130 line:-2 align:center
can be clicked next
to the signer label


309
00:16:37.130 --> 00:16:40.067 line:-2 align:center
to view the sender's
certificate information.


310
00:16:40.067 --> 00:16:43.203 line:-2 align:center
Mail allows extensions to
provide its own view controller


311
00:16:43.203 --> 00:16:46.640 line:-2 align:center
to render this
certificate information.


312
00:16:46.640 --> 00:16:49.343 line:-2 align:center
As part of the decoded Mail
message, the extension has


313
00:16:49,343 --> 00:16:52,379 line:-2
the ability to return
a set of message signers.


314
00:16:52.379 --> 00:16:54.948 line:-2 align:center
The label provided will
be shown as the signer


315
00:16:54.948 --> 00:16:56.350 line:-1 align:center
in the message view.


316
00:16:56,350 --> 00:16:59,520 line:-2
The extension can also
populate the context property


317
00:16:59.520 --> 00:17:01.255 line:-2 align:center
with any information
it might need


318
00:17:01,255 --> 00:17:04,625 line:-2
for displaying
the signing certificate.


319
00:17:04.625 --> 00:17:06.527 line:-2 align:center
When the certificate icon
is clicked,


320
00:17:06.527 --> 00:17:09.062 line:-2 align:center
Mail requests a ViewController
from the extension


321
00:17:09.062 --> 00:17:12.432 line:-2 align:center
and passes it the set of signers
for the current message.


322
00:17:12.432 --> 00:17:14.868 line:-2 align:center
These signers are what
was returned to Mail


323
00:17:14.868 --> 00:17:18.472 line:-2 align:center
by the extension when the
message was originally decoded.


324
00:17:18,472 --> 00:17:20,574 line:-2
The view controller
must be a subclass


325
00:17:20,574 --> 00:17:23,377 line:-1
of MEExtensionViewController.


326
00:17:23,377 --> 00:17:26,446 line:-2
And that's it for message
security extensions.


327
00:17:26.446 --> 00:17:29.149 line:-2 align:center
Mail extensions are
a powerful new way


328
00:17:29.149 --> 00:17:30.984 line:-2 align:center
for you to enhance
the Mail experience.


329
00:17:30.984 --> 00:17:32.519 line:-2 align:center
We're excited to see
how you leverage


330
00:17:32.519 --> 00:17:36.123 line:-2 align:center
these Mail capabilities to build
awesome new products,


331
00:17:36.123 --> 00:17:37.991 line:-2 align:center
and we want to hear
your feedback.


332
00:17:37,991 --> 00:17:40,127 line:-2
So send us an email
or post a message


333
00:17:40.127 --> 00:17:42.262 line:-1 align:center
on our Developer Forums.


334
00:17:42.262 --> 00:17:45.699 line:-2 align:center
These examples show the power
of Mail app extensions.


335
00:17:45.699 --> 00:17:48.936 line:-2 align:center
We made a compose extension
that verified recipients,


336
00:17:48,936 --> 00:17:52,306 line:-2
an action extension that
colored incoming messages.


337
00:17:52.306 --> 00:17:55.642 line:-2 align:center
We saw a content blocker
blocking remote images.


338
00:17:55.642 --> 00:17:58.178 line:-2 align:center
Last, we saw
how easy it is to add


339
00:17:58.178 --> 00:18:01.982 line:-2 align:center
custom encryption and decryption
to Mail.


340
00:18:01.982 --> 00:18:05.786 line:-2 align:center
In this video, we covered how
to build Mail app extensions.


341
00:18:05.786 --> 00:18:08.088 line:-2 align:center
We're looking forward
to see how you extend Mail


342
00:18:08.088 --> 00:18:10.057 line:-1 align:center
to do some really cool things.


343
00:18:10.057 --> 00:18:14.027 line:-2 align:center
So get out there and build some
awesome new Mail app extensions.


344
00:18:14.027 --> 00:18:15.696 line:-1 align:center
Thanks for watching.

