2
00:00:01,768 --> 00:00:04,738 line:-1
[upbeat music]


3
00:00:04.771 --> 00:00:09.009 line:-1 align:center
♪ ♪


4
00:00:09.042 --> 00:00:10.777 line:-1 align:center
[Boris] Welcome to the session


5
00:00:10.811 --> 00:00:14.515 line:-2 align:center
"Discover and curate Swift Packages
using collections."


6
00:00:14.548 --> 00:00:18.051 line:-2 align:center
In Xcode 11, we introduced
support for Swift packages,


7
00:00:18,085 --> 00:00:19,720 line:-1
offering a straightforward approach


8
00:00:19,753 --> 00:00:22,322 line:-1
to distributing libraries as source code.


9
00:00:22.356 --> 00:00:24.491 line:-2 align:center
As more and more packages
are being published,


10
00:00:24,525 --> 00:00:26,126 line:-1
we want to make the discovery of packages


11
00:00:26.159 --> 00:00:29.863 line:-2 align:center
that fit particular use cases
more accessible.


12
00:00:29,897 --> 00:00:31,832 line:-1
When adding packages to their project,


13
00:00:31,865 --> 00:00:33,400 line:-1
developers would also like to see


14
00:00:33.433 --> 00:00:35.869 line:-1 align:center
more information, such as their license.


15
00:00:35,903 --> 00:00:37,738 line:-1
To do that, we want a standardized way


16
00:00:37,771 --> 00:00:40,440 line:-1
of accessing metadata.


17
00:00:40.474 --> 00:00:42.176 line:-1 align:center
This is why, in Xcode 13,


18
00:00:42.209 --> 00:00:44.311 line:-1 align:center
we are introducing Package collections,


19
00:00:44,344 --> 00:00:47,347 line:-2
curated lists of packages
that can be shared with others


20
00:00:47,381 --> 00:00:49,650 line:-2
and which drive a whole new
and improved experience


21
00:00:49.683 --> 00:00:51.818 line:-1 align:center
for adding packages to your projects.


22
00:00:51.852 --> 00:00:54.354 line:-1 align:center
Educators and community influencers


23
00:00:54,388 --> 00:00:55,856 line:-1
can publish package collections


24
00:00:55,889 --> 00:00:58,725 line:-2
to go along with course materials
or blog posts,


25
00:00:58,759 --> 00:01:01,929 line:-2
removing the barriers
when using packages for the first time,


26
00:01:01.962 --> 00:01:04.865 line:-2 align:center
and the burden of deciding
which packages are useful


27
00:01:04,898 --> 00:01:07,534 line:-1
for a particular task.


28
00:01:07,568 --> 00:01:09,236 line:-1
Enterprises can use collections


29
00:01:09,269 --> 00:01:12,773 line:-2
to narrow down the decision space
for their internal engineering teams,


30
00:01:12,806 --> 00:01:16,410 line:-2
focusing them on a trusted set
of vetted packages.


31
00:01:16.443 --> 00:01:19.012 line:-1 align:center
First, a quick overview of the talk.


32
00:01:19.046 --> 00:01:21.415 line:-1 align:center
We start with a demo,


33
00:01:21.448 --> 00:01:25.085 line:-2 align:center
then see how to use collections
in more detail.


34
00:01:25,118 --> 00:01:27,988 line:-2
We'll dive into creating
our own collections,


35
00:01:28.021 --> 00:01:30.991 line:-1 align:center
and finish off with another demo.


36
00:01:31,024 --> 00:01:33,527 line:-1
I found a blog post on Swift Numerics,


37
00:01:33.560 --> 00:01:35.495 line:-1 align:center
and I'm eager to try it out in Xcode.


38
00:01:37.564 --> 00:01:40.000 line:-2 align:center
I'm just going to copy
the first example from the post


39
00:01:40,033 --> 00:01:41,768 line:-1
and switch over to Xcode


40
00:01:44,137 --> 00:01:47,007 line:-1
to paste in the code.


41
00:01:47,040 --> 00:01:50,043 line:-2
We're getting a build failure
because the Numerics module


42
00:01:50.077 --> 00:01:51.979 line:-1 align:center
isn't present in my project.


43
00:01:52,012 --> 00:01:54,248 line:-2
Previously, I would have needed
to go back to the post


44
00:01:54.281 --> 00:01:57.284 line:-2 align:center
to figure out how to add
the Numerics package to my project,


45
00:01:57,317 --> 00:02:00,454 line:-2
but in Xcode 13, because we
are providing a default collection


46
00:02:00.487 --> 00:02:03.790 line:-2 align:center
of open-source packages,
get a fix-it right here in the editor.


47
00:02:05,893 --> 00:02:07,995 line:-1
Now, if I click “Search,"


48
00:02:08.028 --> 00:02:11.198 line:-2 align:center
I will be taken to the new
"Add Package" workflow,


49
00:02:11,231 --> 00:02:15,002 line:-1
with Numerics preselected.


50
00:02:15.035 --> 00:02:16.870 line:-2 align:center
We have a lot of information
about the package


51
00:02:16.904 --> 00:02:20.641 line:-2 align:center
right here in Xcode,
such as the latest version,


52
00:02:20,674 --> 00:02:22,409 line:-1
authors,


53
00:02:22.442 --> 00:02:25.445 line:-1 align:center
the license, as well as the README.


54
00:02:25,479 --> 00:02:28,749 line:-2
We can also switch
to the Release History tab


55
00:02:28,782 --> 00:02:32,152 line:-2
to see release notes
of all available versions.


56
00:02:33,453 --> 00:02:35,322 line:-1
For adding the dependency,


57
00:02:35.355 --> 00:02:37.691 line:-1 align:center
we can pick the version requirements


58
00:02:37.724 --> 00:02:39.826 line:-1 align:center
and the project to add to.


59
00:02:39,860 --> 00:02:43,463 line:-2
I'll accept the defaults for both
and click "Add Package."


60
00:02:45.699 --> 00:02:47.167 line:-1 align:center
Now, the package will be checked out,


61
00:02:47,201 --> 00:02:49,570 line:-1
and Xcode offers a selection of products


62
00:02:49,603 --> 00:02:52,673 line:-1
from the given version.


63
00:02:52.706 --> 00:02:54.408 line:-1 align:center
I will pick the Numerics product


64
00:02:54.441 --> 00:02:57.211 line:-1 align:center
and add it to my one target.


65
00:02:57,244 --> 00:03:00,314 line:-2
To finish, I'll click
"Add Package" once again.


66
00:03:02,549 --> 00:03:04,952 line:-2
If we take a look
at the project navigator,


67
00:03:04.985 --> 00:03:07.754 line:-1 align:center
we'll see the new dependency there.


68
00:03:07.788 --> 00:03:09.189 line:-1 align:center
And if we perform a build,


69
00:03:09,223 --> 00:03:11,992 line:-2
we see that the project
builds successfully now.


70
00:03:12.025 --> 00:03:14.695 line:-2 align:center
Let's take a quick look
at the exact changes


71
00:03:14.728 --> 00:03:17.865 line:-2 align:center
the "Add Package" workflow
made to the project.


72
00:03:17,898 --> 00:03:21,068 line:-2
For that, we'll open up
the project editor,


73
00:03:22,236 --> 00:03:23,570 line:-1
select the project,


74
00:03:23,604 --> 00:03:26,507 line:-1
and open the Swift Packages tab.


75
00:03:26,540 --> 00:03:30,077 line:-2
Here, we can see our dependency
and the version rule.


76
00:03:31.144 --> 00:03:33.080 line:-1 align:center
Now, if we open the target editor


77
00:03:33.113 --> 00:03:35.449 line:-2 align:center
to take a look
at the Frameworks, Libraries,


78
00:03:35.482 --> 00:03:37.985 line:-1 align:center
and Embedded Content phase,


79
00:03:38.018 --> 00:03:41.822 line:-2 align:center
we can see the Numerics product
being linked here.


80
00:03:41,855 --> 00:03:45,192 line:-2
This is the new
"Add Package" workflow in Xcode.


81
00:03:45,225 --> 00:03:48,829 line:-2
Now, how did Xcode know
about the Numerics package?


82
00:03:48,862 --> 00:03:51,899 line:-2
Xcode ships with a pre-configured
default collection,


83
00:03:51,932 --> 00:03:53,767 line:-2
which contains a set
of open-source packages


84
00:03:53.800 --> 00:03:56.837 line:-2 align:center
published by Apple,
such as Swift Argument Parser


85
00:03:56,870 --> 00:03:59,173 line:-1
and Swift NIO.


86
00:03:59.206 --> 00:04:02.943 line:-2 align:center
This makes the use of these projects
in Xcode much more seamless


87
00:04:02,976 --> 00:04:04,778 line:-2
by offering auto completion
of module names


88
00:04:04,811 --> 00:04:06,680 line:-1
and fix-its for adding packages


89
00:04:06.713 --> 00:04:09.183 line:-1 align:center
using the information from the collection.


90
00:04:09,216 --> 00:04:11,952 line:-2
This default collection
is being updated regularly,


91
00:04:11,985 --> 00:04:13,921 line:-1
so the exact list of packages can change.


92
00:04:13,954 --> 00:04:15,923 line:-1
Now, I'll let my colleague, Francesco,


93
00:04:15.956 --> 00:04:18.992 line:-1 align:center
tell you more about using collections.


94
00:04:19,793 --> 00:04:20,961 line:-1
[Francesco] Thank you, Boris.


95
00:04:20,994 --> 00:04:22,496 line:-1
Importing that package directly through


96
00:04:22,529 --> 00:04:25,165 line:-1
an import statement was effortless.


97
00:04:25.199 --> 00:04:28.168 line:-2 align:center
Let's take a closer look
at what a collection is.


98
00:04:28.202 --> 00:04:30.237 line:-1 align:center
Collections are a JSON file,


99
00:04:30,270 --> 00:04:32,906 line:-1
typically fetched via HTTPS.


100
00:04:32,940 --> 00:04:36,443 line:-2
A collection contains
a list of package URLs


101
00:04:36.476 --> 00:04:37.678 line:-1 align:center
and their metadata,


102
00:04:37.711 --> 00:04:41.548 line:-2 align:center
including a summary,
versions, and vended products.


103
00:04:41,582 --> 00:04:43,217 line:-1
This allows for rich information


104
00:04:43,250 --> 00:04:45,786 line:-1
to be displayed in Xcode.


105
00:04:45.819 --> 00:04:48.889 line:-2 align:center
This is a snippet
of the JSON of a collection.


106
00:04:48,922 --> 00:04:51,191 line:-1
You usually won't look at this in detail,


107
00:04:51,225 --> 00:04:54,928 line:-2
but let's take a look
at a few important fields.


108
00:04:54.962 --> 00:04:57.598 line:-1 align:center
We can see a package's URL,


109
00:04:57.631 --> 00:05:00.334 line:-1 align:center
the URL of its README,


110
00:05:00,367 --> 00:05:02,002 line:-1
a summary,


111
00:05:02.035 --> 00:05:03.904 line:-1 align:center
as well as more detailed information


112
00:05:03,937 --> 00:05:06,573 line:-1
about the versions of a package.


113
00:05:06,607 --> 00:05:08,375 line:-1
The Swift Package Manager,


114
00:05:08.408 --> 00:05:11.478 line:-2 align:center
which we often abbreviate today
as "SwiftPM,"


115
00:05:11.512 --> 00:05:13.580 line:-2 align:center
manages a database
for caching collections


116
00:05:13.614 --> 00:05:15.549 line:-1 align:center
on your Mac.


117
00:05:15.582 --> 00:05:18.252 line:-2 align:center
This means that you can access
your configured collections


118
00:05:18,285 --> 00:05:20,654 line:-1
from any tool that uses libSwiftPM,


119
00:05:20.687 --> 00:05:24.224 line:-2 align:center
not just Xcode,
including SwiftPM on the command line.


120
00:05:24,258 --> 00:05:28,061 line:-2
SwiftPM is part of the larger
Swift open source project.


121
00:05:28,095 --> 00:05:30,597 line:-1
The swift.org website is a great place,


122
00:05:30.631 --> 00:05:34.401 line:-2 align:center
where you can learn about the community
and the process to contribute.


123
00:05:35.802 --> 00:05:38.872 line:-2 align:center
SwiftPM offers
its functionality as a library,


124
00:05:38.906 --> 00:05:41.408 line:-1 align:center
including the support for collections.


125
00:05:41,441 --> 00:05:43,477 line:-1
We call the library libSwiftPM,


126
00:05:43.510 --> 00:05:46.246 line:-1 align:center
and it powers packages in Xcode, as well.


127
00:05:46.280 --> 00:05:49.583 line:-2 align:center
Boris and I are putting together
a blog post for our website.


128
00:05:49,616 --> 00:05:52,252 line:-2
We're going to create
a collection with the packages


129
00:05:52.286 --> 00:05:54.121 line:-1 align:center
we are using in the post,


130
00:05:54.154 --> 00:05:57.024 line:-1 align:center
so that our readers can follow along.


131
00:05:57,057 --> 00:05:59,126 line:-1
[Boris] Thanks, Francesco.


132
00:06:00,561 --> 00:06:04,097 line:-2
We like to use Alamofire
to make network requests,


133
00:06:04.131 --> 00:06:05.933 line:-1 align:center
so we add it to the collection.


134
00:06:05,966 --> 00:06:07,935 line:-2
Additionally, we also
want to keep the formatting


135
00:06:07.968 --> 00:06:11.605 line:-2 align:center
of our project consistent,
so we will also use swift-format.


136
00:06:11,638 --> 00:06:14,675 line:-2
Now that we know which packages
we want to have in the collection,


137
00:06:14.708 --> 00:06:16.543 line:-1 align:center
let's continue and create it.


138
00:06:17,978 --> 00:06:21,348 line:-2
For creating a collection,
we have published a tool on GitHub.


139
00:06:21,381 --> 00:06:23,283 line:-1
You can clone and build this locally


140
00:06:23.317 --> 00:06:25.686 line:-2 align:center
if you want to publish
your own collections.


141
00:06:25.719 --> 00:06:28.989 line:-2 align:center
The generator simplifies the process
of creating collections


142
00:06:29.022 --> 00:06:31.391 line:-1 align:center
by collecting information automatically


143
00:06:31.425 --> 00:06:33.060 line:-1 align:center
and always producing output


144
00:06:33,093 --> 00:06:35,762 line:-2
according to the latest version
of the format.


145
00:06:35.796 --> 00:06:37.931 line:-1 align:center
The tool takes an input JSON file,


146
00:06:37.965 --> 00:06:41.068 line:-2 align:center
which is a list of package URLs
with optional metadata,


147
00:06:41,101 --> 00:06:45,005 line:-2
and produces an output file
which will be shared with others.


148
00:06:47.374 --> 00:06:50.344 line:-2 align:center
There is also a separate tool
for signing collections


149
00:06:50.377 --> 00:06:52.713 line:-1 align:center
that is part of the same GitHub project.


150
00:06:52,746 --> 00:06:54,715 line:-1
Signing your collection is optional,


151
00:06:54,748 --> 00:06:56,483 line:-1
but allows verifying the author


152
00:06:56,517 --> 00:06:59,686 line:-2
and protects the integrity
of the collection.


153
00:06:59.720 --> 00:07:03.056 line:-2 align:center
This is how the input
JSON format looks like.


154
00:07:03.090 --> 00:07:06.226 line:-2 align:center
There's a bit of metadata
for the collection as a whole,


155
00:07:06.260 --> 00:07:09.897 line:-2 align:center
such as an overview, keywords,
and author information.


156
00:07:09.930 --> 00:07:13.634 line:-2 align:center
This will be displayed
when adding a collection in Xcode.


157
00:07:13,667 --> 00:07:16,670 line:-2
And most importantly,
a list of package URLs.


158
00:07:18.071 --> 00:07:21.708 line:-2 align:center
The tool will fetch information
about each package automatically,


159
00:07:21.742 --> 00:07:25.078 line:-2 align:center
but it is also possible to provide
additional metadata per package


160
00:07:25,112 --> 00:07:27,114 line:-1
when authoring the collection.


161
00:07:27,147 --> 00:07:29,816 line:-2
This includes metadata
that can improve search results,


162
00:07:29.850 --> 00:07:32.452 line:-1 align:center
such as a custom summary or keywords,


163
00:07:32,486 --> 00:07:36,089 line:-2
restricting the versions
that the collection will represent,


164
00:07:36,123 --> 00:07:38,759 line:-1
excluded products, which can be useful


165
00:07:38.792 --> 00:07:42.396 line:-2 align:center
to guide users to the most relevant
product a package vends,


166
00:07:42.429 --> 00:07:45.732 line:-1 align:center
and specifying a README URL.


167
00:07:45,766 --> 00:07:48,569 line:-2
Distributing a collection based
on the input JSON file


168
00:07:48,602 --> 00:07:50,337 line:-1
is a three-step process.


169
00:07:50.370 --> 00:07:52.673 line:-1 align:center
First, we use the generator


170
00:07:52,706 --> 00:07:55,042 line:-1
to create an output JSON file.


171
00:07:55.075 --> 00:07:58.278 line:-2 align:center
Then, we take the output
and a signing key plus certificate


172
00:07:58,312 --> 00:08:01,682 line:-2
to create a signed collection
with the sign tool.


173
00:08:01,715 --> 00:08:04,218 line:-2
And finally, we can distribute
the signed collection,


174
00:08:04.251 --> 00:08:05.752 line:-1 align:center
either by sharing it directly


175
00:08:05.786 --> 00:08:08.522 line:-1 align:center
or by putting it on a web server.


176
00:08:08.555 --> 00:08:12.626 line:-2 align:center
You can sign collections
with any valid, non-expired,


177
00:08:12.659 --> 00:08:15.429 line:-1 align:center
non-revoked code signing certificate.


178
00:08:15,462 --> 00:08:17,865 line:-2
For more information
about the requirements,


179
00:08:17.898 --> 00:08:20.667 line:-1 align:center
check out the SwiftPM documentation.


180
00:08:20.701 --> 00:08:22.736 line:-2 align:center
If you do not want to sign
your collection,


181
00:08:22.769 --> 00:08:27.441 line:-2 align:center
then proceed to distribution
after using the generate tool.


182
00:08:27.474 --> 00:08:29.977 line:-2 align:center
But for this collection that Francesco
and I are working on,


183
00:08:30.010 --> 00:08:31.979 line:-1 align:center
we're going to go ahead and sign it.


184
00:08:33,413 --> 00:08:35,983 line:-2
I have already prepared
the files for signing,


185
00:08:36,016 --> 00:08:37,784 line:-1
as well as the input JSON


186
00:08:37.818 --> 00:08:40.954 line:-1 align:center
that we saw on the slides earlier.


187
00:08:40,988 --> 00:08:44,458 line:-2
I also downloaded and built
the generator and signing tool.


188
00:08:44.491 --> 00:08:46.360 line:-1 align:center
We start by running


189
00:08:46,393 --> 00:08:50,130 line:-1
`package-collection-generate`


190
00:08:52,199 --> 00:08:55,469 line:-1
with the input JSON,


191
00:08:55,502 --> 00:08:57,771 line:-1
as well as an output path.


192
00:09:00.107 --> 00:09:02.743 line:-1 align:center
We are passing `--verbose`


193
00:09:02,776 --> 00:09:06,246 line:-1
to get more informational output,


194
00:09:06.280 --> 00:09:09.550 line:-1 align:center
and we are passing a GitHub auth-token


195
00:09:10,851 --> 00:09:13,987 line:-1
to query the GitHub API for more metadata.


196
00:09:14,922 --> 00:09:17,224 line:-2
We see that the command
checks out different versions


197
00:09:17,257 --> 00:09:20,661 line:-1
of the packages to collect information.


198
00:09:20,694 --> 00:09:22,829 line:-1
This should take a few seconds.


199
00:09:22.863 --> 00:09:26.533 line:-2 align:center
And then, it is done
and has generated an output file.


200
00:09:26,567 --> 00:09:29,303 line:-1
Next, we'd like to sign the collection.


201
00:09:29,336 --> 00:09:35,175 line:-2
We run the
`package-collection-sign` command,


202
00:09:35,209 --> 00:09:38,612 line:-2
pass in the JSON file
that we just generated,


203
00:09:38,645 --> 00:09:41,348 line:-1
specify the output path.


204
00:09:45,352 --> 00:09:48,188 line:-1
We also pass in the key and certificate


205
00:09:48,222 --> 00:09:50,691 line:-1
we exported earlier.


206
00:09:56,763 --> 00:10:00,767 line:-2
I've already uploaded
the generated collection to a server.


207
00:10:00,801 --> 00:10:03,737 line:-2
Let's see how to interact with it
using the command line.


208
00:10:03.770 --> 00:10:05.939 line:-1 align:center
SwiftPM brings a subcommand


209
00:10:05,973 --> 00:10:08,408 line:-1
called `package-collection` to do so.


210
00:10:08,442 --> 00:10:12,112 line:-2
To start, we add the collection
to our list of configured collections,


211
00:10:12.145 --> 00:10:15.616 line:-2 align:center
which will also make
it available in Xcode.


212
00:10:22.189 --> 00:10:24.491 line:-1 align:center
This fetches the collection and adds it.


213
00:10:24.525 --> 00:10:27.361 line:-2 align:center
Of course, you can also
do this in Xcode's UI,


214
00:10:27,394 --> 00:10:29,796 line:-1
which Francesco will show you later.


215
00:10:29,830 --> 00:10:32,032 line:-1
Next, let's take a look at the contents,


216
00:10:32,065 --> 00:10:34,768 line:-1
using `swift package-collection describe`.


217
00:10:40,140 --> 00:10:42,342 line:-1
First, there is the metadata


218
00:10:42.376 --> 00:10:45.045 line:-1 align:center
that we specified earlier.


219
00:10:45.078 --> 00:10:48.248 line:-2 align:center
We get the list of packages
in the collection,


220
00:10:48,282 --> 00:10:50,617 line:-2
and finally,
information about the signature.


221
00:10:50.651 --> 00:10:53.086 line:-1 align:center
This shows who has signed the collection,


222
00:10:53,120 --> 00:10:56,957 line:-2
as well as that the signature
has been verified by SwiftPM.


223
00:10:56.990 --> 00:10:58.492 line:-1 align:center
This can be used to determine


224
00:10:58,525 --> 00:11:01,562 line:-2
whether the given collection
was created by who you expect


225
00:11:01,595 --> 00:11:03,864 line:-2
and also protects the integrity
of the collection


226
00:11:03,897 --> 00:11:05,899 line:-1
from modification.


227
00:11:05.933 --> 00:11:08.902 line:-2 align:center
Next, let's take a look
at an individual package,


228
00:11:08.936 --> 00:11:11.171 line:-1 align:center
like swift-format.


229
00:11:11,205 --> 00:11:12,906 line:-2
For this, we use
the describe command again,


230
00:11:12.940 --> 00:11:15.742 line:-1 align:center
this time with a package URL.


231
00:11:16.877 --> 00:11:18.011 line:-1 align:center
In the output of this command


232
00:11:18,045 --> 00:11:21,648 line:-2
we see the information
about the entire package,


233
00:11:21,682 --> 00:11:23,717 line:-1
such as available versions,


234
00:11:23.750 --> 00:11:27.321 line:-1 align:center
authors, stars, and the README URL,


235
00:11:27.354 --> 00:11:29.790 line:-1 align:center
and also details about the latest version,


236
00:11:29.823 --> 00:11:32.259 line:-2 align:center
including the Swift tools
version being used,


237
00:11:32,292 --> 00:11:34,995 line:-1
as well as the modules and products.


238
00:11:35.028 --> 00:11:38.398 line:-2 align:center
Now that we verified
that our new collection looks good,


239
00:11:38,432 --> 00:11:40,534 line:-2
I'm going to send it
to my colleague, Francesco,


240
00:11:40,567 --> 00:11:43,203 line:-2
who will show you a bit more
of the Xcode experience


241
00:11:43.237 --> 00:11:45.539 line:-1 align:center
by putting together our demo app.


242
00:11:45,572 --> 00:11:47,441 line:-1
[Francesco] Thank you, Boris.


243
00:11:47,474 --> 00:11:51,378 line:-2
I just created a new project
for our demo app.


244
00:11:51,411 --> 00:11:53,180 line:-1
I can add our new collection to Xcode


245
00:11:53,213 --> 00:11:57,017 line:-1
by navigating to File > Add Packages


246
00:11:57,050 --> 00:11:59,086 line:-1
and clicking the + button


247
00:11:59.119 --> 00:12:01.455 line:-1 align:center
to add the collection.


248
00:12:01,488 --> 00:12:04,925 line:-2
Now, I can paste
the URL of the collection,


249
00:12:04,958 --> 00:12:06,994 line:-1
and after clicking "Load,"


250
00:12:07.027 --> 00:12:10.063 line:-2 align:center
Xcode tells me
how many packages it contains


251
00:12:10,097 --> 00:12:12,966 line:-1
and when it was last updated.


252
00:12:13,000 --> 00:12:16,803 line:-2
After adding the collection,
we can see its packages:


253
00:12:16.837 --> 00:12:19.740 line:-1 align:center
Alamofire and swift-format.


254
00:12:20,641 --> 00:12:23,677 line:-2
I want to use
a networking API from Alamofire,


255
00:12:23,710 --> 00:12:26,346 line:-1
so I'll add the package to my project.


256
00:12:27,281 --> 00:12:30,117 line:-1
I'll select the Alamofire product


257
00:12:30.150 --> 00:12:33.921 line:-2 align:center
and add it to my only target
by clicking "Add Package."


258
00:12:35,622 --> 00:12:38,425 line:-1
We see that Xcode added the dependency,


259
00:12:38,458 --> 00:12:40,394 line:-1
so we can now go back into our source file


260
00:12:40.427 --> 00:12:42.362 line:-1 align:center
and start writing some code.


261
00:12:53,440 --> 00:12:56,643 line:-2
Now that I've downloaded
the README using Alamofire,


262
00:12:56,677 --> 00:12:58,645 line:-1
I wanna parse the Markdown


263
00:12:58,679 --> 00:13:01,615 line:-1
using the swift-cmark package.


264
00:13:01.648 --> 00:13:05.052 line:-1 align:center
Let's go back to the "Add Packages" panel.


265
00:13:05,085 --> 00:13:09,022 line:-2
New in Xcode 13,
we added quick access to package options


266
00:13:09.056 --> 00:13:12.092 line:-2 align:center
through a context menu
on the project navigator.


267
00:13:12,125 --> 00:13:14,728 line:-1
From here, I can re-open the panel


268
00:13:14,761 --> 00:13:16,496 line:-1
by selecting "Add Packages."


269
00:13:18.198 --> 00:13:21.768 line:-2 align:center
I don't have swift-cmark
in any of my collections,


270
00:13:21.802 --> 00:13:24.905 line:-1 align:center
and I can still add it by pasting its URL


271
00:13:24.938 --> 00:13:27.107 line:-1 align:center
directly into the search bar.


272
00:13:27.140 --> 00:13:29.443 line:-1 align:center
I'm going to select the main branch


273
00:13:29,476 --> 00:13:32,079 line:-1
of swift-cmark


274
00:13:32,112 --> 00:13:34,748 line:-1
and add the package to my project.


275
00:13:36,583 --> 00:13:38,752 line:-1
Now that I've added swift-cmark,


276
00:13:38.785 --> 00:13:41.455 line:-1 align:center
we can finish our app for our blog post.


277
00:13:41,488 --> 00:13:44,925 line:-2
It's now this easy to use packages
from all over the internet


278
00:13:44.958 --> 00:13:49.229 line:-2 align:center
and focus on what matters most
to us: writing our apps.


279
00:13:51,231 --> 00:13:54,034 line:-1
Swift Package collections in Xcode 13


280
00:13:54,067 --> 00:13:56,837 line:-1
help with the discovery of new packages.


281
00:13:56.870 --> 00:13:58.572 line:-1 align:center
Creating your own collection


282
00:13:58,605 --> 00:14:01,441 line:-1
allows sharing curated lists of packages,


283
00:14:01.475 --> 00:14:05.212 line:-2 align:center
which streamlines
adding them to your projects.


284
00:14:06.480 --> 00:14:09.216 line:-1 align:center
To learn more about packages in general,


285
00:14:09,249 --> 00:14:12,719 line:-1
I would recommend the WWDC19 sessions,


286
00:14:12,753 --> 00:14:15,289 line:-1
"Adopting Swift Packages in Xcode"


287
00:14:15.322 --> 00:14:18.825 line:-1 align:center
and "Creating Swift Packages."


288
00:14:18.859 --> 00:14:20.494 line:-1 align:center
Thank you for watching.


289
00:14:20,527 --> 00:14:23,630 line:-1
[upbeat music]

