2
00:00:02.069 --> 00:00:07.074 line:-1 align:center
[music]


3
00:00:09,042 --> 00:00:11,512 line:-2
[Marl]
Hi, and welcome.


4
00:00:11,545 --> 00:00:14,648 line:-2
My name is Marl, and I'm
on the Shazam Product team.


5
00:00:14.681 --> 00:00:17.384 line:-1 align:center
I hope you're enjoying WWDC21,


6
00:00:17,417 --> 00:00:20,187 line:-2
and I'm here to introduce you
to ShazamKit,


7
00:00:20,220 --> 00:00:21,989 line:-2
the framework
that gives you the ability


8
00:00:22,022 --> 00:00:24,791 line:-2
to integrate audio
recognition into your apps.


9
00:00:24,825 --> 00:00:28,328 line:-2
Today I'll take you
through what ShazamKit is


10
00:00:28.362 --> 00:00:31.398 line:-2 align:center
and a few use cases
for applying it.


11
00:00:31.431 --> 00:00:34.301 line:-2 align:center
Then, I'll turn it over
to my colleague James,


12
00:00:34.334 --> 00:00:37.070 line:-2 align:center
who will show you how Shazam
catalog recognition works


13
00:00:37,104 --> 00:00:40,040 line:-2
and offer tips
for getting started.


14
00:00:40.073 --> 00:00:43.343 line:-2 align:center
Let's start
with what ShazamKit is.


15
00:00:43,377 --> 00:00:46,713 line:-2
You might already be familiar
with Shazam,


16
00:00:46,747 --> 00:00:49,883 line:-2
the audio recognition app
that debuted in 2008


17
00:00:49.917 --> 00:00:52.819 line:-2 align:center
as one of the first apps
in the App Store.


18
00:00:52.853 --> 00:00:55.656 line:-2 align:center
13 years later,
the app's grown quite a bit,


19
00:00:55,689 --> 00:00:57,791 line:-2
and Shazam is even used
as a verb.


20
00:00:57.824 --> 00:01:01.228 line:-2 align:center
Its technology powers
Siri's What Song is This


21
00:01:01.261 --> 00:01:04.765 line:-2 align:center
and is integrated in Shortcuts
and Control Center.


22
00:01:04,798 --> 00:01:08,802 line:-2
That core technology is
audio recognition--


23
00:01:08,836 --> 00:01:12,306 line:-2
precise and almost instantaneous
audio matching--


24
00:01:12,339 --> 00:01:15,309 line:-2
even with noise
in the background.


25
00:01:15,342 --> 00:01:17,878 line:-2
Recognition is achieved
by listening


26
00:01:17,911 --> 00:01:20,681 line:-2
for the distinct acoustic
signature of the audio


27
00:01:20,714 --> 00:01:22,716 line:-1
and searching for an exact match


28
00:01:22,749 --> 00:01:25,452 line:-2
either within Shazam's own
catalog of content


29
00:01:25,485 --> 00:01:27,588 line:-1
or within custom audio catalogs


30
00:01:27,621 --> 00:01:31,625 line:-2
that you will
now be able to create.


31
00:01:31.658 --> 00:01:34.061 line:-1 align:center
Unlike SoundAnalysis, however,


32
00:01:34,094 --> 00:01:37,197 line:-2
Shazam isn't
an audio classifer detecting


33
00:01:37.231 --> 00:01:40.701 line:-2 align:center
and analyzing classes of speech,
singing, or humming.


34
00:01:40,734 --> 00:01:44,004 line:-2
In fact, Shazam doesn't
identify specific sounds,


35
00:01:44.037 --> 00:01:48.542 line:-2 align:center
like laughter or applause,
in audio at all.


36
00:01:48.575 --> 00:01:51.478 line:-2 align:center
James will take you through
Shazam's recognition process


37
00:01:51.512 --> 00:01:53.447 line:-2 align:center
in a few minutes,
and if you'd like to learn


38
00:01:53.480 --> 00:01:55.616 line:-2 align:center
about detecting
and classifying sounds,


39
00:01:55,649 --> 00:01:58,051 line:-2
check out the SoundAnalysis
session as well.


40
00:01:58.085 --> 00:02:00.821 line:-2 align:center
In the meantime, let's talk
more about ShazamKit,


41
00:02:00.854 --> 00:02:03.257 line:-2 align:center
the framework that brings
the recognition functionality


42
00:02:03,290 --> 00:02:06,093 line:-1
to your apps.


43
00:02:06.126 --> 00:02:09.429 line:-2 align:center
ShazamKit is divided
into three components.


44
00:02:09,463 --> 00:02:12,332 line:-2
There's Shazam
catalog recognition,


45
00:02:12,366 --> 00:02:16,904 line:-2
custom catalog recognition,
and library management.


46
00:02:16,937 --> 00:02:20,040 line:-2
Shazam catalog recognition
gives you the ability


47
00:02:20,073 --> 00:02:23,844 line:-2
to add song identification
to your apps.


48
00:02:23,877 --> 00:02:27,881 line:-2
With custom catalog recognition,
you can take this a step further


49
00:02:27.915 --> 00:02:32.152 line:-2 align:center
and perform on-device matching
against arbitrary audio.


50
00:02:32,186 --> 00:02:35,489 line:-2
This session will focus
primarily


51
00:02:35,522 --> 00:02:38,892 line:-2
on Shazam catalogue recognition
and library management,


52
00:02:38,926 --> 00:02:41,295 line:-2
but be sure to code
along with our colleague Alex,


53
00:02:41.328 --> 00:02:42.563 line:-1 align:center
who will show you how to


54
00:02:42,596 --> 00:02:46,099 line:-2
"Create custom audio experiences
for your apps."


55
00:02:46.133 --> 00:02:49.169 line:-2 align:center
Next, I'll take you through some
of the amazing opportunities


56
00:02:49.203 --> 00:02:53.707 line:-2 align:center
we see for you to leverage
ShazamKit across your apps.


57
00:02:53.740 --> 00:02:56.009 line:-2 align:center
Let's start with finding
the perfect selfie.


58
00:02:56,043 --> 00:02:58,412 line:-2
They can be fun to take
and even more fun


59
00:02:58,445 --> 00:03:00,981 line:-2
when creating a specific mood
or ambiance.


60
00:03:01,014 --> 00:03:03,350 line:-2
Shazam catalog
recognition can help


61
00:03:03.383 --> 00:03:05.853 line:-2 align:center
by recognizing the song
playing in the environment


62
00:03:05,886 --> 00:03:09,489 line:-2
and fetching song metadata
like song title and artist.


63
00:03:09.523 --> 00:03:12.793 line:-2 align:center
However, you can also create
a slightly different experience,


64
00:03:12,826 --> 00:03:15,562 line:-2
or vibe, so your selfie goes
beyond listening


65
00:03:15.596 --> 00:03:17.197 line:-1 align:center
and taping from your couch.


66
00:03:17,231 --> 00:03:20,834 line:-2
The ShazamKit API also
returns metadata like genre,


67
00:03:20.868 --> 00:03:23.403 line:-2 align:center
which you can use
to simulate enjoying that song


68
00:03:23.437 --> 00:03:27.007 line:-1 align:center
at a club downtown instead.


69
00:03:27,040 --> 00:03:29,743 line:-2
ShazamKit also
recognizes more than music,


70
00:03:29.776 --> 00:03:33.113 line:-2 align:center
which can be useful useful in
the context of virtual learning.


71
00:03:33,146 --> 00:03:35,082 line:-2
Remote schooling can
create different challenges


72
00:03:35,115 --> 00:03:37,351 line:-2
for teachers and students,
including keeping up


73
00:03:37.384 --> 00:03:40.254 line:-2 align:center
with on-screen lessons
and navigating between apps.


74
00:03:40,287 --> 00:03:42,756 line:-2
Custom catalog recognition
presents an opportunity


75
00:03:42,789 --> 00:03:46,059 line:-2
to make your education app
experience even more seamless


76
00:03:46,093 --> 00:03:47,227 line:-1
for them.


77
00:03:47,261 --> 00:03:49,062 line:-2
By using
the lesson content's audio


78
00:03:49,096 --> 00:03:50,697 line:-1
as a kind of remote control,


79
00:03:50,731 --> 00:03:52,900 line:-2
the framework
can trigger synced activities


80
00:03:52.933 --> 00:03:56.803 line:-2 align:center
in student apps as content
streams over video conference.


81
00:03:56.837 --> 00:04:00.107 line:-2 align:center
Teachers can rest easier knowing
students' apps follow along,


82
00:04:00,140 --> 00:04:04,278 line:-2
even after pausing or repeating
portions of the lesson.


83
00:04:04.311 --> 00:04:08.115 line:-2 align:center
If you enjoy home improvement
television as much as I do,


84
00:04:08,148 --> 00:04:10,350 line:-2
you'll appreciate the challenge
of trying to search


85
00:04:10,384 --> 00:04:13,587 line:-2
for furniture as quickly as
the pieces flash by on screen.


86
00:04:13,620 --> 00:04:17,758 line:-2
Use ShazamKit to make
your show or video shoppable


87
00:04:17,791 --> 00:04:21,161 line:-2
with an interactive
second screen AR experience.


88
00:04:21,195 --> 00:04:23,864 line:-2
Whether watching in real time
or on demand,


89
00:04:23.897 --> 00:04:26.366 line:-2 align:center
viewers at home can
synchronously browse,


90
00:04:26,400 --> 00:04:29,870 line:-2
simulate, and purchase styles
as they watch.


91
00:04:29.903 --> 00:04:31.805 line:-2 align:center
Now let's try this out
in real life.


92
00:04:31.839 --> 00:04:33.473 line:-2 align:center
You ever watch videos
of moments


93
00:04:33,507 --> 00:04:34,741 line:-2
that you and your friends
have shared


94
00:04:34.775 --> 00:04:37.311 line:-2 align:center
and wish you knew the songs
playing in the background?


95
00:04:37,344 --> 00:04:38,579 line:-1
Here's one, for example,


96
00:04:38,612 --> 00:04:40,747 line:-2
that my friend sent me
to compare our Friday nights.


97
00:04:40.781 --> 00:04:46.753 line:-2 align:center
[music] Don't know anyone
who makes me catch a vibe,


98
00:04:46.787 --> 00:04:52.259 line:-2 align:center
Feel the frequency,
catch a vibe, only you and me.


99
00:04:52.292 --> 00:04:55.362 line:-2 align:center
[Marl] Using ShazamKit, my app
kicked off the recognition


100
00:04:55.395 --> 00:04:57.965 line:-2 align:center
and found the audio
match in Shazam's catalog.


101
00:04:57,998 --> 00:04:59,700 line:-2
Now that I know
which song was playing,


102
00:04:59,733 --> 00:05:01,168 line:-1
I can save it to a library


103
00:05:01.201 --> 00:05:03.437 line:-2 align:center
or use it to start
the perfect weekend playlist.


104
00:05:03.470 --> 00:05:05.606 line:-1 align:center
Now here's James


105
00:05:05.639 --> 00:05:09.409 line:-2 align:center
to show you how Shazam
catalog recognition works.


106
00:05:09.443 --> 00:05:11.211 line:-2 align:center
[James]
Thanks, Marl, and hi, everyone.


107
00:05:11.245 --> 00:05:14.147 line:-2 align:center
I'm James, an engineering
manager on the Shazam team.


108
00:05:14.181 --> 00:05:17.351 line:-2 align:center
Today I'm going to take you
through how ShazamKit was used


109
00:05:17,384 --> 00:05:20,420 line:-2
to recognize the music
in Marl's video.


110
00:05:20.454 --> 00:05:22.322 line:-1 align:center
So what happened


111
00:05:22.356 --> 00:05:24.725 line:-2 align:center
when Marl pressed
the Identify Song button?


112
00:05:24.758 --> 00:05:27.594 line:-2 align:center
ShazamKit sent a representation
of the audio


113
00:05:27,628 --> 00:05:29,796 line:-1
in the video to Shazam's server.


114
00:05:29,830 --> 00:05:32,399 line:-2
A match was found
in Shazam's music catalog,


115
00:05:32,432 --> 00:05:34,668 line:-2
and information about the song
was returned,


116
00:05:34,701 --> 00:05:36,637 line:-1
which we displayed in our app.


117
00:05:36.670 --> 00:05:41.108 line:-2 align:center
Let's take a closer look
at how Shazam matches audio.


118
00:05:41.141 --> 00:05:44.278 line:-2 align:center
It is important to note
that Shazam does not match


119
00:05:44,311 --> 00:05:45,979 line:-1
against the audio itself.


120
00:05:46.013 --> 00:05:49.149 line:-2 align:center
Rather, it creates
a lossy representation of it,


121
00:05:49,183 --> 00:05:53,353 line:-2
which we call a signature,
and matches against that.


122
00:05:53.387 --> 00:05:55.556 line:-2 align:center
There are two benefits
to this approach.


123
00:05:55,589 --> 00:05:59,593 line:-2
Firstly, a signature is at least
an order of magnitude smaller


124
00:05:59.626 --> 00:06:01.795 line:-2 align:center
than the audio
from which it was derived.


125
00:06:01,828 --> 00:06:04,097 line:-2
This greatly reduces the amount
of data


126
00:06:04,131 --> 00:06:06,366 line:-2
that needs to be sent
over the network.


127
00:06:06,400 --> 00:06:09,136 line:-2
Secondly,
signatures are not invertible,


128
00:06:09.169 --> 00:06:11.004 line:-2 align:center
which means
that the original audio


129
00:06:11,038 --> 00:06:13,640 line:-2
cannot be reconstructed
from a given signature.


130
00:06:13,674 --> 00:06:16,577 line:-2
This is very important
for protecting the privacy


131
00:06:16.610 --> 00:06:18.679 line:-1 align:center
of our customers.


132
00:06:18.712 --> 00:06:21.281 line:-2 align:center
So what does a signature
sound like?


133
00:06:21.315 --> 00:06:24.184 line:-2 align:center
Let me play one and see
if you can identify the song.


134
00:06:24,218 --> 00:06:27,955 line:-1
[bleeps and bloops]


135
00:06:27,988 --> 00:06:29,356 line:-1
That's right.


136
00:06:29.389 --> 00:06:31.425 line:-2 align:center
It's "My Future"
by Billie Eilish.


137
00:06:31.458 --> 00:06:36.463 line:-2 align:center
You can even try Shazaming it
for yourself.


138
00:06:36,496 --> 00:06:39,766 line:-1
Now let's talk about catalogs.


139
00:06:39,800 --> 00:06:43,136 line:-2
Catalogs are collections
of signatures.


140
00:06:43.170 --> 00:06:46.073 line:-2 align:center
Of course, signatures
in a catalog are not very useful


141
00:06:46,106 --> 00:06:49,409 line:-2
without some associated metadata
describing the audio


142
00:06:49,443 --> 00:06:51,111 line:-1
from which they were generated.


143
00:06:51,144 --> 00:06:53,847 line:-2
We will refer to these
as reference signatures,


144
00:06:53,881 --> 00:06:58,385 line:-2
as the metadata is a reference
back to the original audio.


145
00:06:58,418 --> 00:07:00,587 line:-2
The Shazam catalog
is a collection


146
00:07:00.621 --> 00:07:02.723 line:-2 align:center
of reference signatures
comprising much


147
00:07:02,756 --> 00:07:04,191 line:-1
of the world's music.


148
00:07:04,224 --> 00:07:06,193 line:-2
It lives in the cloud
and is hosted


149
00:07:06,226 --> 00:07:07,794 line:-1
and maintained by Apple.


150
00:07:07.828 --> 00:07:10.564 line:-2 align:center
It is regularly updated
with the latest tracks.


151
00:07:10,597 --> 00:07:12,866 line:-2
Every signature
in the Shazam catalog


152
00:07:12.900 --> 00:07:15.636 line:-2 align:center
has been generated from
the full audio of a song


153
00:07:15,669 --> 00:07:17,437 line:-2
and has
a corresponding reference


154
00:07:17.471 --> 00:07:20.474 line:-1 align:center
to that song's metadata.


155
00:07:20.507 --> 00:07:23.610 line:-2 align:center
Now, what if you wanted
to match against your own audio?


156
00:07:23.644 --> 00:07:26.446 line:-2 align:center
In this case,
you could use a custom catalog.


157
00:07:26,480 --> 00:07:28,982 line:-2
These are collections
of signatures which have been


158
00:07:29.016 --> 00:07:32.119 line:-2 align:center
generated from arbitrary audio,
not just music,


159
00:07:32.152 --> 00:07:34.755 line:-2 align:center
and you can add your own
custom metadata to them.


160
00:07:34,788 --> 00:07:38,258 line:-2
As opposed to the Shazam catalog
which lives in the cloud,


161
00:07:38.292 --> 00:07:41.461 line:-2 align:center
matching custom catalogs
takes place within your app.


162
00:07:41,495 --> 00:07:43,063 line:-1
Watch the code-along


163
00:07:43,096 --> 00:07:46,400 line:-2
"Creating custom audio
experiences with ShazamKit"


164
00:07:46.433 --> 00:07:48.969 line:-1 align:center
to learn more.


165
00:07:49.002 --> 00:07:50.704 line:-2 align:center
When you want
to search a catalog,


166
00:07:50,737 --> 00:07:53,540 line:-2
you need a query signature,
which is a representation


167
00:07:53.574 --> 00:07:56.143 line:-2 align:center
of a small part of the audio
that you want to match.


168
00:07:56.176 --> 00:07:58.645 line:-2 align:center
In this app,
it's the part of the audio


169
00:07:58,679 --> 00:08:02,216 line:-1
that includes the song.


170
00:08:02,249 --> 00:08:05,419 line:-2
In this visualization,
a query signature has


171
00:08:05.452 --> 00:08:07.588 line:-2 align:center
been compared
against a reference signature,


172
00:08:07,621 --> 00:08:10,157 line:-2
which represents
the complete audio of a song,


173
00:08:10,190 --> 00:08:11,859 line:-1
and a match has been found.


174
00:08:11,892 --> 00:08:14,328 line:-2
This same process occurs
for every song


175
00:08:14,361 --> 00:08:17,731 line:-2
in Shazam's catalog
to identify matching candidates.


176
00:08:17.764 --> 00:08:22.069 line:-2 align:center
So going back to that first
diagram, we now know


177
00:08:22,102 --> 00:08:25,272 line:-2
that we sent a query signature
over the network to be matched


178
00:08:25,305 --> 00:08:27,741 line:-2
against the Shazam catalog,
which is a collection


179
00:08:27.774 --> 00:08:30.377 line:-2 align:center
of reference signatures
and song information.


180
00:08:30.410 --> 00:08:32.446 line:-2 align:center
When Marl
pressed the Identify button,


181
00:08:32,479 --> 00:08:36,416 line:-2
a match was found and
the song information returned.


182
00:08:36,450 --> 00:08:39,887 line:-2
Now, the great thing about
ShazamKit is that it handles all


183
00:08:39,920 --> 00:08:42,856 line:-2
of this for you
through the session object.


184
00:08:42,890 --> 00:08:47,794 line:-2
A session can take as input
either audio or signatures.


185
00:08:47.828 --> 00:08:51.732 line:-2 align:center
Results are communicated
via its delegate.


186
00:08:51,765 --> 00:08:54,935 line:-2
Before you can match
against the Shazam catalog,


187
00:08:54,968 --> 00:08:57,604 line:-2
you will need to enable
the ShazamKit App Service


188
00:08:57,638 --> 00:09:00,407 line:-2
for your app identifier
in the Developer portal.


189
00:09:00,440 --> 00:09:02,643 line:-2
This step is not necessary
for matching


190
00:09:02.676 --> 00:09:05.245 line:-1 align:center
against custom catalogs.


191
00:09:05,279 --> 00:09:08,282 line:-2
OK, let's see what
this looks like in code.


192
00:09:08.315 --> 00:09:10.617 line:-2 align:center
First,
I create a session object.


193
00:09:10,651 --> 00:09:12,653 line:-2
Its default initializer
will match


194
00:09:12.686 --> 00:09:14.555 line:-1 align:center
against the Shazam catalog.


195
00:09:14.588 --> 00:09:17.691 line:-2 align:center
Next, I set its delegate
so that I can be notified


196
00:09:17.724 --> 00:09:20.928 line:-2 align:center
of any matches
that might be found.


197
00:09:20,961 --> 00:09:24,231 line:-2
If you were matching against
continuous stream of audio,


198
00:09:24.264 --> 00:09:27.234 line:-2 align:center
for example, from a microphone,
we recommend you use


199
00:09:27.267 --> 00:09:30.170 line:-2 align:center
the matchStreamingBuffer
method on the session


200
00:09:30,204 --> 00:09:32,639 line:-2
as it is optimized
for that scenario.


201
00:09:32,673 --> 00:09:35,342 line:-2
However, in our case,
I already have access


202
00:09:35.375 --> 00:09:37.211 line:-2 align:center
to the complete audio
in the video,


203
00:09:37.244 --> 00:09:39.346 line:-2 align:center
so I'm going
to create a signature generator


204
00:09:39,379 --> 00:09:41,882 line:-1
and pass the audio to it.


205
00:09:41,915 --> 00:09:43,750 line:-2
When I'm ready
to perform a match,


206
00:09:43.784 --> 00:09:46.386 line:-2 align:center
I will call the signature
method on the generator


207
00:09:46,420 --> 00:09:49,223 line:-2
to convert the audio
I've passed into a signature.


208
00:09:49,256 --> 00:09:51,358 line:-2
Then I hand
the generated signature


209
00:09:51,391 --> 00:09:54,795 line:-2
to the match method
of the session object.


210
00:09:54.828 --> 00:09:56.196 line:-1 align:center
Back to our app.


211
00:09:56,230 --> 00:09:58,632 line:-2
After generating a signature
from the audio


212
00:09:58.665 --> 00:10:01.101 line:-2 align:center
and using a session
to find a matching song


213
00:10:01,134 --> 00:10:02,503 line:-1
in Shazam's catalog,


214
00:10:02,536 --> 00:10:06,540 line:-2
the next step is
to display the song information.


215
00:10:06,573 --> 00:10:08,876 line:-2
Earlier,
I described how catalogs


216
00:10:08,909 --> 00:10:11,578 line:-2
are made up
of signatures and metadata.


217
00:10:11,612 --> 00:10:13,480 line:-2
In the case
of the Shazam catalog,


218
00:10:13.514 --> 00:10:15.782 line:-2 align:center
this metadata
is song information,


219
00:10:15,816 --> 00:10:18,318 line:-2
such as the title
and artist of the track,


220
00:10:18,352 --> 00:10:21,288 line:-2
and other properties
like its album art.


221
00:10:21,321 --> 00:10:23,090 line:-1
In ShazamKit, the object


222
00:10:23.123 --> 00:10:26.326 line:-2 align:center
that represents this information
is called a media item.


223
00:10:26,360 --> 00:10:28,529 line:-2
For signatures
that have just been matched,


224
00:10:28.562 --> 00:10:30.898 line:-2 align:center
you are also returned
extra information,


225
00:10:30.931 --> 00:10:33.867 line:-2 align:center
such as whereabouts in the audio
the match occurred


226
00:10:33,901 --> 00:10:35,869 line:-1
and any difference in frequency


227
00:10:35.903 --> 00:10:38.205 line:-2 align:center
between the matched
and original audio.


228
00:10:38.238 --> 00:10:40.207 line:-2 align:center
This is called
a matched media item


229
00:10:40.240 --> 00:10:43.277 line:-1 align:center
and is a subclass of media item.


230
00:10:43.310 --> 00:10:47.014 line:-2 align:center
In the previous code example,
I set the session delegate.


231
00:10:47,047 --> 00:10:50,083 line:-2
When performing a match,
we can rely on it to inform us


232
00:10:50.117 --> 00:10:53.554 line:-2 align:center
of success, no match,
or an error.


233
00:10:53.587 --> 00:10:57.491 line:-2 align:center
It is possible for a signature
to match multiple tracks.


234
00:10:57,524 --> 00:11:01,461 line:-2
These are represented as
an array of matched media items.


235
00:11:01.495 --> 00:11:04.731 line:-2 align:center
In our app code,
we will take the first one.


236
00:11:04.765 --> 00:11:09.369 line:-2 align:center
Now we can start setting some
of the properties returned.


237
00:11:09,403 --> 00:11:13,874 line:-2
The album art was fetched
using the artworkURL property.


238
00:11:13.907 --> 00:11:17.044 line:-2 align:center
The name of the song and
the performer were populated


239
00:11:17,077 --> 00:11:19,947 line:-2
from the title
and artist properties.


240
00:11:19.980 --> 00:11:23.250 line:-2 align:center
As the song matched is available
in the Apple Music catalog,


241
00:11:23.283 --> 00:11:24.918 line:-2 align:center
and its details are
being displayed,


242
00:11:24,952 --> 00:11:27,387 line:-2
attribution needs to be given
as set out


243
00:11:27,421 --> 00:11:29,690 line:-2
in the Apple Music
Identity Guidelines.


244
00:11:29.723 --> 00:11:31.992 line:-2 align:center
In the app, we've added
a button that launches


245
00:11:32,025 --> 00:11:35,295 line:-2
the Apple Music URL
returned by the media item.


246
00:11:35,329 --> 00:11:38,465 line:-2
A customer that has
recognized a song in your app


247
00:11:38.498 --> 00:11:41.468 line:-2 align:center
may wish to save this
in their Shazam library.


248
00:11:41,502 --> 00:11:44,771 line:-2
The Shazam library is accessible
from the Shazam app


249
00:11:44.805 --> 00:11:46.773 line:-2 align:center
if installed,
or by long-pressing


250
00:11:46.807 --> 00:11:49.643 line:-2 align:center
on the Music Recognition
Control Center module,


251
00:11:49.676 --> 00:11:52.346 line:-1 align:center
and it is synced across devices.


252
00:11:52.379 --> 00:11:54.014 line:-1 align:center
Let's try this out.


253
00:11:54.047 --> 00:11:56.083 line:-1 align:center
First, I'm going to long press


254
00:11:56.116 --> 00:11:59.253 line:-2 align:center
on the Music Recognition
Control Center module.


255
00:11:59,286 --> 00:12:02,422 line:-2
It shows that I've already
got a few songs in there.


256
00:12:02,456 --> 00:12:05,692 line:-2
Next, I'll tap the plus button
in the app


257
00:12:05.726 --> 00:12:09.563 line:-2 align:center
to add the matched song
to that list.


258
00:12:09.596 --> 00:12:13.901 line:-2 align:center
Now I'll reopen my library
and check it's been added.


259
00:12:13,934 --> 00:12:17,037 line:-2
Great, it's in there,
and the name of my app shows up


260
00:12:17,070 --> 00:12:19,806 line:-1
as the source of the match.


261
00:12:19.840 --> 00:12:22.209 line:-2 align:center
And here's
what the code looks like.


262
00:12:22.242 --> 00:12:25.412 line:-2 align:center
SHMediaLibrary
offers a default instance


263
00:12:25,445 --> 00:12:28,115 line:-2
that corresponds
to a customer's Shazam library.


264
00:12:28,148 --> 00:12:31,385 line:-2
This is stored end-to-end
encrypted and is only available


265
00:12:31.418 --> 00:12:34.688 line:-2 align:center
on devices that have enabled
two-factor authentication.


266
00:12:34.721 --> 00:12:37.457 line:-2 align:center
The library only accepts items
that correspond


267
00:12:37,491 --> 00:12:39,826 line:-1
to a song in the Shazam catalog.


268
00:12:39.860 --> 00:12:42.129 line:-2 align:center
There is no special permission
required to write


269
00:12:42,162 --> 00:12:44,498 line:-2
to the Shazam library,
but we strongly recommend


270
00:12:44,531 --> 00:12:48,001 line:-2
you avoid storing content in it
without making customers aware.


271
00:12:48.035 --> 00:12:51.338 line:-2 align:center
All songs saved in
the library will be attributed


272
00:12:51.371 --> 00:12:54.041 line:-1 align:center
to the app that added them.


273
00:12:54,074 --> 00:12:55,809 line:-2
There are many
more properties exposed


274
00:12:55.843 --> 00:12:57.845 line:-2 align:center
on the MediaItem
that we've made available


275
00:12:57.878 --> 00:13:00.214 line:-2 align:center
for you to explore,
such as matchOffset,


276
00:13:00,247 --> 00:13:04,318 line:-2
which shows whereabouts
in the song a match was made.


277
00:13:04,351 --> 00:13:06,987 line:-2
In addition,
the new MusicKit framework


278
00:13:07.020 --> 00:13:10.023 line:-2 align:center
provides strongly typed objects
describing a song


279
00:13:10,057 --> 00:13:11,625 line:-1
and its relationships.


280
00:13:11.658 --> 00:13:13.460 line:-2 align:center
We've made this available
to you in Swift


281
00:13:13.493 --> 00:13:15.162 line:-1 align:center
as the Songs property.


282
00:13:15.195 --> 00:13:16.630 line:-2 align:center
For more details,
you can check out


283
00:13:16,663 --> 00:13:20,167 line:-2
the "Meet MusicKit for Swift"
session.


284
00:13:20.200 --> 00:13:22.836 line:-2 align:center
So now we have
the complete picture.


285
00:13:22,870 --> 00:13:25,038 line:-2
We sent an audio signature
to match


286
00:13:25,072 --> 00:13:27,508 line:-2
against the Shazam catalog
using a session


287
00:13:27.541 --> 00:13:30.010 line:-1 align:center
to manage that process.


288
00:13:30,043 --> 00:13:32,713 line:-2
The session then
returned song information


289
00:13:32.746 --> 00:13:35.916 line:-2 align:center
in the form of a matched
media item via its delegate.


290
00:13:35.949 --> 00:13:38.986 line:-2 align:center
We also offered a customer
of our app the option


291
00:13:39,019 --> 00:13:41,722 line:-2
to add it
to their Shazam library.


292
00:13:41,755 --> 00:13:43,657 line:-1
Now I'll hand back to Marl,


293
00:13:43.690 --> 00:13:45.859 line:-2 align:center
who'll take you
through some best practices.


294
00:13:45,893 --> 00:13:47,594 line:-1
Over to you, Marl.


295
00:13:47,628 --> 00:13:49,162 line:-2
[Marl]
Thank you, James.


296
00:13:49,196 --> 00:13:52,299 line:-2
Now that you know what
ShazamKit is, how it works,


297
00:13:52,332 --> 00:13:55,369 line:-2
and how to apply it,
you're ready to start building.


298
00:13:55,402 --> 00:13:58,272 line:-2
As you get started
implementing with ShazamKit,


299
00:13:58.305 --> 00:14:00.908 line:-1 align:center
consider these best practices.


300
00:14:00.941 --> 00:14:04.244 line:-2 align:center
First, if you're matching
against real-time audio,


301
00:14:04,278 --> 00:14:08,382 line:-2
say, from a microphone,
then use matchStreamingBuffer.


302
00:14:08,415 --> 00:14:11,652 line:-2
It's simpler and handles lots
of the underlying logic


303
00:14:11.685 --> 00:14:14.188 line:-2 align:center
for generating
well-scoped signatures.


304
00:14:14,221 --> 00:14:17,324 line:-2
Next, if your use case
requires the microphone,


305
00:14:17.357 --> 00:14:20.360 line:-2 align:center
stop recording as soon
as you have the result you need.


306
00:14:20,394 --> 00:14:23,964 line:-2
That way, you'll avoid consuming
unnecessary resources


307
00:14:23,997 --> 00:14:27,634 line:-2
or launching the microphone for
longer than customers intend.


308
00:14:27,668 --> 00:14:31,004 line:-2
Finally, before writing
to a customer's library,


309
00:14:31,038 --> 00:14:34,041 line:-2
we strongly recommend providing
the option for the customer


310
00:14:34.074 --> 00:14:37.377 line:-2 align:center
to opt in and clarifying this
behavior right from the start.


311
00:14:37.411 --> 00:14:39.813 line:-2 align:center
I hope you enjoyed
getting to know ShazamKit.


312
00:14:39,847 --> 00:14:42,082 line:-2
We can't wait to see
the magical experiences


313
00:14:42,115 --> 00:14:44,017 line:-1
and features you create.


314
00:14:44.051 --> 00:14:46.320 line:-2 align:center
All of the information
we discussed and links


315
00:14:46,353 --> 00:14:48,956 line:-2
to documentation
are attached to this session,


316
00:14:48,989 --> 00:14:50,958 line:-1
so you're ready to get going.


317
00:14:50.991 --> 00:14:52.759 line:-2 align:center
And don't forget
to try the code-along


318
00:14:52.793 --> 00:14:54.962 line:-1 align:center
with custom catalog recognition.


319
00:14:54.995 --> 00:14:59.533 line:-2 align:center
Thanks for joining.
Enjoy the rest of WWDC21.


320
00:14:59,566 --> 00:15:01,668 line:-1
[music]

