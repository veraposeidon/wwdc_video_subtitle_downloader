2
00:00:02,069 --> 00:00:07,074 line:-1
[music]


3
00:00:08.742 --> 00:00:11.144 line:-2 align:center
[Christopher]
Welcome to WWDC.


4
00:00:11,178 --> 00:00:12,713 line:-1
I'm Christopher Skogen,


5
00:00:12.746 --> 00:00:14.948 line:-2 align:center
an engineer
on the Screen Time team,


6
00:00:14,982 --> 00:00:18,552 line:-2
and I'm here to talk to you
about the new Screen Time API.


7
00:00:18.585 --> 00:00:20.287 line:-1 align:center
It's been three years


8
00:00:20,320 --> 00:00:23,390 line:-2
since Apple introduced
Screen Time for iOS.


9
00:00:23.423 --> 00:00:26.193 line:-2 align:center
And it has been a giant step
forward


10
00:00:26,226 --> 00:00:29,730 line:-2
for improving our customers'
and families' relationships


11
00:00:29.763 --> 00:00:31.331 line:-1 align:center
with their devices.


12
00:00:31,365 --> 00:00:33,567 line:-1
Over the last three years,


13
00:00:33,600 --> 00:00:36,136 line:-2
Screen Time
brought some great new abilities


14
00:00:36,170 --> 00:00:38,939 line:-1
to iPhone, iPad, and Mac.


15
00:00:38.972 --> 00:00:42.309 line:-2 align:center
Screen Time helps you
keep track of how often you


16
00:00:42,342 --> 00:00:44,545 line:-2
and your family
use apps and websites,


17
00:00:44,578 --> 00:00:49,416 line:-2
manage time by setting limits,
share usage with family members


18
00:00:49.449 --> 00:00:52.920 line:-2 align:center
to provide a view of how
your devices are being used,


19
00:00:52.953 --> 00:00:55.022 line:-1 align:center
and finally, you can also manage


20
00:00:55.055 --> 00:00:58.192 line:-2 align:center
who your children
communicate with and more.


21
00:00:58,225 --> 00:01:00,594 line:-2
We've also heard from many
of you that you'd like


22
00:01:00.627 --> 00:01:02.596 line:-2 align:center
to leverage some
of these capabilities


23
00:01:02.629 --> 00:01:05.098 line:-2 align:center
in your own
parental controls apps.


24
00:01:05.132 --> 00:01:08.802 line:-2 align:center
So we've created
the Screen Time API.


25
00:01:08,836 --> 00:01:12,272 line:-2
It brings the core Screen Time
functionality to your apps


26
00:01:12.306 --> 00:01:16.610 line:-2 align:center
so you can create dynamic new
experiences for your customers.


27
00:01:16.643 --> 00:01:22.616 line:-2 align:center
First off, the API will be
available on iOS and iPadOS 15.


28
00:01:22.649 --> 00:01:27.120 line:-2 align:center
It is 100% Swift
and SwiftUI code


29
00:01:27.154 --> 00:01:31.558 line:-2 align:center
for easy integration into
your modern Swift applications.


30
00:01:31,592 --> 00:01:34,328 line:-2
The Screen Time API
was designed and built


31
00:01:34.361 --> 00:01:36.930 line:-1 align:center
with three guiding principles.


32
00:01:36.964 --> 00:01:40.934 line:-2 align:center
First, provide a modern,
on-device framework


33
00:01:40.968 --> 00:01:45.372 line:-2 align:center
for direct API access
to existing restrictions.


34
00:01:45,405 --> 00:01:50,344 line:-2
Our second guiding principle
was to protect user privacy.


35
00:01:50.377 --> 00:01:51.845 line:-1 align:center
Since Screen Time handles


36
00:01:51.879 --> 00:01:54.181 line:-2 align:center
some very sensitive personal
information


37
00:01:54.214 --> 00:01:57.951 line:-2 align:center
such as apps you've used
or web sites you've visited,


38
00:01:57,985 --> 00:02:02,022 line:-2
Screen Time has always taken
a very privacy-centric approach.


39
00:02:02.055 --> 00:02:05.058 line:-2 align:center
For instance,
there is no way for anyone


40
00:02:05.092 --> 00:02:07.861 line:-2 align:center
outside of your family
or even Apple


41
00:02:07,895 --> 00:02:12,266 line:-2
to know which sites you've
visited or what apps you use.


42
00:02:12.299 --> 00:02:15.002 line:-2 align:center
For the new API,
we continued this approach


43
00:02:15.035 --> 00:02:17.938 line:-2 align:center
to privacy,
and your customers' usage data


44
00:02:17.971 --> 00:02:21.175 line:-2 align:center
will be invisible
outside of their device.


45
00:02:21.208 --> 00:02:25.012 line:-2 align:center
And finally,
our third guiding principle was


46
00:02:25.045 --> 00:02:27.781 line:-2 align:center
to ensure that you,
the developers,


47
00:02:27,814 --> 00:02:33,554 line:-2
can create fantastic new dynamic
parental controls experiences.


48
00:02:33.587 --> 00:02:36.790 line:-2 align:center
It's no coincidence that
our three guiding principles


49
00:02:36.823 --> 00:02:39.593 line:-2 align:center
led us to create
three new frameworks.


50
00:02:39.626 --> 00:02:41.929 line:-2 align:center
The three frameworks,
taken together,


51
00:02:41,962 --> 00:02:44,932 line:-1
comprise the Screen Time API.


52
00:02:44,965 --> 00:02:47,634 line:-1
First, Managed Settings.


53
00:02:47.668 --> 00:02:51.104 line:-2 align:center
Managed Settings gives
your app direct access


54
00:02:51,138 --> 00:02:54,508 line:-2
to the same restrictions
available in Screen Time.


55
00:02:54,541 --> 00:02:56,944 line:-1
Second, Family Controls.


56
00:02:56.977 --> 00:03:01.114 line:-2 align:center
Family Controls
drives our privacy policy.


57
00:03:01,148 --> 00:03:04,218 line:-1
And finally, Device Activity.


58
00:03:04.251 --> 00:03:07.087 line:-2 align:center
Device Activity allows you
to go beyond Screen Time


59
00:03:07.120 --> 00:03:09.022 line:-2 align:center
by giving your app
great new abilities


60
00:03:09.056 --> 00:03:12.559 line:-2 align:center
to run code
without launching your app.


61
00:03:12.593 --> 00:03:16.630 line:-2 align:center
Let's take a closer look
at all three frameworks.


62
00:03:16.663 --> 00:03:19.433 line:-2 align:center
Let's start
with Managed Settings.


63
00:03:19,466 --> 00:03:22,870 line:-2
Your app needs a better way
to restrict what a child can do


64
00:03:22.903 --> 00:03:24.838 line:-1 align:center
with their devices and ensure


65
00:03:24.872 --> 00:03:26.907 line:-2 align:center
that those restrictions remain
in place


66
00:03:26.940 --> 00:03:30.611 line:-2 align:center
until the parent
or guardian says otherwise.


67
00:03:30,644 --> 00:03:33,313 line:-2
With Managed Settings,
your app can set a number


68
00:03:33,347 --> 00:03:36,617 line:-2
of restrictions,
like locking accounts in place,


69
00:03:36,650 --> 00:03:40,387 line:-2
or preventing a password change,
filter web traffic,


70
00:03:40.420 --> 00:03:44.658 line:-2 align:center
or shield applications,
much like Screen Time does,


71
00:03:44.691 --> 00:03:49.730 line:-2 align:center
but customized with your app's
branding and functionality.


72
00:03:49.763 --> 00:03:52.633 line:-1 align:center
Next is Family Controls.


73
00:03:52,666 --> 00:03:56,803 line:-2
By leveraging Family Sharing,
Family Controls prevents access


74
00:03:56,837 --> 00:04:01,275 line:-2
to the Screen Time API
without guardian approval.


75
00:04:01.308 --> 00:04:04.344 line:-2 align:center
Once your app has been approved
by the guardian,


76
00:04:04.378 --> 00:04:06.413 line:-2 align:center
it cannot be removed
from the device


77
00:04:06,446 --> 00:04:08,482 line:-1
without guardian approval.


78
00:04:08,515 --> 00:04:11,985 line:-2
Additionally, Family Controls
provides opaque tokens


79
00:04:12,019 --> 00:04:14,254 line:-2
that represent apps
and websites.


80
00:04:14.288 --> 00:04:17.357 line:-2 align:center
These tokens are used
throughout the Screen Time API


81
00:04:17.391 --> 00:04:21.628 line:-2 align:center
to monitor or restrict usage
and ensure that no one


82
00:04:21.662 --> 00:04:23.997 line:-2 align:center
outside of a single
Family Sharing group


83
00:04:24.031 --> 00:04:27.301 line:-2 align:center
will know what apps
and websites are being used.


84
00:04:27.334 --> 00:04:30.103 line:-1 align:center
And finally, Device Activity.


85
00:04:30,137 --> 00:04:32,906 line:-2
This framework allows
you to go beyond Screen Time


86
00:04:32,940 --> 00:04:37,211 line:-2
by giving your app new ways
to monitor web and app usage


87
00:04:37.244 --> 00:04:39.713 line:-2 align:center
and execute your code
when needed.


88
00:04:39.746 --> 00:04:42.282 line:-2 align:center
Because your app is
a parental control app,


89
00:04:42,316 --> 00:04:44,718 line:-2
it is very unlikely
that a child will have a reason


90
00:04:44,751 --> 00:04:46,453 line:-1
to run your app on their device.


91
00:04:46.486 --> 00:04:50.290 line:-2 align:center
So how do you execute your code
to set restrictions?


92
00:04:50.324 --> 00:04:55.362 line:-2 align:center
The answer is Device Activity
schedules and events.


93
00:04:55.395 --> 00:04:58.699 line:-2 align:center
Device Activity schedules are
time windows


94
00:04:58.732 --> 00:05:02.135 line:-2 align:center
that call an extension
in your application


95
00:05:02,169 --> 00:05:05,339 line:-2
at the start and end
of the time window.


96
00:05:05,372 --> 00:05:08,876 line:-2
Events are usage monitors
that call your extension


97
00:05:08,909 --> 00:05:13,113 line:-2
when the user on the device
reaches a usage threshold


98
00:05:13.146 --> 00:05:15.816 line:-1 align:center
in a Device Activity schedule.


99
00:05:15,849 --> 00:05:18,719 line:-2
Your app simply declares
what type of usage


100
00:05:18,752 --> 00:05:21,488 line:-2
it cares about
and when it cares.


101
00:05:21.522 --> 00:05:26.059 line:-2 align:center
Combining all three frameworks
together looks like this.


102
00:05:26.093 --> 00:05:28.195 line:-1 align:center
After your app is installed


103
00:05:28.228 --> 00:05:30.864 line:-2 align:center
on both the guardian's
and the child's devices,


104
00:05:30.898 --> 00:05:34.168 line:-2 align:center
the guardian opens the app
on the child's device.


105
00:05:34.201 --> 00:05:37.271 line:-2 align:center
Your app authorizes
with Family Controls.


106
00:05:37.304 --> 00:05:41.308 line:-2 align:center
Later, your app
on the guardian's device


107
00:05:41.341 --> 00:05:44.578 line:-2 align:center
chooses settings,
restrictions, and rules.


108
00:05:44,611 --> 00:05:48,949 line:-2
Your app sends that information
to the child's device.


109
00:05:48,982 --> 00:05:50,851 line:-1
And then on the child's device,


110
00:05:50,884 --> 00:05:54,688 line:-2
your app creates Schedules
and Events with Device Activity.


111
00:05:54,721 --> 00:05:57,624 line:-2
The Device Activity extension
in your app gets called


112
00:05:57.658 --> 00:06:01.161 line:-2 align:center
when the schedule occurs
or the events happen.


113
00:06:01.195 --> 00:06:02.863 line:-1 align:center
From the extension,


114
00:06:02,896 --> 00:06:05,632 line:-2
set restrictions
with Managed Settings.


115
00:06:05,666 --> 00:06:09,036 line:-2
This is a good time
to introduce Nolan.


116
00:06:09.069 --> 00:06:12.773 line:-2 align:center
Nolan is working on a great new
demo app, Homework,


117
00:06:12.806 --> 00:06:14.875 line:-2 align:center
and he'll walk you
through how Homework


118
00:06:14,908 --> 00:06:17,144 line:-1
uses the Screen Time API.


119
00:06:17,177 --> 00:06:18,879 line:-2
[Nolan]
Hi, I'm Nolan,


120
00:06:18,912 --> 00:06:20,714 line:-2
an engineer
on the Screen Time team.


121
00:06:20,747 --> 00:06:23,317 line:-2
I'd like to introduce you
to my demo app, Homework.


122
00:06:23.350 --> 00:06:25.385 line:-1 align:center
Homework encourages good habits


123
00:06:25.419 --> 00:06:27.821 line:-2 align:center
by restricting a child's access
to certain apps


124
00:06:27,855 --> 00:06:29,556 line:-1
until they accumulate usage


125
00:06:29.590 --> 00:06:32.059 line:-2 align:center
in other apps
the guardian wants them to use.


126
00:06:32,092 --> 00:06:34,127 line:-1
To make Homework functional,


127
00:06:34.161 --> 00:06:35.829 line:-2 align:center
I'm gonna
use all three frameworks


128
00:06:35,863 --> 00:06:37,564 line:-1
in the Screen Time API.


129
00:06:37.598 --> 00:06:39.933 line:-2 align:center
First, I'll walk you
through requesting authorization


130
00:06:39,967 --> 00:06:41,435 line:-1
for Family Controls.


131
00:06:41.468 --> 00:06:43.804 line:-2 align:center
Next up,
I'll shield the discouraged apps


132
00:06:43,837 --> 00:06:46,907 line:-2
selected by the guardian
on a reoccurring schedule.


133
00:06:46,940 --> 00:06:49,443 line:-2
Then I'll show you
how to remove those shields


134
00:06:49,476 --> 00:06:52,179 line:-2
after accumulating enough
encouraged app usage.


135
00:06:52,212 --> 00:06:55,449 line:-2
Finally, I'll customize
the shields used by Homework


136
00:06:55,482 --> 00:06:58,519 line:-2
to fit the app's branding
and functionality.


137
00:06:58,552 --> 00:07:00,420 line:-2
I'll start
with the project setup


138
00:07:00,454 --> 00:07:03,056 line:-1
and authorizing Family Controls.


139
00:07:03,090 --> 00:07:05,292 line:-2
In order to set up
my Xcode project


140
00:07:05,325 --> 00:07:07,461 line:-2
to include
Family Controls capability,


141
00:07:07.494 --> 00:07:10.931 line:-2 align:center
I'll go to the Project editor,
select the app target,


142
00:07:10.964 --> 00:07:12.866 line:-2 align:center
and under
Signing and Capabilities,


143
00:07:12.900 --> 00:07:14.301 line:-1 align:center
click the plus button.


144
00:07:14.334 --> 00:07:17.371 line:-2 align:center
I'll search for Family Controls
to find the capability


145
00:07:17.404 --> 00:07:19.139 line:-1 align:center
and add it to my project.


146
00:07:19.173 --> 00:07:22.776 line:-2 align:center
Now that the capability has
been added, I'm ready to code.


147
00:07:22,809 --> 00:07:26,580 line:-2
The first thing Homework needs
to do is request authorization


148
00:07:26.613 --> 00:07:28.048 line:-1 align:center
for Family Controls.


149
00:07:28.081 --> 00:07:30.284 line:-2 align:center
I'll use the shared
authorization center


150
00:07:30.317 --> 00:07:32.920 line:-2 align:center
in the Family Controls framework
to make this request


151
00:07:32.953 --> 00:07:34.354 line:-1 align:center
when my app launches.


152
00:07:34.388 --> 00:07:37.958 line:-2 align:center
The request can either result
in success or failure.


153
00:07:37.991 --> 00:07:40.260 line:-2 align:center
Calling this function will
require a guardian


154
00:07:40,294 --> 00:07:43,730 line:-2
in the family to approve
Family Controls for Homework.


155
00:07:43,764 --> 00:07:46,466 line:-2
Since my app has never
run on this iPhone before,


156
00:07:46.500 --> 00:07:48.602 line:-1 align:center
requestAuthorization will ask


157
00:07:48,635 --> 00:07:50,938 line:-2
for a guardian's approval
with an alert.


158
00:07:50.971 --> 00:07:54.274 line:-2 align:center
Tapping on Allow will
then prompt the guardian


159
00:07:54.308 --> 00:07:55.843 line:-2 align:center
to authenticate
with their Apple ID


160
00:07:55.876 --> 00:07:57.277 line:-1 align:center
and password to continue.


161
00:07:57.311 --> 00:07:59.980 line:-2 align:center
Once a guardian has
successfully authenticated,


162
00:08:00,013 --> 00:08:02,749 line:-2
calling requestAuthorization
will not prompt


163
00:08:02,783 --> 00:08:06,453 line:-2
with an alert again but instead
silently return success.


164
00:08:06,486 --> 00:08:09,423 line:-2
To prevent misuse,
requestAuthorization


165
00:08:09,456 --> 00:08:11,792 line:-2
will return failure
if the signed-in iCloud is


166
00:08:11.825 --> 00:08:14.228 line:-2 align:center
is not a child
using Family Sharing.


167
00:08:14,261 --> 00:08:16,496 line:-2
It's just that easy
to get your app ready


168
00:08:16.530 --> 00:08:18.765 line:-1 align:center
to use the Screen Time API.


169
00:08:18,799 --> 00:08:20,701 line:-2
[Christopher]
Thanks, Nolan.


170
00:08:20.734 --> 00:08:23.136 line:-2 align:center
We just saw our demo app,
Homework,


171
00:08:23.170 --> 00:08:25.539 line:-2 align:center
authorizing
with Family Controls.


172
00:08:25,572 --> 00:08:28,308 line:-2
Authorizing
with Family Controls also


173
00:08:28.342 --> 00:08:30.878 line:-2 align:center
grants other
magic powers to your app.


174
00:08:30,911 --> 00:08:34,281 line:-2
For instance,
once the device is authorized,


175
00:08:34,314 --> 00:08:37,150 line:-2
the user can no longer
sign out of iCloud.


176
00:08:37,184 --> 00:08:40,621 line:-2
Also,
on-device web content filters


177
00:08:40,654 --> 00:08:43,323 line:-2
built with
the Network Extensions framework


178
00:08:43,357 --> 00:08:47,060 line:-2
can be included in your app and
will be installed automatically


179
00:08:47.094 --> 00:08:49.029 line:-1 align:center
and cannot be removed.


180
00:08:49.062 --> 00:08:52.199 line:-2 align:center
This gives your app the ability
to filter web traffic


181
00:08:52,232 --> 00:08:54,334 line:-1
on the device.


182
00:08:54.368 --> 00:08:57.638 line:-2 align:center
One of the challenges in
writing a parental controls app


183
00:08:57,671 --> 00:09:01,008 line:-2
is getting your code
to run on the child's device


184
00:09:01.041 --> 00:09:04.044 line:-2 align:center
when the child will
likely never run your app.


185
00:09:04.077 --> 00:09:05.846 line:-1 align:center
For the Screen Time API,


186
00:09:05,879 --> 00:09:09,550 line:-2
we created a new way to perform
background code execution


187
00:09:09.583 --> 00:09:11.952 line:-1 align:center
with Device Activity.


188
00:09:11.985 --> 00:09:15.222 line:-2 align:center
A Device Activity extension
will be your primary way


189
00:09:15.255 --> 00:09:18.392 line:-2 align:center
to interact with the rest
of the Screen Time API.


190
00:09:18.425 --> 00:09:22.196 line:-2 align:center
Let's go back to Nolan to see
how Homework can run code


191
00:09:22.229 --> 00:09:25.699 line:-2 align:center
on a repeating schedule
to restrict a child's device


192
00:09:25,732 --> 00:09:29,369 line:-2
by placing a Screen Time shield
over some apps.


193
00:09:29.403 --> 00:09:31.038 line:-1 align:center
Nolan.


194
00:09:31.071 --> 00:09:32.806 line:-2 align:center
[Nolan]
Thanks, Chris.


195
00:09:32.840 --> 00:09:34.842 line:-2 align:center
Next up with Homework
is shielding the apps


196
00:09:34.875 --> 00:09:36.743 line:-2 align:center
the guardian has chosen
to discourage


197
00:09:36.777 --> 00:09:38.378 line:-1 align:center
on a reoccurring schedule.


198
00:09:38.412 --> 00:09:40.414 line:-2 align:center
Since I cannot count
on my app to be running


199
00:09:40,447 --> 00:09:41,582 line:-1
on the child's device,


200
00:09:41,615 --> 00:09:43,617 line:-2
I will use
a Device Activity Schedule


201
00:09:43,650 --> 00:09:46,587 line:-2
to set the application shield
restriction every day,


202
00:09:46.620 --> 00:09:48.255 line:-1 align:center
even when Homework hasn't run


203
00:09:48,288 --> 00:09:50,123 line:-2
since being setup
by the guardian.


204
00:09:50,157 --> 00:09:52,860 line:-2
When my Device Activity Schedule
fires,


205
00:09:52.893 --> 00:09:55.662 line:-2 align:center
Device Activity will call
into a new extension point.


206
00:09:55.696 --> 00:09:57.397 line:-2 align:center
Homework will
include an extension


207
00:09:57.431 --> 00:09:58.498 line:-1 align:center
for this extension point


208
00:09:58.532 --> 00:10:01.235 line:-2 align:center
where I will set the restriction
to shield apps.


209
00:10:01.268 --> 00:10:04.037 line:-2 align:center
Implementing an extension
for this extension point


210
00:10:04,071 --> 00:10:06,707 line:-2
requires you to subclass
DeviceActivityMonitor


211
00:10:06.740 --> 00:10:08.041 line:-1 align:center
as the principle class.


212
00:10:08,075 --> 00:10:09,843 line:-2
Here,
I've overridden two methods


213
00:10:09,877 --> 00:10:11,578 line:-2
in my extension's
principle class:


214
00:10:11.612 --> 00:10:14.147 line:-2 align:center
intervalDidStart
and intervalDidEnd.


215
00:10:14.181 --> 00:10:16.750 line:-2 align:center
These functions will be
called the first time the device


216
00:10:16,783 --> 00:10:19,486 line:-2
is used after the start
and end of my schedule.


217
00:10:19.520 --> 00:10:21.088 line:-2 align:center
I'm going to leave
the implementation


218
00:10:21,121 --> 00:10:23,290 line:-2
of these functions empty
until I've configured


219
00:10:23.323 --> 00:10:26.860 line:-2 align:center
my Device Activity schedule
from Homework's main app.


220
00:10:26,894 --> 00:10:29,129 line:-2
Now that
my Device Activity monitor


221
00:10:29,162 --> 00:10:31,265 line:-2
extension is set up
from the main app,


222
00:10:31.298 --> 00:10:33.267 line:-2 align:center
I need to create
a Device Activity name


223
00:10:33,300 --> 00:10:35,102 line:-1
and a Device Activity schedule.


224
00:10:35.135 --> 00:10:37.371 line:-2 align:center
The Device Activity name
is how I can reference


225
00:10:37.404 --> 00:10:39.473 line:-2 align:center
the activity
from within my extension.


226
00:10:39,506 --> 00:10:42,743 line:-2
And the Device Activity schedule
represents the time bounds


227
00:10:42.776 --> 00:10:45.479 line:-2 align:center
in which my extension
will monitor for activity.


228
00:10:45,512 --> 00:10:48,148 line:-2
Here I've set the name
of my activity to "daily,"


229
00:10:48,182 --> 00:10:50,984 line:-2
and I've set my schedule
to start and end at midnight.


230
00:10:51.018 --> 00:10:53.654 line:-2 align:center
I will also set
this schedule to repeat.


231
00:10:53.687 --> 00:10:56.423 line:-2 align:center
Finally, I can create
a Device Activity center


232
00:10:56,456 --> 00:10:58,992 line:-2
and call startMonitoring
with the activity name


233
00:10:59.026 --> 00:11:00.928 line:-1 align:center
and schedule I've just defined.


234
00:11:00,961 --> 00:11:04,097 line:-2
With these few lines of code,
my Device Activity monitor


235
00:11:04,131 --> 00:11:06,500 line:-2
extension will be called
with the activity name


236
00:11:06,533 --> 00:11:09,002 line:-2
whenever
the schedule starts and ends.


237
00:11:09.036 --> 00:11:11.405 line:-2 align:center
Another ingredient
to shielding apps


238
00:11:11,438 --> 00:11:13,941 line:-2
is figuring out what the
guardian wants to discourage.


239
00:11:13,974 --> 00:11:16,910 line:-2
The Family Controls framework
has a SwiftUI element


240
00:11:16.944 --> 00:11:19.613 line:-2 align:center
just for the job:
The family activity picker.


241
00:11:19.646 --> 00:11:21.481 line:-2 align:center
From the main app's UI,
I can show


242
00:11:21.515 --> 00:11:23.917 line:-2 align:center
the family activity picker
and allow the guardian


243
00:11:23.951 --> 00:11:26.119 line:-2 align:center
to choose from a list of apps,
websites,


244
00:11:26,153 --> 00:11:28,121 line:-2
and categories
used by the family.


245
00:11:28,155 --> 00:11:30,224 line:-2
Once the guardian has
made their selection,


246
00:11:30.257 --> 00:11:33.193 line:-2 align:center
Homework can use opaque
tokens returned by the picker


247
00:11:33,227 --> 00:11:35,195 line:-2
to set restrictions on apps,
websites,


248
00:11:35,229 --> 00:11:37,431 line:-2
and categories
each token represents.


249
00:11:37.464 --> 00:11:39.433 line:-2 align:center
Here, I've added
the familyActivityPicker


250
00:11:39,466 --> 00:11:41,502 line:-2
view modifier
to a Button in the app,


251
00:11:41,535 --> 00:11:43,804 line:-2
and I've bound the picker's
selection parameter


252
00:11:43.837 --> 00:11:45.739 line:-2 align:center
to a property
in the app's model.


253
00:11:45.772 --> 00:11:47.174 line:-1 align:center
This will update my model


254
00:11:47.207 --> 00:11:51.111 line:-2 align:center
whenever the guardian's
selection is updated in the UI.


255
00:11:51,144 --> 00:11:54,314 line:-2
Now that I have the guardian's
discouraged app selection stored


256
00:11:54,348 --> 00:11:56,350 line:-2
in my app's model,
I'll jump back


257
00:11:56.383 --> 00:11:58.986 line:-2 align:center
to the Device Activity Monitor
extension.


258
00:11:59.019 --> 00:12:02.789 line:-2 align:center
First, I'll drop in an import
for the Managed Settings module


259
00:12:02.823 --> 00:12:06.360 line:-2 align:center
to get access to the application
shield restriction.


260
00:12:06.393 --> 00:12:09.596 line:-2 align:center
Then in intervalDidStart,
I can pull the selection


261
00:12:09,630 --> 00:12:11,365 line:-2
out of the app's model
and configure


262
00:12:11.398 --> 00:12:14.902 line:-2 align:center
the application shield
restriction accordingly.


263
00:12:14.935 --> 00:12:18.138 line:-2 align:center
And in intervalDidEnd,
I can remove the restriction


264
00:12:18.172 --> 00:12:20.240 line:-1 align:center
by setting it to nil.


265
00:12:20.274 --> 00:12:22.142 line:-1 align:center
With these simple modifications,


266
00:12:22.176 --> 00:12:24.044 line:-2 align:center
Homework will shield
the guardian selected


267
00:12:24,077 --> 00:12:26,880 line:-2
discouraged apps every day
from midnight to midnight.


268
00:12:26.914 --> 00:12:28.482 line:-1 align:center
Back to you, Chris.


269
00:12:28,515 --> 00:12:30,617 line:-2
[Christopher]
Thanks, Nolan.


270
00:12:30.651 --> 00:12:33.187 line:-2 align:center
Shielding is not the only
restriction available


271
00:12:33,220 --> 00:12:34,621 line:-1
in Managed Settings.


272
00:12:34,655 --> 00:12:37,824 line:-2
We could also choose to set
any number of restrictions


273
00:12:37.858 --> 00:12:41.828 line:-2 align:center
at the beginning or end
of a Device Activity Schedule.


274
00:12:41,862 --> 00:12:44,631 line:-2
For instance,
your app could choose


275
00:12:44,665 --> 00:12:48,669 line:-2
to prevent account creation or
removal, completely block apps


276
00:12:48.702 --> 00:12:53.640 line:-2 align:center
and websites,
or deny media content by age.


277
00:12:53.674 --> 00:12:56.176 line:-1 align:center
Speaking of media restrictions,


278
00:12:56,210 --> 00:12:59,813 line:-2
Managed Settings also provides
an API that allows any app


279
00:12:59.847 --> 00:13:03.817 line:-2 align:center
to read the restrictions
for Movies and TV content.


280
00:13:03.851 --> 00:13:07.487 line:-2 align:center
No Family Controls
authorization is required.


281
00:13:07,521 --> 00:13:10,490 line:-2
These functions are ideal
for any media app


282
00:13:10.524 --> 00:13:13.393 line:-2 align:center
to check if a device should
be limiting the content


283
00:13:13.427 --> 00:13:15.062 line:-1 align:center
presented to the user.


284
00:13:15.095 --> 00:13:18.799 line:-2 align:center
In the Homework demo app,
the restrictions were set


285
00:13:18.832 --> 00:13:21.568 line:-2 align:center
at midnight every day,
but what if you want


286
00:13:21,602 --> 00:13:25,072 line:-2
to change restrictions
based upon app or web usage?


287
00:13:25.105 --> 00:13:27.608 line:-2 align:center
Device Activity has
another feature that will


288
00:13:27,641 --> 00:13:31,979 line:-2
allow your app to do just that:
Device Activity events.


289
00:13:32.012 --> 00:13:35.048 line:-2 align:center
These events are configured
with the same tokens you saw


290
00:13:35,082 --> 00:13:38,986 line:-2
from the family activity picker
and allow you to execute code


291
00:13:39,019 --> 00:13:40,988 line:-2
when the usage limits are
reached.


292
00:13:41.021 --> 00:13:44.691 line:-2 align:center
These events are registered
alongside the schedules


293
00:13:44,725 --> 00:13:47,261 line:-2
that Nolan showed us
in the last segment.


294
00:13:47.294 --> 00:13:51.932 line:-2 align:center
Now let's go check in with Nolan
and see how these events work.


295
00:13:51.965 --> 00:13:55.202 line:-2 align:center
[Nolan] I want to remove the
application shield restriction


296
00:13:55,235 --> 00:13:57,204 line:-2
not only when
Homework's schedule ends


297
00:13:57.237 --> 00:13:59.740 line:-2 align:center
but also when the child
accumulates enough usage


298
00:13:59,773 --> 00:14:02,643 line:-2
for a set of guardian-selected
encouraged apps.


299
00:14:02.676 --> 00:14:04.912 line:-2 align:center
To do that,
I'll need to monitor the usage


300
00:14:04.945 --> 00:14:07.881 line:-2 align:center
of these encouraged apps
by configuring Device Activity


301
00:14:07.915 --> 00:14:10.584 line:-2 align:center
to additionally call
into my Device Activity monitor


302
00:14:10,617 --> 00:14:13,153 line:-2
extension
when a usage threshold is met.


303
00:14:13,187 --> 00:14:16,323 line:-2
Here, I'll define
a Device Activity event name


304
00:14:16,356 --> 00:14:17,591 line:-1
to be "encouraged."


305
00:14:17.624 --> 00:14:19.526 line:-2 align:center
This name is
how I can reference the event


306
00:14:19,560 --> 00:14:21,528 line:-1
from within my extension.


307
00:14:21,562 --> 00:14:23,597 line:-2
And then I'll define
my encouraged event


308
00:14:23,630 --> 00:14:25,732 line:-2
to include the set
of guardian-selected


309
00:14:25,766 --> 00:14:28,735 line:-2
encouraged apps and
the threshold of usage desired.


310
00:14:28,769 --> 00:14:31,638 line:-2
Finally, I'll update
the call to startMonitoring


311
00:14:31,672 --> 00:14:35,475 line:-2
to included
the event I just defined.


312
00:14:35,509 --> 00:14:37,978 line:-2
Now that I am monitoring
for Device Activity events


313
00:14:38.011 --> 00:14:40.547 line:-2 align:center
from the main app,
my Device Activity monitor


314
00:14:40.581 --> 00:14:42.749 line:-2 align:center
extension is going
to be called whenever any


315
00:14:42,783 --> 00:14:46,053 line:-2
of those events meet
their usage threshold.


316
00:14:46.086 --> 00:14:48.755 line:-2 align:center
The function
eventDidReachThreshold


317
00:14:48.789 --> 00:14:51.291 line:-2 align:center
will be called with
the Device Activity Event Name


318
00:14:51,325 --> 00:14:54,962 line:-2
and the DeviceActivityName
to identify which event fired


319
00:14:54.995 --> 00:14:56.997 line:-1 align:center
for which scheduled activity.


320
00:14:57,030 --> 00:15:00,100 line:-2
In Homework, I want to set the
application shield restriction


321
00:15:00,133 --> 00:15:03,003 line:-2
to nil when the extension
gets notified for this event.


322
00:15:03.036 --> 00:15:06.139 line:-2 align:center
Setting this restriction
to nil will remove the shield


323
00:15:06.173 --> 00:15:08.242 line:-2 align:center
from any of the
previously shielded apps.


324
00:15:08.275 --> 00:15:09.710 line:-1 align:center
Back to Chris.


325
00:15:09.743 --> 00:15:11.612 line:-2 align:center
[Christopher]
In the previous section,


326
00:15:11.645 --> 00:15:13.480 line:-2 align:center
the discouraged apps were
shielded


327
00:15:13.514 --> 00:15:15.816 line:-2 align:center
with
a default Screen Time shield.


328
00:15:15.849 --> 00:15:18.151 line:-2 align:center
But you'll likely want
to get your own branding


329
00:15:18.185 --> 00:15:20.053 line:-1 align:center
and style in these shields.


330
00:15:20,087 --> 00:15:21,488 line:-2
You'll also probably
want to have


331
00:15:21,522 --> 00:15:24,725 line:-2
your own action handlers
for the shield's buttons.


332
00:15:24,758 --> 00:15:27,094 line:-1
We've got the tools for both.


333
00:15:27,127 --> 00:15:29,096 line:-1
Custom shields allow you


334
00:15:29.129 --> 00:15:33.400 line:-2 align:center
to create a unique
branded experience.


335
00:15:33,433 --> 00:15:35,536 line:-1
To customize the shields,


336
00:15:35.569 --> 00:15:38.272 line:-2 align:center
you'll need to implement
two new extension points


337
00:15:38.305 --> 00:15:40.941 line:-1 align:center
defined in Managed Settings.


338
00:15:40.974 --> 00:15:44.044 line:-2 align:center
One extension point
allows you to customize the look


339
00:15:44.077 --> 00:15:47.114 line:-2 align:center
of the shield
by changing background material,


340
00:15:47.147 --> 00:15:51.852 line:-2 align:center
titles, icon,
and appearance of the buttons.


341
00:15:51.885 --> 00:15:53.754 line:-1 align:center
And another extension point


342
00:15:53,787 --> 00:15:56,557 line:-2
allows you to create
custom button handlers.


343
00:15:56.590 --> 00:15:58.559 line:-1 align:center
Let's go back to Nolan


344
00:15:58.592 --> 00:16:02.062 line:-2 align:center
and see how you would
customize your shields.


345
00:16:02.095 --> 00:16:04.831 line:-2 align:center
[ Nolan] To configure the look
and feel of the custom shields


346
00:16:04,865 --> 00:16:06,400 line:-2
for Homework,
I need to start


347
00:16:06,433 --> 00:16:08,769 line:-2
by subclassing
ShieldConfigurationProvider


348
00:16:08,802 --> 00:16:10,838 line:-2
as the principle
class of the extension.


349
00:16:10.871 --> 00:16:12.706 line:-2 align:center
Configuration
is the only function


350
00:16:12,739 --> 00:16:14,308 line:-1
you'll need to override here.


351
00:16:14.341 --> 00:16:16.977 line:-2 align:center
This function is passed
a reference to the application


352
00:16:17,010 --> 00:16:18,612 line:-2
that is currently being
shielded,


353
00:16:18,645 --> 00:16:21,915 line:-2
and it is expected to return
a ShieldConfiguration struct.


354
00:16:21,949 --> 00:16:24,451 line:-2
The ShieldConfiguration struct
allows you


355
00:16:24.484 --> 00:16:27.387 line:-2 align:center
to define the background effect,
background color,


356
00:16:27.421 --> 00:16:30.691 line:-2 align:center
icon, title, subtitle,
primary button label,


357
00:16:30.724 --> 00:16:34.461 line:-2 align:center
primary button background color,
and secondary button label.


358
00:16:34,494 --> 00:16:37,064 line:-2
Wow,
that's a lot of customization.


359
00:16:37.097 --> 00:16:39.566 line:-2 align:center
Once this struct is configured
and returned by my


360
00:16:39.600 --> 00:16:41.869 line:-2 align:center
shield configuration provider
extension,


361
00:16:41.902 --> 00:16:44.171 line:-2 align:center
the operating system
will automatically display


362
00:16:44,204 --> 00:16:47,841 line:-2
these customizations over any
app shielded by Homework.


363
00:16:47.875 --> 00:16:50.244 line:-2 align:center
Now that we've
styled the shields,


364
00:16:50,277 --> 00:16:52,145 line:-2
I can use
the second extension point


365
00:16:52.179 --> 00:16:54.915 line:-2 align:center
in Managed Settings
to configure the action handlers


366
00:16:54,948 --> 00:16:57,384 line:-2
for the primary
and secondary buttons.


367
00:16:57.417 --> 00:16:59.753 line:-2 align:center
In this new extension,
I'll subclass


368
00:16:59.786 --> 00:17:02.556 line:-2 align:center
ShieldActionHandler
as the principle class


369
00:17:02,589 --> 00:17:05,225 line:-2
and override
the function handle.


370
00:17:05.259 --> 00:17:06.894 line:-1 align:center
The handle function is told


371
00:17:06,927 --> 00:17:08,929 line:-2
whether
the primary button action


372
00:17:08,962 --> 00:17:11,365 line:-2
or secondary button action
was pressed


373
00:17:11.398 --> 00:17:14.067 line:-2 align:center
and which application
is currently being shielded.


374
00:17:14,101 --> 00:17:16,870 line:-2
You are required to call the
function's completion handler


375
00:17:16,904 --> 00:17:19,306 line:-1
with a sshield action response.


376
00:17:19,339 --> 00:17:22,709 line:-2
The response can either be to
close the shielded application


377
00:17:22,743 --> 00:17:25,879 line:-2
or defer action and redraw
the shield configuration.


378
00:17:25,913 --> 00:17:29,049 line:-2
The ability to defer action
in the shield is very powerful


379
00:17:29.082 --> 00:17:30.951 line:-2 align:center
because it gives the shield
the chance to update


380
00:17:30,984 --> 00:17:34,354 line:-2
its appearance while it waits
for a signal on how to proceed.


381
00:17:34,388 --> 00:17:36,456 line:-2
For instance,
it can be used to indicate


382
00:17:36.490 --> 00:17:38.625 line:-2 align:center
that the shield is waiting
for a guardian's action


383
00:17:38,659 --> 00:17:41,828 line:-2
when the child taps
Ask for Access here.


384
00:17:41.862 --> 00:17:44.097 line:-2 align:center
With the addition
of these custom shields,


385
00:17:44.131 --> 00:17:46.567 line:-2 align:center
my demo app, Homework,
is complete.


386
00:17:46,600 --> 00:17:48,869 line:-2
The guardian
can choose apps to shield,


387
00:17:48.902 --> 00:17:51.405 line:-2 align:center
such as games or entertainment,
and remove the shield


388
00:17:51.438 --> 00:17:53.974 line:-2 align:center
once the child has done
enough positive screen time,


389
00:17:54.007 --> 00:17:56.243 line:-2 align:center
like reading, learning,
or being creative.


390
00:17:56.276 --> 00:17:57.377 line:-1 align:center
Thanks for joining me


391
00:17:57.411 --> 00:17:58.979 line:-2 align:center
in building
this awesome new demo app.


392
00:17:59.012 --> 00:18:00.280 line:-1 align:center
Now back to Chris.


393
00:18:00,314 --> 00:18:03,183 line:-2
[Christopher] Today we learned
how our three goals--


394
00:18:03,217 --> 00:18:06,119 line:-2
to provide restrictions,
protect privacy,


395
00:18:06.153 --> 00:18:08.722 line:-2 align:center
and enable new dynamic
experiences--


396
00:18:08.755 --> 00:18:10.924 line:-2 align:center
were delivered
with the three frameworks


397
00:18:10,958 --> 00:18:14,161 line:-2
that make up
the Screen Time API.


398
00:18:14.194 --> 00:18:16.230 line:-1 align:center
Managed Settings allows your app


399
00:18:16.263 --> 00:18:20.100 line:-2 align:center
to enforce settings
and restrictions.


400
00:18:20,133 --> 00:18:23,971 line:-2
Device Activity allows your app
to run code on a schedule


401
00:18:24.004 --> 00:18:29.710 line:-2 align:center
or on usage events even
when your app is not being used.


402
00:18:29,743 --> 00:18:33,847 line:-2
And finally, Family Controls,
which grants access


403
00:18:33.881 --> 00:18:36.483 line:-2 align:center
to Managed Settings
and Device Activity


404
00:18:36.517 --> 00:18:38.919 line:-2 align:center
and protects the privacy
of your users,


405
00:18:38.952 --> 00:18:41.755 line:-2 align:center
guaranteeing that only
the guardians will know


406
00:18:41,788 --> 00:18:44,558 line:-1
what the child is doing.


407
00:18:44,591 --> 00:18:47,494 line:-2
Like all frameworks,
the Screen Time API will


408
00:18:47.528 --> 00:18:51.031 line:-2 align:center
continue to evolve based
on feedback from you.


409
00:18:51.064 --> 00:18:54.801 line:-2 align:center
So give these a try
and let us know how they do


410
00:18:54.835 --> 00:18:58.472 line:-2 align:center
or don't support
your unique use cases.


411
00:18:58.505 --> 00:19:00.541 line:-1 align:center
Thanks for joining us today.


412
00:19:00.574 --> 00:19:03.477 line:-1 align:center
Enjoy WWDC 2021.


413
00:19:03,510 --> 00:19:05,612 line:-1
[music]

