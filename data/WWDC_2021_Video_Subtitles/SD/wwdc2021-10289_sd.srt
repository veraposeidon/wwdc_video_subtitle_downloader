2
00:00:00.000 --> 00:00:02.236 line:-1 position:50%
[MAC STARTUP CHIME]


3
00:00:02,236 --> 00:00:05,672 line:-1
♪ Bass music playing ♪


4
00:00:05.672 --> 00:00:07.875 line:-1 position:50%
[KEYSTROKES]


5
00:00:07,875 --> 00:00:09,710 line:0 size:2% align:right
♪


6
00:00:09.710 --> 00:00:12.479 line:-1 position:50%
Jeff Robertson: Welcome
to the second part of our talk


7
00:00:12.479 --> 00:00:16.083 line:-1 position:50%
on building a great Mac app
in SwiftUI.


8
00:00:16.083 --> 00:00:21.855 line:-1 position:50%
I'm Jeff, an engineer
on the SwiftUI team.


9
00:00:21,855 --> 00:00:24,391 line:0
I hope you enjoyed
the first part of this talk


10
00:00:24,391 --> 00:00:26,627 position:50%
by my colleague Mathieu.


11
00:00:26,627 --> 00:00:28,662 position:50%
If you have not yet watched
part one,


12
00:00:28,662 --> 00:00:30,864 line:0
please stop here and do so now,


13
00:00:30,864 --> 00:00:33,667 position:50%
as we will be building
on top of the changes


14
00:00:33,667 --> 00:00:36,904 line:0
that are discussed in that talk.


15
00:00:36.904 --> 00:00:39.139 line:-1 position:50%
Our gardening app
has come a long way


16
00:00:39,139 --> 00:00:41,842 line:-1
since the start
of Mathieu's talk.


17
00:00:41,842 --> 00:00:44,144 line:-1
SwiftUI enabled us
to build an app


18
00:00:44.144 --> 00:00:45.946 line:-1 position:50%
with quite a bit
of functionality


19
00:00:45.946 --> 00:00:48.715 line:-1 position:50%
in very little time.


20
00:00:48.715 --> 00:00:53.553 line:-1 position:50%
However, users tend to use
our apps in many different ways,


21
00:00:53,553 --> 00:00:58,058 line:-1
and a particularly great
macOS app will account for this.


22
00:00:58,058 --> 00:01:01,428 line:-1
With that in mind, let's take
a look at some of the ways


23
00:01:01.428 --> 00:01:03.463 line:-1 position:50%
that we can build an app
for everyone


24
00:01:03.463 --> 00:01:05.232 line:-1 position:50%
while still maintaining
the principles


25
00:01:05.232 --> 00:01:07.968 line:-1 position:50%
Mathieu outlined in part one.


26
00:01:07.968 --> 00:01:09.970 line:-1 position:50%
First, we'll take a look


27
00:01:09.970 --> 00:01:13.407 line:-1 position:50%
at what it means to be
a fully customizable macOS app,


28
00:01:13,407 --> 00:01:16,109 line:-1
by handling changes
to the system as a whole


29
00:01:16.109 --> 00:01:19.913 line:-1 position:50%
as well as within our own app.


30
00:01:19.913 --> 00:01:21.615 line:-1 position:50%
Adding an additional workflow


31
00:01:21.615 --> 00:01:25.085 line:-1 position:50%
for our users to manipulate
their data through drag and drop


32
00:01:25.085 --> 00:01:30.123 line:-1 position:50%
is another way for us to provide
a flexible user experience.


33
00:01:30,123 --> 00:01:33,560 line:-1
Then, we'll explore how to work
with the file system,


34
00:01:33,560 --> 00:01:37,464 line:-1
by allowing our app's data
to be exported.


35
00:01:37,464 --> 00:01:40,667 line:-1
And finally, we'll add support
for Continuity Camera


36
00:01:40.667 --> 00:01:42.769 line:-1 position:50%
to create a seamless workflow


37
00:01:42,769 --> 00:01:45,672 line:-1
for importing images
into our app.


38
00:01:45,672 --> 00:01:47,841 line:-1
The first thing
I'd like to talk to you about


39
00:01:47,841 --> 00:01:50,344 line:-1
isn't any specific API at all,


40
00:01:50.344 --> 00:01:52.746 line:-1 position:50%
but more about how an app
built with SwiftUI


41
00:01:52.746 --> 00:01:56.249 line:-1 position:50%
fits in with the customizability
of macOS.


42
00:01:56.249 --> 00:01:58.352 line:-1 position:50%
Here, I have
our gardening app open


43
00:01:58.352 --> 00:02:00.487 line:-1 position:50%
as well as System Preferences.


44
00:02:00.487 --> 00:02:02.990 line:-1 position:50%
I'm going to switch
to Dark mode,


45
00:02:02.990 --> 00:02:08.195 line:-1 position:50%
and you can see our app updates
its interface automatically.


46
00:02:08,195 --> 00:02:10,530 line:-1
While I have
the System Preferences open,


47
00:02:10.530 --> 00:02:14.768 line:-1 position:50%
I'm also going to update my
sidebar icon size to be large.


48
00:02:14.768 --> 00:02:17.337 line:-1 position:50%
Just as with Dark mode,
our app adjusted itself


49
00:02:17,337 --> 00:02:20,240 line:-1
to what I set
in System Preferences.


50
00:02:20,240 --> 00:02:23,210 line:-1
I love these little touches,
both as a developer --


51
00:02:23,210 --> 00:02:24,811 line:-1
since I get them
automatically --


52
00:02:24.811 --> 00:02:27.948 line:-1 position:50%
and as a user -- since it means
the apps I'm using


53
00:02:27.948 --> 00:02:31.251 line:-1 position:50%
will be taking into account
my own personal tastes.


54
00:02:31.251 --> 00:02:32.919 line:-1 position:50%
Before I leave
System Preferences


55
00:02:32.919 --> 00:02:35.122 line:-1 position:50%
to focus on our app,
I'd like to point out


56
00:02:35,122 --> 00:02:39,092 line:-1
that I have my accent color
set to be multicolor.


57
00:02:39,092 --> 00:02:41,495 line:-1
This feature allows developers


58
00:02:41.495 --> 00:02:44.031 line:-1 position:50%
to configure
an app-specific accent color;


59
00:02:44,031 --> 00:02:47,234 line:-1
and the operating system will
customize your app's buttons,


60
00:02:47.234 --> 00:02:50.804 line:-1 position:50%
selection highlighting,
and sidebar glyphs.


61
00:02:50.804 --> 00:02:54.041 line:-1 position:50%
I'd like to support
an accent color in my app,


62
00:02:54,041 --> 00:02:57,477 line:-1
so I'm going to open
the asset catalog in our project


63
00:02:57.477 --> 00:03:02.416 line:-1 position:50%
and select the AccentColor.


64
00:03:02,416 --> 00:03:06,286 line:-1
And I'm going to change its
content to be system green


65
00:03:06.286 --> 00:03:08.789 line:-1 position:50%
to match our app's theme.


66
00:03:08,789 --> 00:03:10,023 line:-1
As you can see,


67
00:03:10.023 --> 00:03:14.728 line:-1 position:50%
our sidebar icons and selection
have all picked up the change.


68
00:03:14.728 --> 00:03:17.831 line:-1 position:50%
We've seen how our app can
automatically react to changes


69
00:03:17.831 --> 00:03:20.367 line:-1 position:50%
which affect
the entire operating system,


70
00:03:20,367 --> 00:03:23,103 line:-1
but what about
app-specific settings?


71
00:03:23.103 --> 00:03:24.938 line:-1 position:50%
Let's walk through
adding an interface


72
00:03:24.938 --> 00:03:28.375 line:-1 position:50%
to let users customize
our gardening app.


73
00:03:28.375 --> 00:03:31.144 line:-1 position:50%
Here, I've opened
our GardenApp file.


74
00:03:31.144 --> 00:03:33.213 line:-1 position:50%
And alongside
the WindowGroup scene


75
00:03:33.213 --> 00:03:36.016 line:-1 position:50%
I'm going to add
a Settings scene.


76
00:03:36.016 --> 00:03:37.951 line:-1 position:50%
And this scene
will give us a menu item


77
00:03:37.951 --> 00:03:39.186 line:-1 position:50%
which, when selected,


78
00:03:39.186 --> 00:03:41.455 line:-1 position:50%
will open a window
with our view.


79
00:03:41,455 --> 00:03:44,958 line:0
I'm going to use the
SettingsView that I've set up,


80
00:03:44,958 --> 00:03:47,260 position:50%
and I'm going to pass it
my model as well.


81
00:03:47,260 --> 00:03:52,933 position:50%
[KEYSTROKES]


82
00:03:52,933 --> 00:03:55,302 position:50%
Additionally, the Settings scene
will also add


83
00:03:55,302 --> 00:03:58,505 position:50%
the appropriate menu item
to your app's main menu


84
00:03:58,505 --> 00:04:00,807 line:0
and configure it with
the standard keyboard shortcut


85
00:04:00,807 --> 00:04:02,442 line:0
of Command-comma.


86
00:04:02,442 --> 00:04:04,845 line:-1
This gives us a great start.


87
00:04:04.845 --> 00:04:06.746 line:-1 position:50%
Now, let's take a look
at the SettingsView,


88
00:04:06.746 --> 00:04:08.815 line:-1 position:50%
where I'll define the interface.


89
00:04:08,815 --> 00:04:12,052 line:-1
On macOS, it's common for apps
to provide a settings interface


90
00:04:12.052 --> 00:04:13.653 line:-1 position:50%
with toolbar icons


91
00:04:13,653 --> 00:04:16,223 line:-1
to allow switching
between the different panes,


92
00:04:16.223 --> 00:04:18.992 line:-1 position:50%
particularly if the app
provides a lot of settings


93
00:04:18.992 --> 00:04:22.696 line:-1 position:50%
which can be divided up
into different categories.


94
00:04:22.696 --> 00:04:25.665 line:-1 position:50%
So for my main view here,
I'm going to use a TabView.


95
00:04:25,665 --> 00:04:27,667 line:-1
[KEYSTROKES]


96
00:04:27,667 --> 00:04:31,004 line:-1
And I'm going to give it
two children:


97
00:04:31.004 --> 00:04:38.478 line:-1 position:50%
one for GeneralSettings,
and one for ViewingSettings.


98
00:04:38.478 --> 00:04:41.648 line:-1 position:50%
And for the content of the tab
in the window toolbar area,


99
00:04:41.648 --> 00:04:45.051 line:-1 position:50%
I'm going to use a tabItem.


100
00:04:45.051 --> 00:04:47.988 line:-1 position:50%
And the contents of this
can just be a Label.


101
00:04:47.988 --> 00:04:49.723 line:-1 position:50%
We'll give it the text
to be displayed --


102
00:04:49,723 --> 00:04:53,360 line:-1
in this case, "General" --
and a systemImage;


103
00:04:53.360 --> 00:04:56.463 line:-1 position:50%
I'm going to use "gear"
for GeneralSettings.


104
00:04:56.463 --> 00:04:59.266 line:-1 position:50%
And then let's do the same
for our ViewingSettings.


105
00:04:59.266 --> 00:05:02.269 line:-1 position:50%
I'll add a tabItem
and a Label --


106
00:05:02.269 --> 00:05:04.271 line:-1 position:50%
we'll call it "Viewing" --


107
00:05:04,271 --> 00:05:09,276 line:-1
and a systemImage of,
I think, "eyeglasses."


108
00:05:09.276 --> 00:05:13.713 line:-1 position:50%
All right. So now we have
the contents of our two tabs.


109
00:05:13,713 --> 00:05:16,216 line:-1
Let's fill out
the GeneralSettings now.


110
00:05:16,216 --> 00:05:18,418 line:-1
Something that could be nice
for our users


111
00:05:18.418 --> 00:05:21.021 line:-1 position:50%
is the ability to define
a garden to be used


112
00:05:21.021 --> 00:05:26.359 line:-1 position:50%
as the default when no garden
is currently selected.


113
00:05:26.359 --> 00:05:29.196 line:-1 position:50%
For this, I'm going to add
a Picker...


114
00:05:29,196 --> 00:05:40,207 line:-1
[KEYSTROKES]


115
00:05:40.207 --> 00:05:46.913 line:-1 position:50%
And the first item, I think,
will be the Text("None").


116
00:05:46.913 --> 00:05:49.716 line:-1 position:50%
And for the others,
I'm going to add a ForEach


117
00:05:49,716 --> 00:05:52,252 line:-1
over all the gardens
in our data.


118
00:05:52.252 --> 00:06:00.527 line:-1 position:50%
[KEYSTROKES]


119
00:06:00,527 --> 00:06:04,664 line:-1
And for each garden,
I'm just going to add a Text


120
00:06:04.664 --> 00:06:14.641 line:-1 position:50%
and give it the garden's name
as well as its displayYear.


121
00:06:14,641 --> 00:06:21,081 line:-1
We'll also need to provide a tag
here with the ID of the garden.


122
00:06:21.081 --> 00:06:27.554 line:-1 position:50%
So for our "None" value,
we can give it a tag of none.


123
00:06:27.554 --> 00:06:29.889 line:-1 position:50%
[KEYSTROKES]


124
00:06:29.889 --> 00:06:32.225 line:-1 position:50%
And for our other gardens,
we'll give it a tag


125
00:06:32,225 --> 00:06:34,561 line:-1
corresponding
to the garden's ID.


126
00:06:34,561 --> 00:06:41,868 line:-1
[KEYSTROKES]


127
00:06:41.868 --> 00:06:44.237 line:-1 position:50%
Lastly, we need to provide
some state


128
00:06:44,237 --> 00:06:46,439 line:-1
for the Picker's selection.


129
00:06:46,439 --> 00:06:48,975 line:-1
When providing
a settings interface like this,


130
00:06:48,975 --> 00:06:51,244 line:-1
it's important
to persist the state


131
00:06:51,244 --> 00:06:53,980 line:-1
so that your app remembers
the user's selection


132
00:06:53,980 --> 00:06:56,182 line:-1
across launches and OS updates.


133
00:06:56,182 --> 00:06:58,518 line:-1
In SwiftUI,
this can be accomplished


134
00:06:58,518 --> 00:07:01,488 line:-1
by using
the AppStorage property wrapper.


135
00:07:01.488 --> 00:07:03.890 line:-1 position:50%
This property wrapper
will persist our value


136
00:07:03.890 --> 00:07:06.026 line:-1 position:50%
using the UserDefaults system,


137
00:07:06.026 --> 00:07:09.696 line:-1 position:50%
which is exactly
what we want here.


138
00:07:09.696 --> 00:07:12.332 line:-1 position:50%
So for our selection binding,


139
00:07:12.332 --> 00:07:15.735 line:-1 position:50%
I'm going to add
the AppStorage property wrapper.


140
00:07:15.735 --> 00:07:17.003 line:-1 position:50%
This takes a key.


141
00:07:17.003 --> 00:07:24.144 line:-1 position:50%
We'll give it "defaultGarden",
and we'll call it "selection".


142
00:07:24.144 --> 00:07:28.381 line:-1 position:50%
It is also
an optional Garden.ID.


143
00:07:28.381 --> 00:07:31.351 line:-1 position:50%
And what this will do
is persist our selection value


144
00:07:31.351 --> 00:07:35.522 line:-1 position:50%
using the user default system.


145
00:07:35,522 --> 00:07:39,659 line:0
I'm also going to add
a fixedSize to my Picker


146
00:07:39,659 --> 00:07:41,528 position:50%
and some padding to the form.


147
00:07:41.528 --> 00:07:43.530 line:-1 position:50%
[KEYSTROKES]


148
00:07:47.334 --> 00:07:52.339 line:-1 position:50%
I'm going to switch over
to our ContentView here,


149
00:07:52,339 --> 00:07:54,207 line:-1
and I'll add our AppStorage


150
00:07:54.207 --> 00:07:56.376 line:-1 position:50%
and give it that same key
we used.


151
00:07:56.376 --> 00:08:00.880 line:-1 position:50%
[KEYSTROKES]


152
00:08:00,880 --> 00:08:05,118 line:-1
We'll call it "defaultGardenID",


153
00:08:05,118 --> 00:08:09,556 line:-1
and it's also
an optional Garden.ID.


154
00:08:09,556 --> 00:08:11,991 line:-1
And then here where I have
this binding for selection,


155
00:08:11.991 --> 00:08:15.328 line:-1 position:50%
I'm going to replace this
with a Binding,


156
00:08:15.328 --> 00:08:22.035 line:-1 position:50%
and the "get" will be to first
use the selectedGardenID.


157
00:08:22,035 --> 00:08:23,670 line:-1
And then if that isn't set,


158
00:08:23.670 --> 00:08:27.907 line:-1 position:50%
we're going to fall back
to the defaultGardenID.


159
00:08:27,907 --> 00:08:29,042 line:-1
And then for the setter,


160
00:08:29,042 --> 00:08:32,545 line:-1
we only want to update
our selectedGardenID.


161
00:08:32,545 --> 00:08:35,315 line:-1
We don't actually want to update
our defaultGarden.


162
00:08:35,315 --> 00:08:40,920 line:-1
So I'm just going to say
"selectedGardenID = $0".


163
00:08:40.920 --> 00:08:44.157 line:-1 position:50%
All right.


164
00:08:44.157 --> 00:08:46.993 line:-1 position:50%
I'm going to run our app.


165
00:08:46,993 --> 00:08:50,897 line:-1
Open the Preferences
menu item here,


166
00:08:50.897 --> 00:08:53.233 line:-1 position:50%
and I'm going to select
Indoor Plants


167
00:08:53.233 --> 00:08:56.703 line:-1 position:50%
as my default garden.


168
00:08:56.703 --> 00:08:58.271 line:-1 position:50%
And I'll open a new window,


169
00:08:58,271 --> 00:09:01,307 line:-1
and we see Indoor Plants
is selected.


170
00:09:01,307 --> 00:09:05,445 line:-1
Providing customization support
via settings is one nice way


171
00:09:05.445 --> 00:09:08.848 line:-1 position:50%
of building a flexible
experience for our users.


172
00:09:08,848 --> 00:09:11,084 line:-1
Another way is providing
alternative workflows


173
00:09:11.084 --> 00:09:13.353 line:-1 position:50%
for the same action.


174
00:09:13,353 --> 00:09:14,921 line:-1
In the first part of our talk,


175
00:09:14.921 --> 00:09:17.056 line:-1 position:50%
Mathieu showed you
how to add a main menu item


176
00:09:17.056 --> 00:09:19.959 line:-1 position:50%
for adding a plant
to the selected garden.


177
00:09:19.959 --> 00:09:22.295 line:-1 position:50%
This is great functionality
for our app,


178
00:09:22,295 --> 00:09:24,531 line:-1
but let's look at another way
that we can provide


179
00:09:24,531 --> 00:09:28,601 line:-1
similar functionality via
a common macOS user interaction:


180
00:09:28.601 --> 00:09:30.136 line:-1 position:50%
drag and drop.


181
00:09:30.136 --> 00:09:31.538 line:-1 position:50%
Since we're using table here,


182
00:09:31.538 --> 00:09:33.239 line:-1 position:50%
I'm going to make
a couple of adjustments


183
00:09:33.239 --> 00:09:34.874 line:-1 position:50%
to support it being
a drag source


184
00:09:34,874 --> 00:09:36,776 line:-1
and drop destination.


185
00:09:36,776 --> 00:09:38,545 line:-1
The first thing I'm going to do


186
00:09:38.545 --> 00:09:42.749 line:-1 position:50%
is remove this "plants"
from the initializer.


187
00:09:42,749 --> 00:09:44,984 position:50%
Then I'm going to go
down at the end


188
00:09:44,984 --> 00:09:49,589 line:0
and add a row builder.


189
00:09:49,589 --> 00:09:51,458 line:0
For the contents
of this row builder,


190
00:09:51,458 --> 00:09:54,127 position:50%
I'm going to add a ForEach


191
00:09:54,127 --> 00:09:55,929 line:0
and use those plants
that we had from before.


192
00:09:55,929 --> 00:09:58,698 line:0
[KEYSTROKES]


193
00:09:58,698 --> 00:10:00,033 position:50%
And for each plant,


194
00:10:00,033 --> 00:10:05,472 position:50%
I'm just going to create
a TableRow with it.


195
00:10:05,472 --> 00:10:08,808 position:50%
So now I'm going to customize
each of our TableRows


196
00:10:08,808 --> 00:10:12,278 position:50%
by adding
the itemProvider modifier.


197
00:10:12,278 --> 00:10:17,116 position:50%
And I'm going to return
just plant.itemProvider here,


198
00:10:17,116 --> 00:10:20,620 line:0
which is a computed property
I set up on my model.


199
00:10:20,620 --> 00:10:24,023 line:0
So now each of these rows
supports being a drag source.


200
00:10:24,023 --> 00:10:25,492 line:-1
I've made enough changes now


201
00:10:25.492 --> 00:10:27.694 line:-1 position:50%
to allow me to drag out
my plants,


202
00:10:27.694 --> 00:10:31.264 line:-1 position:50%
but this is not very useful
if nothing will accept it.


203
00:10:31,264 --> 00:10:35,368 line:-1
Let's fix that by also adding
drop support to our table.


204
00:10:35,368 --> 00:10:37,303 position:50%
The onInsert modifier
is the other half


205
00:10:37,303 --> 00:10:39,706 position:50%
of our drag and drop equation.


206
00:10:39,706 --> 00:10:43,176 line:0
It takes a list
of content types,


207
00:10:43,176 --> 00:10:46,613 line:0
and I'm going to pass
Plant.draggableType here,


208
00:10:46,613 --> 00:10:50,483 position:50%
which is a custom type
I set up on my model.


209
00:10:50,483 --> 00:10:53,720 position:50%
It also takes a closure,
which is passed two parameters.


210
00:10:53,720 --> 00:10:55,955 line:0
One is the index
where the drop occurred,


211
00:10:55,955 --> 00:10:59,292 position:50%
and another is the list
of item providers.


212
00:10:59,292 --> 00:11:03,062 position:50%
We're going to then call
Plant.fromItemProviders


213
00:11:03,062 --> 00:11:05,331 position:50%
to create our model,


214
00:11:05,331 --> 00:11:09,335 position:50%
and we'll pass
those item providers here.


215
00:11:09,335 --> 00:11:12,238 line:0
This will give us back
a list of plants,


216
00:11:12,238 --> 00:11:14,607 line:0
which we can use
to update our model.


217
00:11:14,607 --> 00:11:21,214 position:50%
I'll call garden.plants.insert
(contentsOf: plants)


218
00:11:21,214 --> 00:11:23,683 line:0
at the index where it occurred.


219
00:11:29.055 --> 00:11:34.561 line:-1 position:50%
Now, I can open a new window
with my Indoor Plants,


220
00:11:34,561 --> 00:11:38,498 line:-1
select a few flowers
from my Backyard Flower Bed,


221
00:11:38,498 --> 00:11:40,934 line:-1
and drag to copy them over.


222
00:11:42.936 --> 00:11:45.338 line:-1 position:50%
Drag and drop is a great way
to move data around


223
00:11:45.338 --> 00:11:47.874 line:-1 position:50%
inside our app,
but what about moving data


224
00:11:47.874 --> 00:11:50.710 line:-1 position:50%
between our app
and the operating system?


225
00:11:50.710 --> 00:11:52.111 line:-1 position:50%
Our users would appreciate


226
00:11:52.111 --> 00:11:54.447 line:-1 position:50%
being able to export
all this data --


227
00:11:54.447 --> 00:11:58.117 line:-1 position:50%
perhaps for backup purposes
or importing into another app.


228
00:11:58.117 --> 00:12:01.487 line:-1 position:50%
To facilitate this workflow,
let's add a main menu item


229
00:12:01,487 --> 00:12:04,924 line:-1
for exporting our database
in a common file format


230
00:12:04,924 --> 00:12:08,394 line:-1
that can be shared
with other applications.


231
00:12:08.394 --> 00:12:11.764 line:-1 position:50%
I've already created a type
to contain my menu item,


232
00:12:11.764 --> 00:12:14.400 line:-1 position:50%
which conforms
to the commands protocol.


233
00:12:14.400 --> 00:12:20.607 line:-1 position:50%
In our commands here, I'm going
to add an ImportExportCommands


234
00:12:20.607 --> 00:12:23.209 line:-1 position:50%
And also pass it our store.


235
00:12:23.209 --> 00:12:26.813 line:-1 position:50%
Let's switch over
to that file now.


236
00:12:26.813 --> 00:12:28.381 line:-1 position:50%
And for the body,


237
00:12:28,381 --> 00:12:31,751 line:-1
I'm going to add
a CommandGroup


238
00:12:31.751 --> 00:12:35.455 line:-1 position:50%
and I'm going to replace
the system-provided


239
00:12:35,455 --> 00:12:37,624 line:-1
importExport placement.


240
00:12:37.624 --> 00:12:40.960 line:-1 position:50%
And what this will do
is add our menu item


241
00:12:40.960 --> 00:12:44.063 line:-1 position:50%
in the expected place
in the File menu.


242
00:12:44.063 --> 00:12:46.299 line:-1 position:50%
So for the contents
of our CommandGroup,


243
00:12:46.299 --> 00:12:50.670 line:-1 position:50%
I'll add a Section and a Button.


244
00:12:50,670 --> 00:12:53,806 line:-1
We'll give it a label
of "Export"


245
00:12:53.806 --> 00:12:55.842 line:-1 position:50%
followed by the ellipses.


246
00:12:55.842 --> 00:12:58.845 line:-1 position:50%
The ellipses indicate to the
user that selecting that item


247
00:12:58,845 --> 00:13:02,782 line:-1
will open a window
or a save dialog.


248
00:13:02.782 --> 00:13:05.818 line:-1 position:50%
And the Button can just modify
some state --


249
00:13:05,818 --> 00:13:10,690 line:-1
say, "isShowingExport = true" --


250
00:13:10,690 --> 00:13:13,493 line:-1
and let's add that state
up here as well.


251
00:13:13.493 --> 00:13:21.534 line:-1 position:50%
[KEYSTROKES]


252
00:13:21,534 --> 00:13:24,904 line:-1
So now we have our Button,
which is modifying some state.


253
00:13:24,904 --> 00:13:29,342 position:50%
I'm also going to add
the fileExporter modifier here.


254
00:13:29,342 --> 00:13:32,512 position:50%
And I'm going to give it
a binding to our state


255
00:13:32,512 --> 00:13:37,250 line:0
in its isPresented parameter.


256
00:13:37,250 --> 00:13:40,053 line:0
isShowingExport.


257
00:13:40,053 --> 00:13:42,221 line:0
It also takes a document.


258
00:13:42,221 --> 00:13:44,323 position:50%
This is a type that needs
to conform


259
00:13:44,323 --> 00:13:47,126 position:50%
to either
the file document protocol


260
00:13:47,126 --> 00:13:49,595 line:0
or the reference file document
protocol.


261
00:13:49,595 --> 00:13:51,364 line:0
I've already added conformance
to my store,


262
00:13:51,364 --> 00:13:53,900 line:0
so we'll just pass that here.


263
00:13:53,900 --> 00:13:56,736 position:50%
Additionally, it takes
a content type.


264
00:13:56,736 --> 00:14:04,310 position:50%
We'll give it
Store.readableContentTypes.first


265
00:14:04,310 --> 00:14:07,146 line:0
which is just the CSV type.


266
00:14:07,146 --> 00:14:09,949 position:50%
And lastly, it takes a closure,


267
00:14:09,949 --> 00:14:12,418 line:0
which is passed the result
of the operation,


268
00:14:12,418 --> 00:14:15,688 line:0
indicating success or failure.


269
00:14:15,688 --> 00:14:22,095 line:-1
Now, I can select
our Export menu item,


270
00:14:22.095 --> 00:14:26.766 line:-1 position:50%
give it a file to save as,
say "plants.csv",


271
00:14:26.766 --> 00:14:28.401 line:-1 position:50%
hit Export,


272
00:14:28.401 --> 00:14:31.437 line:-1 position:50%
and the file's been saved
to disk.


273
00:14:31,437 --> 00:14:34,874 line:-1
While we're on the topic
of moving data between our app


274
00:14:34.874 --> 00:14:36.609 line:-1 position:50%
and the operating system,


275
00:14:36.609 --> 00:14:39.345 line:-1 position:50%
there is one last thing
I'd like to discuss.


276
00:14:39.345 --> 00:14:42.648 line:-1 position:50%
Our app has lots of textual data
about our plants,


277
00:14:42.648 --> 00:14:45.585 line:-1 position:50%
but it would be great
to add images as well.


278
00:14:45,585 --> 00:14:47,887 line:-1
Users could take pictures
of their plants over time


279
00:14:47,887 --> 00:14:49,989 line:-1
to track their progress.


280
00:14:49.989 --> 00:14:51.758 line:-1 position:50%
One way to enable
this import flow


281
00:14:51.758 --> 00:14:53.760 line:-1 position:50%
is with Continuity Camera.


282
00:14:53,760 --> 00:14:55,161 line:-1
This feature would allow
our users


283
00:14:55,161 --> 00:14:58,531 line:-1
to take a picture of their plant
with their iOS device


284
00:14:58,531 --> 00:15:00,733 line:-1
and have it import directly
into our app.


285
00:15:00.733 --> 00:15:03.269 line:-1 position:50%
Let's take a look
at how we can add a menu item


286
00:15:03.269 --> 00:15:04.871 line:-1 position:50%
to enable this flow


287
00:15:04.871 --> 00:15:08.374 line:-1 position:50%
when a user has selected
a plant in the gallery view.


288
00:15:08,374 --> 00:15:10,276 position:50%
After my importExportCommands,


289
00:15:10,276 --> 00:15:15,615 line:0
I'm going to add
ImportFromDevicesCommands,


290
00:15:15,615 --> 00:15:18,985 line:-1
and that'll give us
our main menu item.


291
00:15:18,985 --> 00:15:20,486 line:-1
Additionally, I'm going
to switch over


292
00:15:20.486 --> 00:15:25.625 line:-1 position:50%
to our GardenDetail file,
and at the end of our body here,


293
00:15:25,625 --> 00:15:31,898 line:-1
I'm going to add the
importsItemProviders modifier,


294
00:15:31.898 --> 00:15:33.800 line:-1 position:50%
and this takes a list of types


295
00:15:33,800 --> 00:15:35,902 line:-1
that we want to support
importing.


296
00:15:35,902 --> 00:15:39,372 line:-1
I'm going to base this off of
whether anything is selected,


297
00:15:39,372 --> 00:15:42,375 line:-1
so I'm going to use
our selection here.


298
00:15:42,375 --> 00:15:46,779 line:-1
And if it's empty,


299
00:15:46,779 --> 00:15:50,516 line:-1
I'm going to return
an empty array.


300
00:15:50.516 --> 00:15:52.685 line:-1 position:50%
And if it's not empty,
I'm going to return


301
00:15:52.685 --> 00:15:57.089 line:-1 position:50%
Plant.importImageTypes,


302
00:15:57.089 --> 00:16:00.092 line:-1 position:50%
which is a list of all
the image types on the system.


303
00:16:00,092 --> 00:16:03,362 line:-1
And this modifier
takes a closure,


304
00:16:03,362 --> 00:16:07,300 line:-1
which is passed
a list of item providers.


305
00:16:07,300 --> 00:16:09,035 line:0
We'll take those providers
and call


306
00:16:09,035 --> 00:16:16,676 line:0
Plant.importImageFromProviders,
pass it the providers,


307
00:16:16,676 --> 00:16:19,111 line:0
and this is going to give us
back a URL


308
00:16:19,111 --> 00:16:22,448 line:0
where it saved the image
to disk.


309
00:16:22,448 --> 00:16:24,817 line:0
We'll then update our model


310
00:16:24,817 --> 00:16:27,854 line:0
by looping through all the IDs
that are selected...


311
00:16:27,854 --> 00:16:33,226 position:50%
[KEYSTROKES]


312
00:16:33,226 --> 00:16:36,028 position:50%
...and get a reference
to the plant


313
00:16:36,028 --> 00:16:41,467 position:50%
and update its imageURL.


314
00:16:41.467 --> 00:16:44.003 line:-1 position:50%
I'm going to select
my Indoor Plants garden


315
00:16:44.003 --> 00:16:46.339 line:-1 position:50%
and switch to Gallery mode.


316
00:16:46.339 --> 00:16:49.742 line:-1 position:50%
And I'm going to make things
a little bit bigger.


317
00:16:49.742 --> 00:16:51.811 line:-1 position:50%
Select my plant here.


318
00:16:51.811 --> 00:16:53.312 line:-1 position:50%
In the main menu item,


319
00:16:53,312 --> 00:16:58,017 line:-1
choose Import from iPhone >
Take Photo.


320
00:17:00.219 --> 00:17:02.388 line:-1 position:50%
[CAMERA SHUTTER]


321
00:17:02,388 --> 00:17:06,325 line:-1
And you can see
our gallery updated.


322
00:17:06,325 --> 00:17:09,662 line:-1
I hope this was a nice tour
of some of the various ways


323
00:17:09,662 --> 00:17:11,864 line:-1
which define a great Mac app.


324
00:17:11.864 --> 00:17:14.133 line:-1 position:50%
I'm looking forward
to all the ways your apps


325
00:17:14,133 --> 00:17:16,636 line:-1
will make the macOS platform
better.


326
00:17:16,636 --> 00:17:20,239 line:-1
Have a wonderful WWDC 2021.


327
00:17:20,239 --> 00:17:25,344 line:0 align:right size:2%
♪

