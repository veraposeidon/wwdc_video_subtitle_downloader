2
00:00:00.200 --> 00:00:03.337 line:-1 align:center position:49%
[etherial percussion music]


3
00:00:03,337 --> 00:00:10,344 align:center line:-1
♪ ♪


4
00:00:14,481 --> 00:00:15,516 line:-1
[Kasia] Hi.


5
00:00:15,516 --> 00:00:16,884 line:-1
My name is Kasia Wawer.


6
00:00:16.884 --> 00:00:19.119 line:-2 align:center
I'm an engineer
on the Keyboards UI team,


7
00:00:19.119 --> 00:00:20.954 line:-1 align:center
and today, I'll be your guide


8
00:00:20.954 --> 00:00:23.290 line:-2 align:center
to the wonderful world
of keyboard layout.


9
00:00:23.290 --> 00:00:25.292 line:-2 align:center
I am incredibly excited
to talk to you today


10
00:00:25,292 --> 00:00:27,694 line:-2
about bringing the keyboard
from a frame-based past


11
00:00:27.694 --> 00:00:29.630 line:-1 align:center
into an auto-layout future.


12
00:00:29.630 --> 00:00:33.300 line:-2 align:center
We'll start our tour by talking
about the new guide.


13
00:00:33,300 --> 00:00:35,936 line:-2
Then, we'll go over some of the
new things you'll be able to do


14
00:00:35.936 --> 00:00:39.373 line:-2 align:center
to more fully integrate
the keyboard into your layout.


15
00:00:39,373 --> 00:00:42,743 line:-2
And finally, we'll talk about
what a keyboard really is--


16
00:00:42.743 --> 00:00:44.344 line:-1 align:center
philosophically speaking,


17
00:00:44,344 --> 00:00:45,879 line:-1
types of keyboards to consider,


18
00:00:45.879 --> 00:00:49.049 line:-2 align:center
and some of the cases you might
not think about right away.


19
00:00:49.049 --> 00:00:51.652 line:-2 align:center
So, let's get started
with our tour.


20
00:00:51,652 --> 00:00:55,155 line:-2
As with many things, this one
begins in the ancient past.


21
00:00:55,155 --> 00:00:57,925 line:-2
If you have worked with
the keyboard in your app before,


22
00:00:57,925 --> 00:01:00,394 line:-2
you know the way that it's been
handled since time immemorial


23
00:01:00.394 --> 00:01:03.063 line:-2 align:center
is by registering
for notifications,


24
00:01:03,063 --> 00:01:05,465 line:-2
deriving the appropriate
offsets and animations


25
00:01:05,465 --> 00:01:07,701 line:-2
from the information
in the notification,


26
00:01:07,701 --> 00:01:10,404 line:-1
doing some math, and finally,


27
00:01:10.404 --> 00:01:12.139 line:-2 align:center
using that
to adjust your layout.


28
00:01:12.139 --> 00:01:14.374 line:-2 align:center
Now, notifications
are sticking around.


29
00:01:14.374 --> 00:01:16.009 line:-1 align:center
We are not deprecating them.


30
00:01:16.009 --> 00:01:17.945 line:-2 align:center
You can learn more about them,
if you're interested,


31
00:01:17,945 --> 00:01:21,682 line:-2
in "The Keys to a Better Text
Input Experience" from 2017.


32
00:01:21.682 --> 00:01:24.518 line:-2 align:center
Let's look at a quick example
of how notifications


33
00:01:24,518 --> 00:01:26,854 line:-2
might be used
with a custom guide.


34
00:01:26.854 --> 00:01:29.456 line:-2 align:center
Now, don't copy
any of this code


35
00:01:29.456 --> 00:01:30.858 line:-2 align:center
because we're
about to replace it.


36
00:01:30.858 --> 00:01:33.927 line:-2 align:center
But here's how you handle
the keyboard before iOS 15.


37
00:01:33.927 --> 00:01:35.896 line:-2 align:center
You'd create
your custom guide and anchors


38
00:01:35.896 --> 00:01:38.232 line:-1 align:center
to respond to notifications.


39
00:01:38,232 --> 00:01:41,235 line:-2
Then, you'd register for
the appropriate notifications.


40
00:01:41,235 --> 00:01:43,303 line:-2
Usually, at least
willShow and willHide,


41
00:01:43.303 --> 00:01:46.540 line:-2 align:center
but sometimes
frame changes, etc.


42
00:01:46,540 --> 00:01:48,275 line:-2
Then, you'd respond
to said notifications


43
00:01:48,275 --> 00:01:50,644 line:-2
by getting the frame information
from the notification,


44
00:01:50,644 --> 00:01:52,613 line:-2
making sure that you're
adjusting for your own views


45
00:01:52,613 --> 00:01:54,014 line:-1
and the safe area guide,


46
00:01:54.014 --> 00:01:56.850 line:-2 align:center
if the keyboard
is leaving the screen.


47
00:01:56.850 --> 00:01:59.019 line:-2 align:center
And you'd get the animation info
from the notification


48
00:01:59,019 --> 00:02:01,321 line:-2
and, finally,
change your guide to match.


49
00:02:01,321 --> 00:02:02,789 line:-1
Now, it's not a ton,


50
00:02:02,789 --> 00:02:05,158 line:-2
but it can get
complicated quickly.


51
00:02:05,158 --> 00:02:07,828 line:-2
Today, I am happy to announce
a brand-new addition


52
00:02:07.828 --> 00:02:09.229 line:-1 align:center
to the auto layout collection:


53
00:02:09.229 --> 00:02:11.398 line:-1 align:center
UI keyboard layout guide.


54
00:02:11.398 --> 00:02:13.934 line:-2 align:center
Now, try to constrain
your excitement


55
00:02:13.934 --> 00:02:15.302 line:-1 align:center
as we dive into this.


56
00:02:15,302 --> 00:02:19,072 line:-2
Keyboard layout guide
is brand-new in iOS 15.


57
00:02:19.072 --> 00:02:20.374 line:-1 align:center
It's a layout guide.


58
00:02:20,374 --> 00:02:22,009 line:-2
You can constrain
the views and guides


59
00:02:22.009 --> 00:02:23.777 line:-1 align:center
in your existing layout to it.


60
00:02:23,777 --> 00:02:25,612 line:-2
If you're not familiar
with layout guides,


61
00:02:25.612 --> 00:02:27.814 line:-2 align:center
a layout guide is a way
to represent space


62
00:02:27,814 --> 00:02:29,917 line:-2
in a layout
without using a view.


63
00:02:29.917 --> 00:02:32.352 line:-2 align:center
It has all the same
anchors as a view.


64
00:02:32.352 --> 00:02:34.421 line:-2 align:center
The keyboard layout guide
will represent the space


65
00:02:34.421 --> 00:02:36.023 line:-2 align:center
that the keyboard
occupies in your app


66
00:02:36.023 --> 00:02:37.858 line:-2 align:center
so that your layout
can account for it.


67
00:02:37,858 --> 00:02:39,960 line:-1
And that's it!


68
00:02:39,960 --> 00:02:42,062 line:-1
Mostly.


69
00:02:42,062 --> 00:02:44,064 line:-2
Let's talk about updating
that code we just saw


70
00:02:44.064 --> 00:02:45.799 line:-1 align:center
to use this instead.


71
00:02:45,799 --> 00:02:47,734 line:-1
Here's that notifications code.


72
00:02:47.734 --> 00:02:49.102 line:-1 align:center
Don't copy it yet,


73
00:02:49.102 --> 00:02:50.704 line:-1 align:center
wait for the green checkmark.


74
00:02:50.704 --> 00:02:52.272 line:-1 align:center
So, now you can go ahead


75
00:02:52.272 --> 00:02:54.908 line:-2 align:center
and remove that anchor
you were tracking.


76
00:02:54.908 --> 00:02:57.177 line:-2 align:center
And change
from your layout guide


77
00:02:57.177 --> 00:02:59.613 line:-2 align:center
to the view's
keyboardLayoutGuide.


78
00:03:00.814 --> 00:03:04.451 line:-2 align:center
And we don't need to register
for notifications anymore.


79
00:03:04.451 --> 00:03:08.088 line:-2 align:center
And we don't need
to respond to them either.


80
00:03:08,088 --> 00:03:09,656 line:-1
And that's it.


81
00:03:09.656 --> 00:03:12.593 line:-2 align:center
All that code boils down
to this single line.


82
00:03:12,593 --> 00:03:14,561 line:-1
Ready to see it in action?


83
00:03:14.561 --> 00:03:16.230 line:-2 align:center
Here's what it looks like
to bring up the keyboard


84
00:03:16.230 --> 00:03:19.099 line:-2 align:center
when using
the notifications code.


85
00:03:19,099 --> 00:03:22,736 line:-2
And here's what it looks like
to bring it up using the guide.


86
00:03:24.571 --> 00:03:27.474 line:-2 align:center
You may have noticed that,
other than their localizations,


87
00:03:27,474 --> 00:03:28,842 line:-2
those looked
virtually identical,


88
00:03:28.842 --> 00:03:30.143 line:-1 align:center
but that's kinda the point.


89
00:03:30.143 --> 00:03:31.912 line:-2 align:center
You don't have
to do nearly as much,


90
00:03:31.912 --> 00:03:33.514 line:-1 align:center
and you get the same result.


91
00:03:33,514 --> 00:03:35,415 line:-2
So, let's talk
about updating to the guide.


92
00:03:35,415 --> 00:03:37,684 line:-1
It's a property on UI view.


93
00:03:37.684 --> 00:03:39.186 line:-1 align:center
And, for most cases,


94
00:03:39.186 --> 00:03:42.289 line:-2 align:center
you'll just update to using
the guide's topAnchor.


95
00:03:42.289 --> 00:03:43.891 line:-2 align:center
The guide matches
keyboard animations,


96
00:03:43.891 --> 00:03:46.193 line:-1 align:center
like bring up and dismiss,


97
00:03:46,193 --> 00:03:49,062 line:-2
and it follows
height changes too.


98
00:03:49.062 --> 00:03:50.964 line:-2 align:center
Because sometimes
the keyboard is taller,


99
00:03:50.964 --> 00:03:53.600 line:-1 align:center
and sometimes it's shorter.


100
00:03:53,600 --> 00:03:57,137 line:-2
But the guide will adapt
to fit whatever size appears.


101
00:03:57.137 --> 00:04:00.274 line:-2 align:center
And, when the keyboard
is undocked, by default,


102
00:04:00.274 --> 00:04:02.242 line:-2 align:center
the guide will drop
to the bottom of the screen


103
00:04:02.242 --> 00:04:03.610 line:-1 align:center
and be the width of your window,


104
00:04:03.610 --> 00:04:06.613 line:-2 align:center
and anything you've tied
to the top anchor will follow.


105
00:04:06,613 --> 00:04:08,081 line:-2
It accounts
for safe-area insets,


106
00:04:08,081 --> 00:04:10,250 line:-2
so you don't have to worry
about that anymore, either.


107
00:04:10,250 --> 00:04:13,520 line:-2
For basic uses, that's probably
all you need to know.


108
00:04:13,520 --> 00:04:17,090 line:-2
But now we get to talk
about the fun stuff.


109
00:04:17,090 --> 00:04:19,660 line:-2
Why did we choose
to use a new class


110
00:04:19.660 --> 00:04:21.695 line:-2 align:center
and not just
a normal layout guide?


111
00:04:21.695 --> 00:04:24.665 line:-2 align:center
Well, we wanted you
to be able to do more


112
00:04:24.665 --> 00:04:26.767 line:-2 align:center
than you've ever been able
to do with the keyboard.


113
00:04:26.767 --> 00:04:30.504 line:-2 align:center
Our next stop is full keyboard
integration into your app.


114
00:04:30.504 --> 00:04:31.872 line:-1 align:center
Why do I say "integration"?


115
00:04:31,872 --> 00:04:34,374 line:-2
Well, I have often heard
people talking


116
00:04:34.374 --> 00:04:37.177 line:-2 align:center
about the keyboard
as something they need to avoid,


117
00:04:37.177 --> 00:04:38.979 line:-2 align:center
or as something fighting
with their layout,


118
00:04:38.979 --> 00:04:41.815 line:-2 align:center
but the keyboard is part
of your app.


119
00:04:41,815 --> 00:04:45,018 line:-2
One of the main motivations
behind UI keyboard layout guide


120
00:04:45.018 --> 00:04:47.821 line:-2 align:center
is to give you, the developer,
the ability to respond


121
00:04:47.821 --> 00:04:49.957 line:-2 align:center
to the many different ways
we have for users


122
00:04:49.957 --> 00:04:52.159 line:-2 align:center
to input text,
and let you really,


123
00:04:52,159 --> 00:04:54,461 line:-2
fully think of the keyboard
as a part of your layout


124
00:04:54.461 --> 00:04:57.364 line:-2 align:center
in a way that maybe you haven't
been able to before.


125
00:04:57.364 --> 00:04:59.833 line:-2 align:center
I am really excited to see
how you take advantage


126
00:04:59.833 --> 00:05:01.168 line:-1 align:center
of these new features.


127
00:05:01.168 --> 00:05:04.104 line:-2 align:center
So, our next stop,
what makes keyboard layout guide


128
00:05:04.104 --> 00:05:05.939 line:-1 align:center
not just a layout guide?


129
00:05:07.140 --> 00:05:09.776 line:-2 align:center
With UI keyboard layout guide,
you have the ability


130
00:05:09.776 --> 00:05:12.513 line:-2 align:center
to fully follow the keyboard
in all its incarnations,


131
00:05:12.513 --> 00:05:13.714 line:-1 align:center
if you so choose,


132
00:05:13.714 --> 00:05:16.583 line:-2 align:center
by using a new property:
followsUndockedKeyboard.


133
00:05:16,583 --> 00:05:20,153 line:-2
It's false by default,
but if you set it to true,


134
00:05:20.153 --> 00:05:21.488 line:-2 align:center
the guide will follow
the keyboard


135
00:05:21,488 --> 00:05:22,990 line:-1
when it's undocked or floating,


136
00:05:22,990 --> 00:05:25,659 line:-2
giving you a lot of control
over how your layout responds


137
00:05:25,659 --> 00:05:27,561 line:-1
to wherever the keyboard may be.


138
00:05:28,795 --> 00:05:30,697 line:-2
No more automatic
drop-to-bottom.


139
00:05:30,697 --> 00:05:33,934 line:-2
No listening for hide keyboard
notifications when undocking.


140
00:05:33,934 --> 00:05:37,037 line:-2
The layout guide is
where the keyboard is.


141
00:05:37.037 --> 00:05:39.206 line:-2 align:center
The thing about having
that information, though,


142
00:05:39.206 --> 00:05:41.542 line:-2 align:center
is that it means you have
to be a lot more conscious


143
00:05:41.542 --> 00:05:44.645 line:-2 align:center
of how your layout is responding
to different types of keyboards.


144
00:05:44.645 --> 00:05:47.347 line:-2 align:center
So, UI keyboard layout guide
is a subclass


145
00:05:47,347 --> 00:05:50,651 line:-2
of another new layout guide:
UI tracking layout guide.


146
00:05:51,418 --> 00:05:53,020 line:-1
We call it a tracking layout guide


147
00:05:53,020 --> 00:05:55,689 line:-2
because it tracks the
constraints you want to change


148
00:05:55,689 --> 00:05:57,925 line:-1
when it moves around the screen.


149
00:05:57.925 --> 00:06:00.260 line:-2 align:center
You can give it an array
of constraints that activate


150
00:06:00,260 --> 00:06:03,530 line:-2
when near a specific edge,
and deactivate when leaving it,


151
00:06:03,530 --> 00:06:05,465 line:-1
and/or an array that activates


152
00:06:05.465 --> 00:06:06.967 line:-2 align:center
when specifically
awayFrom an edge,


153
00:06:06.967 --> 00:06:09.169 line:-1 align:center
and deactivates when near it.


154
00:06:09,169 --> 00:06:11,505 line:-2
Let's look at an example
of what you can do with this,


155
00:06:11,505 --> 00:06:13,440 line:-2
and the code
you need to achieve it.


156
00:06:13,440 --> 00:06:15,275 line:-1
Here's a test app.


157
00:06:15,275 --> 00:06:16,810 line:-2
I have a text field
and some controls


158
00:06:16.810 --> 00:06:18.512 line:-1 align:center
that can sit on the keyboard.


159
00:06:18.512 --> 00:06:21.682 line:-2 align:center
But,  when it gets close
to the top of the screen,


160
00:06:23.317 --> 00:06:25.018 line:-2 align:center
I want them to drop
to the bottom


161
00:06:25,018 --> 00:06:26,787 line:-1
to avoid going off-screen.


162
00:06:28.222 --> 00:06:30.858 line:-2 align:center
And when the keyboard
moves side to side,


163
00:06:30.858 --> 00:06:32.559 line:-2 align:center
I want the rest
of the UI to shift a bit


164
00:06:32.559 --> 00:06:34.862 line:-1 align:center
to give it a little more space.


165
00:06:34,862 --> 00:06:37,231 line:-2
So, how is
all this accomplished?


166
00:06:37.231 --> 00:06:38.799 line:-2 align:center
We're gonna look
at some code here.


167
00:06:38,799 --> 00:06:40,434 line:-1
In the following slides,


168
00:06:40,434 --> 00:06:42,970 line:-2
the editView is the view with
the text field and controls,


169
00:06:42,970 --> 00:06:45,873 line:-2
and the imageView
is the image view.


170
00:06:45.873 --> 00:06:48.141 line:-2 align:center
Okay, note that we should be
using identifiers here,


171
00:06:48,141 --> 00:06:49,843 line:-2
and you will see that
in the sample code,


172
00:06:49.843 --> 00:06:52.079 line:-2 align:center
but this fits better
on a slide.


173
00:06:52.079 --> 00:06:53.213 line:-2 align:center
Let's start
with what's happening


174
00:06:53,213 --> 00:06:54,882 line:-1
on the vertical axis.


175
00:06:54.882 --> 00:06:56.884 line:-2 align:center
First, we define
an array that ties the bottom


176
00:06:56.884 --> 00:06:59.887 line:-2 align:center
of the editView to
the keyboard layout guide's top.


177
00:07:01,255 --> 00:07:02,956 line:-1
Then, we set those to be active


178
00:07:02.956 --> 00:07:05.192 line:-2 align:center
only when the guide is
away from the top,


179
00:07:05.192 --> 00:07:07.528 line:-2 align:center
so that they'll be deactivated
when it's near it.


180
00:07:08.795 --> 00:07:12.299 line:-2 align:center
Then, we define a separate array
of constraints that we want


181
00:07:12.299 --> 00:07:14.434 line:-2 align:center
for when the keyboard gets close
to the top of the view.


182
00:07:14,434 --> 00:07:17,271 line:-2
So, instead of the top
of the keyboard layout guide,


183
00:07:17,271 --> 00:07:19,273 line:-1
we use the safe area's bottom.


184
00:07:19,273 --> 00:07:21,708 line:-1
Here's a quick visual to help.


185
00:07:21,708 --> 00:07:25,078 line:-2
Here's the guide
and the editView.


186
00:07:25.078 --> 00:07:26.613 line:-2 align:center
It's currently away
from the top,


187
00:07:26,613 --> 00:07:28,482 line:-2
so the awayFromTopConstraints
are active.


188
00:07:28,482 --> 00:07:31,919 line:-2
But, as you move the guide
closer to the top,


189
00:07:31.919 --> 00:07:34.855 line:-2 align:center
the awayFrom constraints
are deactivated,


190
00:07:34.855 --> 00:07:36.823 line:-2 align:center
and the nearTopConstraints
are activated,


191
00:07:36,823 --> 00:07:38,992 line:-2
dropping it down
to the bottom of the view.


192
00:07:38,992 --> 00:07:41,695 line:-2
When we're back away from
the top, the reverse happens.


193
00:07:41.695 --> 00:07:43.964 line:-2 align:center
Now, let's look
at horizontal movement.


194
00:07:43.964 --> 00:07:45.666 line:-1 align:center
When the keyboard is away


195
00:07:45,666 --> 00:07:47,634 line:-2
from both the leading
and trailing edges,


196
00:07:47.634 --> 00:07:51.305 line:-2 align:center
I want the editView to be
at the center of the keyboard.


197
00:07:51.305 --> 00:07:54.007 line:-2 align:center
I want the imageView to be
centered in the view, as well.


198
00:07:54.007 --> 00:07:57.277 line:-2 align:center
So, I define those constraints
and set them to be active


199
00:07:57,277 --> 00:08:00,280 line:-2
when I'm away from both
leading and trailing.


200
00:08:01,882 --> 00:08:05,252 line:-2
Now, let's set up what happens
when we approach an edge.


201
00:08:06,420 --> 00:08:08,589 line:-2
I want the editView
to move over to trailing


202
00:08:08.589 --> 00:08:10.958 line:-2 align:center
when we're at the trailing edge,
and leading to leading.


203
00:08:10.958 --> 00:08:14.261 line:-2 align:center
So, first,
let's take care of that.


204
00:08:14,261 --> 00:08:16,363 line:-2
I want the imageView
to move out of the way


205
00:08:16.363 --> 00:08:18.899 line:-2 align:center
of the keyboard a little,
so when we're near either edge,


206
00:08:18,899 --> 00:08:20,567 line:-2
I move it from the center
to the opposite side


207
00:08:20.567 --> 00:08:22.302 line:-2 align:center
from the keyboard,
leading to leading


208
00:08:22.302 --> 00:08:23.704 line:-2 align:center
when the keyboard is
on the trailing edge,


209
00:08:23,704 --> 00:08:25,906 line:-1
and vice versa.


210
00:08:25,906 --> 00:08:27,608 line:-2
Then, I just set these
to be active


211
00:08:27.608 --> 00:08:29.109 line:-1 align:center
when I'm near the proper edge.


212
00:08:29,109 --> 00:08:30,744 line:-2
They'll be activated
when the keyboard crosses


213
00:08:30.744 --> 00:08:33.514 line:-2 align:center
into that region,
and deactivated when it leaves.


214
00:08:33.514 --> 00:08:34.715 line:-1 align:center
And that's it!


215
00:08:34.715 --> 00:08:36.250 line:-2 align:center
Super advanced
keyboard integration


216
00:08:36,250 --> 00:08:37,651 line:-1
into your very own layout.


217
00:08:37,651 --> 00:08:39,820 line:-2
Let's take a look at what
that looks like one more time.


218
00:08:39.820 --> 00:08:42.356 line:-1 align:center
There's my editView.


219
00:08:42,356 --> 00:08:43,891 line:-2
It stays
with the floating keyboard,


220
00:08:43,891 --> 00:08:45,459 line:-1
and as we move towards the top,


221
00:08:45,459 --> 00:08:47,828 line:-1
it drops to the bottom.


222
00:08:47,828 --> 00:08:50,364 line:-1
And as we move side to side,


223
00:08:50.364 --> 00:08:53.433 line:-2 align:center
the adjustments
we just talked about happen.


224
00:08:53.433 --> 00:08:55.302 line:-1 align:center
Pretty cool!


225
00:08:55,302 --> 00:08:57,905 line:-2
Next, let's talk
about what "near"


226
00:08:57.905 --> 00:09:00.407 line:-2 align:center
and "awayFrom" mean
for the keyboard.


227
00:09:00.407 --> 00:09:02.609 line:-2 align:center
A docked keyboard is
considered to be


228
00:09:02,609 --> 00:09:05,179 line:-2
near the bottom
and awayFrom the other edges.


229
00:09:06.480 --> 00:09:09.850 line:-2 align:center
Undocked and split keyboards
can be awayFrom all edges,


230
00:09:09.850 --> 00:09:13.387 line:-2 align:center
or they can get
near the top edge.


231
00:09:13.387 --> 00:09:14.721 line:-1 align:center
When it's the floating keyboard,


232
00:09:14,721 --> 00:09:18,025 line:-2
it can be near
or awayFrom any edge,


233
00:09:18,025 --> 00:09:21,562 line:-2
and it can even be near two
adjacent edges at the same time.


234
00:09:21.562 --> 00:09:23.297 line:-2 align:center
This can lead to some
potentially interesting


235
00:09:23,297 --> 00:09:25,332 line:-2
conflicts that you
should be aware of.


236
00:09:25.332 --> 00:09:27.501 line:-1 align:center
Now, all of this only applies


237
00:09:27.501 --> 00:09:29.837 line:-2 align:center
when you set
followsUndockedKeyboard to true,


238
00:09:29.837 --> 00:09:31.104 line:-1 align:center
and for the rest of the talk,


239
00:09:31.104 --> 00:09:32.973 line:-2 align:center
that's the assumption
we'll be making.


240
00:09:32.973 --> 00:09:35.576 line:-2 align:center
Okay.
Final stretch:


241
00:09:35,576 --> 00:09:38,679 line:-2
considerations
for full keyboard integration.


242
00:09:38,679 --> 00:09:41,548 line:-2
A keyboard is a keyboard
is a keyboard--


243
00:09:41,548 --> 00:09:43,016 line:-1
until it's not.


244
00:09:43,016 --> 00:09:45,219 line:-2
When you choose to follow
the undocked keyboard,


245
00:09:45,219 --> 00:09:47,020 line:-2
you have some extra things
to think about.


246
00:09:47,020 --> 00:09:49,723 line:-2
So, what sorts of things should
you be paying attention to


247
00:09:49.723 --> 00:09:51.358 line:-1 align:center
when designing your layout?


248
00:09:51,358 --> 00:09:53,460 line:-2
Always remember
that the floating keyboard


249
00:09:53.460 --> 00:09:55.796 line:-1 align:center
can be awayFrom everything.


250
00:09:55.796 --> 00:09:57.664 line:-2 align:center
Do you have sufficient
information to be laid out


251
00:09:57.664 --> 00:10:00.467 line:-2 align:center
correctly if it's awayFrom
all edges?


252
00:10:00.467 --> 00:10:02.503 line:-2 align:center
Also, what should happen
when the keyboard is


253
00:10:02.503 --> 00:10:05.105 line:-2 align:center
awayFrom the bottom edge,
or near the top edge?


254
00:10:05.105 --> 00:10:07.174 line:-2 align:center
You want to be careful
with what's tied


255
00:10:07,174 --> 00:10:08,876 line:-2
to the topAnchor
of the keyboard, as well.


256
00:10:08,876 --> 00:10:11,245 line:-1
Because it can get way up there!


257
00:10:11,245 --> 00:10:13,614 line:-1
So, be careful.


258
00:10:13.614 --> 00:10:15.816 line:-2 align:center
The way to resolve that
is to set constraints


259
00:10:15,816 --> 00:10:17,618 line:-2
when the keyboard is awayFrom
the bottom edge


260
00:10:17,618 --> 00:10:19,753 line:-2
that move those views off
of the topAnchor of the keyboard


261
00:10:19,753 --> 00:10:22,356 line:-2
and down to the bottom
of the safeAreaLayoutGuide.


262
00:10:23.657 --> 00:10:26.193 line:-2 align:center
A user can also move
the keyboard at any time,


263
00:10:26.193 --> 00:10:29.363 line:-2 align:center
so you can't count on it
being any where specific.


264
00:10:29.363 --> 00:10:31.632 line:-2 align:center
You'll wanna keep that in mind,
as well.


265
00:10:32,699 --> 00:10:34,334 line:-1
Here's a rare specimen:


266
00:10:34.334 --> 00:10:36.003 line:-1 align:center
the split keyboard.


267
00:10:36,003 --> 00:10:38,739 line:-2
Split and undocked keyboards
are awayFrom all edges,


268
00:10:38.739 --> 00:10:40.874 line:-2 align:center
until it gets too close
to the top.


269
00:10:40.874 --> 00:10:42.276 line:-1 align:center
As with a docked keyboard,


270
00:10:42,276 --> 00:10:44,878 line:-2
it's always away from leading
and trailing, as well.


271
00:10:44,878 --> 00:10:46,947 line:-1
Let's talk about some new stuff.


272
00:10:46.947 --> 00:10:48.549 line:-2 align:center
There's a new way
to get text into your app


273
00:10:48.549 --> 00:10:49.850 line:-1 align:center
this year, using the camera.


274
00:10:52.553 --> 00:10:53.654 line:-1 align:center
It's still a keyboard,


275
00:10:53,654 --> 00:10:55,822 line:-2
so it will still be able
to use the guide.


276
00:10:56,823 --> 00:10:58,792 line:-2
It's the same
as a regular docked keyboard,


277
00:10:58,792 --> 00:11:00,694 line:-1
but it's one of a few keyboards


278
00:11:00.694 --> 00:11:02.696 line:-2 align:center
that can be pretty much
full screen.


279
00:11:02,696 --> 00:11:04,998 align:center
To learn more about taking
advantage of text input


280
00:11:04,998 --> 00:11:06,433 align:center
via camera this year,


281
00:11:06,433 --> 00:11:10,170 align:center
tune into "Use the camera
for keyboard input in your app."


282
00:11:10.170 --> 00:11:12.206 line:-1 align:center
Continuing with new things,


283
00:11:12,206 --> 00:11:14,208 line:-2
what about when there's
a hardware keyboard attached?


284
00:11:14.208 --> 00:11:15.642 line:-1 align:center
Well, new this year,


285
00:11:15.642 --> 00:11:17.444 line:-2 align:center
we have an adaptive
shortcuts bar


286
00:11:17.444 --> 00:11:19.313 line:-2 align:center
that is no longer
always full-width.


287
00:11:19.313 --> 00:11:22.249 line:-2 align:center
It changes width based
on what language you're using


288
00:11:22.249 --> 00:11:23.884 line:-2 align:center
and how many buttons
are in the bar.


289
00:11:24,985 --> 00:11:27,487 line:-2
Previously, it was always
the full width of the screen,


290
00:11:27,487 --> 00:11:29,923 line:-2
but now, if you're following
the undocked keyboard,


291
00:11:29,923 --> 00:11:31,458 line:-2
you can actually use
the real leading


292
00:11:31.458 --> 00:11:34.094 line:-1 align:center
and trailing edges of the bar.


293
00:11:34.094 --> 00:11:36.330 line:-2 align:center
So, what's the story
here with edges?


294
00:11:36.330 --> 00:11:39.199 line:-2 align:center
This is always near the bottom
and, in its normal position,


295
00:11:39,199 --> 00:11:41,101 line:-2
it's awayFrom
the other three edges.


296
00:11:41,101 --> 00:11:43,604 line:-1
But it's collapsable!


297
00:11:44.338 --> 00:11:46.173 line:-2 align:center
If you collapse it,
it can also be


298
00:11:46.173 --> 00:11:48.175 line:-2 align:center
near the leading
or trailing edge.


299
00:11:49,376 --> 00:11:52,312 line:-2
This is one of several reasons
why you might wanna be careful


300
00:11:52.312 --> 00:11:54.648 line:-2 align:center
about using the widthAnchor
of the keyboard, by the way.


301
00:11:54,648 --> 00:11:56,750 line:-1
It can be very small,


302
00:11:56.750 --> 00:11:58.852 line:-2 align:center
or it can be the full width
of the screen.


303
00:11:58,852 --> 00:12:02,523 line:-2
Now, let's get into the most
fun part of the tour:


304
00:12:02,523 --> 00:12:05,058 line:-2
what about if you're not
the only app onscreen,


305
00:12:05,058 --> 00:12:07,895 line:-2
and you're following
the undocked keyboard?


306
00:12:07,895 --> 00:12:09,897 line:-2
First, remember
that the keyboard


307
00:12:09.897 --> 00:12:11.131 line:-1 align:center
can leave your app space.


308
00:12:11.131 --> 00:12:12.766 line:-2 align:center
When that happens,
we're going to treat it


309
00:12:12,766 --> 00:12:14,868 line:-1
as though it's been dismissed.


310
00:12:14.868 --> 00:12:16.937 line:-2 align:center
Second, when your app is
at its narrowest,


311
00:12:16.937 --> 00:12:18.739 line:-2 align:center
the top and bottom edges
are in play,


312
00:12:18,739 --> 00:12:20,674 line:-2
but leading and trailing
will stay awayFrom,


313
00:12:20,674 --> 00:12:23,644 line:-2
whether the keyboard
is over your app or not.


314
00:12:23.644 --> 00:12:26.647 line:-2 align:center
Also, the guide is sized
for what part of the keyboard


315
00:12:26,647 --> 00:12:27,948 line:-1
is over your app's window,


316
00:12:27.948 --> 00:12:29.816 line:-2 align:center
if you're not
the only thing onscreen.


317
00:12:29.816 --> 00:12:32.419 line:-2 align:center
Let's take a look at some
visuals to show you what I mean.


318
00:12:33.153 --> 00:12:34.888 line:-2 align:center
All of this only applies
if you have


319
00:12:34,888 --> 00:12:36,690 line:-2
followsUndockedKeyboard
set to true.


320
00:12:36,690 --> 00:12:38,559 line:-2
If you haven't,
the guide is at the bottom


321
00:12:38.559 --> 00:12:41.228 line:-2 align:center
of the screen,
the full width of your window.


322
00:12:41.228 --> 00:12:42.529 line:-1 align:center
When you're full screen


323
00:12:42,529 --> 00:12:44,164 line:-2
and the keyboard is floating
and in the middle,


324
00:12:44,164 --> 00:12:45,966 line:-1
you're awayFrom everything.


325
00:12:45,966 --> 00:12:48,302 line:-2
All of your awayFrom constraints
have been activated,


326
00:12:48.302 --> 00:12:50.971 line:-2 align:center
and all of your near constraints
have been deactivated.


327
00:12:52,072 --> 00:12:54,908 line:-2
When another app is onscreen,
if you're the wider app,


328
00:12:54.908 --> 00:12:56.476 line:-2 align:center
you're still wide enough
for the keyboard


329
00:12:56.476 --> 00:12:59.213 line:-2 align:center
to be able to be
awayFrom everything.


330
00:12:59.213 --> 00:13:00.681 line:-1 align:center
But it needs to move less


331
00:13:00,681 --> 00:13:03,250 line:-1
to be near a horizontal edge.


332
00:13:03,250 --> 00:13:06,153 line:-2
This is similar to being
in portrait, too.


333
00:13:06.153 --> 00:13:09.456 line:-2 align:center
But, at half screen,
the keyboard in the same spot


334
00:13:09,456 --> 00:13:11,225 line:-1
is now near your leading edge,


335
00:13:11.225 --> 00:13:13.460 line:-2 align:center
and the guide
has gotten sized to match


336
00:13:13,460 --> 00:13:16,196 line:-2
only the part of the keyboard
that's over your app.


337
00:13:17,364 --> 00:13:20,200 line:-2
When you're the narrow app,
the guide is always considered


338
00:13:20,200 --> 00:13:21,902 line:-2
to be awayFrom
the horizontal edges,


339
00:13:21.902 --> 00:13:24.605 line:-2 align:center
the same as an iPhone
or a docked keyboard,


340
00:13:24,605 --> 00:13:27,307 line:-2
but you can still be
near the top edge.


341
00:13:28,308 --> 00:13:30,811 line:-2
And notice that, again,
the guide is sized


342
00:13:30,811 --> 00:13:33,480 line:-2
to account for the portion
over your app only.


343
00:13:33.480 --> 00:13:35.148 line:-1 align:center
And when you dock the keyboard


344
00:13:35.148 --> 00:13:37.851 line:-1 align:center
and it's full sized again,


345
00:13:37.851 --> 00:13:41.121 line:-2 align:center
it's also away from leading,
trailing, and top.


346
00:13:41.121 --> 00:13:43.257 line:-2 align:center
And notice, again,
that the layout guide


347
00:13:43.257 --> 00:13:46.560 line:-2 align:center
is once again sized
for what's over your app.


348
00:13:46.560 --> 00:13:49.796 line:-2 align:center
If you're a slide-over app, it
will resize for that, as well.


349
00:13:50,264 --> 00:13:52,633 line:-2
With the previous examples
and our demo code,


350
00:13:52.633 --> 00:13:53.934 line:-1 align:center
this should all be well-handled.


351
00:13:53,934 --> 00:13:55,669 line:-2
You just have to keep
in mind that you might be


352
00:13:59.473 --> 00:14:01.642 line:-2 align:center
to the next level
of keyboard integration.


353
00:14:01.642 --> 00:14:04.344 line:-1 align:center
So, use keyboard layout guide.


354
00:14:04,344 --> 00:14:05,746 line:-1
If your app can,


355
00:14:05.746 --> 00:14:07.447 line:-2 align:center
take advantage
of the advanced features


356
00:14:07,447 --> 00:14:09,016 line:-1
of UI tracking layout guide.


357
00:14:09,016 --> 00:14:11,418 line:-1
And, most importantly,


358
00:14:11.418 --> 00:14:13.253 line:-2 align:center
if you have been thinking
about keyboard layout


359
00:14:13,253 --> 00:14:15,756 line:-2
as fighting
or avoiding the keyboard,


360
00:14:15,756 --> 00:14:19,026 line:-2
start thinking about integrating
it into your layout instead.


361
00:14:19.026 --> 00:14:21.528 line:-2 align:center
And if you've already been
thinking about it that way,


362
00:14:21.528 --> 00:14:24.932 line:-2 align:center
now you have even more tools
to realize your full vision.


363
00:14:25,499 --> 00:14:27,401 line:-2
That brings us
to the end of our tour.


364
00:14:27,401 --> 00:14:28,602 line:-1
Please make sure you have


365
00:14:28.602 --> 00:14:30.337 line:-2 align:center
all your personal items
before exiting,


366
00:14:30.337 --> 00:14:31.772 line:-2 align:center
don't forget
to visit the gift shop,


367
00:14:31,772 --> 00:14:34,174 line:-1
and have a great WWDC.


368
00:14:34,174 --> 00:14:37,177 position:49% align:center
[ethereal percussion music]

