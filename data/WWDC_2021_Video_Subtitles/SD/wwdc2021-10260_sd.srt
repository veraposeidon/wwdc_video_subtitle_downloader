2
00:00:02,069 --> 00:00:07,074 line:-1
[upbeat music]


3
00:00:09.042 --> 00:00:11.178 line:-2 align:center
[Michael]
Hi, I'm Michael Ochs.


4
00:00:11.178 --> 00:00:13.146 line:-2 align:center
I'm a framework engineer
on the UIKit team.


5
00:00:13,146 --> 00:00:16,250 line:-2
Welcome to Focus
on iPad keyboard navigation.


6
00:00:17,150 --> 00:00:20,454 line:-2
People love using hardware
keyboards with their iPads.


7
00:00:20,454 --> 00:00:24,525 line:-2
Mac Catalyst and iPadOS
15 introduce powerful API


8
00:00:24,525 --> 00:00:27,261 line:-2
to support keyboard navigation
in your app.


9
00:00:28,095 --> 00:00:31,265 line:-2
Navigating any app
with a keyboard on iPadOS


10
00:00:31.265 --> 00:00:33.200 line:-1 align:center
will feel very familiar.


11
00:00:33.200 --> 00:00:36.837 line:-2 align:center
The tab key navigates between
significant areas in an app.


12
00:00:36,837 --> 00:00:39,606 line:-2
The arrow keys navigate
within an area,


13
00:00:39,606 --> 00:00:41,975 line:-2
and an item can be
selected with the return key


14
00:00:41.975 --> 00:00:45.312 line:-2 align:center
on iPadOS or the space bar
on Mac Catalyst.


15
00:00:45,312 --> 00:00:48,182 line:-2
If your app already
uses these key commands,


16
00:00:48,182 --> 00:00:50,417 line:-2
your custom commands
will no longer work.


17
00:00:50,417 --> 00:00:55,022 line:-2
I'll show you how to resolve
these conflicts later.


18
00:00:55,022 --> 00:00:58,325 line:-2
First, let me show you
keyboard navigation in action.


19
00:00:58,325 --> 00:01:01,695 line:-2
In Photos, I can press the tab
key to move the focus


20
00:01:01,695 --> 00:01:03,764 line:-2
from the Library cell
in the sidebar


21
00:01:03,764 --> 00:01:06,867 line:-1
to the photos grid on the right.


22
00:01:06.867 --> 00:01:09.670 line:-2 align:center
Now I can navigate
between the photos


23
00:01:09.670 --> 00:01:13.707 line:-2 align:center
in the grid
using the arrow keys.


24
00:01:13.707 --> 00:01:15.909 line:-2 align:center
Once I found
the photo I'm looking for,


25
00:01:15.909 --> 00:01:18.445 line:-2 align:center
I can select it
by pressing return.


26
00:01:21.582 --> 00:01:24.651 line:-2 align:center
Once you compile
with the iOS 15 SDK,


27
00:01:24,651 --> 00:01:27,154 line:-2
this behavior will be
enabled automatically


28
00:01:27,154 --> 00:01:30,390 line:-2
for text fields,
text views, and sidebars.


29
00:01:30,390 --> 00:01:33,026 line:-2
You should also
opt in other collection,


30
00:01:33,026 --> 00:01:35,796 line:-2
table, and custom views
for a great experience.


31
00:01:35.796 --> 00:01:38.432 line:-2 align:center
I'll show you how
to do this in a minute.


32
00:01:39,266 --> 00:01:41,368 line:0
I know this
is an exciting feature,


33
00:01:41,368 --> 00:01:44,738 line:0
but don't make every element
in your app keyboard navigable.


34
00:01:44,738 --> 00:01:46,373 line:0
Keyboard navigation
is intended


35
00:01:46,373 --> 00:01:49,076 line:0
to give users access
to key features of your app,


36
00:01:49,076 --> 00:01:53,447 line:0
so focus on text input, lists,
and collection views.


37
00:01:53,447 --> 00:01:55,549 align:center
Leave controls such as buttons,


38
00:01:55,549 --> 00:01:58,051 align:center
segmented controls,
and switches aside.


39
00:01:58,051 --> 00:02:00,954 line:0
Full Keyboard access already
allows these controls


40
00:02:00,954 --> 00:02:02,623 line:0
to be keyboard navigable.


41
00:02:02,623 --> 00:02:04,558 line:0
To learn more
about full Keyboard access,


42
00:02:04,558 --> 00:02:08,462 line:0
check out "Support Full Keyboard
Access in your iOS app."


43
00:02:08,462 --> 00:02:12,032 line:0
Keyboard navigation on iPadOS
uses the same focus system


44
00:02:12,032 --> 00:02:13,333 line:0
as tvOS


45
00:02:13,333 --> 00:02:15,335 align:center
If you have
written tvOS apps before,


46
00:02:15,335 --> 00:02:17,871 line:0
many of the APIs
will feel familiar.


47
00:02:17,871 --> 00:02:19,773 align:center
However,
there are some new APIs


48
00:02:19,773 --> 00:02:23,410 line:0
and behavioral differences
that you should be aware of.


49
00:02:23,410 --> 00:02:26,180 align:center
If you wanna learn more about
the focus system in general,


50
00:02:26,180 --> 00:02:28,348 align:center
check out
"Focus Interaction in tvOS."


51
00:02:30.284 --> 00:02:31.852 line:-1 align:center
In this video,


52
00:02:31.852 --> 00:02:34.488 line:-2 align:center
I'm going to show you how
to make more content in your app


53
00:02:34,488 --> 00:02:37,457 line:-2
focusable and how
to customize the appearance


54
00:02:37.457 --> 00:02:39.626 line:-1 align:center
of these focusable items.


55
00:02:39,626 --> 00:02:42,496 line:-2
I'll show you some special
behavior in sidebars


56
00:02:42,496 --> 00:02:44,998 line:-2
that you should be aware of,
and we are going to talk


57
00:02:44,998 --> 00:02:49,203 line:-2
about focus groups, a new way
to define structure in your app.


58
00:02:49,203 --> 00:02:52,172 line:-2
At the end, I'm going to show
you some important changes


59
00:02:52,172 --> 00:02:55,909 line:-2
in the responder chain that
you should be familiar with.


60
00:02:55,909 --> 00:02:57,744 line:-2
But now,
let's take a look at how


61
00:02:57,744 --> 00:03:01,048 line:-2
to make more elements
in your UI focusable.


62
00:03:01,048 --> 00:03:04,818 line:-2
canBecomeFocused
is the single source of truth.


63
00:03:04.818 --> 00:03:08.555 line:-2 align:center
It is a read-only
property of UIFocusItem.


64
00:03:08.555 --> 00:03:12.559 line:-2 align:center
Override it and return
true to make an item focusable.


65
00:03:12,559 --> 00:03:16,730 line:-2
Now, you might be wondering,
what is a focus item?


66
00:03:16,730 --> 00:03:20,534 line:-2
The backbone of the focus
system are the two protocols:


67
00:03:20,534 --> 00:03:24,338 line:-2
UIFocusItem
and UIFocusEnvironment.


68
00:03:24,338 --> 00:03:28,342 line:-2
FocusItems are simply that,
items that can be focused.


69
00:03:28.342 --> 00:03:30.644 line:-2 align:center
FocusEnvironments
define the hierarchy


70
00:03:30.644 --> 00:03:33.013 line:-1 align:center
of focusable items.


71
00:03:33,013 --> 00:03:35,916 line:-2
UIView conforms to both
of these protocols,


72
00:03:35,916 --> 00:03:38,352 line:-2
since any view
can be focused itself,


73
00:03:38.352 --> 00:03:42.389 line:-2 align:center
but it can also contain subviews
that can be focused.


74
00:03:42,389 --> 00:03:44,324 line:-2
UIViewController,
on the other hand,


75
00:03:44.324 --> 00:03:46.627 line:-2 align:center
only conforms
to UIFocusEnvironment,


76
00:03:46.627 --> 00:03:50.264 line:-2 align:center
since it doesn't provide
any visuals itself.


77
00:03:50,264 --> 00:03:54,635 line:-2
You can also implement both
protocols on your own objects.


78
00:03:54,635 --> 00:03:57,538 line:-2
This allows you to adopt focus
in content that is rendered


79
00:03:57,538 --> 00:04:00,174 line:-2
with other technologies,
like Metal.


80
00:04:00.174 --> 00:04:03.477 line:-2 align:center
The most likely candidates
for keyboard navigation


81
00:04:03.477 --> 00:04:06.313 line:-2 align:center
are cells in a table
or collection view.


82
00:04:06.313 --> 00:04:08.415 line:-2 align:center
UIKit offers
some convenience APIs,


83
00:04:08.415 --> 00:04:10.517 line:-1 align:center
so you don't have to subclass.


84
00:04:10.517 --> 00:04:14.188 line:-2 align:center
Set allowsFocus to true
on a table or collection view


85
00:04:14.188 --> 00:04:17.157 line:-2 align:center
to make all
of its cells focusable.


86
00:04:17,157 --> 00:04:20,494 line:-2
Note that in sidebars,
allowsFocus is true by default.


87
00:04:22,896 --> 00:04:24,565 line:-1
For more fine-grained control,


88
00:04:24,565 --> 00:04:27,801 line:-2
you can use canFocusItemAt
indexPath in your delegate


89
00:04:27.801 --> 00:04:31.738 line:-2 align:center
to control focusability
for each cell individually.


90
00:04:31,738 --> 00:04:33,907 line:-2
Both of these methods
will only have an effect


91
00:04:33.907 --> 00:04:36.743 line:-2 align:center
on cells that don't
override canBecomeFocused.


92
00:04:38,679 --> 00:04:41,415 line:-2
If a focus item is not
behaving as you would expect,


93
00:04:41.415 --> 00:04:43.717 line:-2 align:center
there are some
debugging tools available.


94
00:04:43.717 --> 00:04:45.252 line:-1 align:center
In lldb you can call


95
00:04:45.252 --> 00:04:48.188 line:-2 align:center
UIFocusDebugger.
CheckFocusability(for item:)


96
00:04:48.188 --> 00:04:50.858 line:-2 align:center
and pass in the item
you want to debug.


97
00:04:50,858 --> 00:04:53,927 line:-2
For example, a view that you
are trying to make focusable.


98
00:04:53.927 --> 00:04:57.030 line:-2 align:center
It will give you an explanation
of why the focus system


99
00:04:57,030 --> 00:05:00,133 line:-2
does not consider this
item to be focusable.


100
00:05:03,003 --> 00:05:06,473 line:-2
So, we talked about how
to make your UI focusable.


101
00:05:06,473 --> 00:05:08,609 line:-2
Let's take a closer
look at the appearance


102
00:05:08,609 --> 00:05:10,043 line:-1
of focused items.


103
00:05:10.043 --> 00:05:12.646 line:-2 align:center
There are two styles
you will commonly see


104
00:05:12.646 --> 00:05:14.248 line:-1 align:center
throughout the system.


105
00:05:14,248 --> 00:05:16,116 line:-1
First, there is the Halo Effect,


106
00:05:16,116 --> 00:05:18,552 line:-2
similar to the focus ring
on macOS.


107
00:05:18.552 --> 00:05:22.589 line:-2 align:center
In fact, this is the default
effect on Mac Catalyst.


108
00:05:22,589 --> 00:05:25,025 line:-2
On iPadOS,
you can use this effect


109
00:05:25,025 --> 00:05:29,763 line:-2
by assigning a UIFocusHaloEffect
to the focusEffect property.


110
00:05:29,763 --> 00:05:31,865 line:-2
If initialized with no
arguments,


111
00:05:31.865 --> 00:05:34.835 line:-2 align:center
the system will infer
the shape of the halo.


112
00:05:34,835 --> 00:05:38,972 line:-2
You can also customize the shape
to better match the content.


113
00:05:38.972 --> 00:05:42.576 line:-2 align:center
For example,
if an image has rounded corners,


114
00:05:42,576 --> 00:05:44,645 line:-2
the halo should match
its appearance


115
00:05:44.645 --> 00:05:46.747 line:-1 align:center
by also having rounded corners.


116
00:05:48,615 --> 00:05:52,419 line:-2
UIFocusHaloEffect has
a number of initializers


117
00:05:52.419 --> 00:05:56.056 line:-2 align:center
for different shapes,
including one for rounded rects.


118
00:05:56,056 --> 00:05:59,193 line:-2
Use these initializers
to make sure the halo's shape


119
00:05:59,193 --> 00:06:02,629 line:-2
creates an outline
around your view's content.


120
00:06:02.629 --> 00:06:05.766 line:-2 align:center
The Halo Effect also gives you
control over its position


121
00:06:05,766 --> 00:06:07,768 line:-1
in the view hierarchy.


122
00:06:07,768 --> 00:06:11,305 line:-2
Here the halo is rendering
above the badge on the image,


123
00:06:11.305 --> 00:06:13.207 line:-2 align:center
but it would look better
if the halo was


124
00:06:13,207 --> 00:06:15,642 line:-1
between the image and the badge.


125
00:06:15,642 --> 00:06:19,546 line:-2
By specifying the image view
as the referenceView,


126
00:06:19,546 --> 00:06:22,683 line:-2
UIKit will render the halo
on top of the image


127
00:06:22,683 --> 00:06:25,152 line:-1
and below the badge.


128
00:06:25.152 --> 00:06:27.955 line:-2 align:center
The reference view
defines the relative order


129
00:06:27,955 --> 00:06:31,124 line:-2
of the halo
in the view hierarchy.


130
00:06:31,124 --> 00:06:33,427 line:-2
You can also
specify a container view,


131
00:06:33.427 --> 00:06:36.230 line:-2 align:center
which defines the superview
of the halo effect.


132
00:06:36.230 --> 00:06:38.866 line:-2 align:center
This is useful
if the direct superview


133
00:06:38.866 --> 00:06:41.802 line:-2 align:center
of the focused item
is clipping its content.


134
00:06:45.172 --> 00:06:48.208 line:-2 align:center
Both of these are optional,
and you should only provide them


135
00:06:48,208 --> 00:06:51,311 line:-2
if the inferred appearance
isn't what you expect.


136
00:06:53,213 --> 00:06:55,749 line:0
Cells in collection
and table views should


137
00:06:55,749 --> 00:06:57,851 align:center
show a halo around
them only when they have


138
00:06:57,851 --> 00:07:00,487 align:center
fully-opaque content,
like an image.


139
00:07:00,487 --> 00:07:03,490 align:center
In all other cases,
when a cell becomes focused,


140
00:07:03,490 --> 00:07:05,826 line:0
it should look highlighted.


141
00:07:05,826 --> 00:07:08,729 align:center
This means the background
should turn into the tint color


142
00:07:08,729 --> 00:07:10,531 line:0
of your app,
and the foreground color


143
00:07:10,531 --> 00:07:14,234 line:0
for text and icons should
be adjusted for good contrast.


144
00:07:14,234 --> 00:07:18,505 line:0
This highlight appearance is not
available as a UIFocusEffect.


145
00:07:18,505 --> 00:07:20,207 align:center
Instead,
you will get this appearance


146
00:07:20,207 --> 00:07:22,109 align:center
automatically
when using the background


147
00:07:22,109 --> 00:07:26,246 align:center
and content configurations
introduced in iOS 14.


148
00:07:26,246 --> 00:07:27,681 line:0
To learn more about these,


149
00:07:27,681 --> 00:07:30,617 line:0
take a look
at "Modern cell configuration."


150
00:07:30,617 --> 00:07:33,287 align:center
If you're not using background
and content configurations,


151
00:07:33,287 --> 00:07:36,256 line:0
the sample app shows you
how to get the correct color


152
00:07:36,256 --> 00:07:37,691 line:0
in all cases.


153
00:07:37,691 --> 00:07:39,560 line:0
Make sure to check that out.


154
00:07:40,661 --> 00:07:43,430 align:center
Now, if you want
to apply a custom appearance,


155
00:07:43.430 --> 00:07:45.899 line:-2 align:center
first set
the focusEffect property to nil.


156
00:07:45.899 --> 00:07:48.902 line:-2 align:center
This turns off
any system styling.


157
00:07:48,902 --> 00:07:50,537 line:-1
Next override


158
00:07:50,537 --> 00:07:53,607 line:-2
didUpdateFocus (in: context
withAnimationCoordinator :)


159
00:07:53.607 --> 00:07:56.109 line:-1 align:center
on your focus item.


160
00:07:56.109 --> 00:07:58.679 line:-2 align:center
If the next focused item
is self,


161
00:07:58.679 --> 00:08:01.415 line:-1 align:center
apply styling to indicate focus.


162
00:08:01,415 --> 00:08:03,884 line:-2
If the previously-focused
item is self,


163
00:08:03,884 --> 00:08:07,254 line:-2
restore
the nonfocused appearance.


164
00:08:07.254 --> 00:08:10.824 line:-2 align:center
You should only make changes
in didUpdateFocus(in: context)


165
00:08:10,824 --> 00:08:13,360 line:-2
when the next
or previously focused item


166
00:08:13,360 --> 00:08:16,563 line:-2
is relevant
to this environment.


167
00:08:16,563 --> 00:08:19,199 line:0
This is because
all ancestor environments


168
00:08:19,199 --> 00:08:21,101 align:center
of the previously focused item,


169
00:08:21,101 --> 00:08:22,970 align:center
as well
as the next focused item,


170
00:08:22,970 --> 00:08:26,306 line:0
receive a call
to didUpdateFocus(in: context).


171
00:08:26,306 --> 00:08:30,844 line:0
So every superview and view
controller will get this call.


172
00:08:30,844 --> 00:08:33,647 line:0
This allows for very
flexible implementations,


173
00:08:33,647 --> 00:08:37,551 line:0
where a parent can react
to focus changes of a child.


174
00:08:37,551 --> 00:08:40,888 line:-2
Now let's take a closer look
at a feature specific


175
00:08:40.888 --> 00:08:44.658 line:-2 align:center
to sidebars
and similar context-changing UI.


176
00:08:44,658 --> 00:08:47,928 line:-2
Selection and focus
are two different concepts.


177
00:08:47.928 --> 00:08:49.630 line:-1 align:center
However, in a sidebar,


178
00:08:49.630 --> 00:08:52.966 line:-2 align:center
when I move focus,
the selection follows.


179
00:08:56,003 --> 00:09:00,073 line:-2
Likewise, if I select
a new cell by tapping on it,


180
00:09:00,073 --> 00:09:03,744 line:-2
focus also moves
to this newly-selected cell.


181
00:09:05,712 --> 00:09:09,449 line:-2
This is called
"selection follows focus."


182
00:09:09,449 --> 00:09:12,519 line:-2
Set this property
on any table or collection view


183
00:09:12,519 --> 00:09:15,989 line:-2
to the behavior you want
for most of the cells.


184
00:09:15.989 --> 00:09:19.126 line:-2 align:center
If you want to change the
behavior for individual cells,


185
00:09:19,126 --> 00:09:22,696 line:-2
implement selectionFollowsFocus
ForItemAtIndexPath


186
00:09:22,696 --> 00:09:24,431 line:-1
in your delegate.


187
00:09:24.431 --> 00:09:26.600 line:-2 align:center
Turning off
selectionFollowsFocus


188
00:09:26.600 --> 00:09:30.103 line:-2 align:center
is useful when selecting a cell
causes a disruptive action


189
00:09:30.103 --> 00:09:32.606 line:-2 align:center
to occur, such
as pushing a new view controller


190
00:09:32,606 --> 00:09:35,642 line:-2
in the same column
or presenting an alert.


191
00:09:37.211 --> 00:09:40.280 line:-2 align:center
For example, in Photos,
selecting "new album"


192
00:09:40,280 --> 00:09:43,183 line:-2
shows an alert asking
for the album's name.


193
00:09:44,484 --> 00:09:46,320 line:-1
When using the delegate,


194
00:09:46.320 --> 00:09:48.589 line:-2 align:center
the value of the property
still matters.


195
00:09:48,589 --> 00:09:52,059 line:-2
Set selectionFollowsFocus
to the overall intent


196
00:09:52,059 --> 00:09:54,261 line:-2
of the collection view
and then use the delegate


197
00:09:54,261 --> 00:09:58,432 line:-2
to express special behavior
for individual cells.


198
00:09:58.432 --> 00:10:01.068 line:-2 align:center
The system will take
both values into account


199
00:10:01.068 --> 00:10:03.036 line:-2 align:center
when choosing
the right behavior.


200
00:10:04.838 --> 00:10:07.174 line:-2 align:center
Now, let's take
a look at focus groups,


201
00:10:07.174 --> 00:10:09.309 line:-2 align:center
a new feature
for keyboard navigation


202
00:10:09.309 --> 00:10:11.745 line:-2 align:center
to express structure
in your app.


203
00:10:11.745 --> 00:10:15.415 line:-2 align:center
UIKit automatically infers
focus groups from the hierarchy,


204
00:10:15,415 --> 00:10:18,418 line:-2
but you can also declare
them explicitly to customize


205
00:10:18,418 --> 00:10:21,688 line:-2
how the tab key moves
focus through your app.


206
00:10:22.589 --> 00:10:25.959 line:-2 align:center
tvOS only
uses directional focus.


207
00:10:25,959 --> 00:10:28,962 line:-2
You can reach every
single element simply by swiping


208
00:10:28,962 --> 00:10:33,100 line:-2
on the Siri Remote or using
the arrow keys on a keyboard.


209
00:10:33,100 --> 00:10:36,136 line:-2
iPadOS and Mac Catalyst,
on the other hand,


210
00:10:36,136 --> 00:10:39,339 line:-2
have two different methods
of navigating with the keyboard:


211
00:10:39,339 --> 00:10:42,543 line:-2
The arrow keys
and the tab key.


212
00:10:42.543 --> 00:10:46.380 line:-2 align:center
Unlike tvOS,
the arrow keys only move focus


213
00:10:46,380 --> 00:10:49,149 line:-2
within a defined area
of your app.


214
00:10:49,149 --> 00:10:52,386 line:-2
These areas
are called focus groups.


215
00:10:52,386 --> 00:10:54,588 line:-2
For example,
I can navigate the list


216
00:10:54.588 --> 00:10:58.892 line:-2 align:center
of reminders using the up
and down arrow keys.


217
00:11:03,397 --> 00:11:06,567 line:-2
To navigate the lists,
I can press the tab key


218
00:11:06,567 --> 00:11:08,268 line:-1
to focus on the search field


219
00:11:08,268 --> 00:11:11,939 line:-2
and then press tab again
to move to the lists.


220
00:11:11,939 --> 00:11:14,141 line:-1
If I press tab one more time,


221
00:11:14,141 --> 00:11:17,077 line:-2
focus loops
back to the reminders.


222
00:11:18.879 --> 00:11:21.882 line:-2 align:center
The reminders, the search field,
and the lists


223
00:11:21,882 --> 00:11:23,550 line:-1
are each a focus group,


224
00:11:23.550 --> 00:11:26.620 line:-2 align:center
and the tab key
moves focus between them.


225
00:11:28,889 --> 00:11:30,624 line:-1
When focus moves to a group,


226
00:11:30,624 --> 00:11:33,994 line:-2
it chooses an item inside
of that group to focus on.


227
00:11:33.994 --> 00:11:37.764 line:-2 align:center
That item is called
the group's primary item.


228
00:11:39,633 --> 00:11:42,436 line:-2
A group's
primary item can change.


229
00:11:42,436 --> 00:11:46,273 line:-2
For example, here I focus
on the second reminder.


230
00:11:46,273 --> 00:11:48,375 line:-1
The focus system remembers this


231
00:11:48.375 --> 00:11:50.644 line:-2 align:center
when I switch away
from this group,


232
00:11:50.644 --> 00:11:53.180 line:-2 align:center
and when I come
back to the reminders,


233
00:11:53.180 --> 00:11:55.415 line:-2 align:center
focus moves to the second item
again


234
00:11:55.415 --> 00:11:59.319 line:-2 align:center
as this item is now
the group's primary item.


235
00:11:59.319 --> 00:12:03.090 line:-2 align:center
The tab key connects
the primary items of each group


236
00:12:03,090 --> 00:12:04,825 line:-1
and moves focus between them.


237
00:12:04,825 --> 00:12:07,060 line:-1
This is called the tab loop.


238
00:12:08,328 --> 00:12:10,998 line:-2
Some environments define
their own focus groups


239
00:12:10.998 --> 00:12:12.065 line:-1 align:center
by default.


240
00:12:12.065 --> 00:12:15.169 line:-2 align:center
These include scroll views
like collection and table view,


241
00:12:15,169 --> 00:12:19,506 line:-2
as well as text input classes,
like text fields and text views.


242
00:12:19,506 --> 00:12:22,276 line:-2
If an environment does
not define its own group,


243
00:12:22.276 --> 00:12:24.778 line:-2 align:center
it inherits the group
of the parent environment,


244
00:12:24.778 --> 00:12:27.814 line:-2 align:center
commonly its superview
or view controller.


245
00:12:27.814 --> 00:12:31.218 line:-2 align:center
For example, by default,
every cell automatically belongs


246
00:12:31.218 --> 00:12:33.153 line:-2 align:center
to the group
of its collection view.


247
00:12:33,153 --> 00:12:34,688 line:-1
By being in the same group,


248
00:12:34.688 --> 00:12:38.926 line:-2 align:center
you can navigate between
cells with the arrow keys.


249
00:12:38.926 --> 00:12:40.994 line:-2 align:center
To define
a focus group yourself,


250
00:12:40,994 --> 00:12:44,831 line:-2
assign a focus group identifier
to any view or view controller.


251
00:12:44,831 --> 00:12:47,634 line:-2
When two environments
share the same identifier,


252
00:12:47,634 --> 00:12:49,903 line:-2
either explicitly
or by inheritance,


253
00:12:49,903 --> 00:12:52,940 line:-1
they are part of the same group.


254
00:12:52,940 --> 00:12:55,542 line:-2
To customize the primary item
of a group,


255
00:12:55,542 --> 00:12:58,612 line:-2
assign a focus group priority
to that item.


256
00:12:58,612 --> 00:13:02,850 line:-2
This defines how important
an item is within the group.


257
00:13:02.850 --> 00:13:05.853 line:-2 align:center
The visible item
with the highest priority


258
00:13:05.853 --> 00:13:08.822 line:-1 align:center
is the group's primary item.


259
00:13:08,822 --> 00:13:10,958 line:-2
By default,
the system assigns one


260
00:13:10.958 --> 00:13:15.662 line:-2 align:center
of the predefined priorities:
Ignored, the default priority;


261
00:13:15,662 --> 00:13:19,299 line:-2
previously focused;
prioritized,


262
00:13:19.299 --> 00:13:22.436 line:-2 align:center
indicating an item is more
important than others,


263
00:13:22,436 --> 00:13:25,772 line:-2
like a selected cell;
and currently focused,


264
00:13:25.772 --> 00:13:28.876 line:-2 align:center
which is the highest
priority possible.


265
00:13:28,876 --> 00:13:30,344 line:-1
It's important to understand


266
00:13:30.344 --> 00:13:32.546 line:-2 align:center
that you can never lower
the priority


267
00:13:32,546 --> 00:13:35,549 line:-2
of an item below
its system-provided priority.


268
00:13:35.549 --> 00:13:37.551 line:-2 align:center
Instead,
you should raise the priority


269
00:13:37.551 --> 00:13:39.052 line:-1 align:center
of a different item.


270
00:13:40,454 --> 00:13:42,890 line:-2
For example,
if you assign a priority higher


271
00:13:42.890 --> 00:13:44.791 line:-2 align:center
than .previouslyFocused
to a cell,


272
00:13:44.791 --> 00:13:46.860 line:-2 align:center
that cell will
become more important


273
00:13:46.860 --> 00:13:49.530 line:-2 align:center
than the last-focused
item of that group.


274
00:13:49.530 --> 00:13:53.233 line:-2 align:center
So even if this customized cell
and the previously focused cell


275
00:13:53,233 --> 00:13:56,403 line:-2
are both visible,
the customized cell would become


276
00:13:56.403 --> 00:14:00.941 line:-2 align:center
the primary item because
it has a higher priority.


277
00:14:00.941 --> 00:14:04.144 line:-2 align:center
So, now you know how
to group your items together.


278
00:14:04.144 --> 00:14:07.748 line:-2 align:center
Next, let's focus
on how these groups are sorted.


279
00:14:07,748 --> 00:14:10,184 line:-1
Here, we see Reminders again.


280
00:14:10.184 --> 00:14:13.320 line:-2 align:center
As mentioned before,
each table and collection view,


281
00:14:13.320 --> 00:14:16.423 line:-2 align:center
as well as each text field,
define its own group.


282
00:14:17,624 --> 00:14:21,261 line:-2
As seen before, when pressing
the tab key continuously,


283
00:14:21,261 --> 00:14:24,965 line:-2
focus goes from the search field
to the lists in the sidebar,


284
00:14:24,965 --> 00:14:27,367 line:-2
and then
to the reminders on the right.


285
00:14:29.069 --> 00:14:31.705 line:-2 align:center
This is what
UIKit does by default.


286
00:14:31,705 --> 00:14:34,474 line:-2
However, if you built this
kind of container view yourself,


287
00:14:34,474 --> 00:14:37,778 line:-2
focus would move from the search
field straight to the reminders


288
00:14:37.778 --> 00:14:41.448 line:-2 align:center
because all the groups
are sorted in reading order,


289
00:14:41,448 --> 00:14:44,284 line:-2
leading to trailing,
top to bottom.


290
00:14:44,284 --> 00:14:47,120 line:-2
The focus system does
not know that the sidebar


291
00:14:47,120 --> 00:14:48,822 line:-1
is a distinct column.


292
00:14:50.123 --> 00:14:52.826 line:-2 align:center
To ensure the search field
and lists are sorted


293
00:14:52,826 --> 00:14:54,294 line:-1
in one continuous block,


294
00:14:54,294 --> 00:14:56,797 line:-2
you can put them
in a common parent group.


295
00:14:56,797 --> 00:14:59,533 line:-2
This is done by defining
a focus group identifier


296
00:14:59,533 --> 00:15:02,503 line:-1
on the sidebar's container view.


297
00:15:02,503 --> 00:15:06,006 line:-2
Even though this new group does
not contain any focusable items


298
00:15:06.006 --> 00:15:09.476 line:-2 align:center
directly, the tab loop will
move from the search field group


299
00:15:09.476 --> 00:15:12.913 line:-2 align:center
to the lists group before
moving on to the reminders list.


300
00:15:14,882 --> 00:15:17,451 line:-2
Many standard UIKit
presentations already


301
00:15:17,451 --> 00:15:20,020 line:-2
provide these
intermediate groups.


302
00:15:20,020 --> 00:15:22,022 line:-2
For custom container views,
declare your own


303
00:15:22,022 --> 00:15:25,959 line:-2
focusGroupIdentifier
on common ancestors.


304
00:15:25,959 --> 00:15:27,628 line:-1
Focus groups are an easy way


305
00:15:27.628 --> 00:15:30.030 line:-2 align:center
to define the visual
structure of your app.


306
00:15:30.030 --> 00:15:33.867 line:-2 align:center
You don't have to define
a fixed order for your tab loop.


307
00:15:33,867 --> 00:15:35,869 line:-2
Instead,
the system uses focus groups


308
00:15:35.869 --> 00:15:38.472 line:-2 align:center
to derive a tab loop order
that takes into account


309
00:15:38,472 --> 00:15:41,141 line:-2
reading direction, layout,
and visibility


310
00:15:41.141 --> 00:15:44.044 line:-2 align:center
to provide
a consistent experience.


311
00:15:44.044 --> 00:15:46.513 line:-2 align:center
When customizing focus groups
in your app,


312
00:15:46.513 --> 00:15:48.415 line:-1 align:center
UIFocusDebugger is your friend.


313
00:15:48,415 --> 00:15:51,585 line:-2
If you call checkFocusGroupTree
(for environment:)


314
00:15:51,585 --> 00:15:53,720 line:-2
it'll print
the focus group structure,


315
00:15:53.720 --> 00:15:56.290 line:-2 align:center
starting
at the passed-in environment.


316
00:15:56,290 --> 00:15:58,458 line:-2
You can even
pass in the focus system itself


317
00:15:58.458 --> 00:16:00.093 line:-1 align:center
to see all current groups.


318
00:16:02.029 --> 00:16:04.932 line:-2 align:center
Now, this textual structure
is helpful,


319
00:16:04,932 --> 00:16:07,100 line:-2
but there's
one more debugging tool.


320
00:16:07,100 --> 00:16:08,902 line:-2
Remember the screenshot
I showed you


321
00:16:08,902 --> 00:16:10,804 line:-2
with the focus groups
and Reminders?


322
00:16:10.804 --> 00:16:13.841 line:-2 align:center
You can actually get this live
in your app.


323
00:16:13.841 --> 00:16:14.975 line:-1 align:center
When enabled,


324
00:16:14,975 --> 00:16:17,644 line:-2
the focus loop debugger
visualizes the tab loop order


325
00:16:17,644 --> 00:16:20,480 line:-2
in your app when you press
and hold the option key.


326
00:16:21,782 --> 00:16:23,750 line:-2
And when pressing option
and control,


327
00:16:23,750 --> 00:16:26,520 line:-2
you get a visualization
of the focus groups.


328
00:16:26,520 --> 00:16:28,956 line:-2
In this mode,
the primary item of a group


329
00:16:28,956 --> 00:16:31,225 line:-1
is indicated by a dotted line.


330
00:16:32.659 --> 00:16:35.162 line:-2 align:center
To enable it,
go to your scheme settings


331
00:16:35.162 --> 00:16:37.865 line:-2 align:center
in Xcode, select "run,"
and then "arguments."


332
00:16:37,865 --> 00:16:42,503 line:-2
Then add the launch argument
-UIFocusLoopDebuggerEnabled YES,


333
00:16:42.503 --> 00:16:45.038 line:-2 align:center
and don't forget to put
the dash in front of it.


334
00:16:45.038 --> 00:16:47.441 line:-2 align:center
Now, whenever you run
your app from Xcode,


335
00:16:47.441 --> 00:16:50.811 line:-2 align:center
this debug overlay
is available right in your app.


336
00:16:50,811 --> 00:16:54,948 line:-2
This covers the basics of focus
on iPadOS and Mac Catalyst.


337
00:16:54,948 --> 00:16:57,918 line:-2
There's one more topic to cover
for keyboard navigation,


338
00:16:57.918 --> 00:17:00.187 line:-1 align:center
and that's the responder chain.


339
00:17:01,021 --> 00:17:04,858 line:-2
Since both the responder chain
and the focus system are dealing


340
00:17:04.858 --> 00:17:08.028 line:-2 align:center
with keyboard input,
UIKit synchronizes these systems


341
00:17:08,028 --> 00:17:11,598 line:-2
as much as possible to make
sure the focused item is always


342
00:17:11.598 --> 00:17:15.135 line:-2 align:center
inside the first responder or
is the first responder itself.


343
00:17:16,136 --> 00:17:19,173 align:center
Let's look at a simplified view
hierarchy with a text field


344
00:17:19,173 --> 00:17:21,175 align:center
and a collection view cell.


345
00:17:21,175 --> 00:17:23,544 line:0
Currently,
the text field is focused,


346
00:17:23,544 --> 00:17:25,279 line:0
indicated by the solid ring,


347
00:17:25,279 --> 00:17:27,681 align:center
and it is also
the first responder,


348
00:17:27,681 --> 00:17:29,783 line:0
indicated by the dashed ring.


349
00:17:29,783 --> 00:17:32,986 line:0
When focus moves to
this collection view cell,


350
00:17:32,986 --> 00:17:35,689 align:center
UIKit also tries to move
the first responder


351
00:17:35,689 --> 00:17:37,391 line:0
to this cell.


352
00:17:37,391 --> 00:17:40,994 line:0
If this cell returns false
from canBecomeFirstResponder,


353
00:17:40,994 --> 00:17:43,463 align:center
the system iterates
up the responder chain


354
00:17:43,463 --> 00:17:46,900 align:center
to find a responder
that returns true.


355
00:17:46,900 --> 00:17:50,737 align:center
In this case, that responder
is the cell's view controller.


356
00:17:51,772 --> 00:17:54,174 line:0
Note that the inverse
is also true.


357
00:17:54,174 --> 00:17:55,943 align:center
When the first responder
changes,


358
00:17:55,943 --> 00:17:58,879 align:center
the focus system will try
to find a new focusable item


359
00:17:58,879 --> 00:18:01,915 line:0
inside of that responder.


360
00:18:01,915 --> 00:18:04,585 align:center
With this relationship
between the first responder


361
00:18:04.585 --> 00:18:07.621 line:-2 align:center
and the focused item, key events
will always be delivered


362
00:18:07,621 --> 00:18:11,758 line:-2
to the focused item and move up
the responder chain from there.


363
00:18:11,758 --> 00:18:14,595 line:-2
This allows for some
interesting new behavior.


364
00:18:14.595 --> 00:18:15.629 line:-1 align:center
For example,


365
00:18:15,629 --> 00:18:19,166 line:-2
if a cell responds to a key
command and becomes focused,


366
00:18:19.166 --> 00:18:22.302 line:-2 align:center
the key command
is delivered to that cell.


367
00:18:22,302 --> 00:18:25,405 line:-2
For ways to use this,
take a look at our sample app.


368
00:18:26,039 --> 00:18:28,509 line:-2
When updating
your app for iPadOS 15,


369
00:18:28,509 --> 00:18:32,179 line:-2
be conscious about where
you call becomeFirstResponder.


370
00:18:32,179 --> 00:18:34,948 line:-2
Since the responder chain
and focus are synchronized,


371
00:18:34.948 --> 00:18:38.752 line:-2 align:center
changing the first responder
will force focus to update.


372
00:18:38.752 --> 00:18:41.388 line:-2 align:center
This might be
very disruptive to your users.


373
00:18:41,388 --> 00:18:44,491 line:-2
It is typically best to avoid
calling becomeFirstResponder,


374
00:18:44,491 --> 00:18:46,693 line:-2
especially in response
to a focus update.


375
00:18:47,694 --> 00:18:50,364 align:center
The focus system provides
a consistent experience


376
00:18:50,364 --> 00:18:51,765 align:center
across all apps.


377
00:18:51,765 --> 00:18:55,235 line:0
To do this, it needs priority
for certain key commands.


378
00:18:55,235 --> 00:18:57,738 align:center
If your app is using
a key command like tab


379
00:18:57,738 --> 00:18:59,573 align:center
or arrow down,
that key command will


380
00:18:59,573 --> 00:19:03,343 line:0
no longer work when
compiling with the iOS 15 SDK.


381
00:19:03,343 --> 00:19:05,112 align:center
If this key command is used


382
00:19:05,112 --> 00:19:07,147 line:0
to build your own
custom keyboard navigation,


383
00:19:07,147 --> 00:19:08,415 line:0
you can leave it untouched.


384
00:19:08,415 --> 00:19:09,983 line:0
It'll work on previous versions,


385
00:19:09,983 --> 00:19:13,287 line:0
and on iPadOS 15,
the focus system will take over.


386
00:19:13,287 --> 00:19:16,790 align:center
Otherwise,
remap this key command.


387
00:19:16,790 --> 00:19:20,093 line:0
If you really want to continue
using this key command,


388
00:19:20,093 --> 00:19:22,329 align:center
make sure it doesn't break
keyboard navigation,


389
00:19:22,329 --> 00:19:24,865 line:0
and then set
wantsPriorityOverSystemBehavior


390
00:19:24,865 --> 00:19:26,633 line:0
to true.


391
00:19:26,633 --> 00:19:27,968 align:center
If you want to learn more


392
00:19:27,968 --> 00:19:29,903 align:center
about improvements
to keyboard shortcuts,


393
00:19:29,903 --> 00:19:33,607 align:center
check out "Take your iPad apps
to the next level."


394
00:19:33,607 --> 00:19:35,576 line:0
If you handle presses manually


395
00:19:35,576 --> 00:19:38,378 line:0
by implementing pressesBegan,
pressesChanged,


396
00:19:38,378 --> 00:19:40,714 line:0
pressesEnded,
and pressesCancelled,


397
00:19:40,714 --> 00:19:43,217 line:0
make sure to implement all
of these methods


398
00:19:43,217 --> 00:19:45,752 align:center
and call super consistently
for presses


399
00:19:45,752 --> 00:19:47,521 align:center
that you don't handle.


400
00:19:47,521 --> 00:19:50,891 line:-2
Keyboard navigation
in iPadOS 15 and Mac Catalyst


401
00:19:50,891 --> 00:19:53,794 line:-2
is a powerful
tool for your users.


402
00:19:53,794 --> 00:19:56,296 line:-2
Make collection
and table views focusable


403
00:19:56,296 --> 00:19:58,632 line:-2
to provide
a great user experience.


404
00:19:58,632 --> 00:20:00,801 line:-2
Update your key commands
so they don't collide


405
00:20:00,801 --> 00:20:02,302 line:-1
with keyboard navigation.


406
00:20:02.302 --> 00:20:04.037 line:-1 align:center
Also, check out the sample app,


407
00:20:04.037 --> 00:20:05.606 line:-2 align:center
which illustrates
a couple more features,


408
00:20:05,606 --> 00:20:08,041 line:-2
such as building
a great search experience,


409
00:20:08.041 --> 00:20:11.345 line:-2 align:center
custom selections, focus guides,
and much more.


410
00:20:11.345 --> 00:20:13.881 line:-2 align:center
I can't wait to see
what you're building


411
00:20:13.881 --> 00:20:16.316 line:-2 align:center
with keyboard navigation
on iPadOS 15.


412
00:20:16,316 --> 00:20:17,584 line:-1
Thank you for watching.


413
00:20:17.584 --> 00:20:19.786 line:-1 align:center
[percussive music]

