2
00:00:02.035 --> 00:00:05.038 line:-1 align:center
[percussive music]


3
00:00:09.977 --> 00:00:11.245 line:-1 align:center
[Selina] Hello, everyone!


4
00:00:11,245 --> 00:00:14,081 line:-1
Welcome to our WWDC21 session,


5
00:00:14.081 --> 00:00:18.185 line:-2 align:center
"Add support for Matter
in your smart home app."


6
00:00:18.185 --> 00:00:20.487 line:-2 align:center
I'm Selina
from Home Engineering.


7
00:00:20.487 --> 00:00:23.590 line:-2 align:center
Today, my colleague,
Chris, Sagar, and I


8
00:00:23.590 --> 00:00:25.592 line:-2 align:center
will walk you through
the exciting features


9
00:00:25.592 --> 00:00:29.196 line:-2 align:center
we've added this year
for Matter support.


10
00:00:29.196 --> 00:00:31.498 line:-2 align:center
As mentioned in Monday's
keynote,


11
00:00:31.498 --> 00:00:34.668 line:-2 align:center
Matter is a new standard for
smart home accessories


12
00:00:34.668 --> 00:00:38.071 line:-2 align:center
being developed by Apple
and other industry leaders


13
00:00:38.071 --> 00:00:41.341 line:-2 align:center
to ensure that all smart home
accessories work together


14
00:00:41,341 --> 00:00:43,944 line:-1
seamlessly moving forward.


15
00:00:43.944 --> 00:00:48.182 line:-2 align:center
Its vision is to democratize
home automation worldwide,


16
00:00:48.182 --> 00:00:51.552 line:-2 align:center
making it possible for people
to begin building smart homes,


17
00:00:51.552 --> 00:00:55.756 line:-2 align:center
and then continue adding
to them for years to come.


18
00:00:55,756 --> 00:00:57,658 line:-2
The Matter protocol is being
developed


19
00:00:57,658 --> 00:00:59,493 line:-1
as an open source effort


20
00:00:59.493 --> 00:01:03.197 line:-2 align:center
which leverages proven
technologies, including HomeKit,


21
00:01:03,197 --> 00:01:05,699 line:-2
ensuring that it will support
the broadest amount


22
00:01:05,699 --> 00:01:07,467 line:-1
of smart home devices,


23
00:01:07,467 --> 00:01:10,103 line:-2
and then make it easy
for manufacturers to begin


24
00:01:10.103 --> 00:01:12.706 line:-2 align:center
integrating it
into their products.


25
00:01:12.706 --> 00:01:16.210 line:-2 align:center
Using Matter, smart home
accessory manufacturers


26
00:01:16.210 --> 00:01:20.280 line:-2 align:center
no longer need to support multiple
protocols in parallel,


27
00:01:20,280 --> 00:01:22,583 line:-2
truly simplifying
the development effort


28
00:01:22.583 --> 00:01:27.621 line:-2 align:center
of making a product and supporting it
on an ongoing basis.


29
00:01:27,621 --> 00:01:30,557 line:-2
It also gives app
developers an opportunity


30
00:01:30.557 --> 00:01:33.393 line:-2 align:center
to focus on developing
the best app experience


31
00:01:33,393 --> 00:01:34,862 line:-1
for their customers,


32
00:01:34,862 --> 00:01:37,598 line:-2
without the burden
to create and then maintain


33
00:01:37,598 --> 00:01:40,634 line:-1
proprietary protocols.


34
00:01:40,634 --> 00:01:44,137 line:-2
By creating such a unified
protocol for accessories,


35
00:01:44.137 --> 00:01:48.609 line:-2 align:center
customers can easily enjoy
the conveniences of a smart home


36
00:01:48.609 --> 00:01:51.645 line:-2 align:center
and then confidently
bring products into their homes,


37
00:01:51,645 --> 00:01:54,715 line:-2
knowing they will
all work together.


38
00:01:54.715 --> 00:01:57.117 line:-2 align:center
It will enable more
accessories for people


39
00:01:57,117 --> 00:01:59,052 line:-1
to choose from in stores,


40
00:01:59,052 --> 00:02:02,523 line:-2
and then builders everywhere
will be able to install them


41
00:02:02,523 --> 00:02:05,626 line:-1
as standard into homes.


42
00:02:05,626 --> 00:02:09,062 line:-2
Motivated by these,
we would love our developers


43
00:02:09,062 --> 00:02:11,465 line:-2
to be able
to use Matter the soonest


44
00:02:11,465 --> 00:02:14,468 line:-2
in your accessory
and app development.


45
00:02:14.468 --> 00:02:18.338 line:-2 align:center
We're glad to let you know that
the support for Matter is coming


46
00:02:18.338 --> 00:02:24.278 line:-2 align:center
in iOS, iPadOS, and in tvOS
15 as a developer preview.


47
00:02:24,278 --> 00:02:26,446 line:-2
There are many great
features that we would


48
00:02:26,446 --> 00:02:29,049 line:-1
like to introduce to you today.


49
00:02:29.049 --> 00:02:31.785 line:-2 align:center
First and then foremost,
let's talk about how


50
00:02:31.785 --> 00:02:36.456 line:-2 align:center
you can integrate with Matter
accessories via HomeKit.


51
00:02:36,456 --> 00:02:40,894 line:0
Today, an accessory implementing
the HomeKit Accessory Protocol


52
00:02:40,894 --> 00:02:44,965 line:0
integrates with Apple Home
via the HomeKit framework.


53
00:02:44,965 --> 00:02:47,701 align:center
Over the years,
we have built great features


54
00:02:47,701 --> 00:02:50,604 align:center
on top of HomeKit that
provides full control


55
00:02:50,604 --> 00:02:54,241 line:0
and then management
of HAP accessories.


56
00:02:54,241 --> 00:02:56,743 line:0
When we look at integrating
Matter accessories


57
00:02:56,743 --> 00:03:01,248 align:center
with Apple Home, we naturally
came to the conclusion that we


58
00:03:01,248 --> 00:03:04,651 align:center
could expand the responsibility
of the HomeKit framework


59
00:03:04,651 --> 00:03:08,555 line:0
to support Matter as
a parallel protocol.


60
00:03:08,555 --> 00:03:12,059 align:center
Architecturally, this means that
a HomeKit calls into


61
00:03:12,059 --> 00:03:14,361 align:center
the open source Matter
implementation,


62
00:03:14,361 --> 00:03:16,663 align:center
as known as CHIP framework,


63
00:03:16,663 --> 00:03:20,434 line:0
in order to communicate
with Matter accessories.


64
00:03:20,434 --> 00:03:23,804 line:0
For your context, the earlier
name for the Matter project


65
00:03:23,804 --> 00:03:28,275 align:center
was Connected Home over IP,
or, in short, CHIP.


66
00:03:28,275 --> 00:03:30,177 line:0
That's why,
throughout today's talk,


67
00:03:30,177 --> 00:03:32,446 line:0
you will still see
the reference of CHIP,


68
00:03:32,446 --> 00:03:36,450 align:center
both in the open source
project and our APIs.


69
00:03:36,450 --> 00:03:41,688 line:0
We expect to have updated naming
for the APIs in a later release.


70
00:03:41.688 --> 00:03:45.025 line:-2 align:center
Back to our main topic,
the encapsulation provided


71
00:03:45.025 --> 00:03:49.363 line:-2 align:center
by HomeKit allows all existing
Apple Home features to begin


72
00:03:49.363 --> 00:03:54.101 line:-2 align:center
working with Matter accessories
seamlessly and immediately.


73
00:03:54.101 --> 00:03:58.505 line:-2 align:center
For example, setting up a Matter
accessory using identical


74
00:03:58,505 --> 00:04:01,108 line:-1
flows to HAP accessory setup,


75
00:04:01.108 --> 00:04:03.810 line:-2 align:center
controlling Matter accessories
in Control Center


76
00:04:03.810 --> 00:04:06.513 line:-1 align:center
with just one swipe down,


77
00:04:06.513 --> 00:04:08.515 line:-2 align:center
and the great
hands-free integration


78
00:04:08.515 --> 00:04:11.151 line:-2 align:center
with Siri for Matter
accessory status


79
00:04:11,151 --> 00:04:16,390 line:-2
and then control across
all your Apple devices.


80
00:04:16.390 --> 00:04:18.025 line:-1 align:center
But HomeKit's responsibility


81
00:04:18.025 --> 00:04:21.061 line:-2 align:center
isn't just to support
first-party features.


82
00:04:21,061 --> 00:04:25,599 align:center
In fact, since day 1, we
designed HomeKit with the vision


83
00:04:25,599 --> 00:04:28,836 align:center
that app developers should
be able to leverage HomeKit


84
00:04:28,836 --> 00:04:32,172 align:center
to build creative and then
delightful smart home apps


85
00:04:32,172 --> 00:04:34,641 align:center
for their customers,
without the burden


86
00:04:34,641 --> 00:04:39,680 align:center
to implement communication
protocols with accessories.


87
00:04:39,680 --> 00:04:43,884 align:center
This continues to be true
with Matter accessories.


88
00:04:43,884 --> 00:04:48,555 line:0
Keep using existing APIs
as you've been using in HomeKit.


89
00:04:48,555 --> 00:04:52,192 align:center
They will all just start
working with Matter accessories,


90
00:04:52,192 --> 00:04:55,495 align:center
no code change needed.


91
00:04:55,495 --> 00:04:58,198 line:-2
Let's take accessory setup
as an example.


92
00:04:58.198 --> 00:05:00.567 line:-2 align:center
This code
shows how you could call


93
00:05:00,567 --> 00:05:05,839 line:-2
the addAndSetupAccessories API
in your HomeKit app today.


94
00:05:05,839 --> 00:05:10,577 line:-2
With iOS 15 developer preview,
the QR code scanner you invoke


95
00:05:10.577 --> 00:05:14.648 line:-2 align:center
by this API will not only work
for HAP QR codes,


96
00:05:14,648 --> 00:05:17,784 line:-2
but also start
recognizing Matter QR codes,


97
00:05:17.784 --> 00:05:20.020 line:-2 align:center
providing your customers
a familiar


98
00:05:20,020 --> 00:05:24,491 line:-2
and a consistent experience
for accessory setup.


99
00:05:24.491 --> 00:05:27.828 line:-2 align:center
For a bit of fun, those of you
who have been paying


100
00:05:27,828 --> 00:05:31,565 line:-2
close attention to this year's
Swift updates know that there's


101
00:05:31.565 --> 00:05:36.603 line:-2 align:center
a shift underway in the world
of Swift concurrency.


102
00:05:36,603 --> 00:05:39,139 line:-2
We are glad to let you know
that the same APIs


103
00:05:39.139 --> 00:05:42.376 line:-2 align:center
you are used to can now be
invoked via the new


104
00:05:42.376 --> 00:05:46.180 line:-2 align:center
Swift async/await paradigm,
as well.


105
00:05:46.180 --> 00:05:50.884 line:-2 align:center
Besides setup,
with iOS 15 developer preview,


106
00:05:50,884 --> 00:05:54,288 line:-2
you will also be able to use
existing HomeKit APIs


107
00:05:54.288 --> 00:05:57.691 line:-2 align:center
to read and write Matter
accessory states.


108
00:05:57,691 --> 00:06:01,361 line:-2
Moreover, you will
automatically get remote access


109
00:06:01.361 --> 00:06:05.132 line:-2 align:center
and timely notifications
for Matter accessories,


110
00:06:05.132 --> 00:06:08.702 line:-2 align:center
and then be able to add and edit
Matter accessories


111
00:06:08,702 --> 00:06:11,605 line:-1
using scene and automation APIs,


112
00:06:11.605 --> 00:06:15.876 line:-2 align:center
all in the same way as what you
do with HAP accessories.


113
00:06:18.512 --> 00:06:22.482 line:-2 align:center
Let's also take a sneak
peak into the future.


114
00:06:22.482 --> 00:06:26.386 line:-2 align:center
As Matter project continues
to develop, we expect it


115
00:06:26.386 --> 00:06:31.058 line:-2 align:center
to provide support for more
and more accessory categories.


116
00:06:31.058 --> 00:06:32.826 line:-1 align:center
We will continue integrating


117
00:06:32.826 --> 00:06:36.330 line:-2 align:center
these new Matter accessory
categories into HomeKit,


118
00:06:36.330 --> 00:06:41.201 line:-2 align:center
making it effortless for our
developers to use them.


119
00:06:41,201 --> 00:06:46,673 line:-2
Secondly, HAP, as a protocol,
supports custom characteristics.


120
00:06:46,673 --> 00:06:50,477 line:-2
It allows manufacturers to build
creative custom features


121
00:06:50,477 --> 00:06:55,382 line:-2
with their accessories
and access them through HomeKit.


122
00:06:55,382 --> 00:06:59,486 line:-2
Matter, as a protocol,
supports custom features, too.


123
00:06:59.486 --> 00:07:02.289 line:-2 align:center
So, we'd like to connect
the dots here and then


124
00:07:02.289 --> 00:07:05.025 line:-2 align:center
provide you access to Matter
custom features


125
00:07:05,025 --> 00:07:07,461 line:-1
via HomeKit framework.


126
00:07:07,461 --> 00:07:10,764 line:-2
This feature will be coming
in the later release,


127
00:07:10.764 --> 00:07:15.903 line:-2 align:center
so stay tuned, and let us
know if you have early thoughts.


128
00:07:15.903 --> 00:07:18.038 line:-2 align:center
In short,
we are committed


129
00:07:18.038 --> 00:07:22.042 line:-2 align:center
to seamlessly integrating Matter
with HomeKit.


130
00:07:22.042 --> 00:07:24.678 line:-2 align:center
Whether you are
an accessory developer,


131
00:07:24,678 --> 00:07:28,582 line:-2
a HomeKit app developer,
or a HomeKit customer,


132
00:07:28.582 --> 00:07:32.920 line:-2 align:center
rest easy,
as Matter "Just Works."


133
00:07:32,920 --> 00:07:35,055 line:-2
When you use HomeKit
to integrate


134
00:07:35.055 --> 00:07:37.057 line:-1 align:center
with Matter accessories,


135
00:07:37,057 --> 00:07:39,626 line:-2
you get features like
secured remote control


136
00:07:39,626 --> 00:07:41,795 line:-1
and automations for free,


137
00:07:41,795 --> 00:07:44,064 line:-2
thanks to the power
and intelligence


138
00:07:44.064 --> 00:07:50.037 line:-2 align:center
of Apple smart home hubs,
such as HomePod and Apple TV.


139
00:07:50.037 --> 00:07:53.106 line:-2 align:center
But if you also have
a need to help your customers


140
00:07:53.106 --> 00:07:56.410 line:-2 align:center
to connect Matter accessories
with other smart home hubs


141
00:07:56.410 --> 00:07:59.413 line:-2 align:center
in your homes,
we are making it easy for you


142
00:07:59.413 --> 00:08:03.016 line:-2 align:center
to do so from your iOS app,
as well.


143
00:08:03.016 --> 00:08:08.355 line:-2 align:center
Next, I'm going to pass to Chris
to tell you more about it.


144
00:08:08,355 --> 00:08:10,057 line:-1
[Chris] Thank you, Selina.


145
00:08:10.057 --> 00:08:11.625 line:-2 align:center
For this year's developer
preview,


146
00:08:11,625 --> 00:08:15,562 line:-2
we are building a new, yet
conceptually familiar setup API


147
00:08:15.562 --> 00:08:18.065 line:-2 align:center
that enables you to establish
a direct connection


148
00:08:18.065 --> 00:08:20.968 line:-2 align:center
between a Matter accessory
and your home hubs.


149
00:08:20.968 --> 00:08:24.505 line:-2 align:center
Let's start by exploring
the user experience.


150
00:08:24.505 --> 00:08:27.741 line:-2 align:center
As you can see here,
this flow strongly resembles


151
00:08:27.741 --> 00:08:29.443 line:-2 align:center
how we set up
both Apple products


152
00:08:29.443 --> 00:08:31.645 line:-1 align:center
and HomeKit accessories today.


153
00:08:31,645 --> 00:08:33,947 line:-2
We know our customers are
familiar with this flow,


154
00:08:33.947 --> 00:08:35.749 line:-2 align:center
we know they love it,
and we want you


155
00:08:35.749 --> 00:08:37.484 line:-1 align:center
to benefit from it, too.


156
00:08:37.484 --> 00:08:40.487 line:-2 align:center
It is important to note here
that while this is system UI,


157
00:08:40.487 --> 00:08:42.990 line:-2 align:center
the homes and rooms
the user selects from


158
00:08:42.990 --> 00:08:44.892 line:-1 align:center
are vended from your app.


159
00:08:44,892 --> 00:08:48,095 line:-2
Your app is responsible for
completing required operations


160
00:08:48.095 --> 00:08:49.997 line:-2 align:center
and providing
requested information


161
00:08:49.997 --> 00:08:52.900 line:-2 align:center
to set up via a new
app extension type.


162
00:08:52,900 --> 00:08:56,603 line:-2
Let's unpack this
for you step by step.


163
00:08:56.603 --> 00:08:59.706 line:-2 align:center
Before beginning setup, your app
creates a topology object


164
00:08:59,706 --> 00:09:02,109 line:-2
representing
the homes it manages.


165
00:09:02,109 --> 00:09:06,146 line:-2
It then passes this topology
object to a new setup API.


166
00:09:06,146 --> 00:09:08,649 line:-2
At this point,
setup is launched and ready


167
00:09:08,649 --> 00:09:11,852 line:-1
to scan a Matter QR code.


168
00:09:11,852 --> 00:09:14,388 line:-2
Here's a code example
for invocation.


169
00:09:14,388 --> 00:09:17,658 line:-2
As you can see, this API
is conceptually very similar


170
00:09:17.658 --> 00:09:20.994 line:-2 align:center
to the existing HomeKit APIs
for accessory setup.


171
00:09:20,994 --> 00:09:22,896 line:-2
The major
difference is the addition


172
00:09:22.896 --> 00:09:25.732 line:-2 align:center
of the HMCHIPServiceTopology
object,


173
00:09:25,732 --> 00:09:30,237 line:-2
which is used to inform setup of
the homes your app manages.


174
00:09:30.237 --> 00:09:33.273 line:-2 align:center
When the user scans a Matter
QR code with the scanner,


175
00:09:33.273 --> 00:09:36.143 line:-2 align:center
setup will automatically
progress to a Detected card


176
00:09:36,143 --> 00:09:39,346 line:-2
that shows the category
of accessory detected.


177
00:09:39.346 --> 00:09:41.982 line:-2 align:center
The user is now presented
with the option of adding


178
00:09:41.982 --> 00:09:43.517 line:-1 align:center
the accessory to your app,


179
00:09:43.517 --> 00:09:46.987 line:-1 align:center
in this example, Autohome.


180
00:09:46.987 --> 00:09:49.590 line:-2 align:center
Once the user has elected
to connect the accessory


181
00:09:49.590 --> 00:09:52.025 line:-2 align:center
to your home hub,
they may need to specify


182
00:09:52,025 --> 00:09:54,428 line:-1
which specific home to add to.


183
00:09:54.428 --> 00:09:57.197 line:-2 align:center
We present this screen
in the event you initiated setup


184
00:09:57,197 --> 00:10:00,267 line:-2
with a topology consisting
of more than one home.


185
00:10:00,267 --> 00:10:02,769 line:-2
If your topology consisted
of only a single home,


186
00:10:02.769 --> 00:10:06.773 line:-2 align:center
this card is skipped, as the
user's intent is already known.


187
00:10:06,773 --> 00:10:08,408 line:-1
Once the user selects a home,


188
00:10:08.408 --> 00:10:10.777 line:-2 align:center
iOS sends a request to your
extension asking it


189
00:10:10,777 --> 00:10:14,014 line:-2
to pair with the scanned
accessory's Matter payload.


190
00:10:14.014 --> 00:10:17.117 line:-2 align:center
Your extension responds to this
request via it's principle


191
00:10:17,117 --> 00:10:20,454 line:-2
HMCHIPServiceRequestHandler
subclass.


192
00:10:20.454 --> 00:10:23.657 line:-2 align:center
When called, use CHIP framework
APIs to create


193
00:10:23,657 --> 00:10:26,193 line:-2
a secure pairing
between the Matter accessory


194
00:10:26,193 --> 00:10:28,762 line:-1
and your home hub.


195
00:10:28.762 --> 00:10:31.832 line:-2 align:center
Next, iOS will request
a list of rooms


196
00:10:31,832 --> 00:10:33,433 line:-2
from your extension that
corresponds


197
00:10:33,433 --> 00:10:35,002 line:-1
to the selected home.


198
00:10:35.002 --> 00:10:38.505 line:-2 align:center
These rooms are presented
in UI for user selection.


199
00:10:38.505 --> 00:10:40.407 line:-2 align:center
The code to respond to this
request in your extension


200
00:10:40,407 --> 00:10:41,642 line:-1
is straightforward.


201
00:10:41.642 --> 00:10:43.343 line:-2 align:center
Just like the pair request,
it revolves


202
00:10:43.343 --> 00:10:44.978 line:-2 align:center
around your extension's
principle


203
00:10:44,978 --> 00:10:47,748 line:-2
HMCHIPServiceRequestHandler
subclass.


204
00:10:47.748 --> 00:10:49.950 line:-2 align:center
Simply implement this
function and return


205
00:10:49,950 --> 00:10:54,388 line:-2
the corresponding rooms that
match the user's selected home.


206
00:10:54,388 --> 00:10:56,356 align:center
Once the user has
selected a name and room


207
00:10:56,356 --> 00:10:58,625 line:0
for their accessory,
we provide that information


208
00:10:58,625 --> 00:11:03,397 align:center
to your extension and ask it
to configure the accessory.


209
00:11:03.397 --> 00:11:05.832 line:-2 align:center
Just like the other request
types, your extension


210
00:11:05,832 --> 00:11:07,801 line:-2
will respond to the
configuration request


211
00:11:07.801 --> 00:11:09.570 line:-2 align:center
by using CHIP
framework APIs


212
00:11:09.570 --> 00:11:13.607 line:-2 align:center
to directly
configure the accessory.


213
00:11:13,607 --> 00:11:17,377 align:center
Finally, after the accessory is
fully configured for your app,


214
00:11:17,377 --> 00:11:19,847 align:center
the user will also be offered
with the opportunity


215
00:11:19,847 --> 00:11:21,415 line:0
to use the Apple Home app,


216
00:11:21,415 --> 00:11:26,286 line:0
Control Center, and Siri
to control this accessory.


217
00:11:26.286 --> 00:11:29.122 line:-2 align:center
Collected in its entirety
here again is the code


218
00:11:29,122 --> 00:11:31,258 line:-2
we expect
your extension to implement.


219
00:11:31,258 --> 00:11:32,826 line:0
Three simple functions:


220
00:11:32,826 --> 00:11:35,762 align:center
room request,
pair accessory request,


221
00:11:35,762 --> 00:11:38,298 align:center
and accessory configuration
request.


222
00:11:38.298 --> 00:11:41.268 line:-2 align:center
Once you have subclassed
HMCHIPServiceRequestHandler


223
00:11:41.268 --> 00:11:44.137 line:-2 align:center
and overridden these methods,
the rest of the setup experience


224
00:11:44.137 --> 00:11:46.640 line:-2 align:center
is essentially free from
a developer perspective.


225
00:11:46.640 --> 00:11:48.709 line:-1 align:center
Things like UI presentation,


226
00:11:48,709 --> 00:11:51,812 line:-2
transitions between steps,
error handling, etc.,


227
00:11:51.812 --> 00:11:53.847 line:-1 align:center
are all handled for you.


228
00:11:53.847 --> 00:11:55.949 line:-2 align:center
This greatly reduces
the amount of code


229
00:11:55.949 --> 00:11:57.651 line:-2 align:center
you need to write,
while simultaneously


230
00:11:57,651 --> 00:12:01,021 line:-2
providing your users a truly
first-class experience.


231
00:12:01.021 --> 00:12:04.124 line:-2 align:center
So far, we have talked about
how you can use existing


232
00:12:04.124 --> 00:12:06.660 line:-2 align:center
HomeKit APIs to integrate
with Matter accessories,


233
00:12:06,660 --> 00:12:08,929 line:-2
as well as a new API
if you need to connect


234
00:12:08,929 --> 00:12:12,533 line:-2
Matter accessories
with another smart home hub.


235
00:12:12,533 --> 00:12:14,501 line:-2
If you're a Matter
accessory developer,


236
00:12:14,501 --> 00:12:16,703 line:-2
you will also need to get
familiar with the protocol


237
00:12:16,703 --> 00:12:18,872 line:-2
itself for the purposes
of firmware development.


238
00:12:18.872 --> 00:12:21.341 line:-2 align:center
So next, my colleague, Sagar,
will take us


239
00:12:21,341 --> 00:12:23,377 line:-2
on a tour of the Matter
protocol and show you


240
00:12:23.377 --> 00:12:25.779 line:-2 align:center
the similarities
between Matter and HAP.


241
00:12:27.848 --> 00:12:29.183 line:-1 align:center
[Sagar] Thanks, Chris.


242
00:12:29.183 --> 00:12:31.552 line:-2 align:center
Let's start with the Matter
data model.


243
00:12:31,552 --> 00:12:34,154 line:-2
Every Matter accessory
exposes its capabilities


244
00:12:34,154 --> 00:12:36,390 line:-1
via the Matter data model.


245
00:12:36.390 --> 00:12:38.425 line:-2 align:center
We can individually
address these capabilities


246
00:12:38.425 --> 00:12:40.994 line:-2 align:center
starting
from the top with endpoints.


247
00:12:40.994 --> 00:12:43.030 line:-2 align:center
Endpoints can be thought
of as logically separate


248
00:12:43.030 --> 00:12:44.464 line:-1 align:center
features of an accessory.


249
00:12:44.464 --> 00:12:46.533 line:-2 align:center
Most accessories will
only have a couple of these:


250
00:12:46,533 --> 00:12:48,902 line:-2
one for information,
like name, vendor,


251
00:12:48.902 --> 00:12:51.271 line:-2 align:center
and model; and the other for
the primary function


252
00:12:51.271 --> 00:12:53.907 line:-2 align:center
of the accessory,
for example, a light.


253
00:12:53,907 --> 00:12:56,577 line:-2
Each endpoint can have
multiple clusters within it.


254
00:12:56.577 --> 00:12:59.012 line:-2 align:center
Each cluster represents
a specific capability


255
00:12:59,012 --> 00:13:00,581 line:-1
of that endpoint.


256
00:13:00.581 --> 00:13:03.050 line:-2 align:center
For our light example,
its light endpoint


257
00:13:03.050 --> 00:13:05.018 line:-2 align:center
might have
clusters for brightness,


258
00:13:05.018 --> 00:13:07.054 line:-1 align:center
color, and power control.


259
00:13:07,054 --> 00:13:08,789 line:-2
For those
of us familiar with HomeKit,


260
00:13:08.789 --> 00:13:12.025 line:-2 align:center
clusters can be thought of as
equivalent to HomeKit services.


261
00:13:14.561 --> 00:13:17.397 line:-2 align:center
Next up, we look at what
a cluster has within it.


262
00:13:17.397 --> 00:13:19.933 line:-2 align:center
A cluster can have one
or more attributes.


263
00:13:19,933 --> 00:13:22,970 line:-2
Each attribute represents
some state of the accessory.


264
00:13:22.970 --> 00:13:25.172 line:-2 align:center
For our light example,
the brightness cluster


265
00:13:25,172 --> 00:13:27,207 line:-2
on the light will have
an attribute that lets us


266
00:13:27,207 --> 00:13:29,977 line:-2
read and control
the brightness of the light.


267
00:13:29.977 --> 00:13:32.312 line:-2 align:center
Again, Matter's attributes
can be thought of


268
00:13:32,312 --> 00:13:34,448 line:-2
as equivalent
to HomeKit characteristics.


269
00:13:36,850 --> 00:13:39,887 line:0
Finally, here you can see that
each attribute may support a set


270
00:13:39,887 --> 00:13:43,090 align:center
of actions ranging from reading,
writing, and reporting.


271
00:13:43,090 --> 00:13:45,792 line:0
In our light example,
we might want reporting enabled


272
00:13:45,792 --> 00:13:48,295 line:0
on the on-off cluster
to receive notifications from


273
00:13:48,295 --> 00:13:51,798 line:0
the accessory every time
the light turns on or off.


274
00:13:51,798 --> 00:13:54,902 align:center
Matter usually offers a broad
selection of APIs to configure


275
00:13:54,902 --> 00:13:57,571 line:0
and interact with each attribute
based on its function.


276
00:13:59.006 --> 00:14:01.141 line:-2 align:center
These concepts we just
talked about are being


277
00:14:01,141 --> 00:14:03,410 line:-2
implemented in the open
source CHIP framework,


278
00:14:03,410 --> 00:14:06,079 line:-2
with Apple being one
of the key contributors.


279
00:14:06.079 --> 00:14:08.182 line:-1 align:center
As Selina mentioned earlier,


280
00:14:08.182 --> 00:14:10.217 line:-1 align:center
CHIP has been renamed to Matter,


281
00:14:10.217 --> 00:14:12.252 line:-2 align:center
but the framework
and the code will be updated


282
00:14:12,252 --> 00:14:14,755 line:-1
in a future release.


283
00:14:14,755 --> 00:14:17,157 line:-2
A fully-certified version
of CHIP framework


284
00:14:17.157 --> 00:14:18.792 line:-2 align:center
will be
distributed in iOS,


285
00:14:18.792 --> 00:14:20.227 line:-2 align:center
which enables HomeKit
integration


286
00:14:20,227 --> 00:14:21,828 line:-1
with Matter accessories,


287
00:14:21.828 --> 00:14:24.164 line:-2 align:center
and also provides access
to open source APIs


288
00:14:24,164 --> 00:14:27,034 line:-2
if you need to use them
in your app.


289
00:14:27,034 --> 00:14:29,069 line:-2
Let's take a look at
an example of using


290
00:14:29.069 --> 00:14:31.972 line:-2 align:center
CHIP framework to interact
with a light accessory.


291
00:14:31.972 --> 00:14:33.841 line:-2 align:center
This exercises
the core concepts


292
00:14:33.841 --> 00:14:36.944 line:-2 align:center
of the Matter data model
we just went over.


293
00:14:36.944 --> 00:14:40.113 line:-2 align:center
We start off by accessing
the shared CHIPController.


294
00:14:40.113 --> 00:14:43.617 line:-2 align:center
This controller is our
primary handle to Matter.


295
00:14:43,617 --> 00:14:45,886 line:-2
Next, we get a handle
to the light by using


296
00:14:45,886 --> 00:14:49,356 line:-2
the device ID that we assigned
to it during pairing.


297
00:14:49,356 --> 00:14:52,326 line:-2
Then, we initialize a handle
to the on-off cluster


298
00:14:52,326 --> 00:14:54,428 line:-1
on the light endpoint.


299
00:14:54,428 --> 00:14:56,163 line:-2
And now,
with this on-off cluster,


300
00:14:56.163 --> 00:15:00.234 line:-2 align:center
we can perform reads and writes
on the on-off attribute.


301
00:15:00.234 --> 00:15:02.769 line:-2 align:center
First, we request to toggle
the on-off attribute,


302
00:15:02.769 --> 00:15:05.639 line:-2 align:center
which just toggles
the state of the light.


303
00:15:05,639 --> 00:15:09,576 line:-2
Then, we request to read the
state of the on-off attribute.


304
00:15:09,576 --> 00:15:11,845 line:-2
The accessory then sends us
a response with the status


305
00:15:11,845 --> 00:15:15,048 line:-2
of the attribute, which we can
use to update our application.


306
00:15:16,917 --> 00:15:19,520 line:-2
So, that's a quick look
into CHIP framework.


307
00:15:19,520 --> 00:15:21,822 line:-2
Before we
conclude our session today,


308
00:15:21,822 --> 00:15:24,625 line:-2
we'd like to go over a new
concept introduced in Matter


309
00:15:24.625 --> 00:15:26.593 line:-2 align:center
and show some new features
we've introduced


310
00:15:26,593 --> 00:15:29,796 line:-2
in the Home app
that leverage it.


311
00:15:29.796 --> 00:15:31.999 line:-2 align:center
As you may already know,
the Matter protocol


312
00:15:31,999 --> 00:15:33,901 line:-2
allows multiple admins
to connect


313
00:15:33.901 --> 00:15:36.436 line:-2 align:center
to an accessory at
the same time.


314
00:15:36.436 --> 00:15:39.473 line:-2 align:center
This is a great feature for
providing customers choices,


315
00:15:39,473 --> 00:15:41,508 line:-2
but it also poses challenges
to us


316
00:15:41,508 --> 00:15:44,144 line:-2
when it comes
to accessory management.


317
00:15:44,144 --> 00:15:47,548 line:-2
Let's take a look at how
the Home app incorporates this.


318
00:15:47,548 --> 00:15:49,883 line:-2
The Home app can now
present a list of all


319
00:15:49,883 --> 00:15:52,085 line:-2
the connected admins
on an accessory under this


320
00:15:52,085 --> 00:15:55,222 line:-2
new Connected Services
section.


321
00:15:55,222 --> 00:16:00,360 line:-2
Users are also given the option
to manage connected admins.


322
00:16:00,360 --> 00:16:02,329 line:-2
And finally,
users have the option


323
00:16:02,329 --> 00:16:05,132 line:-2
to turn on
pairing mode again to allow


324
00:16:05.132 --> 00:16:08.702 line:-2 align:center
a new admin to connect
with the accessory.


325
00:16:08,702 --> 00:16:11,171 line:-2
Our goal here is simple:
we want to ensure that


326
00:16:11,171 --> 00:16:12,840 line:-2
our customers have
the freedom to choose


327
00:16:12.840 --> 00:16:14.041 line:-1 align:center
what's best for them,


328
00:16:14.041 --> 00:16:15.475 line:-1 align:center
and also the confidence to tell


329
00:16:15,475 --> 00:16:18,645 line:-2
how their smart home
accessories are being managed.


330
00:16:19.813 --> 00:16:23.784 line:-2 align:center
So, Matter support will first be
available in the iOS, iPadOS,


331
00:16:23,784 --> 00:16:25,853 line:-1
and tvOS 15 developer preview,


332
00:16:25,853 --> 00:16:27,955 line:-2
and a developer profile must
be installed


333
00:16:27.955 --> 00:16:30.891 line:-2 align:center
on these
platforms to enable it.


334
00:16:30,891 --> 00:16:33,126 line:-2
You will also need a home
hub to control


335
00:16:33.126 --> 00:16:36.630 line:-1 align:center
Matter accessories via HomeKit.


336
00:16:36.630 --> 00:16:38.832 line:-2 align:center
While we expect Matter
to publish qualified


337
00:16:38,832 --> 00:16:41,435 line:-2
vendor IDs and certified product
IDs once they become


338
00:16:41.435 --> 00:16:43.904 line:-2 align:center
available for the market,
we will provide a list


339
00:16:43,904 --> 00:16:45,973 line:-2
of sample vendor IDs
and product IDs


340
00:16:45.973 --> 00:16:49.510 line:-2 align:center
with the developer preview to
facilitate your development.


341
00:16:49,510 --> 00:16:51,078 line:-1
These IDs are pre-configured


342
00:16:51,078 --> 00:16:53,380 line:-2
to represent Matter
accessory categories


343
00:16:53.380 --> 00:16:57.217 line:-2 align:center
that are already supported
in the developer preview.


344
00:16:57,217 --> 00:16:59,019 line:-2
As always,
you can find more information


345
00:16:59.019 --> 00:17:02.723 line:-2 align:center
about our APIs
on developer.apple.com.


346
00:17:02,723 --> 00:17:05,526 line:-2
And more information about
the Matter open source APIs


347
00:17:05.526 --> 00:17:08.729 line:-2 align:center
and Matter accessory definitions
can be found on Github.


348
00:17:10.397 --> 00:17:12.766 line:-2 align:center
So, in conclusion,
we are bringing seamless


349
00:17:12,766 --> 00:17:15,502 line:-2
Matter support via HomeKit for
accessory developers,


350
00:17:15,502 --> 00:17:18,272 line:-2
HomeKit apps,
and HomeKit users.


351
00:17:18.272 --> 00:17:20.641 line:-2 align:center
There will be a new setup API
in an upcoming seed


352
00:17:20.641 --> 00:17:23.110 line:-2 align:center
for developers who need
to connect Matter accessories


353
00:17:23,110 --> 00:17:25,746 line:-1
with other smart home hubs.


354
00:17:25,746 --> 00:17:27,281 line:-2
And all of this
will be available


355
00:17:27.281 --> 00:17:31.552 line:-2 align:center
starting with the iOS, iPadOS,
and tvOS 15 developer preview.


356
00:17:32.853 --> 00:17:35.856 line:-2 align:center
Thank you for watching,
and from my team and I, goodbye.


357
00:17:35.856 --> 00:17:38.859 line:-1 align:center
[percussive music]

