2
00:00:00.000 --> 00:00:02.236 line:-1 position:50%
[MAC STARTUP CHIME]


3
00:00:02.236 --> 00:00:05.906 line:-1 position:50%
♪ Bass music playing ♪


4
00:00:05,906 --> 00:00:07,908 line:-1
[KEYSTROKES]


5
00:00:07,908 --> 00:00:09,042 position:90% line:0 size:2%
♪


6
00:00:09.042 --> 00:00:10.377 line:-1 position:50%
Marin Eubanks: Hi, everyone.


7
00:00:10,377 --> 00:00:12,412 line:-1
I’m Marin, an engineer
on the ClassKit team,


8
00:00:12.412 --> 00:00:14.615 line:-1 position:50%
and I’m excited to show you
a new API


9
00:00:14,615 --> 00:00:17,317 line:-1
we’ve added to ClassKit
for file-based apps.


10
00:00:17,317 --> 00:00:21,755 line:-1
Today, I’ll go over Schoolwork
and how it’s used with ClassKit.


11
00:00:21,755 --> 00:00:24,958 line:-1
Then, I’ll do an in-depth review
of the new API


12
00:00:24,958 --> 00:00:27,628 line:-1
for file-based apps.


13
00:00:27,628 --> 00:00:31,932 line:-1
Next, I’ll walk you through
a sample implementation.


14
00:00:31.932 --> 00:00:34.568 line:-1 position:50%
And finally, I’ll show you
how to test the new API


15
00:00:34.568 --> 00:00:37.905 line:-1 position:50%
using ClassKit’s developer mode.


16
00:00:37.905 --> 00:00:42.509 line:-1 position:50%
Let me start by giving you
a brief overview of Schoolwork.


17
00:00:42.509 --> 00:00:44.511 line:-1 position:50%
Schoolwork is an educational app


18
00:00:44,511 --> 00:00:47,281 line:-1
that enables teachers
to share assignments


19
00:00:47,281 --> 00:00:50,317 line:-1
in which students use your apps
to learn.


20
00:00:50.317 --> 00:00:52.753 line:-1 position:50%
When your app adopts
the ClassKit framework


21
00:00:52.753 --> 00:00:54.421 line:-1 position:50%
and advertises assignable
content --


22
00:00:54.421 --> 00:00:56.590 line:-1 position:50%
known as CLSContexts --


23
00:00:56.590 --> 00:00:59.760 line:-1 position:50%
as well as starts reporting
progress data on activities,


24
00:00:59.760 --> 00:01:02.129 line:-1 position:50%
teachers will be able to assign
that content


25
00:01:02.129 --> 00:01:05.499 line:-1 position:50%
and view the progress data
reported by your app.


26
00:01:05,499 --> 00:01:07,801 line:-1
If your app is ClassKit-enabled,


27
00:01:07.801 --> 00:01:10.070 line:-1 position:50%
teachers will be more likely
to use your app


28
00:01:10.070 --> 00:01:11.672 line:-1 position:50%
in their curriculum.


29
00:01:11.672 --> 00:01:12.739 line:-1 position:50%
And coming soon,


30
00:01:12,739 --> 00:01:14,741 line:-1
Schoolwork will be
even easier to use


31
00:01:14,741 --> 00:01:18,478 line:-1
and adds many new features
to streamline teacher workflows,


32
00:01:18,478 --> 00:01:20,113 line:-1
inform instruction,


33
00:01:20,113 --> 00:01:23,150 line:-1
and provide data from your apps
to teachers.


34
00:01:23.150 --> 00:01:25.218 line:-1 position:50%
Now that we’re familiar
with Schoolwork,


35
00:01:25.218 --> 00:01:27.587 line:-1 position:50%
let’s see how the data
from your app


36
00:01:27.587 --> 00:01:30.490 line:-1 position:50%
flows into Schoolwork.


37
00:01:30,490 --> 00:01:34,294 line:-1
Your app submits data
to the ClassKit framework.


38
00:01:34,294 --> 00:01:37,597 line:-1
ClassKit surfaces that data
to the Schoolwork app.


39
00:01:37.597 --> 00:01:41.301 line:-1 position:50%
The data is then presented
to the student and teacher.


40
00:01:41,301 --> 00:01:42,636 line:-1
Here is a view of Schoolwork


41
00:01:42.636 --> 00:01:45.806 line:-1 position:50%
with a few assignments
of ClassKit-enabled apps.


42
00:01:45,806 --> 00:01:48,875 line:-1
If we tap on
one of the assignments,


43
00:01:48.875 --> 00:01:53.246 line:-1 position:50%
we can see an example of an app
which has adopted ClassKit


44
00:01:53.246 --> 00:01:55.315 line:-1 position:50%
and reported
student-progress data.


45
00:01:55.315 --> 00:01:59.419 line:-1 position:50%
We will go through the details
of this use case a bit later.


46
00:01:59.419 --> 00:02:02.322 line:-1 position:50%
Now that we have reviewed
Schoolwork,


47
00:02:02,322 --> 00:02:06,493 line:-1
let’s talk about our new
file-based progress API.


48
00:02:06,493 --> 00:02:09,963 line:-1
There are more than
190,000 education apps


49
00:02:09,963 --> 00:02:11,231 line:-1
in the App Store.


50
00:02:11.231 --> 00:02:12.833 line:-1 position:50%
And while a lot of you
have adopted


51
00:02:12.833 --> 00:02:17.237 line:-1 position:50%
ClassKit’s context-based APIs,
not all of you have.


52
00:02:17.237 --> 00:02:18.739 line:-1 position:50%
We received feedback


53
00:02:18.739 --> 00:02:21.942 line:-1 position:50%
specifically around apps
that interact with files


54
00:02:21,942 --> 00:02:24,311 line:-1
and how you wanted
to adopt ClassKit


55
00:02:24.311 --> 00:02:27.247 line:-1 position:50%
but contexts didn’t quite fit
your use case.


56
00:02:27.247 --> 00:02:30.884 line:-1 position:50%
Well, if you’ve been holding out
on ClassKit adoption


57
00:02:30.884 --> 00:02:36.456 line:-1 position:50%
because your app is file-based,
we added a new API just for you.


58
00:02:36,456 --> 00:02:41,061 line:-1
This new API is for any app
that interacts with files.


59
00:02:41.061 --> 00:02:43.296 line:-1 position:50%
If you have an app
that can edit files


60
00:02:43.296 --> 00:02:45.098 line:-1 position:50%
or just open and view a file,


61
00:02:45,098 --> 00:02:48,769 line:-1
then you’ll love our new API
for file-based apps.


62
00:02:48.769 --> 00:02:52.806 line:-1 position:50%
Adopting this new API enables
reporting student progress data


63
00:02:52,806 --> 00:02:55,142 line:-1
on the files used
within your app


64
00:02:55.142 --> 00:02:57.110 line:-1 position:50%
when they are assigned
in Schoolwork.


65
00:02:57,110 --> 00:03:00,614 line:-1
When a teacher assigns content
from a ClassKit-enabled app,


66
00:03:00,614 --> 00:03:02,849 line:-1
they will be provided
additional insights,


67
00:03:02.849 --> 00:03:04.284 line:-1 position:50%
which is a win for them


68
00:03:04.284 --> 00:03:06.820 line:-1 position:50%
and a great new use case
for your app.


69
00:03:06,820 --> 00:03:08,622 line:-1
One important thing to note


70
00:03:08.622 --> 00:03:11.224 line:-1 position:50%
is that your app must adopt
Open in Place.


71
00:03:11.224 --> 00:03:13.226 line:-1 position:50%
When your app supports
Open in Place,


72
00:03:13.226 --> 00:03:16.163 line:-1 position:50%
the exact file shared between
the student and teacher


73
00:03:16.163 --> 00:03:18.899 line:-1 position:50%
will open in your app
and not a copy.


74
00:03:18,899 --> 00:03:22,502 line:-1
Here's the new API for adding
progress data to a file.


75
00:03:22,502 --> 00:03:25,639 line:-1
It’s called fetchActivity,
and it lives on CLSDataStore.


76
00:03:25.639 --> 00:03:29.009 line:-1 position:50%
I have both the async
and async alternative versions


77
00:03:29.009 --> 00:03:31.044 line:-1 position:50%
of this API shown here.


78
00:03:31.044 --> 00:03:35.048 line:-1 position:50%
You’ll pass in the file URL
of your file to this API,


79
00:03:35.048 --> 00:03:37.684 line:-1 position:50%
and it returns a CLSActivity.


80
00:03:37.684 --> 00:03:41.621 line:-1 position:50%
Once you have the CLSActivity,
you can add progress data to it.


81
00:03:41.621 --> 00:03:44.057 line:-1 position:50%
Now, let’s take a look
at the types of progress data


82
00:03:44.057 --> 00:03:45.892 line:-1 position:50%
your app can submit.


83
00:03:45,892 --> 00:03:48,295 line:-1
If you’ve already adopted
ClassKit,


84
00:03:48.295 --> 00:03:49.529 line:-1 position:50%
then this will be a review


85
00:03:49,529 --> 00:03:52,732 line:-1
of the current progress
data types we have available.


86
00:03:52,732 --> 00:03:54,401 line:-1
If you’re new to ClassKit,


87
00:03:54.401 --> 00:03:57.838 line:-1 position:50%
these classes are currently
being used on CLSContexts,


88
00:03:57.838 --> 00:04:01.374 line:-1 position:50%
but the same data types
can also be applied to files.


89
00:04:01,374 --> 00:04:04,211 line:-1
Here we have a CLSActivity.


90
00:04:04.211 --> 00:04:06.413 line:-1 position:50%
This is a class
used to encapsulate


91
00:04:06.413 --> 00:04:07.647 line:-1 position:50%
all of the progress data


92
00:04:07.647 --> 00:04:09.916 line:-1 position:50%
associated
with a particular file.


93
00:04:09,916 --> 00:04:14,321 line:-1
We have a few types of data that
can be added to a CLSActivity.


94
00:04:14.321 --> 00:04:15.789 line:-1 position:50%
First we have duration.


95
00:04:15,789 --> 00:04:17,190 line:-1
This is the amount of time


96
00:04:17.190 --> 00:04:20.160 line:-1 position:50%
a student spent working
the assigned file.


97
00:04:20,160 --> 00:04:23,363 line:-1
Time should be reported
on all file types.


98
00:04:23.363 --> 00:04:27.667 line:-1 position:50%
To use this API, you simply call
the start and stop methods


99
00:04:27.667 --> 00:04:30.403 line:-1 position:50%
that live on CLSActivity.


100
00:04:30.403 --> 00:04:32.506 line:-1 position:50%
Next we have progress.


101
00:04:32.506 --> 00:04:35.275 line:-1 position:50%
This is some value
between zero and one.


102
00:04:35,275 --> 00:04:37,777 line:-1
Progress is typically used
when you can determine


103
00:04:37.777 --> 00:04:40.647 line:-1 position:50%
a student's progression
through a file.


104
00:04:40.647 --> 00:04:44.151 line:-1 position:50%
For example, let’s say you have
an audio or a video file,


105
00:04:44,151 --> 00:04:46,820 line:-1
and the student got 50 percent
of the way through.


106
00:04:46.820 --> 00:04:50.190 line:-1 position:50%
You would report
the playback progress as .5.


107
00:04:50.190 --> 00:04:51.525 line:-1 position:50%
To add progress,


108
00:04:51.525 --> 00:04:54.294 line:-1 position:50%
you can either set
the progress property directly


109
00:04:54,294 --> 00:04:57,864 line:-1
or add a range
from some start to an end.


110
00:04:57.864 --> 00:04:59.766 line:-1 position:50%
You can add overlapping ranges


111
00:04:59.766 --> 00:05:02.402 line:-1 position:50%
or the same range
multiple times.


112
00:05:02.402 --> 00:05:03.937 line:-1 position:50%
We’ll handle the logic
to make sure


113
00:05:03.937 --> 00:05:08.408 line:-1 position:50%
the correct progress is reported
to students and teachers.


114
00:05:08.408 --> 00:05:11.745 line:-1 position:50%
We also have
the primaryActivityItem


115
00:05:11,745 --> 00:05:15,015 line:-1
which is useful if you have
a file that can be edited.


116
00:05:15.015 --> 00:05:16.783 line:-1 position:50%
Setting the primaryActivityItem


117
00:05:16.783 --> 00:05:18.618 line:-1 position:50%
indicates that,
this piece of data,


118
00:05:18.618 --> 00:05:21.087 line:-1 position:50%
you want to highlight
to students and teachers,


119
00:05:21,087 --> 00:05:24,724 line:-1
and it shows up in the main part
of the UI in the Schoolwork app.


120
00:05:24.724 --> 00:05:25.792 line:-1 position:50%
There's also


121
00:05:25.792 --> 00:05:28.461 line:-1 position:50%
an additionalActivityItems
property.


122
00:05:28.461 --> 00:05:31.231 line:-1 position:50%
This is an array
of CLSActivityItems


123
00:05:31.231 --> 00:05:34.868 line:-1 position:50%
which is useful for adding
additional metadata.


124
00:05:34,868 --> 00:05:37,170 line:-1
To add a primaryActivityItem,


125
00:05:37.170 --> 00:05:41.608 line:-1 position:50%
set the primaryActivityItem
property on CLSActivity.


126
00:05:41.608 --> 00:05:43.877 line:-1 position:50%
To add an
additionalActivityItem,


127
00:05:43,877 --> 00:05:46,846 line:-1
call the
addAdditionalActivityItem


128
00:05:46,846 --> 00:05:48,882 line:-1
function on CLSActivity


129
00:05:48,882 --> 00:05:53,453 line:-1
and pass in the activityItem
you want to add.


130
00:05:53,453 --> 00:05:54,888 line:-1
The primaryActivityItem


131
00:05:54.888 --> 00:05:58.058 line:-1 position:50%
and additionalActivityItem
properties hold a reference


132
00:05:58.058 --> 00:06:02.028 line:-1 position:50%
to one of our three subclasses
of CLSActivityItem.


133
00:06:02,028 --> 00:06:05,699 line:-1
You can add any
of the following subclasses:


134
00:06:05.699 --> 00:06:08.235 line:-1 position:50%
First, we have CLSBinaryItem.


135
00:06:08.235 --> 00:06:11.705 line:-1 position:50%
This is used to represent
any binary data type.


136
00:06:11,705 --> 00:06:15,242 line:-1
An example usage of this
might be a question on a quiz.


137
00:06:15.242 --> 00:06:18.645 line:-1 position:50%
Let's say the student got it
correct or incorrect.


138
00:06:18.645 --> 00:06:21.314 line:-1 position:50%
Or you can add CLSQuantityItem.


139
00:06:21.314 --> 00:06:24.551 line:-1 position:50%
This is used for any
generic numerical value.


140
00:06:24,551 --> 00:06:26,886 line:-1
You could use this
for the number of pages,


141
00:06:26.886 --> 00:06:28.588 line:-1 position:50%
number of slides,


142
00:06:28,588 --> 00:06:31,591 line:-1
or total word count
on a document.


143
00:06:31,591 --> 00:06:33,927 line:-1
And the last is CLSScoreItem.


144
00:06:33,927 --> 00:06:36,663 line:-1
This class is used for anything
that be represented


145
00:06:36,663 --> 00:06:38,632 line:-1
as a part out of a total.


146
00:06:38.632 --> 00:06:40.967 line:-1 position:50%
For example,
a score on a quiz;


147
00:06:40,967 --> 00:06:43,770 line:-1
the user got eight out of ten.


148
00:06:43.770 --> 00:06:46.373 line:-1 position:50%
You can add any combination
of these subclasses


149
00:06:46.373 --> 00:06:51.077 line:-1 position:50%
to an activity, one of them,
or all of them.


150
00:06:51,077 --> 00:06:54,014 line:-1
Now that we know the types
of data that we can add,


151
00:06:54.014 --> 00:06:56.683 line:-1 position:50%
let’s walk through a code sample


152
00:06:56,683 --> 00:07:00,020 line:-1
of adopting this API
into an app.


153
00:07:00.020 --> 00:07:04.357 line:-1 position:50%
Here I have a sample app that
can open and edit a text file.


154
00:07:04,357 --> 00:07:06,626 line:-1
When the student
opens the text file,


155
00:07:06.626 --> 00:07:08.295 line:-1 position:50%
I'll start the timer.


156
00:07:08,295 --> 00:07:11,164 line:-1
The student will go through,
edit the file.


157
00:07:11.164 --> 00:07:13.333 line:-1 position:50%
When the student
is about to close the file,


158
00:07:13,333 --> 00:07:17,704 line:-1
I’ll record the total word count
and stop the timer.


159
00:07:17,704 --> 00:07:19,639 line:-1
Let’s navigate
to the part of my code


160
00:07:19,639 --> 00:07:22,008 line:-1
that gets called
when I open the file


161
00:07:22.008 --> 00:07:25.011 line:-1 position:50%
and the student
starts interacting with it.


162
00:07:25,011 --> 00:07:27,080 line:-1
I have an openFile function.


163
00:07:27.080 --> 00:07:29.783 line:-1 position:50%
This is where I will start
tracking time.


164
00:07:29,783 --> 00:07:32,452 line:-1
In your app, you’ll go
to the part of the code


165
00:07:32,452 --> 00:07:35,055 line:-1
that you already have
for opening a file,


166
00:07:35.055 --> 00:07:37.390 line:-1 position:50%
and this is where you’ll add
a little bit of code


167
00:07:37.390 --> 00:07:40.660 line:-1 position:50%
to start the timer.


168
00:07:40.660 --> 00:07:42.896 line:-1 position:50%
First, I’ll fetch
the CLS activity


169
00:07:42.896 --> 00:07:45.332 line:-1 position:50%
for my file URL.


170
00:07:45.332 --> 00:07:46.866 line:-1 position:50%
Once I have the activity,


171
00:07:46.866 --> 00:07:49.769 line:-1 position:50%
I will call start
to start tracking time


172
00:07:49,769 --> 00:07:52,906 line:-1
and then I will call save
on CLSDataStore


173
00:07:52,906 --> 00:07:55,275 line:-1
to commit the changes I’ve made.


174
00:07:55,275 --> 00:07:57,577 line:-1
Let’s go ahead and add
a breakpoint here


175
00:07:57.577 --> 00:08:01.181 line:-1 position:50%
that we’ll come back to later
when testing our implementation.


176
00:08:01,181 --> 00:08:03,383 line:-1
Now, I also want
to stop the timer


177
00:08:03.383 --> 00:08:06.653 line:-1 position:50%
when the student is done
and add a primaryActivityItem.


178
00:08:06,653 --> 00:08:09,189 line:-1
So let’s navigate to the part
of my code that gets called


179
00:08:09,189 --> 00:08:11,758 line:-1
when the student
is about to close the file.


180
00:08:11,758 --> 00:08:12,926 line:-1
Here I’ll call


181
00:08:12.926 --> 00:08:16.696 line:-1 position:50%
CLSDataStore.shared.
fetchActivity,


182
00:08:16,696 --> 00:08:18,698 line:-1
grab the primaryActivityItem


183
00:08:18.698 --> 00:08:21.101 line:-1 position:50%
to update it
if it already exists,


184
00:08:21,101 --> 00:08:25,672 line:-1
or create a new CLSQuantityItem
if there wasn’t already one.


185
00:08:25.672 --> 00:08:27.741 line:-1 position:50%
Once I have the CLSQuantityItem,


186
00:08:27,741 --> 00:08:29,743 line:-1
I can update its value
and set it


187
00:08:29,743 --> 00:08:33,079 line:-1
as the primaryActivityItem
on my activity.


188
00:08:33,079 --> 00:08:35,448 position:50%
I can add
progress to my activity.


189
00:08:35,448 --> 00:08:38,752 line:0
And last, call stop
to stop the timer.


190
00:08:38,752 --> 00:08:41,688 position:50%
Then, I make sure to call save.


191
00:08:41.688 --> 00:08:44.758 line:-1 position:50%
If we don’t call save
on CLSDataStore,


192
00:08:44.758 --> 00:08:48.528 line:-1 position:50%
then we will not persist
any of the changes we just made.


193
00:08:48,528 --> 00:08:50,930 line:0
I’m going to add a breakpoint
here as well.


194
00:08:50,930 --> 00:08:53,533 position:50%
We’ll use this to help us
debug our submission


195
00:08:53,533 --> 00:08:55,902 position:50%
of student progress data.


196
00:08:55,902 --> 00:08:59,539 line:-1
Now that we’ve adopted the API
into our sample app,


197
00:08:59.539 --> 00:09:02.542 line:-1 position:50%
let’s see how we can test
our implementation


198
00:09:02,542 --> 00:09:05,812 line:-1
using Schoolwork
and developer mode.


199
00:09:05,812 --> 00:09:07,981 line:-1
First, we need to set
the ClassKit


200
00:09:07,981 --> 00:09:10,784 line:-1
environment entitlement
to development.


201
00:09:10,784 --> 00:09:13,052 line:-1
This is inside of Xcode.


202
00:09:13,052 --> 00:09:15,889 line:-1
The default value is production.


203
00:09:15,889 --> 00:09:17,957 line:-1
We’ll change the value
of the entitlement


204
00:09:17,957 --> 00:09:19,926 line:-1
to development
so that we can test


205
00:09:19,926 --> 00:09:22,695 line:-1
using developer mode
and Schoolwork.


206
00:09:22,695 --> 00:09:26,466 line:-1
The next time we run our code,
it will run in developer mode.


207
00:09:26.466 --> 00:09:29.469 line:-1 position:50%
It’s important to make sure
to set this back to production


208
00:09:29,469 --> 00:09:32,005 line:-1
after you're done testing.


209
00:09:32,005 --> 00:09:36,142 line:-1
Next, we need to turn
on developer mode on our iPad.


210
00:09:36,142 --> 00:09:38,044 position:50%
We'll open the Settings app,


211
00:09:38,044 --> 00:09:42,782 line:0
navigate to Developer >
ClassKit API.


212
00:09:42,782 --> 00:09:44,384 position:50%
We’ll select Teacher


213
00:09:44,384 --> 00:09:47,353 position:50%
to change our role to a teacher
in Schoolwork.


214
00:09:47,353 --> 00:09:50,590 line:0
Now, we will we open
the Schoolwork app.


215
00:09:50,590 --> 00:09:51,891 line:-1
When Schoolwork opens,


216
00:09:51,891 --> 00:09:54,294 line:-1
we are presented
with the teacher UI.


217
00:09:54,294 --> 00:09:57,096 line:-1
And if we tap on
the Create Assignment button


218
00:09:57,096 --> 00:09:59,032 line:-1
in the top right-hand corner,


219
00:09:59.032 --> 00:10:02.902 line:-1 position:50%
we can create an assignment
adding a file our app supports


220
00:10:02.902 --> 00:10:06.172 line:-1 position:50%
by tapping the Files button.


221
00:10:06.172 --> 00:10:10.043 line:-1 position:50%
Then we will select the file
that we want to add,


222
00:10:10,043 --> 00:10:13,980 line:-1
enter the class and the title
of the assignment.


223
00:10:13,980 --> 00:10:17,350 line:-1
You can also optionally add
any instructional text


224
00:10:17,350 --> 00:10:18,785 line:-1
if you’d like.


225
00:10:18,785 --> 00:10:21,855 line:-1
And then tap the button
in the top right-hand corner


226
00:10:21,855 --> 00:10:24,824 line:-1
to publish this assignment
to the class.


227
00:10:24,824 --> 00:10:26,726 line:-1
Now that we've created
the assignment,


228
00:10:26.726 --> 00:10:29.028 line:-1 position:50%
we can switch our role
to act as a student


229
00:10:29,028 --> 00:10:33,099 line:-1
and test our implementation
of submitting progress data.


230
00:10:33.099 --> 00:10:37.370 line:-1 position:50%
So let's navigate back
to the Settings app.


231
00:10:37,370 --> 00:10:42,208 line:0
In Settings, we’ll select
Developer > ClassKit API,


232
00:10:42,208 --> 00:10:44,177 line:0
and tap on Student.


233
00:10:44.177 --> 00:10:46.446 line:-1 position:50%
This has now changed my role
in Schoolwork


234
00:10:46,446 --> 00:10:48,448 line:-1
to act as a student.


235
00:10:48,448 --> 00:10:51,751 line:-1
We'll go back
to the Schoolwork app.


236
00:10:51.751 --> 00:10:54.821 line:-1 position:50%
I can see I am now logged in
as a student


237
00:10:54,821 --> 00:10:57,690 line:-1
because I no longer have
the Create Assignment button


238
00:10:57.690 --> 00:11:00.093 line:-1 position:50%
in the top right-hand corner
of my UI.


239
00:11:00.093 --> 00:11:01.427 line:-1 position:50%
In the middle of the screen,


240
00:11:01.427 --> 00:11:03.496 line:-1 position:50%
I see the assignment
we just created,


241
00:11:03.496 --> 00:11:08.001 line:-1 position:50%
and if I tap on it, I am shown
the details of the assignment.


242
00:11:08.001 --> 00:11:09.869 line:-1 position:50%
I can tap on the file icon,


243
00:11:09.869 --> 00:11:12.205 line:-1 position:50%
and that will deep-link me
into my app


244
00:11:12.205 --> 00:11:15.742 line:-1 position:50%
where I start reporting
progress data.


245
00:11:15,742 --> 00:11:17,544 line:-1
The file opens up in my app,


246
00:11:17.544 --> 00:11:20.813 line:-1 position:50%
and my code gets called
to start the timer.


247
00:11:20,813 --> 00:11:22,882 line:-1
Here we can see
our breakpoint get hit


248
00:11:22,882 --> 00:11:25,652 line:-1
after calling save
to start the timer.


249
00:11:25.652 --> 00:11:29.556 line:-1 position:50%
And if we hit Play
and then go back to our app,


250
00:11:29.556 --> 00:11:33.059 line:-1 position:50%
I see the Student Progress
banner drop down from the top,


251
00:11:33,059 --> 00:11:35,495 line:-1
which is an indication
that the save was successful


252
00:11:35,495 --> 00:11:37,530 line:-1
and the timer was started.


253
00:11:37.530 --> 00:11:38.831 line:-1 position:50%
Then I'll go through,


254
00:11:38,831 --> 00:11:42,168 line:-1
add a bunch of text
to complete the essay.


255
00:11:42.168 --> 00:11:45.138 line:-1 position:50%
My sample app has a Done button
the student will tap


256
00:11:45.138 --> 00:11:47.173 line:-1 position:50%
when they are done
editing the file.


257
00:11:47.173 --> 00:11:50.343 line:-1 position:50%
So I’ll tap that Done button
in the top left-hand corner.


258
00:11:50.343 --> 00:11:55.315 line:-1 position:50%
At this point, my closeFile
function will get called.


259
00:11:55,315 --> 00:11:57,417 position:50%
We can see our second breakpoint
was hit


260
00:11:57,417 --> 00:12:00,019 position:50%
for saving the wordCount
as the primaryActivityItem


261
00:12:00,019 --> 00:12:01,588 line:0
and stopping the timer.


262
00:12:01,588 --> 00:12:05,625 line:0
Then, we can hit Play
and go back to Schoolwork.


263
00:12:05,625 --> 00:12:07,627 line:0
In Schoolwork,
I can see the progress data


264
00:12:07,627 --> 00:12:09,262 line:0
submitted by my app.


265
00:12:09,262 --> 00:12:12,332 line:0
First, I see the time
as 41 minutes.


266
00:12:12,332 --> 00:12:14,701 line:-1
This validates
that I'm calling start,


267
00:12:14,701 --> 00:12:18,137 line:-1
stop, and save correctly.


268
00:12:18,137 --> 00:12:19,739 position:50%
Next, I see the word count,


269
00:12:19,739 --> 00:12:22,308 line:0
which I set
as the primaryActivityItem.


270
00:12:22,308 --> 00:12:24,377 position:50%
Any CLSActivityItem subclass


271
00:12:24,377 --> 00:12:26,412 line:0
I set
as the primaryActivityItem


272
00:12:26,412 --> 00:12:28,982 position:50%
will show up here
in the main part of the UI.


273
00:12:28,982 --> 00:12:33,286 position:50%
The fact that I can see
my word count as 558 words


274
00:12:33,286 --> 00:12:36,689 position:50%
validates that my submission
of CLSQuantityItem


275
00:12:36,689 --> 00:12:38,224 line:0
is working correctly.


276
00:12:38.224 --> 00:12:40.560 line:-1 position:50%
Now, let’s switch our role back
to a teacher


277
00:12:40.560 --> 00:12:44.764 line:-1 position:50%
and see how the data submitted
by my app appears to teachers.


278
00:12:44,764 --> 00:12:45,965 position:50%
In the center of the screen,


279
00:12:45,965 --> 00:12:48,768 position:50%
we see I have the average time
and average word count


280
00:12:48,768 --> 00:12:50,903 line:0
for all students.


281
00:12:50,903 --> 00:12:55,174 line:0
Below that is a row for
every student on the assignment.


282
00:12:55,174 --> 00:12:56,342 line:0
In the Student cell,


283
00:12:56,342 --> 00:12:59,746 position:50%
I see the data
that one student submitted.


284
00:12:59,746 --> 00:13:02,148 position:50%
And if I tap
on the Student cell,


285
00:13:02,148 --> 00:13:05,952 position:50%
I can see the progress data
reported by my app.


286
00:13:05,952 --> 00:13:09,122 position:50%
We have the primaryActivityItem,
time,


287
00:13:09,122 --> 00:13:11,257 position:50%
and one additionalActivityItem


288
00:13:11,257 --> 00:13:14,727 position:50%
which is listed as
Readability Grade Level.


289
00:13:14,727 --> 00:13:16,462 line:-1
And that is how you use
developer mode


290
00:13:16,462 --> 00:13:18,531 line:-1
to test
your ClassKit integration.


291
00:13:18,531 --> 00:13:22,301 line:-1
Don’t forget to set the
entitlement back to production.


292
00:13:22.301 --> 00:13:23.302 line:-1 position:50%
Well, great!


293
00:13:23.302 --> 00:13:25.638 line:-1 position:50%
We covered a lot today,
from the new API


294
00:13:25.638 --> 00:13:28.241 line:-1 position:50%
to testing it
with developer mode.


295
00:13:28.241 --> 00:13:31.044 line:-1 position:50%
Even if you don’t consider
your app for education,


296
00:13:31,044 --> 00:13:33,413 line:-1
there’s a good chance
an educator does,


297
00:13:33,413 --> 00:13:36,683 line:-1
and having it ClassKit-enabled
means your app will be ready


298
00:13:36,683 --> 00:13:39,519 line:-1
for them to integrate
right into their curriculum.


299
00:13:39.519 --> 00:13:41.721 line:-1 position:50%
So make sure to adopt our API.


300
00:13:41.721 --> 00:13:42.955 line:-1 position:50%
And thank you.


301
00:13:42,955 --> 00:13:44,857 line:-1
Thank you
for the feedback reports,


302
00:13:44,857 --> 00:13:48,261 line:-1
and please submit any other
feedback that you may have.


303
00:13:48,261 --> 00:13:51,330 line:-1
We love hearing from you.


304
00:13:51,330 --> 00:13:53,032 line:0
And if you are interested
in learning more


305
00:13:53,032 --> 00:13:55,134 line:0
about our context-based APIs,


306
00:13:55,134 --> 00:13:56,803 position:50%
take a look
at our previous sessions


307
00:13:56,803 --> 00:13:59,072 line:0
on "What’s new in ClassKit"
and our talk


308
00:13:59,072 --> 00:14:01,708 position:50%
"Introducing ClassKit"
from 2018.


309
00:14:01,708 --> 00:14:04,110 line:-1
Thanks, and have a great WWDC!


310
00:14:04,110 --> 00:14:09,515 position:90% line:0 align:right
♪

