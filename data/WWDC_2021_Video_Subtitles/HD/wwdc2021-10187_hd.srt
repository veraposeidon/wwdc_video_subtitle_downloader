2
00:00:00.267 --> 00:00:02.035 line:-1 position:50%
[MAC STARTUP CHIME]


3
00:00:02,035 --> 00:00:05,372 line:-1
♪ Bass music playing ♪


4
00:00:05.372 --> 00:00:06.573 line:-1 position:50%
[KEYSTROKES]


5
00:00:06,573 --> 00:00:09,643 size:2% position:90% align:right
♪


6
00:00:09,643 --> 00:00:11,044 line:-1
Willem Mattelaer: Hi,
my name is Willem


7
00:00:11,044 --> 00:00:13,547 line:-1
and I'm an engineer
working on Group Activities.


8
00:00:13,547 --> 00:00:16,416 line:-1
I'll be joined by Angus and Adam
to talk about how you can create


9
00:00:16.416 --> 00:00:19.853 line:-1 position:50%
custom experiences
with Group Activities.


10
00:00:19.853 --> 00:00:21.388 line:-1 position:50%
To start, I'll introduce the app


11
00:00:21.388 --> 00:00:23.257 line:-1 position:50%
we're going to be working on
in this session


12
00:00:23.257 --> 00:00:24.925 line:-1 position:50%
and explain why
it's a great candidate


13
00:00:24.925 --> 00:00:27.995 line:-1 position:50%
to add Group Activities
support to.


14
00:00:27.995 --> 00:00:29.730 line:-1 position:50%
Next, we'll go over
the activity creation


15
00:00:29.730 --> 00:00:32.432 line:-1 position:50%
and session management steps
and explain the differences


16
00:00:32.432 --> 00:00:35.869 line:-1 position:50%
compared to making
a media experience.


17
00:00:35,869 --> 00:00:38,639 line:-1
Finally, we'll mention some ways
you could polish the experience


18
00:00:38.639 --> 00:00:41.508 line:-1 position:50%
your users have
while using your app.


19
00:00:41,508 --> 00:00:44,278 line:-1
Group Activities allows you
to build shared experiences


20
00:00:44.278 --> 00:00:47.014 line:-1 position:50%
across devices with SharePlay.


21
00:00:47.014 --> 00:00:49.516 line:-1 position:50%
Although the focus is on
creating media experiences,


22
00:00:49,516 --> 00:00:52,452 line:-1
that shouldn't prevent you from
letting your creativity go wild


23
00:00:52,452 --> 00:00:54,388 line:-1
and see how your app
could be experienced


24
00:00:54,388 --> 00:00:56,523 line:-1
across multiple devices.


25
00:00:56,523 --> 00:00:58,225 line:0
We will be building
on some of the concepts


26
00:00:58,225 --> 00:00:59,259 position:50%
that were introduced in the


27
00:00:59,259 --> 00:01:02,496 line:0
"Coordinate media experiences
with Group Activities" session.


28
00:01:02,496 --> 00:01:04,932 line:0
I highly recommend
checking that one out.


29
00:01:06,300 --> 00:01:07,034 line:-1
In this session,


30
00:01:07,034 --> 00:01:08,969 line:-1
we'll be working on an app
called DrawTogether


31
00:01:08.969 --> 00:01:10.938 line:-1 position:50%
that allows you to --
you guessed it --


32
00:01:10.938 --> 00:01:13.307 line:-1 position:50%
draw together
while in FaceTime.


33
00:01:13.307 --> 00:01:14.374 line:-1 position:50%
It's a pretty simple app


34
00:01:14.374 --> 00:01:16.209 line:-1 position:50%
where almost the entire screen
is the canvas


35
00:01:16,209 --> 00:01:19,513 line:-1
and everyone gets a random color
they can use to draw with.


36
00:01:19,513 --> 00:01:20,714 line:-1
But despite being simple,


37
00:01:20,714 --> 00:01:22,916 line:-1
it's still incredibly fun
to draw with my friends


38
00:01:22.916 --> 00:01:24.685 line:-1 position:50%
and admire the great skill
of some of them


39
00:01:24.685 --> 00:01:26.486 line:-1 position:50%
or laugh at their poor drawings.


40
00:01:26.486 --> 00:01:29.122 line:-1 position:50%
I definitely fall into
the second category myself.


41
00:01:29.122 --> 00:01:30.490 line:-1 position:50%
Let me show you a quick demo


42
00:01:30.490 --> 00:01:32.859 line:-1 position:50%
of what we're going
to work towards.


43
00:01:38,365 --> 00:01:40,067 position:50%
Hey guys, what's up?


44
00:01:40,067 --> 00:01:42,569 line:0
Adam, I saw you had
a question for me.


45
00:01:42,569 --> 00:01:44,438 position:50%
Adam Syed: Yeah.
So Angus and I were talking,


46
00:01:44,438 --> 00:01:46,573 line:0
and he mentioned that
you're a really good artist --


47
00:01:46,573 --> 00:01:48,141 position:50%
like a grade A Picasso.


48
00:01:48,141 --> 00:01:49,843 line:0
So you got to show us, man!


49
00:01:49,843 --> 00:01:51,378 line:0
Angus Burton: I've seen
some of Willem's drawings,


50
00:01:51,378 --> 00:01:53,580 line:0
and they're impressive.


51
00:01:53,580 --> 00:01:56,316 position:50%
Willem: I think, Angus, you're
exaggerating just a tiny bit.


52
00:01:56,316 --> 00:01:58,518 position:50%
But I'm happy to show you
what I can do.


53
00:01:58,518 --> 00:02:00,187 position:50%
Let's go to
the DrawTogether app.


54
00:02:00,187 --> 00:02:01,955 position:50%
Adam: OK.


55
00:02:01,955 --> 00:02:06,360 line:0
Can we do, like,
a pastoral landscape?


56
00:02:06.360 --> 00:02:09.429 line:-1 position:50%
Willem: Sure, uh... let me start
by drawing a house, maybe.


57
00:02:09,429 --> 00:02:13,433 line:-1
Adam: [LAUGHS] OK.


58
00:02:13.433 --> 00:02:15.769 line:-1 position:50%
Angus: Willem, this house
is looking pretty basic, man.


59
00:02:15.769 --> 00:02:18.538 line:-1 position:50%
Maybe I'll help you out
with a sun.


60
00:02:18,538 --> 00:02:20,507 line:-1
Adam: I'll try a tree.


61
00:02:20,507 --> 00:02:23,677 line:-1
Willem: That tree
is way too tall. [LAUGHS]


62
00:02:23.677 --> 00:02:27.280 line:-1 position:50%
Adam: No, the sun's
too low, man. [LAUGHTER]


63
00:02:27,280 --> 00:02:29,116 line:-1
Willem: Let me add some grass.


64
00:02:29,116 --> 00:02:32,753 line:-1
Adam: I'll draw some more trees.


65
00:02:32.753 --> 00:02:35.655 line:-1 position:50%
Willem: OK. Um, I think
I'm going to call it.


66
00:02:35,655 --> 00:02:39,726 line:-1
We are not artists and we should
stop what we're doing right now.


67
00:02:39.726 --> 00:02:43.230 line:-1 position:50%
Let's -- [LAUGHTER]
I'll talk to you guys later, OK?


68
00:02:43.230 --> 00:02:45.532 line:-1 position:50%
Adam: [LAUGHING] OK
Angus: Bye.


69
00:02:45.532 --> 00:02:47.367 line:-1 position:50%
Willem: As you saw,
one of the core experiences


70
00:02:47.367 --> 00:02:49.102 line:-1 position:50%
of the Group Activities API


71
00:02:49.102 --> 00:02:50.604 line:-1 position:50%
is allowing you
to do things together


72
00:02:50,604 --> 00:02:52,439 line:-1
while being physically apart.


73
00:02:52.439 --> 00:02:54.608 line:-1 position:50%
The real-time interactions
that you can unlock


74
00:02:54.608 --> 00:02:56.910 line:-1 position:50%
and the instant reaction
your users will get,


75
00:02:56.910 --> 00:02:59.179 line:-1 position:50%
since they can see
and hear everyone else,


76
00:02:59.179 --> 00:03:01.882 line:-1 position:50%
can lead to some truly
magical moments.


77
00:03:01,882 --> 00:03:03,817 line:-1
This is something you should
keep in mind when considering


78
00:03:03.817 --> 00:03:07.521 line:-1 position:50%
how to integrate
Group Activities in your app.


79
00:03:07,521 --> 00:03:09,756 line:-1
There are two steps
to adopt Group Activities:


80
00:03:09.756 --> 00:03:12.526 line:-1 position:50%
activity creation
and session management.


81
00:03:12.526 --> 00:03:13.894 line:-1 position:50%
We've covered this
in more detail


82
00:03:13,894 --> 00:03:16,463 line:-1
in the "Coordinate media
experiences" session.


83
00:03:16,463 --> 00:03:19,599 line:-1
In this session, let's take
a look at how these steps change


84
00:03:19.599 --> 00:03:21.501 line:-1 position:50%
when building
a custom experience,


85
00:03:21.501 --> 00:03:24.905 line:-1 position:50%
starting with activity creation.


86
00:03:24,905 --> 00:03:27,641 line:-1
There are two parts
to create a Group Activity.


87
00:03:27.641 --> 00:03:29.876 line:-1 position:50%
First you configure
your activity,


88
00:03:29.876 --> 00:03:32.379 line:-1 position:50%
and that's followed
by activating the activity.


89
00:03:32,379 --> 00:03:34,381 line:0
Compared to
a media Group Activity,


90
00:03:34,381 --> 00:03:38,085 position:50%
only the configure part is
different for a custom activity.


91
00:03:38,085 --> 00:03:39,853 line:-1
When configuring the activity,


92
00:03:39,853 --> 00:03:41,755 line:-1
you have to think about
the specific experience


93
00:03:41.755 --> 00:03:44.091 line:-1 position:50%
that you want to share
between all the participants.


94
00:03:44,091 --> 00:03:46,226 position:50%
The activity should contain
all the information


95
00:03:46,226 --> 00:03:49,729 line:0
that remains constant
throughout that experience.


96
00:03:49,729 --> 00:03:51,031 line:-1
If you've watched the


97
00:03:51,031 --> 00:03:53,767 line:-1
"Coordinate media experiences
with Group Activities" session,


98
00:03:53.767 --> 00:03:55.268 line:-1 position:50%
this should look familiar.


99
00:03:55,268 --> 00:03:57,337 line:-1
We've defined
a DrawTogether struct


100
00:03:57.337 --> 00:03:59.606 line:-1 position:50%
that conforms to
the GroupActivity protocol,


101
00:03:59,606 --> 00:04:01,775 line:-1
and we've implemented the
metadata property where


102
00:04:01.775 --> 00:04:04.945 line:-1 position:50%
we construct the associated
metadata with a title.


103
00:04:04.945 --> 00:04:06.947 line:-1 position:50%
Now to make this
a custom activity,


104
00:04:06.947 --> 00:04:10.450 line:-1 position:50%
we'll just need to set
the right type on the metadata.


105
00:04:10,450 --> 00:04:11,852 line:-1
By setting that to generic,


106
00:04:11.852 --> 00:04:15.021 line:-1 position:50%
we configure this activity
to be a custom activity.


107
00:04:15,021 --> 00:04:16,723 line:-1
And that's all you need to do
when configuring


108
00:04:16.723 --> 00:04:19.693 line:-1 position:50%
a custom activity
compared to a media one.


109
00:04:19.693 --> 00:04:21.862 line:-1 position:50%
Now let's jump right into Xcode
and start creating


110
00:04:21,862 --> 00:04:25,465 line:-1
our custom Group Activity
in the DrawTogether app.


111
00:04:25.465 --> 00:04:27.601 line:-1 position:50%
First, let me quickly
walk you through the code


112
00:04:27,601 --> 00:04:29,536 line:-1
that we start with.


113
00:04:29,536 --> 00:04:33,640 line:-1
DrawTogether is a SwiftUI app
using the SwiftUI app lifecycle.


114
00:04:33.640 --> 00:04:36.276 line:-1 position:50%
ContentView is the main view
of the app.


115
00:04:36.276 --> 00:04:38.111 line:-1 position:50%
At the top of the view,
there is an indicator


116
00:04:38,111 --> 00:04:41,581 line:-1
that shows the color
that will be used when drawing.


117
00:04:41,581 --> 00:04:44,084 line:-1
Below that is the CanvasView.


118
00:04:44.084 --> 00:04:46.086 line:-1 position:50%
This takes a canvas
and will be responsible


119
00:04:46.086 --> 00:04:48.088 line:-1 position:50%
for drawing all the strokes
in the canvas


120
00:04:48.088 --> 00:04:51.091 line:-1 position:50%
and updating the canvas
based on any user input.


121
00:04:51,091 --> 00:04:53,660 line:0
Finally, at the bottom
there is a ControlBar,


122
00:04:53,660 --> 00:04:55,162 position:50%
which contains
a couple of controls


123
00:04:55,162 --> 00:04:57,230 position:50%
that could be useful
while drawing.


124
00:04:57,230 --> 00:04:58,798 position:50%
Currently we have
a single button there


125
00:04:58,798 --> 00:05:02,202 line:0
to clear the canvas
and start from scratch.


126
00:05:02.202 --> 00:05:04.804 line:-1 position:50%
The canvas itself
consists of an array of strokes


127
00:05:04.804 --> 00:05:06.506 line:-1 position:50%
where each stroke has a color,


128
00:05:06,506 --> 00:05:09,609 line:-1
an identifier,
and a list of points.


129
00:05:09,609 --> 00:05:11,678 line:-1
The canvas also has
an activeStroke --


130
00:05:11.678 --> 00:05:12.846 line:-1 position:50%
which represents a stroke


131
00:05:12.846 --> 00:05:15.148 line:-1 position:50%
that the local user
is currently drawing --


132
00:05:15,148 --> 00:05:19,553 line:-1
and the stroke color
that will be used by the user.


133
00:05:19,553 --> 00:05:22,222 line:-1
Let's now start
with configuring our activity.


134
00:05:22,222 --> 00:05:23,290 line:-1
Before we do that,


135
00:05:23,290 --> 00:05:25,792 line:-1
I'll have to add the
Group Activities entitlement.


136
00:05:25,792 --> 00:05:28,428 line:-1
I do that by going
to the project settings,


137
00:05:28.428 --> 00:05:30.230 line:-1 position:50%
and in the
Signing & Capabilities tab,


138
00:05:30.230 --> 00:05:32.666 line:-1 position:50%
I'll add a new capability.


139
00:05:32,666 --> 00:05:38,205 line:-1
I'll search for Group Activities
and select it.


140
00:05:38,205 --> 00:05:39,739 line:-1
Now that we have
the entitlement,


141
00:05:39.739 --> 00:05:42.142 line:-1 position:50%
let's finally configure
our activity.


142
00:05:42.142 --> 00:05:48.248 line:-1 position:50%
I'll add a new file by going
to File > New > File...


143
00:05:48,248 --> 00:05:51,184 line:-1
and selecting Swift File.


144
00:05:51.184 --> 00:05:52.986 line:-1 position:50%
I'll call it "DrawTogether"...


145
00:05:52,986 --> 00:05:54,721 line:-1
[KEYSTROKES]


146
00:05:54.721 --> 00:05:58.024 line:-1 position:50%
...and click Create.


147
00:05:58.024 --> 00:06:00.527 line:-1 position:50%
First, I'll import
our framework.


148
00:06:00.527 --> 00:06:03.830 line:-1 position:50%
[KEYSTROKES]


149
00:06:03.830 --> 00:06:06.433 line:-1 position:50%
Next, I'll define a new struct
called "DrawTogether"


150
00:06:06.433 --> 00:06:11.204 line:-1 position:50%
that conforms to
the GroupActivity protocol.


151
00:06:11.204 --> 00:06:13.406 line:-1 position:50%
The GroupActivity protocol
has two properties


152
00:06:13,406 --> 00:06:17,010 line:-1
that should be implemented:
activityIdentifier and metadata.


153
00:06:17.010 --> 00:06:18.411 line:-1 position:50%
For the activityIdentifier,


154
00:06:18.411 --> 00:06:20.747 line:-1 position:50%
I will rely on
the default implementation.


155
00:06:20,747 --> 00:06:23,283 line:-1
The metadata property is,
however, still necessary.


156
00:06:23,283 --> 00:06:24,751 line:-1
So let's add it.


157
00:06:29.155 --> 00:06:30.323 line:-1 position:50%
In this computed property,


158
00:06:30.323 --> 00:06:33.493 line:-1 position:50%
I create
a GroupActivityMetadata object,


159
00:06:33,493 --> 00:06:36,196 line:-1
and I set the title.


160
00:06:36,196 --> 00:06:39,499 line:-1
I also set the type
to be generic.


161
00:06:39.499 --> 00:06:42.402 line:-1 position:50%
This is crucial
for a custom activity.


162
00:06:42.402 --> 00:06:45.805 line:-1 position:50%
Finally, I return
the metadata object.


163
00:06:48,475 --> 00:06:50,043 line:-1
Now that we've configured
the activity,


164
00:06:50.043 --> 00:06:53.013 line:-1 position:50%
we still need to activate it
at the appropriate moment.


165
00:06:53.013 --> 00:06:54.848 line:-1 position:50%
I'll add a new button
to activate it --


166
00:06:54.848 --> 00:06:57.717 line:-1 position:50%
and what better place for that
then our control bar?


167
00:06:57.717 --> 00:06:59.986 line:-1 position:50%
I'll add the button
at the start of our HStack.


168
00:06:59.986 --> 00:07:03.390 line:-1 position:50%
[KEYSTROKES]


169
00:07:03.390 --> 00:07:07.360 line:-1 position:50%
For the label of the button,
we're using an SF Symbol.


170
00:07:07.360 --> 00:07:10.030 line:-1 position:50%
And in the action closure,
we'll create a new instance


171
00:07:10.030 --> 00:07:14.067 line:-1 position:50%
of our custom Group Activity
and call activate on it.


172
00:07:14.067 --> 00:07:18.471 line:-1 position:50%
And that's all that is necessary
to activate our activity.


173
00:07:18.471 --> 00:07:21.474 line:-1 position:50%
I just showed how to configure
a custom Group Activity


174
00:07:21.474 --> 00:07:22.909 line:-1 position:50%
and how to activate it.


175
00:07:22,909 --> 00:07:24,344 line:-1
These are the two parts
necessary


176
00:07:24.344 --> 00:07:26.346 line:-1 position:50%
for the activity creation step.


177
00:07:26.346 --> 00:07:27.614 line:-1 position:50%
Now, I'll hand it off to Angus


178
00:07:27.614 --> 00:07:31.151 line:-1 position:50%
who will tell you about
the session management step.


179
00:07:31.151 --> 00:07:32.118 line:-1 position:50%
Angus: Thanks, Willem.


180
00:07:32.118 --> 00:07:34.921 line:-1 position:50%
Next, we are going to talk about
how you can send and receive


181
00:07:34.921 --> 00:07:38.191 line:-1 position:50%
custom data in your application
using Group Activities.


182
00:07:38.191 --> 00:07:41.561 line:-1 position:50%
This is at the heart of creating
unique SharePlay experiences


183
00:07:41.561 --> 00:07:44.564 line:-1 position:50%
with Group Activities.


184
00:07:44.564 --> 00:07:46.299 line:-1 position:50%
From the previous session
titled,


185
00:07:46.299 --> 00:07:49.069 line:-1 position:50%
"Coordinate media experiences
with Group Activities,"


186
00:07:49.069 --> 00:07:50.070 line:-1 position:50%
you should be familiar


187
00:07:50.070 --> 00:07:52.839 line:-1 position:50%
with the three steps
of receiving a session,


188
00:07:52.839 --> 00:07:56.009 line:-1 position:50%
preparing for playback,
and joining a session.


189
00:07:56,009 --> 00:07:57,911 position:50%
Instead of playback
synchronization,


190
00:07:57,911 --> 00:08:01,581 line:0
we need to configure a session
for our custom experience.


191
00:08:01,581 --> 00:08:03,516 position:50%
But before we jump into that,


192
00:08:03,516 --> 00:08:07,454 position:50%
let's add the code to receive
the Group Session and join in.


193
00:08:07,454 --> 00:08:10,056 line:-1
Let's go back to Xcode,
and the first thing we'll do


194
00:08:10.056 --> 00:08:14.494 line:-1 position:50%
is to navigate to ContentView,
and import GroupActivities.


195
00:08:17,797 --> 00:08:21,534 line:-1
[KEYSTROKES]


196
00:08:21,534 --> 00:08:23,436 line:-1
Next, we will create
an async task


197
00:08:23,436 --> 00:08:26,873 line:-1
to receive our GroupSession.


198
00:08:26.873 --> 00:08:30.110 line:-1 position:50%
[KEYSTROKES]


199
00:08:30,110 --> 00:08:33,780 line:0
Now that we have a GroupSession,
we need a place to store it.


200
00:08:33,780 --> 00:08:36,316 position:50%
Let's store it on our Canvas
object using a new method


201
00:08:36,316 --> 00:08:40,053 line:0
that we'll call
"configureGroupSession".


202
00:08:40.053 --> 00:08:42.622 line:-1 position:50%
[KEYSTROKES]


203
00:08:42,622 --> 00:08:44,157 position:50%
Now, let's navigate over
to Canvas


204
00:08:44,157 --> 00:08:48,228 position:50%
and implement the
configureGroupSession method.


205
00:08:50,563 --> 00:08:52,632 line:-1
We'll start by going to the top


206
00:08:52.632 --> 00:08:55.301 line:-1 position:50%
and making sure to import
GroupActivities.


207
00:08:55.301 --> 00:08:58.171 line:-1 position:50%
[KEYSTROKES]


208
00:08:58,171 --> 00:08:59,739 line:-1
Let's go to
the bottom of our file


209
00:08:59,739 --> 00:09:03,777 line:-1
and implement
our new method next.


210
00:09:03,777 --> 00:09:07,714 position:50%
[KEYSTROKES]


211
00:09:07,714 --> 00:09:09,549 line:-1
Here we assigned
the groupSession object


212
00:09:09,549 --> 00:09:13,920 line:-1
we receive to a new property
on our class.


213
00:09:13,920 --> 00:09:15,955 line:-1
Also note that
we reset the canvas


214
00:09:15.955 --> 00:09:19.292 line:-1 position:50%
before setting
the groupSession property.


215
00:09:19,292 --> 00:09:20,860 line:-1
Last but not least,


216
00:09:20.860 --> 00:09:24.397 line:-1 position:50%
let's add the code
to join the groupSession.


217
00:09:24,397 --> 00:09:29,469 position:50%
[KEYSTROKES]


218
00:09:29,469 --> 00:09:30,970 line:0
At this point,
we should be able to build


219
00:09:30,970 --> 00:09:32,539 position:50%
and compile our project.


220
00:09:32.539 --> 00:09:37.844 line:-1 position:50%
Let's test that now
by going to Product > Build.


221
00:09:40.580 --> 00:09:41.448 line:-1 position:50%
Great.


222
00:09:41.448 --> 00:09:42.482 line:-1 position:50%
Now that we've set up the code


223
00:09:42.482 --> 00:09:44.717 line:-1 position:50%
to receive and join
our Group Session,


224
00:09:44,717 --> 00:09:46,619 line:-1
let's look at how to configure
the session


225
00:09:46,619 --> 00:09:50,490 line:-1
for sending and receiving
custom data in our application.


226
00:09:50.490 --> 00:09:51.691 line:-1 position:50%
For configuring the session,


227
00:09:51,691 --> 00:09:54,227 line:-1
we'll be using
GroupSessionMessenger,


228
00:09:54.227 --> 00:09:57.630 line:-1 position:50%
which provides a simple API
to send and receive raw data


229
00:09:57.630 --> 00:09:59.299 line:-1 position:50%
or structured messages


230
00:09:59.299 --> 00:10:02.435 line:-1 position:50%
to and from participants
within the Group Session.


231
00:10:02.435 --> 00:10:07.307 line:-1 position:50%
Let's look at how to use
GroupSessionMessenger next.


232
00:10:07.307 --> 00:10:09.943 line:-1 position:50%
To start, we will create
a GroupSessionMessenger


233
00:10:09,943 --> 00:10:12,011 line:-1
from our groupSession.


234
00:10:12.011 --> 00:10:14.581 line:-1 position:50%
The first step in using
GroupSessionMessenger


235
00:10:14.581 --> 00:10:17.717 line:-1 position:50%
is to define what type of data
needs to be exchanged


236
00:10:17,717 --> 00:10:20,653 line:-1
between participants
in your application.


237
00:10:20.653 --> 00:10:23.122 line:-1 position:50%
In DrawTogether,
the specific data we need


238
00:10:23.122 --> 00:10:27.327 line:-1 position:50%
to share with other devices
are the strokes themselves.


239
00:10:27.327 --> 00:10:29.963 line:-1 position:50%
We could represent
a stroke with three properties:


240
00:10:29,963 --> 00:10:33,299 line:-1
an identifier, a color,
and a coordinate point.


241
00:10:33.299 --> 00:10:35.635 line:-1 position:50%
Note that we make
our UpsertStrokeMessage


242
00:10:35,635 --> 00:10:38,505 line:-1
conform to the Codable protocol.


243
00:10:38.505 --> 00:10:40.373 line:-1 position:50%
This is because
GroupSessionMessenger


244
00:10:40.373 --> 00:10:43.209 line:-1 position:50%
allows us to send and receive
structured messages


245
00:10:43.209 --> 00:10:44.677 line:-1 position:50%
and will automatically handle


246
00:10:44,677 --> 00:10:47,647 line:-1
the serialization
and deserialization for us,


247
00:10:47.647 --> 00:10:50.416 line:-1 position:50%
as long as the messages
are codable.


248
00:10:50.416 --> 00:10:52.886 line:-1 position:50%
The second step
for configuring the session


249
00:10:52,886 --> 00:10:55,588 line:-1
is to receive data
using the Messages API


250
00:10:55,588 --> 00:10:58,424 line:-1
on GroupSessionMessenger.


251
00:10:58.424 --> 00:10:59.492 line:-1 position:50%
For DrawTogether,


252
00:10:59,492 --> 00:11:02,762 line:-1
we will need to handle receiving
the UpsertStrokeMessages.


253
00:11:02,762 --> 00:11:06,699 line:-1
The messages API shown here is
able to take the codable type


254
00:11:06.699 --> 00:11:09.769 line:-1 position:50%
and returns an async sequence --
which hands us a tuple


255
00:11:09.769 --> 00:11:11.738 line:-1 position:50%
containing messages
of that type --


256
00:11:11.738 --> 00:11:13.740 line:-1 position:50%
and the context
surrounding the message --


257
00:11:13,740 --> 00:11:15,341 line:-1
which includes information like


258
00:11:15.341 --> 00:11:18.044 line:-1 position:50%
which participant
sent that message.


259
00:11:18,044 --> 00:11:21,114 line:-1
The third step for configuring
the session is to send data


260
00:11:21,114 --> 00:11:24,951 line:-1
using the send API
on GroupSessionMessenger.


261
00:11:24,951 --> 00:11:28,021 position:50%
For DrawTogether, we will
send an UpsertStrokeMessage


262
00:11:28,021 --> 00:11:30,356 position:50%
to all participants
within the group.


263
00:11:30,356 --> 00:11:33,426 position:50%
Note that the send API
is an async throwing method.


264
00:11:33.426 --> 00:11:35.762 line:-1 position:50%
The errors it throws should be
handled appropriately


265
00:11:35,762 --> 00:11:37,530 line:-1
by your application.


266
00:11:37.530 --> 00:11:41.301 line:-1 position:50%
Now, let's go to Xcode and add
our GroupSessionMessenger code.


267
00:11:41.301 --> 00:11:43.603 line:-1 position:50%
We'll start by navigating
to the Canvas source file


268
00:11:43.603 --> 00:11:45.271 line:-1 position:50%
and creating
a GroupSessionMessenger


269
00:11:45.271 --> 00:11:47.674 line:-1 position:50%
from our Group Session.


270
00:11:52,679 --> 00:11:55,048 line:-1
We'll add the messenger property
to the Canvas


271
00:11:55,048 --> 00:11:57,684 line:-1
which will hold the messenger
object we just created.


272
00:11:57.684 --> 00:12:04.524 line:-1 position:50%
[KEYSTROKES]


273
00:12:04,524 --> 00:12:07,026 line:-1
Next we need to define
the UpsertStrokeMessage,


274
00:12:07.026 --> 00:12:10.063 line:-1 position:50%
which will be sent and received
between participants.


275
00:12:10.063 --> 00:12:12.065 line:-1 position:50%
Let's create a new file
for this.


276
00:12:12,065 --> 00:12:17,003 line:-1
We'll do that by going
to File > New > File...


277
00:12:17.003 --> 00:12:19.505 line:-1 position:50%
selecting Swift File...


278
00:12:19.505 --> 00:12:22.709 line:-1 position:50%
...and let's stick it
in our Model folder.


279
00:12:22.709 --> 00:12:27.947 line:-1 position:50%
And let's call it "Messages".


280
00:12:27,947 --> 00:12:34,854 line:-1
Now let's add the code to define
the UpsertStrokeMessage.


281
00:12:34.854 --> 00:12:37.290 line:-1 position:50%
Now that we've defined the
message to send and receive


282
00:12:37,290 --> 00:12:39,058 line:-1
with GroupSessionMessenger,


283
00:12:39,058 --> 00:12:41,561 line:-1
let's write the code
to send and receive it.


284
00:12:41,561 --> 00:12:44,397 line:-1
We'll navigate back to Canvas
to do this.


285
00:12:47,166 --> 00:12:48,768 line:-1
Let's go to
the bottom of our file


286
00:12:48.768 --> 00:12:52.005 line:-1 position:50%
and add the code
to receive the messages.


287
00:12:57,010 --> 00:12:59,245 position:50%
Here, we create a detached task
to receive


288
00:12:59,245 --> 00:13:02,515 line:0
the UpsertStrokeMessages
from the async sequence


289
00:13:02,515 --> 00:13:05,985 position:50%
and call a new method, handle,
to process the message.


290
00:13:05,985 --> 00:13:09,222 line:0
Let's implement that next.


291
00:13:09,222 --> 00:13:13,326 line:0
[KEYSTROKES]


292
00:13:13,326 --> 00:13:15,662 position:50%
In this code, we check to see
if we already have a stroke


293
00:13:15,662 --> 00:13:20,033 line:0
by checking for its identifier,
and if so, add the point to it.


294
00:13:20,033 --> 00:13:24,337 line:0
Otherwise, we create a
new stroke, add the point to it,


295
00:13:24,337 --> 00:13:27,674 line:0
and append the stroke
to our array of strokes.


296
00:13:27,674 --> 00:13:31,611 position:50%
Next, we'll write the code
to send the messages.


297
00:13:31,611 --> 00:13:37,383 line:0
We'll go up to the method above,
addPointToActiveStroke.


298
00:13:37,383 --> 00:13:42,655 position:50%
[KEYSTROKES]


299
00:13:42,655 --> 00:13:43,790 line:0
Awesome!


300
00:13:43,790 --> 00:13:45,191 line:-1
Now let's build and run our app


301
00:13:45,191 --> 00:13:49,495 line:-1
and see a shared DrawTogether
experience in action.


302
00:13:49.495 --> 00:13:51.731 line:-1 position:50%
So I'll go over
to my two devices,


303
00:13:51.731 --> 00:13:54.300 line:-1 position:50%
and I'm going to start
a FaceTime call with myself.


304
00:13:54,300 --> 00:13:56,436 line:-1
I'll go to the Phone app
and then call myself.


305
00:13:56.436 --> 00:13:57.837 line:-1 position:50%
[FACETIME RINGING]


306
00:13:57,837 --> 00:13:59,405 line:-1
And then I'm going to answer
on my other device.


307
00:13:59.405 --> 00:14:04.711 line:-1 position:50%
[FACETIME RINGING]


308
00:14:04,711 --> 00:14:07,447 line:-1
Turn off the mics.


309
00:14:07,447 --> 00:14:09,882 line:-1
Now on this device,
I'm going to start


310
00:14:09.882 --> 00:14:13.086 line:-1 position:50%
a shared DrawTogether
experience.


311
00:14:13.086 --> 00:14:16.789 line:-1 position:50%
I'll tap the bottom-left icon.


312
00:14:16,789 --> 00:14:20,126 line:-1
And on the other device,
I'll join the Group Session.


313
00:14:20,126 --> 00:14:25,398 line:-1
And now I'm going to play
tic-tac-toe with myself.


314
00:14:25,398 --> 00:14:27,667 line:-1
I'll move first.


315
00:14:37,443 --> 00:14:39,245 line:-1
[LAUGHS]
Looks like I won.


316
00:14:39.245 --> 00:14:42.381 line:-1 position:50%
Cool. Looks like our code works.


317
00:14:42.381 --> 00:14:43.382 line:-1 position:50%
[END FACETIME CALL TONE]


318
00:14:45.585 --> 00:14:48.221 line:-1 position:50%
Now that we've talked about
how to configure the session


319
00:14:48,221 --> 00:14:51,624 line:-1
using GroupSessionMessenger
by first defining the messages,


320
00:14:51.624 --> 00:14:53.159 line:-1 position:50%
then receiving the messages,


321
00:14:53.159 --> 00:14:55.328 line:-1 position:50%
and finally sending
the messages,


322
00:14:55.328 --> 00:14:57.730 line:-1 position:50%
let's talk about a few other
things to consider


323
00:14:57,730 --> 00:15:00,032 line:-1
when using
GroupSessionMessenger.


324
00:15:02.568 --> 00:15:04.570 line:-1 position:50%
Under the hood,
GroupSessionMessenger


325
00:15:04.570 --> 00:15:07.607 line:-1 position:50%
provides reliable and
FIFO-ordered message delivery


326
00:15:07,607 --> 00:15:11,144 line:-1
to all active participants
in the group.


327
00:15:11.144 --> 00:15:13.412 line:-1 position:50%
The messages you send
do have constraints;


328
00:15:13.412 --> 00:15:15.448 line:-1 position:50%
if they are too large,
an error will be thrown


329
00:15:15.448 --> 00:15:17.183 line:-1 position:50%
from the send API.


330
00:15:17,183 --> 00:15:19,619 line:-1
GroupSessionMessenger
is meant for smaller payloads


331
00:15:19,619 --> 00:15:22,155 line:-1
and should not be used
for streaming large assets


332
00:15:22,155 --> 00:15:26,292 line:-1
like files, images, or videos.


333
00:15:26,292 --> 00:15:28,427 line:-1
Another thing to consider
when sending messages


334
00:15:28.427 --> 00:15:30.730 line:-1 position:50%
is flow control
and rate limiting.


335
00:15:30,730 --> 00:15:34,100 line:-1
Sending a burst of messages in
quick succession, like a loop,


336
00:15:34.100 --> 00:15:39.071 line:-1 position:50%
could result in an error
being thrown from the send API.


337
00:15:39.071 --> 00:15:41.340 line:-1 position:50%
Finally, when defining
the messages to use


338
00:15:41,340 --> 00:15:43,609 line:-1
with GroupSessionMessenger,
consider adding


339
00:15:43,609 --> 00:15:46,179 line:-1
versioning support
to your application protocol.


340
00:15:46.179 --> 00:15:47.480 line:-1 position:50%
This will allow
your applications


341
00:15:47,480 --> 00:15:50,383 line:-1
to support inter-op with devices
running an older version


342
00:15:50.383 --> 00:15:52.585 line:-1 position:50%
of your software.


343
00:15:52.585 --> 00:15:55.087 line:-1 position:50%
Now I'll hand it off to Adam
who will talk to you


344
00:15:55.087 --> 00:15:59.458 line:-1 position:50%
about how you can polish
your GroupActivities experience.


345
00:15:59.458 --> 00:16:00.693 line:-1 position:50%
Adam: Thanks, Angus!


346
00:16:00,693 --> 00:16:02,829 line:-1
So now let's talk about
some finishing touches


347
00:16:02,829 --> 00:16:07,200 line:-1
that your app may need
for its custom experience.


348
00:16:07,200 --> 00:16:10,570 line:-1
First, let's talk about
late joiners.


349
00:16:10,570 --> 00:16:13,639 line:-1
Late joiners are devices that
join into an activitySession


350
00:16:13,639 --> 00:16:15,942 line:-1
after the session is started.


351
00:16:15.942 --> 00:16:17.510 line:-1 position:50%
To ensure a proper experience,


352
00:16:17,510 --> 00:16:19,846 line:-1
late joiners need to be given
the latest information


353
00:16:19.846 --> 00:16:23.416 line:-1 position:50%
so that all the devices are
working off of the same data.


354
00:16:23,416 --> 00:16:25,384 line:-1
Accounting for this scenario
is critical


355
00:16:25,384 --> 00:16:27,353 line:-1
to ensure a coherent
user experience,


356
00:16:27.353 --> 00:16:30.223 line:-1 position:50%
but it isn't
a one-size-fits-all.


357
00:16:30.223 --> 00:16:32.091 line:-1 position:50%
The data needed
for this catch-up process


358
00:16:32,091 --> 00:16:34,460 line:-1
will depend on your app
and experience.


359
00:16:34.460 --> 00:16:38.130 line:-1 position:50%
So let's see how it applies
to the DrawTogether app.


360
00:16:38,130 --> 00:16:40,766 position:50%
Let's say that we have
two devices in a Group Session.


361
00:16:40,766 --> 00:16:43,336 position:50%
These two devices
have the same information:


362
00:16:43,336 --> 00:16:46,138 line:0
a smiley face
drawn on their canvas.


363
00:16:46,138 --> 00:16:48,174 position:50%
You can see that because
they were both in the session


364
00:16:48,174 --> 00:16:49,575 position:50%
when the drawing happened,


365
00:16:49,575 --> 00:16:52,178 line:0
they have the same data
throughout the experience.


366
00:16:52,178 --> 00:16:54,947 line:0
Now, let's add another device.


367
00:16:54,947 --> 00:16:57,149 line:0
At this point,
the new device calls join


368
00:16:57,149 --> 00:16:59,986 position:50%
on their GroupSession, but
there's nothing on the canvas.


369
00:16:59,986 --> 00:17:04,090 position:50%
So we draw a cloud, and --
Oh, that's -- that's not good!


370
00:17:04,090 --> 00:17:06,692 line:0
Because the new device
didn't have prior context,


371
00:17:06,692 --> 00:17:09,562 position:50%
our smiley face
now has a cloud on it.


372
00:17:09,562 --> 00:17:11,964 line:0
Now let's back up
and try that again.


373
00:17:11,964 --> 00:17:14,066 position:50%
How do we fix this
so that the new device


374
00:17:14,066 --> 00:17:17,837 position:50%
has a smiley face show
as soon as it joins?


375
00:17:17,837 --> 00:17:20,640 line:0
Once the new device calls join
on the Group Session,


376
00:17:20,640 --> 00:17:22,642 position:50%
every other device joined
into the Group Session


377
00:17:22,642 --> 00:17:27,013 line:0
will see the activeParticipants
property on GroupSession fire.


378
00:17:27,013 --> 00:17:28,614 line:0
Devices that observe that signal


379
00:17:28,614 --> 00:17:30,283 position:50%
will then send
its catch-up data --


380
00:17:30,283 --> 00:17:32,518 position:50%
in this case,
the existing drawing canvas --


381
00:17:32,518 --> 00:17:34,820 line:0
to the newly joined device.


382
00:17:34,820 --> 00:17:36,155 position:50%
Now when the new device joins,


383
00:17:36,155 --> 00:17:38,291 position:50%
it sees that there was
a smiley face already there


384
00:17:38,291 --> 00:17:40,760 line:0
so we can draw around it!


385
00:17:40,760 --> 00:17:43,129 line:0
So now, how we do this
in code?


386
00:17:43,129 --> 00:17:45,665 line:-1
The first thing we need to do
is understand what data


387
00:17:45.665 --> 00:17:48.868 line:-1 position:50%
our app needs to transmit
in our catch-up message.


388
00:17:48.868 --> 00:17:50.536 line:-1 position:50%
Since we're a DrawTogether
experience


389
00:17:50.536 --> 00:17:52.371 line:-1 position:50%
and our goal is to ensure
that the canvas


390
00:17:52,371 --> 00:17:53,906 line:-1
is the same
on everyone's device,


391
00:17:53.906 --> 00:17:55.641 line:-1 position:50%
let's go ahead
and make a new message


392
00:17:55.641 --> 00:18:01.681 line:-1 position:50%
in our Message.swift file
called "CanvasMessage".


393
00:18:01.681 --> 00:18:04.150 line:-1 position:50%
This struct will contain all
of the strokes that we have


394
00:18:04,150 --> 00:18:06,118 line:-1
and a variable that we'll call
"pointCount",


395
00:18:06,118 --> 00:18:08,287 line:-1
which will be used
as a heuristic to calculate


396
00:18:08.287 --> 00:18:11.257 line:-1 position:50%
which message
is the most up to date.


397
00:18:11,257 --> 00:18:12,591 line:-1
Awesome!


398
00:18:12,591 --> 00:18:15,561 line:-1
Now, how do we handle
receiving this message?


399
00:18:15,561 --> 00:18:19,699 line:-1
If we go over to our
Canvas model in Canvas.swift,


400
00:18:19,699 --> 00:18:21,634 line:-1
we're able to set up
a message handler


401
00:18:21,634 --> 00:18:24,670 line:-1
in configureGroupSession
using the GroupSessionMessenger


402
00:18:24.670 --> 00:18:27.573 line:-1 position:50%
like Angus showed us previously.


403
00:18:27,573 --> 00:18:30,509 line:0
[KEYSTROKES]


404
00:18:32,511 --> 00:18:35,414 line:-1
From here, you can see that we
call into our handle function,


405
00:18:35,414 --> 00:18:39,785 line:-1
so let's go ahead
and implement that.


406
00:18:39,785 --> 00:18:42,688 position:50%
[KEYSTROKES]


407
00:18:42,688 --> 00:18:44,423 line:0
In this code, you can see
that we guard against


408
00:18:44,423 --> 00:18:47,560 line:0
our pointCount heuristic to only
accept catch-up messages


409
00:18:47,560 --> 00:18:49,562 position:50%
that are newer than
what we currently have.


410
00:18:49,562 --> 00:18:53,699 line:0
If that passes, then we go ahead
and override our canvas' strokes


411
00:18:53,699 --> 00:18:56,435 line:0
with the catchupMessage's
strokes.


412
00:18:56,435 --> 00:18:58,471 position:50%
Now, like we discussed earlier,


413
00:18:58,471 --> 00:19:00,339 line:0
we need to listen
for activeParticipants


414
00:19:00,339 --> 00:19:03,542 line:0
to change to figure out
if there's any new participants


415
00:19:03,542 --> 00:19:05,411 line:0
that we need to communicate to.


416
00:19:05.411 --> 00:19:07.313 line:-1 position:50%
So let's go ahead
and add that to our


417
00:19:07.313 --> 00:19:12.051 line:-1 position:50%
configureGroupSession function.


418
00:19:12.051 --> 00:19:15.287 line:-1 position:50%
[KEYSTROKES]


419
00:19:15,287 --> 00:19:17,523 line:-1
In this handler, you can see
that we grab the delta


420
00:19:17,523 --> 00:19:19,091 line:-1
between our new
activeParticipants


421
00:19:19.091 --> 00:19:21.293 line:-1 position:50%
and our old activeParticipants.


422
00:19:21,293 --> 00:19:23,662 line:-1
This ensures that we only
send our catch-up message


423
00:19:23.662 --> 00:19:26.532 line:-1 position:50%
to the newly joined
participants.


424
00:19:26.532 --> 00:19:27.366 line:-1 position:50%
Great!


425
00:19:27.366 --> 00:19:31.070 line:-1 position:50%
Now we just form and send
our message.


426
00:19:31,070 --> 00:19:34,974 line:-1
[KEYSTROKES]


427
00:19:34,974 --> 00:19:37,543 line:-1
This message will contain
our current canvas' state


428
00:19:37,543 --> 00:19:40,813 line:-1
and will send it only
to the newParticipants.


429
00:19:40.813 --> 00:19:41.981 line:-1 position:50%
And that's it!


430
00:19:41,981 --> 00:19:43,616 line:-1
That's catch-up!


431
00:19:43,616 --> 00:19:46,218 line:-1
So, now that we have
all the pieces in place


432
00:19:46,218 --> 00:19:49,155 line:-1
for a Group Session to go on
for a specific activity,


433
00:19:49.155 --> 00:19:51.924 line:-1 position:50%
what do we do if we're
changing activities completely?


434
00:19:51.924 --> 00:19:54.326 line:-1 position:50%
This could be something like
changing the drawing canvas


435
00:19:54.326 --> 00:19:57.263 line:-1 position:50%
or changing movies.


436
00:19:57,263 --> 00:20:00,499 line:-1
Our API provides two ways
of changing activities:


437
00:20:00.499 --> 00:20:02.568 line:-1 position:50%
you can either create
a new Group Session


438
00:20:02,568 --> 00:20:04,670 line:-1
or update the activity
for everyone


439
00:20:04,670 --> 00:20:06,472 line:-1
on your existing
Group Session.


440
00:20:06,472 --> 00:20:10,943 line:-1
So, let's talk about the two.


441
00:20:10.943 --> 00:20:13.379 line:-1 position:50%
The first and preferred way
to change content


442
00:20:13.379 --> 00:20:16.449 line:-1 position:50%
is through calling the same API
that started the Group Session:


443
00:20:16.449 --> 00:20:19.485 line:-1 position:50%
prepareForActivation
on GroupActivity.


444
00:20:19,485 --> 00:20:21,720 position:50%
This approach makes it easier
to reason about


445
00:20:21,720 --> 00:20:24,190 line:0
a consistent state
between participants,


446
00:20:24,190 --> 00:20:25,825 line:0
since it provides
a clean barrier


447
00:20:25,825 --> 00:20:28,561 line:0
for entrance and exit
of the GroupSession,


448
00:20:28,561 --> 00:20:30,896 position:50%
so you don't need to worry
about lingering states


449
00:20:30,896 --> 00:20:34,667 line:0
or messages that you don't need
from the old GroupSession.


450
00:20:34,667 --> 00:20:36,469 position:50%
This is incredibly helpful
for when users


451
00:20:36,469 --> 00:20:38,871 line:0
back out of the activity
to find the next one,


452
00:20:38,871 --> 00:20:42,041 position:50%
such as searching
for a new note or movie.


453
00:20:42,041 --> 00:20:45,244 position:50%
This also gives the system
an indication of a major change,


454
00:20:45,244 --> 00:20:48,848 line:0
which will be used
to notify the user.


455
00:20:48,848 --> 00:20:49,782 line:0
After this call,


456
00:20:49,782 --> 00:20:52,318 position:50%
in the same fashion
as starting a Group Session,


457
00:20:52,318 --> 00:20:53,986 line:0
you'll receive your new
GroupSession


458
00:20:53,986 --> 00:20:58,557 position:50%
through the sessions async
sequence on GroupActivity.


459
00:20:58,557 --> 00:21:01,393 line:0
Now, what if your application
has a list of activities


460
00:21:01,393 --> 00:21:03,062 position:50%
that you are going to be
transitioning between,


461
00:21:03,062 --> 00:21:05,865 line:0
such as multiple songs
playing after each other?


462
00:21:05,865 --> 00:21:08,200 line:0
Our GroupSession API
provides a simple way


463
00:21:08,200 --> 00:21:10,069 line:0
for you to trigger
an update for everyone


464
00:21:10,069 --> 00:21:14,273 line:0
by simply setting the activity
property on the GroupSession.


465
00:21:14,273 --> 00:21:17,209 position:50%
From there, you then listen to
the activity property change.


466
00:21:17,209 --> 00:21:18,978 position:50%
Our API will ensure
that devices


467
00:21:18,978 --> 00:21:21,013 position:50%
always converge
onto the same activity


468
00:21:21,013 --> 00:21:24,583 position:50%
so you don't need
to worry about it.


469
00:21:24,583 --> 00:21:26,452 line:-1
Now that we conceptually
understand the two,


470
00:21:26,452 --> 00:21:29,054 line:-1
which one should we use
for our DrawTogether app?


471
00:21:29.054 --> 00:21:30.589 line:-1 position:50%
Because our app wants
a clean slate


472
00:21:30,589 --> 00:21:32,358 line:-1
on each new drawing canvas,


473
00:21:32.358 --> 00:21:35.461 line:-1 position:50%
the New Session API would
give us exactly what we want.


474
00:21:35,461 --> 00:21:40,733 line:-1
So now let's hop over to Xcode
to see how to implement it.


475
00:21:40,733 --> 00:21:42,701 line:-1
The first step here
is to decide


476
00:21:42.701 --> 00:21:44.770 line:-1 position:50%
how we want to trigger
a new session.


477
00:21:44,770 --> 00:21:45,704 line:-1
In our case,


478
00:21:45,704 --> 00:21:48,140 line:-1
let's make it so when a client
uses our Reset button,


479
00:21:48.140 --> 00:21:51.110 line:-1 position:50%
we'll go ahead and create
a new GroupSession.


480
00:21:51,110 --> 00:21:52,811 line:0
If we look at
our ControlBar code,


481
00:21:52,811 --> 00:21:55,714 line:0
we can see that we already
have a CapsuleButton


482
00:21:55,714 --> 00:22:00,252 line:0
that calls into our Canvas model
to reset the local state.


483
00:22:00,252 --> 00:22:02,421 line:0
So let's go ahead
and modify that function


484
00:22:02,421 --> 00:22:06,258 position:50%
to tear down the GroupSession
and create a new one.


485
00:22:06,258 --> 00:22:13,098 position:50%
[KEYSTROKES]


486
00:22:13,098 --> 00:22:15,935 line:0
In this code, we'll go ahead
and cancel any tasks


487
00:22:15,935 --> 00:22:19,004 position:50%
and cancelables that we have
for our GroupSession.


488
00:22:19,004 --> 00:22:21,240 position:50%
We'll also check if we
have a GroupSession --


489
00:22:21,240 --> 00:22:24,643 position:50%
and if we do, leave it and call
into the activate property


490
00:22:24,643 --> 00:22:27,246 line:0
on our DrawTogether type.


491
00:22:27,246 --> 00:22:29,748 line:-1
From there, our normal flow
for receiving a GroupSession


492
00:22:29,748 --> 00:22:32,284 line:-1
will take place,
and we're good to go!


493
00:22:32.284 --> 00:22:38.257 line:-1 position:50%
We now have a clean way
to transition to a new canvas.


494
00:22:38,257 --> 00:22:41,393 line:-1
Now, what if we want to change
our UI to indicate to users


495
00:22:41.393 --> 00:22:44.797 line:-1 position:50%
that they can try our SharePlay
experience with their friends?


496
00:22:44,797 --> 00:22:46,699 line:-1
For example, in our drawing app,


497
00:22:46.699 --> 00:22:50.202 line:-1 position:50%
we want our canvas to change
from this to this


498
00:22:50,202 --> 00:22:52,071 line:-1
where when we're eligible
for a GroupSession,


499
00:22:52.071 --> 00:22:55.874 line:-1 position:50%
you'll notice that we now show
a button to share the canvas.


500
00:22:55.874 --> 00:22:58.644 line:-1 position:50%
So how do we do this?


501
00:22:58.644 --> 00:23:00.446 line:-1 position:50%
With the GroupStateObserver API,


502
00:23:00,446 --> 00:23:02,147 line:-1
we're able to listen
to a publisher


503
00:23:02.147 --> 00:23:05.584 line:-1 position:50%
to tell us when the device
is eligible for a Group Session.


504
00:23:05.584 --> 00:23:07.453 line:-1 position:50%
We can then use this
to dynamically show


505
00:23:07.453 --> 00:23:09.455 line:-1 position:50%
and hide our button.


506
00:23:09.455 --> 00:23:14.360 line:-1 position:50%
So let's go and implement it!


507
00:23:14.360 --> 00:23:16.228 line:-1 position:50%
Like we saw,
we want a small button


508
00:23:16.228 --> 00:23:18.497 line:-1 position:50%
in the bottom left
of our application.


509
00:23:18,497 --> 00:23:20,999 line:-1
Since our application already
has the sharing button


510
00:23:20,999 --> 00:23:22,434 line:-1
in our ControlBar view,


511
00:23:22,434 --> 00:23:24,937 line:-1
let's just change the behavior
to show and hide the button


512
00:23:24,937 --> 00:23:30,643 line:-1
based off of
the GroupStateObserver.


513
00:23:30.643 --> 00:23:32.978 line:-1 position:50%
First we go ahead and add
our groupStateObserver


514
00:23:32,978 --> 00:23:34,913 line:-1
to our view.


515
00:23:34,913 --> 00:23:37,916 line:-1
[KEYSTROKES]


516
00:23:37,916 --> 00:23:39,618 line:-1
Now let's surround
our CapsuleButton


517
00:23:39,618 --> 00:23:42,321 line:-1
to only show if we're eligible
for a groupSession


518
00:23:42,321 --> 00:23:45,190 line:-1
and we're not in this
groupSession already.


519
00:23:51.063 --> 00:23:52.331 line:-1 position:50%
And that's it!


520
00:23:52,331 --> 00:23:54,033 line:-1
Our button now
dynamically shows


521
00:23:54,033 --> 00:23:57,536 line:-1
only when it's helpful
to the user.


522
00:23:57.536 --> 00:24:01.473 line:-1 position:50%
Now let's go over
what we saw in this session.


523
00:24:01,473 --> 00:24:04,510 line:-1
We went through the full process
of creating a simple drawing app


524
00:24:04,510 --> 00:24:06,879 line:-1
that we then changed
to leverage Group Activities


525
00:24:06,879 --> 00:24:10,683 line:-1
to make it synchronized
and connected like never before.


526
00:24:10,683 --> 00:24:13,819 line:-1
But more importantly, we went
through all the steps needed


527
00:24:13,819 --> 00:24:15,721 line:-1
for you to fully unleash
your creativity


528
00:24:15,721 --> 00:24:17,723 line:-1
and create any custom
SharePlay experience


529
00:24:17.723 --> 00:24:20.492 line:-1 position:50%
with Group Activities.


530
00:24:20,492 --> 00:24:22,428 line:-1
We talked about creating
a custom activity


531
00:24:22.428 --> 00:24:24.530 line:-1 position:50%
with a generic type,


532
00:24:24,530 --> 00:24:26,265 line:-1
configuring and leveraging
GroupSession


533
00:24:26,265 --> 00:24:30,069 line:-1
and GroupSessionMessenger
for synchronized communication,


534
00:24:30,069 --> 00:24:32,638 line:-1
and edge cases and APIs
your app should adopt


535
00:24:32,638 --> 00:24:36,508 line:-1
to make a truly rich
user experience.


536
00:24:36,508 --> 00:24:39,111 line:-1
I hope you enjoyed creating
this custom experience with us,


537
00:24:39.111 --> 00:24:41.513 line:-1 position:50%
and we look forward to seeing
your creativity go wild


538
00:24:41,513 --> 00:24:43,649 line:-1
with the Group Activities
framework!


539
00:24:43,649 --> 00:24:45,818 line:0
Your next step while learning
about GroupActivities


540
00:24:45,818 --> 00:24:48,153 position:50%
should be the "Design for
Group Activities" session


541
00:24:48,153 --> 00:24:49,955 line:0
And if you haven't seen
it already, check out


542
00:24:49,955 --> 00:24:52,257 line:0
the "Build media experiences
with Group Activities" session


543
00:24:52,257 --> 00:24:53,659 line:0
as well.


544
00:24:53,659 --> 00:24:54,927 line:-1
If you have any questions,


545
00:24:54.927 --> 00:24:56.695 line:-1 position:50%
please find us
at the Group Activities lab.


546
00:24:56.695 --> 00:24:59.131 line:-1 position:50%
And finally,
thank you all for tuning in


547
00:24:59,131 --> 00:25:00,833 line:-1
and have a great WWDC.


548
00:25:00.833 --> 00:25:02.401 line:-1 position:50%
We can't wait to see
what you build!


549
00:25:02,401 --> 00:25:04,870 line:0 size:2% position:90%
♪

