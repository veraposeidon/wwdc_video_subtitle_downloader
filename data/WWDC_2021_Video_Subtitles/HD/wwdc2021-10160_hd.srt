2
00:00:00.000 --> 00:00:02.069 line:-1 position:50%
[MAC STARTUP CHIME]


3
00:00:02.069 --> 00:00:05.672 line:-1 position:50%
♪ Bass music playing ♪


4
00:00:05,672 --> 00:00:07,774 line:0
[KEYSTROKES]


5
00:00:07,774 --> 00:00:09,443 line:0 align:right position:90%
♪


6
00:00:09.443 --> 00:00:11.278 line:-1 position:50%
David Hayward: Hi, my name
is David Hayward,


7
00:00:11,278 --> 00:00:14,014 line:-1
and I'm an engineer
with the Core Image team.


8
00:00:14.014 --> 00:00:16.383 line:-1 position:50%
Today, my colleagues
Tuomas Viitanen,


9
00:00:16.383 --> 00:00:20.220 line:-1 position:50%
Matt Dickoff, and I will be
giving a detailed presentation


10
00:00:20,220 --> 00:00:22,289 line:-1
that will show you
everything you need to know


11
00:00:22.289 --> 00:00:24.725 line:-1 position:50%
about the ProRAW image format


12
00:00:24,725 --> 00:00:28,595 line:-1
and how add support for it
to your application.


13
00:00:28,595 --> 00:00:30,497 line:-1
Here’s what we will
discuss today.


14
00:00:30.497 --> 00:00:34.868 line:-1 position:50%
First, I will describe
what makes up a ProRAW file.


15
00:00:34.868 --> 00:00:38.739 line:-1 position:50%
Next, we will discuss
how to capture these files,


16
00:00:38.739 --> 00:00:42.042 line:-1 position:50%
how to store them
in a photo library,


17
00:00:42.042 --> 00:00:45.178 line:-1 position:50%
and how to edit
and display them.


18
00:00:45.178 --> 00:00:48.849 line:-1 position:50%
Let’s start with,
What is a ProRAW?


19
00:00:48,849 --> 00:00:51,184 line:-1
For some time,
Apple devices have been able


20
00:00:51,184 --> 00:00:53,654 line:-1
to fully leverage
our Image Signal Processor


21
00:00:53,654 --> 00:00:56,523 line:-1
to capture beautiful HEIC
or JPEG images


22
00:00:56,523 --> 00:00:58,926 line:-1
that are ready for display.


23
00:00:58,926 --> 00:01:01,361 line:-1
Then starting in iOS 10,


24
00:01:01,361 --> 00:01:04,665 line:-1
we supported capturing
Bayer-pattern RAW sensor data


25
00:01:04.665 --> 00:01:07.634 line:-1 position:50%
and storing that in a DNG file.


26
00:01:07,634 --> 00:01:09,937 position:50%
The differences and advantages
of these two approaches


27
00:01:09,937 --> 00:01:13,674 position:50%
was well-described
in the WWDC 2016 session


28
00:01:13,674 --> 00:01:16,977 position:50%
titled
“Advances in iOS photography”.


29
00:01:16,977 --> 00:01:19,046 line:-1
That presentation
used a great analogy


30
00:01:19,046 --> 00:01:21,882 line:-1
to describe the two formats.


31
00:01:21,882 --> 00:01:24,718 line:-1
A processed HEIC or JPEG
is like going to a bakery


32
00:01:24.718 --> 00:01:27.220 line:-1 position:50%
and ordering a multilayer cake.


33
00:01:27,220 --> 00:01:30,190 line:-1
Whereas a Bayer-pattern RAW file
is like going to the grocer


34
00:01:30,190 --> 00:01:33,794 line:-1
and getting the raw ingredients
to make a cake.


35
00:01:33,794 --> 00:01:36,930 line:-1
The advantage
of processed HEIC or JPEGs


36
00:01:36,930 --> 00:01:39,833 line:-1
are that you get a final image
baked by Apple.


37
00:01:39.833 --> 00:01:42.669 line:-1 position:50%
It is fast to display
and has great quality


38
00:01:42,669 --> 00:01:45,739 line:-1
because it is made by fusing
multiple capture frames


39
00:01:45.739 --> 00:01:49.876 line:-1 position:50%
using Smart HDR, Deep Fusion,
or Night mode.


40
00:01:49.876 --> 00:01:51.645 line:-1 position:50%
Also, it has a small file size


41
00:01:51,645 --> 00:01:54,548 line:-1
because it uses
advanced lossy compression.


42
00:01:54.548 --> 00:01:57.551 line:-1 position:50%
The advantage of Bayer RAW
is that you get an image


43
00:01:57,551 --> 00:02:00,354 line:-1
that has much greater
flexibility for editing.


44
00:02:00.354 --> 00:02:02.789 line:-1 position:50%
It has not been saved
using lossy compression,


45
00:02:02,789 --> 00:02:05,625 line:-1
and it has more bits
of precision.


46
00:02:05.625 --> 00:02:07.394 line:-1 position:50%
Our goal with ProRAW


47
00:02:07.394 --> 00:02:12.099 line:-1 position:50%
was to establish an image format
with the best features of both.


48
00:02:12.099 --> 00:02:13.633 line:-1 position:50%
The advantage of ProRAW


49
00:02:13.633 --> 00:02:16.203 line:-1 position:50%
is that it has a similar look
to HEIC


50
00:02:16.203 --> 00:02:18.372 line:-1 position:50%
but uses lossless compression.


51
00:02:18.372 --> 00:02:20.307 line:-1 position:50%
Also, depending on the scene,


52
00:02:20,307 --> 00:02:22,776 line:-1
it is fused
from multiple exposures,


53
00:02:22,776 --> 00:02:25,812 line:-1
so it has great dynamic range
for editing.


54
00:02:25.812 --> 00:02:28.615 line:-1 position:50%
Because they are low noise
and already demosaiced,


55
00:02:28.615 --> 00:02:31.818 line:-1 position:50%
they are reasonably fast
to display.


56
00:02:31.818 --> 00:02:36.156 line:-1 position:50%
The ProRAW format is designed
to maximize three properties:


57
00:02:36,156 --> 00:02:40,093 line:-1
compatibility, quality,
and look.


58
00:02:40,093 --> 00:02:43,497 line:-1
Let's discuss each of these
in some more detail.


59
00:02:43.497 --> 00:02:45.532 line:-1 position:50%
In order
to ensure compatibility,


60
00:02:45,532 --> 00:02:50,637 line:-1
the ProRAW files are contained
in a standard Adobe DNG file.


61
00:02:50.637 --> 00:02:54.241 line:-1 position:50%
The linearized DNG file format
is supported by Apple apps


62
00:02:54.241 --> 00:02:57.277 line:-1 position:50%
such as Photos,
Adobe apps such Lightroom,


63
00:02:57,277 --> 00:02:59,646 line:-1
and many others.


64
00:02:59.646 --> 00:03:01.748 line:-1 position:50%
Many apps get support
automatically


65
00:03:01,748 --> 00:03:05,619 line:-1
via the system frameworks,
ImageIO, and Core Image.


66
00:03:05.619 --> 00:03:07.687 line:-1 position:50%
Earlier versions of iOS
and macOS


67
00:03:07.687 --> 00:03:10.257 line:-1 position:50%
also have basic support
for the format.


68
00:03:10.257 --> 00:03:12.993 line:-1 position:50%
And it is also worth mentioning
that the files can contain


69
00:03:12.993 --> 00:03:17.230 line:-1 position:50%
full resolution, JPEG-quality
prerendered previews.


70
00:03:17.230 --> 00:03:19.900 line:-1 position:50%
All ProRAWs
captured by Camera app


71
00:03:19.900 --> 00:03:21.401 line:-1 position:50%
will contain these previews


72
00:03:21.401 --> 00:03:23.336 line:-1 position:50%
which will look identical
to the image


73
00:03:23,336 --> 00:03:27,441 line:-1
if it had been taken
without ProRAW mode enabled.


74
00:03:27.441 --> 00:03:30.710 line:-1 position:50%
The quality of a ProRAW file
is quite impressive.


75
00:03:30.710 --> 00:03:36.383 line:-1 position:50%
The pixels in the DNG are
scene-referred and linearizable,


76
00:03:36.383 --> 00:03:39.619 line:-1 position:50%
may be generated from
multiple demosaiced exposures


77
00:03:39.619 --> 00:03:42.055 line:-1 position:50%
combined with image fusion,


78
00:03:42.055 --> 00:03:45.692 line:-1 position:50%
losslessly compressed
12-bit RGB;


79
00:03:45.692 --> 00:03:49.196 line:-1 position:50%
but we create these bits through
an adaptive companding curve


80
00:03:49.196 --> 00:03:53.366 line:-1 position:50%
so we can achieve up to 14 stops
of dynamic range.


81
00:03:53,366 --> 00:03:56,436 position:50%
The resulting file sizes
can range from 10 megabytes


82
00:03:56,436 --> 00:03:59,206 line:0
to 40 megabytes,
but that size will scale


83
00:03:59,206 --> 00:04:02,042 position:50%
based on the unique scene
of each photo.


84
00:04:02,042 --> 00:04:03,343 line:-1
Apple goes to great effort


85
00:04:03.343 --> 00:04:05.545 line:-1 position:50%
tuning the quality
of our images.


86
00:04:05.545 --> 00:04:07.781 line:-1 position:50%
ProRAW images
have a default look


87
00:04:07,781 --> 00:04:11,918 line:-1
that is consistent with the look
of our HEICs and JPEGs.


88
00:04:11.918 --> 00:04:15.755 line:-1 position:50%
This is achieved by embedding
special tags in the DNG file.


89
00:04:15.755 --> 00:04:18.525 line:-1 position:50%
These tags are documented
in the DNG spec


90
00:04:18,525 --> 00:04:20,660 line:-1
and provide the recipe
for how to render


91
00:04:20.660 --> 00:04:23.263 line:-1 position:50%
the default look of each image.


92
00:04:23,263 --> 00:04:25,966 line:-1
The first tag applied
is the LinearizationTable


93
00:04:25.966 --> 00:04:28.502 line:-1 position:50%
which decompands
the 12-bit stored data


94
00:04:28,502 --> 00:04:31,438 line:-1
to linear scene values.


95
00:04:31.438 --> 00:04:35.308 line:-1 position:50%
We use the BaselineExposure tag
because ProRAW images adapt


96
00:04:35,308 --> 00:04:38,645 line:-1
to the dynamic range
of the scene.


97
00:04:38.645 --> 00:04:41.481 line:-1 position:50%
The BaselineSharpness tag
allows us to specify


98
00:04:41.481 --> 00:04:45.185 line:-1 position:50%
how much edge sharpening
to apply by default.


99
00:04:45.185 --> 00:04:48.121 line:-1 position:50%
The ProfileGainTableMap tag --
which is new


100
00:04:48.121 --> 00:04:51.458 line:-1 position:50%
in the DNG 1.6 spec --
allows us to describe


101
00:04:51.458 --> 00:04:55.128 line:-1 position:50%
how the adjust the bright
and shadow regions.


102
00:04:55,128 --> 00:04:56,997 line:-1
Lastly, is the ProfileToneCurve


103
00:04:56,997 --> 00:05:00,534 line:-1
that specifies
the output global tone curve.


104
00:05:00,534 --> 00:05:03,103 position:50%
All of these tags are unique
to each image.


105
00:05:03,103 --> 00:05:05,705 position:50%
Because they provide the recipe
and not the cake,


106
00:05:05,705 --> 00:05:08,008 line:0
the image remains
highly editable.


107
00:05:08,008 --> 00:05:09,576 position:50%
For example,
the default sharpness,


108
00:05:09,576 --> 00:05:12,979 line:0
or tone curves,
can be altered at any time.


109
00:05:12,979 --> 00:05:14,848 position:50%
Lastly,
when present in the scene,


110
00:05:14,848 --> 00:05:17,651 position:50%
we store semantic masks
in the ProRAW


111
00:05:17,651 --> 00:05:21,254 position:50%
for regions such a people,
skin, and sky.


112
00:05:21.254 --> 00:05:23.523 line:-1 position:50%
So now that we know
what makes up a ProRAW,


113
00:05:23,523 --> 00:05:25,225 line:-1
I would like to introduce Tuomas


114
00:05:25,225 --> 00:05:27,961 line:-1
who will describe
how to capture them.


115
00:05:27,961 --> 00:05:29,396 line:-1
Tuomas Viitanen: Thank you,
David.


116
00:05:29,396 --> 00:05:31,264 line:-1
My name is Tuomas Viitanen.


117
00:05:31.264 --> 00:05:33.166 line:-1 position:50%
I'm an engineer
in the Camera Software team,


118
00:05:33.166 --> 00:05:36.002 line:-1 position:50%
and I will guide you through how
you can capture Apple ProRAWs


119
00:05:36.002 --> 00:05:38.171 line:-1 position:50%
with your application.


120
00:05:38.171 --> 00:05:40.273 line:-1 position:50%
AVFoundation Capture APIs


121
00:05:40,273 --> 00:05:43,343 line:-1
provide you with access
to camera on iOS and MacOS.


122
00:05:43.343 --> 00:05:45.612 line:-1 position:50%
They allow you to stream
live preview and video,


123
00:05:45,612 --> 00:05:47,647 line:-1
capture photos,
and record movies,


124
00:05:47.647 --> 00:05:49.216 line:-1 position:50%
among many other things.


125
00:05:49.216 --> 00:05:51.551 line:-1 position:50%
And as a recent addition,
we added support


126
00:05:51,551 --> 00:05:55,422 line:-1
to capture photos in the new
Apple ProRAW DNG format.


127
00:05:55,422 --> 00:05:57,457 line:0
A good source of information
on the basic use


128
00:05:57,457 --> 00:05:59,392 position:50%
of the AVFoundation Capture APIs


129
00:05:59,392 --> 00:06:04,397 line:0
are Advances in iOS Photography
talk from WWDC 2016


130
00:06:04,397 --> 00:06:07,033 line:0
that explains how to use
the AVCapture photo output


131
00:06:07,033 --> 00:06:09,903 position:50%
and AVCam sample code
that is an example


132
00:06:09,903 --> 00:06:12,639 line:0
of a simple camera capture
application.


133
00:06:12,639 --> 00:06:16,977 line:0
Next, we'll look at the
Apple ProRAW capture in detail.


134
00:06:16.977 --> 00:06:19.012 line:-1 position:50%
But first, let's take
a quick look


135
00:06:19.012 --> 00:06:21.681 line:-1 position:50%
at where Apple ProRAW
is supported.


136
00:06:21,681 --> 00:06:23,950 line:-1
A good starting point for that
is to do a comparison


137
00:06:23.950 --> 00:06:26.519 line:-1 position:50%
with the existing
Bayer RAW support.


138
00:06:26,519 --> 00:06:28,722 line:-1
Bayer RAW was introduced
in iOS 10


139
00:06:28,722 --> 00:06:31,558 line:-1
and is supported
on a wide range of devices.


140
00:06:31.558 --> 00:06:34.594 line:-1 position:50%
Apple ProRAW was introduced
in iOS 14.3


141
00:06:34.594 --> 00:06:40.100 line:-1 position:50%
and is supported on iPhone 12
Pro and iPhone 12 Pro Max.


142
00:06:40,100 --> 00:06:42,702 line:-1
Apple's own Camera application
supports Apple ProRAW capture


143
00:06:42.702 --> 00:06:45.839 line:-1 position:50%
with all fusion captures,
like Deep Fusion and Night mode,


144
00:06:45.839 --> 00:06:47.907 line:-1 position:50%
as well as with flash captures.


145
00:06:47.907 --> 00:06:50.710 line:-1 position:50%
Apple ProRAW allows
photo-quality prioritization


146
00:06:50,710 --> 00:06:52,779 line:-1
to be set to .balanced
and .quality,


147
00:06:52.779 --> 00:06:54.481 line:-1 position:50%
which allows you
to get the benefit


148
00:06:54,481 --> 00:06:58,818 line:-1
of Apple image fusion
to your RAW captures.


149
00:06:58,818 --> 00:07:00,654 line:-1
While Bayer RAW
is only supported


150
00:07:00,654 --> 00:07:02,822 line:-1
on single-camera
AVCaptureDevices,


151
00:07:02.822 --> 00:07:04.057 line:-1 position:50%
like wide and tele.


152
00:07:04.057 --> 00:07:06.293 line:-1 position:50%
Apple ProRAW is supported
on all devices,


153
00:07:06.293 --> 00:07:09.763 line:-1 position:50%
including dual wide-, dual-,
and triple-camera devices


154
00:07:09.763 --> 00:07:13.733 line:-1 position:50%
that seamlessly switch between
cameras when zooming.


155
00:07:13,733 --> 00:07:15,669 line:-1
Similar to Bayer RAW,


156
00:07:15.669 --> 00:07:18.605 line:-1 position:50%
Apple ProRAW does not support
depth data delivery


157
00:07:18.605 --> 00:07:21.508 line:-1 position:50%
nor content aware distortion
correction.


158
00:07:21,508 --> 00:07:24,577 position:50%
Live Photo capture is only
supported with Bayer RAW


159
00:07:24,577 --> 00:07:27,547 position:50%
but portrait effects matte
and semantic segmentation


160
00:07:27,547 --> 00:07:31,451 line:0
skin and sky mattes
are only supported with ProRAW.


161
00:07:31,451 --> 00:07:35,555 line:-1
So, let's go through how
you can capture Apple ProRAWs.


162
00:07:35,555 --> 00:07:37,223 line:-1
The items we cover are:


163
00:07:37.223 --> 00:07:40.360 line:-1 position:50%
how to set up your capture
device and capture session,


164
00:07:40.360 --> 00:07:42.429 line:-1 position:50%
how to set up your photo output,


165
00:07:42.429 --> 00:07:44.230 line:-1 position:50%
how to prepare
your photo settings


166
00:07:44.230 --> 00:07:45.632 line:-1 position:50%
for the ProRAW capture,


167
00:07:45.632 --> 00:07:49.936 line:-1 position:50%
and what options you have after
you capture a ProRAW photo.


168
00:07:49.936 --> 00:07:53.039 line:-1 position:50%
Let's start from setting up
the session.


169
00:07:53,039 --> 00:07:55,475 line:-1
Apple ProRAW is only supported
on the formats


170
00:07:55,475 --> 00:07:58,111 line:-1
that support
the highest quality photos.


171
00:07:58.111 --> 00:08:00.580 line:-1 position:50%
You will get that by setting
the capture sessionPreset


172
00:08:00.580 --> 00:08:02.749 line:-1 position:50%
to .photo.


173
00:08:02,749 --> 00:08:06,319 line:-1
Or if you would like to select
the device format manually,


174
00:08:06.319 --> 00:08:07.654 line:-1 position:50%
you can find the formats


175
00:08:07,654 --> 00:08:09,989 line:-1
that support
the highest quality stills.


176
00:08:09.989 --> 00:08:12.325 line:-1 position:50%
Note that this is different
from high quality stills,


177
00:08:12.325 --> 00:08:15.428 line:-1 position:50%
which is supported
on a broader set of formats.


178
00:08:15.428 --> 00:08:18.398 line:-1 position:50%
And then simply configure
the desired format


179
00:08:18.398 --> 00:08:21.134 line:-1 position:50%
to be the activeFormat
of the device.


180
00:08:21.134 --> 00:08:24.104 line:-1 position:50%
In this example and later,
I'm simply using the first index


181
00:08:24.104 --> 00:08:25.839 line:-1 position:50%
from the list
of supported items,


182
00:08:25.839 --> 00:08:28.108 line:-1 position:50%
but you'll want to replace this
with a selection


183
00:08:28,108 --> 00:08:32,045 line:-1
that's based on criteria that
works best for your application.


184
00:08:32,045 --> 00:08:35,115 line:-1
Now, let's look how you can
configure the photo output


185
00:08:35,115 --> 00:08:37,417 line:-1
for the ProRAW capture.


186
00:08:37.417 --> 00:08:41.321 line:-1 position:50%
First, you need to enable ProRAW
on the photoOutput.


187
00:08:41,321 --> 00:08:44,224 line:-1
Be sure to do that already
before starting the session,


188
00:08:44.224 --> 00:08:45.692 line:-1 position:50%
as it will otherwise cause


189
00:08:45,692 --> 00:08:48,261 line:-1
a lengthy pipeline
reconfiguration.


190
00:08:48.261 --> 00:08:51.464 line:-1 position:50%
Setting this property to true
prepares the capture pipeline


191
00:08:51,464 --> 00:08:52,799 line:-1
for ProRAW captures,


192
00:08:52,799 --> 00:08:54,334 line:-1
and adds
the ProRAW pixel formats


193
00:08:54,334 --> 00:08:58,271 line:-1
to the list of supported
RAW photo pixel format types.


194
00:08:58.271 --> 00:09:01.574 line:-1 position:50%
If you like, you can also
indicate to the capture pipeline


195
00:09:01,574 --> 00:09:04,511 line:-1
whether you prefer speed
or quality with your captures,


196
00:09:04,511 --> 00:09:07,580 line:-1
or if you just like a balance
between the two.


197
00:09:07,580 --> 00:09:10,683 position:50%
More info on the effect
of photo-quality prioritization


198
00:09:10,683 --> 00:09:12,685 line:0
to the captured photos
can be found from


199
00:09:12,685 --> 00:09:17,023 line:0
the Capture high-quality photos
using video formats talk.


200
00:09:17,023 --> 00:09:20,827 position:50%
And next, we'll look how you can
prepare for the capture.


201
00:09:20.827 --> 00:09:22.595 line:-1 position:50%
To be able to create
photo settings


202
00:09:22,595 --> 00:09:23,930 line:-1
for your ProRAW capture,


203
00:09:23,930 --> 00:09:26,566 line:-1
you need to select
a correct RAW pixel format.


204
00:09:26.566 --> 00:09:29.536 line:-1 position:50%
You get the supported RAW pixel
formats from the same


205
00:09:29.536 --> 00:09:32.005 line:-1 position:50%
availableRawPhoto
PixelFormatTypes


206
00:09:32.005 --> 00:09:35.341 line:-1 position:50%
that gives you the supported
Bayer RAW formats.


207
00:09:35,341 --> 00:09:37,177 line:-1
You can distinguish
the ProRAW formats


208
00:09:37,177 --> 00:09:39,579 line:-1
from the BayerRAW formats
using the new


209
00:09:39,579 --> 00:09:42,549 line:-1
isAppleProRAWPixelFormat
class method


210
00:09:42,549 --> 00:09:44,150 line:-1
on the photoOutput.


211
00:09:44.150 --> 00:09:47.821 line:-1 position:50%
An example of a ProRAW
pixel format is l64r


212
00:09:47.821 --> 00:09:52.025 line:-1 position:50%
that's a 16-bit full range
RGBA pixel format.


213
00:09:52.025 --> 00:09:53.760 line:-1 position:50%
For reference,
you can also query


214
00:09:53.760 --> 00:09:55.995 line:-1 position:50%
whether a format
is a Bayer RAW format


215
00:09:55,995 --> 00:09:59,532 line:-1
using isBayerRAWPixelFormat
class method.


216
00:09:59.532 --> 00:10:02.068 line:-1 position:50%
Next, we'll go through some
of the options you have


217
00:10:02.068 --> 00:10:04.637 line:-1 position:50%
for capturing Apple ProRAW
and, optionally,


218
00:10:04,637 --> 00:10:08,675 line:-1
a fully rendered process
photo along with it.


219
00:10:08.675 --> 00:10:11.377 line:-1 position:50%
The first and simplest option
of capturing ProRAW


220
00:10:11.377 --> 00:10:13.880 line:-1 position:50%
is to request
only the ProRAW photo.


221
00:10:13.880 --> 00:10:15.748 line:-1 position:50%
To do that,
you can simply specify


222
00:10:15.748 --> 00:10:19.752 line:-1 position:50%
the rawPixelFormatType
when creating the photoSettings.


223
00:10:19,752 --> 00:10:22,422 line:-1
This gives you a single asset
which is simple to work with


224
00:10:22.422 --> 00:10:25.692 line:-1 position:50%
and store to photo library
like Matt will later show you.


225
00:10:25,692 --> 00:10:28,895 line:0
It's also possible to capture
a pair of processed photo


226
00:10:28,895 --> 00:10:32,232 position:50%
and ProRAW similar to what
you can do with Bayer RAW


227
00:10:32,232 --> 00:10:34,634 position:50%
by providing also
the processedFormat


228
00:10:34,634 --> 00:10:36,202 line:0
for the photoSettings.


229
00:10:36,202 --> 00:10:38,671 line:0
But this requires you to work
with multiple assets,


230
00:10:38,671 --> 00:10:41,040 position:50%
and it's also harder
to keep track of them


231
00:10:41,040 --> 00:10:42,742 position:50%
in the photo library.


232
00:10:42,742 --> 00:10:44,511 line:0
Luckily, Apple ProRAW supports


233
00:10:44,511 --> 00:10:47,647 position:50%
up to a full-resolution
JPEG image as thumbnail,


234
00:10:47,647 --> 00:10:49,449 position:50%
and in many cases,
this gives you


235
00:10:49,449 --> 00:10:52,252 line:0
the best
of the previous two options.


236
00:10:52.252 --> 00:10:53.353 line:-1 position:50%
To request a thumbnail,


237
00:10:53,353 --> 00:10:55,355 line:-1
you can select
the desired format from


238
00:10:55.355 --> 00:10:58.591 line:-1 position:50%
availableRawEmbedded
ThumbnailPhotoCodecTypes


239
00:10:58,591 --> 00:11:01,895 line:-1
and specify the desired
thumbnail dimensions.


240
00:11:01.895 --> 00:11:05.098 line:-1 position:50%
Now you're almost ready
to capture a ProRAW photo.


241
00:11:05.098 --> 00:11:07.534 line:-1 position:50%
But before that, if you like,


242
00:11:07,534 --> 00:11:10,069 line:-1
you can specify
the photo-quality prioritization


243
00:11:10.069 --> 00:11:11.371 line:-1 position:50%
for this capture.


244
00:11:11.371 --> 00:11:14.274 line:-1 position:50%
Note that the value you specify
here must be less than


245
00:11:14.274 --> 00:11:17.277 line:-1 position:50%
or equal to the
maxPhotoQualityPrioritization


246
00:11:17.277 --> 00:11:20.780 line:-1 position:50%
you specified previously
on the photoOutput.


247
00:11:20.780 --> 00:11:24.117 line:-1 position:50%
You can also request up
to a display-sized preview image


248
00:11:24.117 --> 00:11:25.952 line:-1 position:50%
if you would like to have
something to show


249
00:11:25,952 --> 00:11:29,422 line:-1
for the clients
quickly after the capture.


250
00:11:29,422 --> 00:11:31,724 line:0
And then you can capture
the ProRAW photo


251
00:11:31,724 --> 00:11:33,860 position:50%
using the same
capturePhoto method


252
00:11:33,860 --> 00:11:36,529 position:50%
that's used for all other
still captures as well.


253
00:11:36,529 --> 00:11:39,198 position:50%
Now that the still capture
is on the way,


254
00:11:39,198 --> 00:11:40,700 line:0
let's take a look
what you can do


255
00:11:40,700 --> 00:11:44,904 line:0
when the requested photo
is ready.


256
00:11:44.904 --> 00:11:46.573 line:-1 position:50%
When the photo
is fully processed,


257
00:11:46,573 --> 00:11:49,576 line:-1
your didFinishProcessingPhoto
delegate will be invoked


258
00:11:49.576 --> 00:11:53.546 line:-1 position:50%
with an AVCapturePhoto
representing the ProRAW photo.


259
00:11:53,546 --> 00:11:56,049 line:-1
If you requested a preview image
for the capture,


260
00:11:56.049 --> 00:11:59.319 line:-1 position:50%
you can now get the pixel buffer
with uncompressed preview image


261
00:11:59.319 --> 00:12:03.923 line:-1 position:50%
or a CGImageRepresentation
of that to show on the display.


262
00:12:03.923 --> 00:12:05.992 line:-1 position:50%
And in case you requested
a processed photo


263
00:12:05,992 --> 00:12:07,327 line:-1
along with the ProRAW,


264
00:12:07.327 --> 00:12:11.130 line:-1 position:50%
your didFinishProcessingPhoto
delegate will be invoked twice.


265
00:12:11,130 --> 00:12:13,566 line:-1
You can distinguish the ProRAW
from the processed photo


266
00:12:13,566 --> 00:12:18,938 line:-1
using isRawPhoto property
on the received AVCapturePhoto.


267
00:12:18,938 --> 00:12:22,542 line:0
And then you can simply request
the fileDataRepresentation


268
00:12:22,542 --> 00:12:26,312 position:50%
for the ProRAW to save the DNG
to the photo library.


269
00:12:26,312 --> 00:12:28,247 line:0
Or optionally,
get a pixel buffer


270
00:12:28,247 --> 00:12:32,952 position:50%
with the RAW pixel data
if you prefer to work with that.


271
00:12:32.952 --> 00:12:34.587 line:-1 position:50%
Like David mentioned earlier,


272
00:12:34,587 --> 00:12:38,257 line:-1
the ProRAW DNG may include
semantic segmentation mattes.


273
00:12:38.257 --> 00:12:40.760 line:-1 position:50%
The inclusion of these mattes
is automatic


274
00:12:40,760 --> 00:12:42,195 line:-1
and scene dependent.


275
00:12:42.195 --> 00:12:44.097 line:-1 position:50%
While the mattes are currently
not available through


276
00:12:44.097 --> 00:12:46.199 line:-1 position:50%
the AVFoundation Capture APIs,


277
00:12:46,199 --> 00:12:49,435 line:-1
you can retrieve them through
Core Image and ImageIO APIs


278
00:12:49,435 --> 00:12:51,170 line:-1
like David will later show you.


279
00:12:51,170 --> 00:12:54,140 line:-1
And finally, we'll look at some
customization options


280
00:12:54,140 --> 00:12:56,709 line:-1
you have
with the ProRAW DNG.


281
00:12:56.709 --> 00:12:58.778 line:-1 position:50%
You can customize the ProRAW
by implementing


282
00:12:58.778 --> 00:13:01.814 line:-1 position:50%
the AVCapturePhotoFileData
RepresentationCustomizer


283
00:13:01,814 --> 00:13:03,916 line:-1
delegate methods.


284
00:13:03,916 --> 00:13:05,018 line:-1
By implementing


285
00:13:05.018 --> 00:13:07.820 line:-1 position:50%
replacementAppleProRAW
CompressionSettings,


286
00:13:07.820 --> 00:13:10.523 line:-1 position:50%
you can change the compression
bit depth and quality


287
00:13:10,523 --> 00:13:13,393 line:-1
of the ProRAW photo.


288
00:13:13.393 --> 00:13:16.129 line:-1 position:50%
The Apple ProRAW is encoded
losslessly by default


289
00:13:16,129 --> 00:13:18,665 line:-1
using 12 bits
with a companding curve.


290
00:13:18,665 --> 00:13:22,101 line:-1
You can change the bit depth of
the losslessly compressed ProRAW


291
00:13:22.101 --> 00:13:24.137 line:-1 position:50%
by keeping the quality level
at 1


292
00:13:24,137 --> 00:13:28,007 line:-1
and providing the desired
bit depth with the customizer.


293
00:13:28.007 --> 00:13:29.375 line:-1 position:50%
This saves storage space


294
00:13:29,375 --> 00:13:32,478 line:-1
but still keeps the high quality
of the ProRAW photo.


295
00:13:32.478 --> 00:13:34.514 line:-1 position:50%
In case you prefer
a lossy compression,


296
00:13:34,514 --> 00:13:37,183 line:-1
you can set the quality level
to below 1,


297
00:13:37.183 --> 00:13:39.886 line:-1 position:50%
in which case ProRAW
is compressed automatically


298
00:13:39,886 --> 00:13:42,021 line:-1
using 8-bit lossy compression.


299
00:13:42.021 --> 00:13:43.690 line:-1 position:50%
This gives you
a small file size,


300
00:13:43.690 --> 00:13:45.324 line:-1 position:50%
but does have a clear impact


301
00:13:45.324 --> 00:13:47.694 line:-1 position:50%
on the quality
of the ProRAW photo.


302
00:13:47,694 --> 00:13:49,896 line:-1
Now that you have implemented
the customizer,


303
00:13:49,896 --> 00:13:53,232 line:-1
you can request customization
for the captured ProRAW DNG


304
00:13:53.232 --> 00:13:56.135 line:-1 position:50%
in your didFinishProcessingPhoto
delegate.


305
00:13:56,135 --> 00:13:58,604 line:0
By creating the customizer
and providing that


306
00:13:58,604 --> 00:14:00,339 position:50%
for fileDataRepresentation,


307
00:14:00,339 --> 00:14:02,408 line:0
you will get the customized
ProRAW back


308
00:14:02,408 --> 00:14:05,244 line:0
with the compression settings
you just provided.


309
00:14:05,244 --> 00:14:07,914 line:-1
That was the introduction
to the Apple ProRAW capture


310
00:14:07,914 --> 00:14:10,483 line:-1
using AVFoundation Capture APIs.


311
00:14:10,483 --> 00:14:12,752 line:-1
I'll hand it over to Matt
who will tell you more


312
00:14:12.752 --> 00:14:15.254 line:-1 position:50%
about Apple ProRAW
and photo library.


313
00:14:15.254 --> 00:14:16.322 line:-1 position:50%
Matt?


314
00:14:16,322 --> 00:14:18,024 line:-1
Matt Dickoff: Thanks, Tuomas!
Hello!


315
00:14:18,024 --> 00:14:19,926 line:-1
My name's Matt Dickoff,
and I'm an engineer


316
00:14:19.926 --> 00:14:21.194 line:-1 position:50%
on the Photos team.


317
00:14:21.194 --> 00:14:23.096 line:-1 position:50%
I'll be walking you through
how to first save


318
00:14:23,096 --> 00:14:24,664 line:-1
the ProRAW file
you've just captured


319
00:14:24,664 --> 00:14:26,833 line:-1
as a complete asset
in the photo library.


320
00:14:26,833 --> 00:14:28,835 line:-1
Then, we'll step through
how to fetch RAWs


321
00:14:28.835 --> 00:14:31.571 line:-1 position:50%
that already exist
in the photo library.


322
00:14:31.571 --> 00:14:33.806 line:-1 position:50%
PhotoKit is a pair of frameworks
used to interact


323
00:14:33,806 --> 00:14:36,375 line:-1
with the photo library
on Apple Platforms.


324
00:14:36,375 --> 00:14:38,277 line:-1
It was first introduced
in these releases


325
00:14:38,277 --> 00:14:41,714 line:-1
and has seen improvements
and additions since then.


326
00:14:41.714 --> 00:14:43.883 line:-1 position:50%
Notably, it has support
for RAW image formats


327
00:14:43.883 --> 00:14:45.952 line:-1 position:50%
like Apple ProRAW.


328
00:14:45,952 --> 00:14:48,121 line:-1
Today I'll only be covering
the specific APIs


329
00:14:48,121 --> 00:14:50,189 line:-1
that deal with RAWs
in the photo library.


330
00:14:50,189 --> 00:14:52,091 line:-1
If you still have questions
about PhotoKit


331
00:14:52,091 --> 00:14:54,627 line:-1
after this presentation,
I encourage you to take a look


332
00:14:54.627 --> 00:14:57.630 line:-1 position:50%
at the online developer
documentation.


333
00:14:57.630 --> 00:14:59.198 line:-1 position:50%
In order to save a new asset,


334
00:14:59.198 --> 00:15:02.668 line:-1 position:50%
we'll need to perform changes
on the shared PHPhotoLibrary.


335
00:15:02.668 --> 00:15:05.438 line:-1 position:50%
As with saving any asset,
the change we'll be making


336
00:15:05,438 --> 00:15:07,940 line:-1
is a PHAssetCreationRequest,


337
00:15:07.940 --> 00:15:09.675 line:-1 position:50%
and we'll be adding
our Apple ProRAW file


338
00:15:09.675 --> 00:15:13.379 line:-1 position:50%
to this asset as the primary
.photo PHAssetResource.


339
00:15:13.379 --> 00:15:16.382 line:-1 position:50%
So let's see what the code
for that looks like.


340
00:15:16,382 --> 00:15:18,584 line:-1
First, we start
by performing changes


341
00:15:18.584 --> 00:15:21.420 line:-1 position:50%
on the shared photo library.


342
00:15:21,420 --> 00:15:23,923 line:-1
We'll simply make
a PHAssetCreationRequest


343
00:15:23.923 --> 00:15:26.225 line:-1 position:50%
and then add
the Apple ProRAW file to it


344
00:15:26.225 --> 00:15:28.995 line:-1 position:50%
as the primary photo resource.


345
00:15:28.995 --> 00:15:30.296 line:-1 position:50%
And that's it!


346
00:15:30.296 --> 00:15:31.864 line:-1 position:50%
Just handle the success
and error


347
00:15:31,864 --> 00:15:33,966 line:-1
as your application sees fit.


348
00:15:33.966 --> 00:15:36.669 line:-1 position:50%
Now that we know how to add
assets to the photo library,


349
00:15:36,669 --> 00:15:38,671 line:-1
let's take a look at how we can
fetch them back,


350
00:15:38,671 --> 00:15:41,174 line:-1
including RAW assets that
the user may already have


351
00:15:41.174 --> 00:15:42.909 line:-1 position:50%
in their library.


352
00:15:42.909 --> 00:15:46.412 line:-1 position:50%
I'm happy to say that in iOS 15,
we've provided a new


353
00:15:46.412 --> 00:15:50.383 line:-1 position:50%
PHAssetCollectionSubtype,
.smartAlbumRAW.


354
00:15:50,383 --> 00:15:52,585 line:-1
With this smart album,
you can easily get a collection


355
00:15:52.585 --> 00:15:54.887 line:-1 position:50%
that contains all the assets
in the photo library


356
00:15:54,887 --> 00:15:56,656 line:-1
that have a RAW resource.


357
00:15:56,656 --> 00:15:58,891 line:-1
This album is the same RAW album
that you see


358
00:15:58.891 --> 00:16:00.426 line:-1 position:50%
in the Apple Photos app.


359
00:16:00,426 --> 00:16:03,129 line:-1
Now that we have some PHAssets
with RAW resources,


360
00:16:03.129 --> 00:16:04.831 line:-1 position:50%
let's take a look
at what it takes


361
00:16:04.831 --> 00:16:08.067 line:-1 position:50%
to actually get at
those resources.


362
00:16:08,067 --> 00:16:10,503 line:-1
First, we'll want to get
all the PHAssetResources


363
00:16:10,503 --> 00:16:12,705 line:-1
for a PHAsset.


364
00:16:12.705 --> 00:16:15.474 line:-1 position:50%
Next, we'll be looking for
two different types of resource:


365
00:16:15.474 --> 00:16:17.543 line:-1 position:50%
the .photo we talked about
previously,


366
00:16:17,543 --> 00:16:19,545 line:-1
and additionally,
.alternatePhoto.


367
00:16:19,545 --> 00:16:21,447 line:-1
I want to take a brief moment
to explain


368
00:16:21.447 --> 00:16:23.983 line:-1 position:50%
what .alternatePhoto is.


369
00:16:23,983 --> 00:16:26,018 line:-1
Some photo libraries
will contain assets


370
00:16:26.018 --> 00:16:28.855 line:-1 position:50%
that follow the old RAW plus
JPEG storage model


371
00:16:28.855 --> 00:16:30.890 line:-1 position:50%
that some DSLR cameras use.


372
00:16:30.890 --> 00:16:33.726 line:-1 position:50%
This requires storing the RAW
and a JPEG


373
00:16:33.726 --> 00:16:37.330 line:-1 position:50%
as two distinct resources;
the JPEG as the photo


374
00:16:37.330 --> 00:16:39.665 line:-1 position:50%
and the RAW
as the alternate photo.


375
00:16:39.665 --> 00:16:41.567 line:-1 position:50%
This leads
to an increased file footprint


376
00:16:41.567 --> 00:16:43.903 line:-1 position:50%
in the photo library,
less portability,


377
00:16:43,903 --> 00:16:46,105 line:-1
and often
a confusing user experience.


378
00:16:46.105 --> 00:16:48.808 line:-1 position:50%
This model is not recommended
for Apple ProRAW.


379
00:16:48,808 --> 00:16:51,010 line:-1
If your intent is to save
a ProRAW file


380
00:16:51.010 --> 00:16:53.713 line:-1 position:50%
to the photo library, you should
use the capture settings


381
00:16:53,713 --> 00:16:57,350 line:-1
to embed a full-size JPEG
preview in the file.


382
00:16:57.350 --> 00:16:59.185 line:-1 position:50%
Now, back to our resources.


383
00:16:59.185 --> 00:17:01.153 line:-1 position:50%
We'll be checking
the uniformTypeIdentifier


384
00:17:01.153 --> 00:17:04.023 line:-1 position:50%
of the resource to see if it
conforms to a RAW type


385
00:17:04,023 --> 00:17:06,392 line:-1
that we are interested in.


386
00:17:06.392 --> 00:17:08.828 line:-1 position:50%
And finally, once we have
a RAW resource,


387
00:17:08.828 --> 00:17:11.097 line:-1 position:50%
we'll use
the PHAssetResourceManager


388
00:17:11.097 --> 00:17:13.065 line:-1 position:50%
to retrieve the actual data.


389
00:17:13,065 --> 00:17:16,035 line:-1
Now let's take a look at that
in code.


390
00:17:16.035 --> 00:17:18.938 line:-1 position:50%
First, we iterate through all
the PHAssetResources


391
00:17:18.938 --> 00:17:20.640 line:-1 position:50%
on an asset,


392
00:17:20.640 --> 00:17:24.377 line:-1 position:50%
look for any that are .photo
or .alternatePhoto type,


393
00:17:24.377 --> 00:17:28.381 line:-1 position:50%
check that they conform
to the RAW image UTType,


394
00:17:28.381 --> 00:17:31.751 line:-1 position:50%
and finally use
the PHAssetResourceManager


395
00:17:31,751 --> 00:17:34,787 line:-1
to request the data
for that resource.


396
00:17:34.787 --> 00:17:35.922 line:-1 position:50%
And that's it!


397
00:17:35.922 --> 00:17:39.091 line:-1 position:50%
You now know how to use PhotoKit
to both save and retrieve assets


398
00:17:39.091 --> 00:17:41.327 line:-1 position:50%
with RAW resources
from the photo library.


399
00:17:41,327 --> 00:17:43,863 line:-1
Now I'm going to hand it back
to David who will talk about


400
00:17:43.863 --> 00:17:47.133 line:-1 position:50%
how best to edit and display
Apple ProRAW images.


401
00:17:47,133 --> 00:17:48,567 line:-1
David: Thank you, Matt.


402
00:17:48,567 --> 00:17:51,237 line:-1
The last section of our talk
today will be about


403
00:17:51,237 --> 00:17:53,205 line:-1
how to use
the Core Image framework


404
00:17:53.205 --> 00:17:56.309 line:-1 position:50%
to edit and display
ProRAW images.


405
00:17:56.309 --> 00:18:01.914 line:-1 position:50%
I will describe how to create
CIImages from a ProRAW file;


406
00:18:01.914 --> 00:18:06.185 line:-1 position:50%
how to apply the most common
user adjustments;


407
00:18:06.185 --> 00:18:09.288 line:-1 position:50%
how you can turn off
the default look to get linear,


408
00:18:09.288 --> 00:18:11.958 line:-1 position:50%
scene-referred values;


409
00:18:11.958 --> 00:18:14.994 line:-1 position:50%
how to render edits
to output-referred formats


410
00:18:14,994 --> 00:18:19,632 line:-1
such as HEIC; and finally,
how to display ProRAWs to a Mac


411
00:18:19.632 --> 00:18:23.569 line:-1 position:50%
with an Extended Dynamic Range
display.


412
00:18:23,569 --> 00:18:26,472 line:-1
Getting a preview image
from a ProRAW is possible


413
00:18:26,472 --> 00:18:29,275 line:-1
using the
CGImageSourceCreateWithURL


414
00:18:29.275 --> 00:18:34.213 line:-1 position:50%
and CGImageSourceCreate
ThumbnailAtIndex APIs.


415
00:18:34.213 --> 00:18:37.183 line:-1 position:50%
New in iOS 15 and macOS 12,


416
00:18:37,183 --> 00:18:39,785 line:-1
Core Image has added
a new convenience API


417
00:18:39,785 --> 00:18:41,721 line:-1
to access the preview.


418
00:18:41.721 --> 00:18:45.524 line:-1 position:50%
Getting semantic segmentation
mattes such as person, skin,


419
00:18:45,524 --> 00:18:48,995 line:-1
and sky is supported by passing
the desired option key


420
00:18:48.995 --> 00:18:52.431 line:-1 position:50%
when initializing the CIImage.


421
00:18:52,431 --> 00:18:55,401 line:-1
This too has a new
and more convenient API


422
00:18:55,401 --> 00:18:59,805 line:-1
to access
the optional matte images.


423
00:18:59,805 --> 00:19:01,440 line:-1
Most importantly,


424
00:19:01,440 --> 00:19:05,011 line:-1
your application will want
to get the primary ProRAW image.


425
00:19:05.011 --> 00:19:07.079 line:-1 position:50%
If your application just wants
to show


426
00:19:07,079 --> 00:19:08,647 line:-1
the default rendering look,


427
00:19:08,647 --> 00:19:12,118 line:-1
all you need to do is create
an immutable CIImage


428
00:19:12,118 --> 00:19:14,720 line:-1
from a URL or data.


429
00:19:14.720 --> 00:19:17.089 line:-1 position:50%
However, if your application
wants to unlock


430
00:19:17,089 --> 00:19:19,525 line:-1
the full editability of ProRAWs,


431
00:19:19.525 --> 00:19:22.895 line:-1 position:50%
then create a CIFilter
from the URL.


432
00:19:22.895 --> 00:19:25.731 line:-1 position:50%
If you just ask
that filter for its outputImage,


433
00:19:25.731 --> 00:19:29.635 line:-1 position:50%
you will get a CIImage
with a default look.


434
00:19:29,635 --> 00:19:31,670 line:-1
The key advantage of this API


435
00:19:31.670 --> 00:19:34.106 line:-1 position:50%
is that the filter
can be easily modified.


436
00:19:34.106 --> 00:19:36.475 line:-1 position:50%
The RAW CIFilter
has several inputs


437
00:19:36,475 --> 00:19:41,714 line:-1
that your application can change
to produce new outputImage.


438
00:19:41.714 --> 00:19:44.517 line:-1 position:50%
The basic code pattern
is to set a value object


439
00:19:44.517 --> 00:19:47.286 line:-1 position:50%
for one of the documented
key strings.


440
00:19:47.286 --> 00:19:52.525 line:-1 position:50%
This setValue forKey API
was due for an update though.


441
00:19:52,525 --> 00:19:55,461 line:-1
So new in iOS 15 and macOS 12,


442
00:19:55,461 --> 00:19:57,396 line:-1
we have created
a more discoverable


443
00:19:57,396 --> 00:19:59,698 line:-1
and Swift-friendly API.


444
00:19:59,698 --> 00:20:04,203 line:-1
To use the new API,
create a CIRAWFilter instance


445
00:20:04,203 --> 00:20:07,840 line:-1
and then just set the desired
property to a new value.


446
00:20:07.840 --> 00:20:09.608 line:-1 position:50%
Next, let’s discuss
what properties


447
00:20:09,608 --> 00:20:12,211 line:-1
you might want to change.


448
00:20:12.211 --> 00:20:14.580 line:-1 position:50%
Given the dynamic range
of ProRAW images,


449
00:20:14.580 --> 00:20:17.983 line:-1 position:50%
one of the most important
controls to provide is exposure.


450
00:20:17.983 --> 00:20:20.286 line:-1 position:50%
You can set this value
to any float.


451
00:20:20.286 --> 00:20:22.588 line:-1 position:50%
For example,
set it to positive 1


452
00:20:22.588 --> 00:20:24.523 line:-1 position:50%
to make the image
twice as bright


453
00:20:24.523 --> 00:20:28.160 line:-1 position:50%
or negative 1
to make it half as bright.


454
00:20:28,160 --> 00:20:29,795 line:-1
Because ProRAWs are edited


455
00:20:29.795 --> 00:20:31.730 line:-1 position:50%
in a linear
scene-referred space,


456
00:20:31.730 --> 00:20:35.267 line:-1 position:50%
adjusting the image
white balance is more effective.


457
00:20:35,267 --> 00:20:38,704 line:-1
The scene neutral can be
specified as a temperature


458
00:20:38,704 --> 00:20:43,843 line:-1
in degrees kelvin, or as
an x/y chromaticity coordinate.


459
00:20:43,843 --> 00:20:46,479 line:0
The default sharpness
of a ProRAW look


460
00:20:46,479 --> 00:20:50,249 position:50%
can be adjusted to any value
from zero to one.


461
00:20:50,249 --> 00:20:53,819 line:0
And the strength of ProRAW
local tone map can be adjusted


462
00:20:53,819 --> 00:20:56,489 line:0
to any value from zero to one.


463
00:20:56,489 --> 00:20:59,658 position:50%
The local tone map allows
for each region of the image


464
00:20:59,658 --> 00:21:02,294 line:0
to have its own
optimized tone curve.


465
00:21:02,294 --> 00:21:04,663 position:50%
Here is an example
of a ProRAW image


466
00:21:04,663 --> 00:21:08,734 line:0
with a local tone map strength
turned to fully off...


467
00:21:08,734 --> 00:21:10,503 line:0
and at half strength...


468
00:21:10,503 --> 00:21:12,171 position:50%
and fully on.


469
00:21:12,171 --> 00:21:13,405 line:0
In this image,


470
00:21:13,405 --> 00:21:16,175 position:50%
the local tone curves
bring up the darker regions


471
00:21:16,175 --> 00:21:18,144 line:0
and bring down
the brighter areas


472
00:21:18,144 --> 00:21:20,613 position:50%
so as to present
the best possible result


473
00:21:20,613 --> 00:21:23,449 line:0
on a Standard Dynamic Range
display.


474
00:21:23.449 --> 00:21:25.284 line:-1 position:50%
Next, let’s discuss
how your application


475
00:21:25,284 --> 00:21:27,620 line:-1
can get direct access
to the 14 stops


476
00:21:27.620 --> 00:21:30.489 line:-1 position:50%
of linear scene-referred data.


477
00:21:30,489 --> 00:21:32,691 line:-1
Most users will prefer
the common adjustments


478
00:21:32.691 --> 00:21:34.026 line:-1 position:50%
I described earlier,


479
00:21:34,026 --> 00:21:36,695 line:-1
but access to linear data
can be very useful


480
00:21:36,695 --> 00:21:39,798 line:-1
for certain application cases.


481
00:21:39,798 --> 00:21:41,367 line:-1
To get a linear image,


482
00:21:41.367 --> 00:21:43.636 line:-1 position:50%
you just need turn off
the filter inputs


483
00:21:43,636 --> 00:21:46,338 line:-1
that apply the default look
to the image.


484
00:21:46.338 --> 00:21:49.508 line:-1 position:50%
Set the baselineExposure,
exposureBias,


485
00:21:49,508 --> 00:21:52,511 line:-1
boost, and
localToneMapAmount to 0,


486
00:21:52,511 --> 00:21:57,183 line:-1
and disable gamut mapping
before getting the outputImage.


487
00:21:57.183 --> 00:21:59.952 line:-1 position:50%
Once you have
the linearRAWImage,


488
00:21:59.952 --> 00:22:03.088 line:-1 position:50%
you can use it as an input
to other Core Image filters


489
00:22:03,088 --> 00:22:05,958 line:-1
to perform
scene-referred computations.


490
00:22:05.958 --> 00:22:07.393 line:-1 position:50%
For example, you could use


491
00:22:07,393 --> 00:22:09,929 line:-1
the built-in Core Image
histogram filter


492
00:22:09,929 --> 00:22:12,064 line:-1
to calculate statistics.


493
00:22:12.064 --> 00:22:14.433 line:-1 position:50%
Or you may want to render
the linear image


494
00:22:14.433 --> 00:22:16.302 line:-1 position:50%
to get its pixel data.


495
00:22:16,302 --> 00:22:19,438 line:0
To do this, just create
a CIRenderDestination


496
00:22:19,438 --> 00:22:22,875 line:0
for a RGBA-half-float
mutable data,


497
00:22:22,875 --> 00:22:24,743 line:0
tell the render destination


498
00:22:24,743 --> 00:22:28,147 position:50%
to use a linear colorSpace
of your choice,


499
00:22:28,147 --> 00:22:31,317 line:0
and then have a CIContext
start a task


500
00:22:31,317 --> 00:22:35,154 position:50%
to render
the rawFilter’s output image.


501
00:22:35,154 --> 00:22:37,957 line:-1
Here is an example of ProRAW
with the default look


502
00:22:37,957 --> 00:22:42,995 line:-1
in comparison to the as-captured
linear scene-referred image.


503
00:22:42,995 --> 00:22:46,131 line:-1
The linear image will look flat
and underexposed,


504
00:22:46,131 --> 00:22:50,102 line:-1
but it still contains the full
and unclipped 14 stops of data


505
00:22:50.102 --> 00:22:51.737 line:-1 position:50%
from the scene.


506
00:22:51.737 --> 00:22:54.807 line:-1 position:50%
This pair of images also
provides a good illustration


507
00:22:54.807 --> 00:22:57.376 line:-1 position:50%
of the difference between
an output-referred image


508
00:22:57.376 --> 00:23:00.079 line:-1 position:50%
and a scene-referred image.


509
00:23:00,079 --> 00:23:02,214 position:50%
In the output-referred
default look,


510
00:23:02,214 --> 00:23:04,817 position:50%
the area of the image
with the maximum luma


511
00:23:04,817 --> 00:23:07,586 position:50%
is in the sunset on the left.


512
00:23:07,586 --> 00:23:09,555 line:0
But this sky area on the right


513
00:23:09,555 --> 00:23:13,626 position:50%
has a luma that is 80 percent
as bright as that of the sunset.


514
00:23:13,626 --> 00:23:15,995 line:0
While the default image
looks great,


515
00:23:15,995 --> 00:23:20,266 position:50%
the luma values do not represent
the reality of the scene.


516
00:23:20,266 --> 00:23:22,468 position:50%
For the linear
scene-referred image,


517
00:23:22,468 --> 00:23:24,403 position:50%
the sky on the right
of the image


518
00:23:24,403 --> 00:23:25,738 position:50%
has a maximum radiance


519
00:23:25,738 --> 00:23:28,774 line:0
of just 12 percent
of the radiance of the sunset,


520
00:23:28,774 --> 00:23:31,010 line:0
which is more physically
logical.


521
00:23:31,010 --> 00:23:33,345 position:50%
This is why the linear
scene-referred image


522
00:23:33,345 --> 00:23:36,915 position:50%
is so important for
image processing and analysis.


523
00:23:36.915 --> 00:23:38.951 line:-1 position:50%
After your application
has made changes


524
00:23:38,951 --> 00:23:41,587 line:-1
to the ProRAW
CIFilter properties,


525
00:23:41,587 --> 00:23:45,758 line:-1
you may want to save the image
to an output-referred format


526
00:23:45.758 --> 00:23:48.460 line:-1 position:50%
such as HEIC or JPEG.


527
00:23:48.460 --> 00:23:50.129 line:-1 position:50%
Here’s an example
of how to save


528
00:23:50.129 --> 00:23:54.366 line:-1 position:50%
the rawFilter output image
to an 8-bit deep HEIC file.


529
00:23:54,366 --> 00:23:58,070 line:-1
With this API, you can specify
the output colorSpace to use,


530
00:23:58.070 --> 00:24:01.040 line:-1 position:50%
though we recommend displayP3.


531
00:24:01,040 --> 00:24:04,276 line:-1
It is also possible to use
the options dictionary


532
00:24:04,276 --> 00:24:07,813 line:-1
to save the semantic masks
into the HEIC.


533
00:24:07.813 --> 00:24:10.549 line:-1 position:50%
Also, because ProRAWs
have extra precision,


534
00:24:10.549 --> 00:24:14.253 line:-1 position:50%
you might consider using
this new Core Image API


535
00:24:14.253 --> 00:24:17.156 line:-1 position:50%
to save
to 10-bit deep HEIC files.


536
00:24:17,156 --> 00:24:19,291 line:-1
So far, all of the adjustments
I’ve described


537
00:24:19.291 --> 00:24:21.593 line:-1 position:50%
produce an output image
that is tone-mapped


538
00:24:21,593 --> 00:24:25,130 line:-1
and gamut-mapped
to the Standard Dynamic Range.


539
00:24:25,130 --> 00:24:28,967 line:-1
This is commonly abbreviated
as “SDR”.


540
00:24:28.967 --> 00:24:30.569 line:-1 position:50%
The next topic
I’d like to discuss


541
00:24:30.569 --> 00:24:32.671 line:-1 position:50%
is how you can present
the dynamic range


542
00:24:32.671 --> 00:24:35.274 line:-1 position:50%
of ProRAW images
in full glory


543
00:24:35,274 --> 00:24:38,477 line:-1
on an Extended Dynamic Range
display.


544
00:24:38,477 --> 00:24:41,513 line:-1
Many Mac displays --
ranging from the MacBook Pros


545
00:24:41.513 --> 00:24:44.550 line:-1 position:50%
to iMacs
to the Pro Display XDR --


546
00:24:44,550 --> 00:24:48,921 line:-1
can present EDR content
using a MetalKit View.


547
00:24:48,921 --> 00:24:50,956 line:-1
To display a ProRAW CIImage,


548
00:24:50,956 --> 00:24:53,625 line:-1
we recommend using
a MetalKit View subclass


549
00:24:53.625 --> 00:24:55.894 line:-1 position:50%
for best performance.


550
00:24:55.894 --> 00:24:59.531 line:-1 position:50%
Your MetalKit View subclass
should create a CIContext


551
00:24:59.531 --> 00:25:02.267 line:-1 position:50%
and a MTLCommandQueue
for the view.


552
00:25:02,267 --> 00:25:04,937 position:50%
For important details on how
to get the best performance


553
00:25:04,937 --> 00:25:07,106 line:0
with Core Image
in a MetalKit View,


554
00:25:07,106 --> 00:25:11,377 position:50%
please review our presentation
from last year on the subject.


555
00:25:11,377 --> 00:25:13,579 line:0
If your Mac display
supports EDR,


556
00:25:13,579 --> 00:25:18,617 position:50%
then you can set the view’s
colorPixelFormat to rgba16Float


557
00:25:18,617 --> 00:25:23,255 position:50%
and set wantsExtendedDynamic
RangeContent to true.


558
00:25:23,255 --> 00:25:26,225 position:50%
Then, when it is time
for your view subclass to draw,


559
00:25:26,225 --> 00:25:30,529 position:50%
set the rawFilter.extended
DynamicRangeAmount to 1


560
00:25:30,529 --> 00:25:33,599 line:0
and tell the Core Image context
to start a task


561
00:25:33,599 --> 00:25:35,968 position:50%
to render the outputImage.


562
00:25:35,968 --> 00:25:38,837 line:-1
Looking at a ProRAW image
on an EDR display


563
00:25:38,837 --> 00:25:41,039 line:-1
is really something
one needs to see in person


564
00:25:41,039 --> 00:25:42,508 line:-1
to fully appreciate.


565
00:25:42.508 --> 00:25:45.577 line:-1 position:50%
But let me try to approximate
what it looks like.


566
00:25:45,577 --> 00:25:49,648 position:50%
Here, the SDR image is shown,


567
00:25:49,648 --> 00:25:53,085 line:0
while this shows what that same
ProRAW file will feel like


568
00:25:53,085 --> 00:25:55,320 position:50%
in EDR.


569
00:25:55,320 --> 00:25:57,956 position:50%
The bright areas
and specular highlights


570
00:25:57,956 --> 00:26:00,426 position:50%
are no longer restricted
by tone mapping,


571
00:26:00,426 --> 00:26:03,729 position:50%
so they will be visible
in full glory.


572
00:26:03,729 --> 00:26:07,199 line:-1
This concludes our presentation
on Apple ProRAW.


573
00:26:07.199 --> 00:26:09.001 line:-1 position:50%
Today we have described
in detail


574
00:26:09,001 --> 00:26:11,703 line:-1
the design and contents
of the file format


575
00:26:11,703 --> 00:26:16,074 line:-1
as well as how you can capture,
store, and edit these images.


576
00:26:16,074 --> 00:26:18,343 line:-1
I look forward to seeing
how your applications


577
00:26:18.343 --> 00:26:21.680 line:-1 position:50%
can unlock the full potential
of these images.


578
00:26:21,680 --> 00:26:23,582 size:2% position:90% align:right
♪

