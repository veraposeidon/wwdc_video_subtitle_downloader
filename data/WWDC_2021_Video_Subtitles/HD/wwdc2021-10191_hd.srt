2
00:00:00.100 --> 00:00:02.035 line:-1 position:50%
[MAC STARTUP CHIME]


3
00:00:02,035 --> 00:00:05,372 line:-1
♪ Bass music playing ♪


4
00:00:05,372 --> 00:00:07,040 line:-1
[KEYSTROKES]


5
00:00:07,040 --> 00:00:09,142 position:89% align:center line:0
♪


6
00:00:09,142 --> 00:00:10,911 line:-1
Max Stepanov: Hello!
My name is Max,


7
00:00:10,911 --> 00:00:13,747 line:-1
and I'm a software engineer
on the tvOS team.


8
00:00:13.747 --> 00:00:15.716 line:-1 position:50%
Today, I'm excited
to share with you


9
00:00:15.716 --> 00:00:18.385 line:-1 position:50%
a great all-new look
of the media playback UI


10
00:00:18.385 --> 00:00:19.419 line:-1 position:50%
on Apple TV


11
00:00:19.419 --> 00:00:20.587 line:-1 position:50%
and what you can do


12
00:00:20,587 --> 00:00:22,856 line:-1
to get the most
out of this new functionality


13
00:00:22,856 --> 00:00:25,459 line:-1
available to you as a developer.


14
00:00:25.459 --> 00:00:28.295 line:-1 position:50%
In this session, we will
overview the enhancements


15
00:00:28,295 --> 00:00:32,199 line:-1
to the standard playback UI
in tvOS 15;


16
00:00:32.199 --> 00:00:34.868 line:-1 position:50%
we will introduce new APIs;


17
00:00:34.868 --> 00:00:37.371 line:-1 position:50%
and finally,
we'll discuss best practices


18
00:00:37.371 --> 00:00:40.474 line:-1 position:50%
that will help you create
a great playback experience


19
00:00:40,474 --> 00:00:42,342 line:-1
in your application.


20
00:00:42.342 --> 00:00:44.444 line:-1 position:50%
Let's get started.


21
00:00:44.444 --> 00:00:48.015 line:-1 position:50%
AVPlayerViewController provides
the standard media playback


22
00:00:48.015 --> 00:00:50.183 line:-1 position:50%
for users on Apple TV.


23
00:00:50.183 --> 00:00:52.686 line:-1 position:50%
It supports a wide variety
of remotes,


24
00:00:52,686 --> 00:00:54,955 line:-1
including the new
Click Wheel remote,


25
00:00:54.955 --> 00:00:58.392 line:-1 position:50%
as well as skipping, scanning,
scrubbing functionality,


26
00:00:58,392 --> 00:01:01,662 line:-1
Siri command,
interstitial support, and more.


27
00:01:01,662 --> 00:01:04,765 line:-1
We encourage you to start
using AVPlayerViewController


28
00:01:04.765 --> 00:01:06.333 line:-1 position:50%
in your application


29
00:01:06,333 --> 00:01:08,669 line:-1
to allow users
to have a similar experience


30
00:01:08,669 --> 00:01:12,005 line:-1
as with first-party applications
on Apple TV.


31
00:01:12,005 --> 00:01:14,641 position:50%
If you haven't yet used
AVPlayerViewController --


32
00:01:14,641 --> 00:01:16,610 position:50%
or would benefit
from a refresher --


33
00:01:16,610 --> 00:01:18,111 line:0
I recommend you to watch


34
00:01:18,111 --> 00:01:20,914 position:50%
"Delivering intuitive media
playback with AVKit"


35
00:01:20,914 --> 00:01:24,651 position:50%
from WWDC 2019,
which goes into greater detail


36
00:01:24,651 --> 00:01:27,654 line:0
on how to incorporate
AVPlayerViewController


37
00:01:27,654 --> 00:01:29,656 position:50%
into your application.


38
00:01:29.656 --> 00:01:32.059 line:-1 position:50%
Now, let's overview
the enhancements


39
00:01:32.059 --> 00:01:34.528 line:-1 position:50%
we are bringing this year.


40
00:01:34,528 --> 00:01:36,063 line:0
In tvOS 15,


41
00:01:36,063 --> 00:01:39,032 position:50%
we entirely redesigned
the standard playback UI


42
00:01:39,032 --> 00:01:41,435 line:0
to help viewers
stay in the moment


43
00:01:41,435 --> 00:01:44,972 position:50%
through a more consistent,
interactive experience.


44
00:01:44,972 --> 00:01:48,475 line:0
By adding relevant controls and
options to the transport bar,


45
00:01:48,475 --> 00:01:52,112 position:50%
we improved the discoverability
of common playback tasks,


46
00:01:52,112 --> 00:01:55,315 position:50%
such as turning on subtitles
or changing audio language.


47
00:01:55,315 --> 00:01:58,418 line:0
The transport bar controls
are both universal in nature


48
00:01:58,418 --> 00:02:01,221 line:0
as well as can be
application-specific.


49
00:02:01,221 --> 00:02:02,556 position:50%
And with new content tabs,


50
00:02:02,556 --> 00:02:05,492 position:50%
users can now easily access
supporting information --


51
00:02:05,492 --> 00:02:07,494 line:0
like Info or Chapters --


52
00:02:07,494 --> 00:02:11,431 line:0
making inline navigation
accessible and discoverable.


53
00:02:11,431 --> 00:02:14,835 line:0
Content tabs can also be used
to show related content.


54
00:02:14,835 --> 00:02:16,069 line:0
Here in this example,


55
00:02:16,069 --> 00:02:18,872 line:0
I'm viewing a session
from last year's WWDC


56
00:02:18,872 --> 00:02:21,742 line:0
and can browse content
recommendations for the session


57
00:02:21,742 --> 00:02:24,945 position:50%
without leaving the player.


58
00:02:24.945 --> 00:02:28.281 line:-1 position:50%
Lastly, we added contextual
actions available to users


59
00:02:28.281 --> 00:02:29.716 line:-1 position:50%
during playback.


60
00:02:29.716 --> 00:02:31.685 line:-1 position:50%
Those actions have
perfect functionality,


61
00:02:31,685 --> 00:02:34,454 line:-1
like Skip Intro or Recap.


62
00:02:34,454 --> 00:02:36,623 line:-1
To take advantage
of the new playback UI


63
00:02:36.623 --> 00:02:38.025 line:-1 position:50%
on Apple TV,


64
00:02:38.025 --> 00:02:43.063 line:-1 position:50%
your application must be linked
with tvOS 15 SDK.


65
00:02:43,063 --> 00:02:45,565 line:-1
We took this approach
to maintain compatibility


66
00:02:45,565 --> 00:02:48,502 line:-1
with any existing applications
available to users


67
00:02:48.502 --> 00:02:50.270 line:-1 position:50%
in the App Store.


68
00:02:50,270 --> 00:02:54,174 line:-1
Those applications will get
default tvOS 14 playback UI


69
00:02:54,174 --> 00:02:55,976 line:-1
and functionality.


70
00:02:55.976 --> 00:02:58.478 line:-1 position:50%
By now, you're probably
excited to learn


71
00:02:58,478 --> 00:03:00,881 line:-1
how to adopt some
of this new functionality


72
00:03:00.881 --> 00:03:03.150 line:-1 position:50%
in your media application.


73
00:03:03.150 --> 00:03:08.188 line:-1 position:50%
So let's dive into the new APIs
in tvOS 15...


74
00:03:08.188 --> 00:03:09.923 line:-1 position:50%
...starting with Title View.


75
00:03:09,923 --> 00:03:12,859 line:0
The new Title View displayed
just above the transport bar


76
00:03:12,859 --> 00:03:16,797 position:50%
will help users to instantly
know what they're watching.


77
00:03:16.797 --> 00:03:18.899 line:-1 position:50%
To present the Title View,


78
00:03:18,899 --> 00:03:22,302 line:-1
we'll use values
for commonIdentifierTitle


79
00:03:22.302 --> 00:03:25.138 line:-1 position:50%
and iTunesMetadataTrackSubtitle


80
00:03:25,138 --> 00:03:29,176 line:-1
from the metadata
of the current AVPlayerItem.


81
00:03:29.176 --> 00:03:32.512 line:-1 position:50%
If a media asset does not
contain embedded metadata,


82
00:03:32,512 --> 00:03:34,514 line:-1
or you need to augment it,


83
00:03:34,514 --> 00:03:38,718 line:-1
use the externalMetadata
property of AVPlayerItem.


84
00:03:38,718 --> 00:03:40,720 line:-1
When playing
live streaming content,


85
00:03:40.720 --> 00:03:43.290 line:-1 position:50%
the Title View will
also display a badge


86
00:03:43,290 --> 00:03:46,860 line:-1
to indicate the content state
to the viewer.


87
00:03:46.860 --> 00:03:47.961 line:-1 position:50%
Lastly,


88
00:03:47.961 --> 00:03:50.864 line:-1 position:50%
if your application would prefer
not to display Title View,


89
00:03:50.864 --> 00:03:53.733 line:-1 position:50%
suppress it by setting
the value of new property


90
00:03:53.733 --> 00:03:57.604 line:-1 position:50%
transportBarIncludesTitleView
to false.


91
00:03:57,604 --> 00:04:01,208 position:50%
Next, let's take a look
at the transport bar controls.


92
00:04:01,208 --> 00:04:04,478 position:50%
Transport bar controls
is a collection of UI elements


93
00:04:04,478 --> 00:04:07,647 position:50%
sitting right on top
of the transport bar scrubber.


94
00:04:07,647 --> 00:04:11,218 line:0
Those controls will help users
quickly and intuitively


95
00:04:11,218 --> 00:04:12,953 position:50%
find all the playback options


96
00:04:12,953 --> 00:04:15,522 position:50%
your application
may provide.


97
00:04:15,522 --> 00:04:18,158 line:-1
Some standard controls --
such as subtitles,


98
00:04:18.158 --> 00:04:20.293 line:-1 position:50%
audio languages,
and Picture in Picture --


99
00:04:20,293 --> 00:04:23,196 line:-1
are provided by the system.


100
00:04:23,196 --> 00:04:24,498 line:-1
As a developer,


101
00:04:24,498 --> 00:04:27,000 line:-1
you can extend the list
of transport bar controls,


102
00:04:27.000 --> 00:04:30.137 line:-1 position:50%
using the new property
of AVPlayerViewController,


103
00:04:30,137 --> 00:04:33,173 line:-1
transportBarCustomMenuItems.


104
00:04:33.173 --> 00:04:38.078 line:-1 position:50%
It supports instances
of UIAction and UIMenu classes.


105
00:04:38.078 --> 00:04:42.582 line:-1 position:50%
Let's take a look at an example
of using transport bar controls.


106
00:04:42,582 --> 00:04:44,918 line:-1
Here, I'm using UIAction


107
00:04:44.918 --> 00:04:49.289 line:-1 position:50%
to let users add the current
media item to their Favorites.


108
00:04:49.289 --> 00:04:52.592 line:-1 position:50%
You could also create more
advanced arrangements of actions


109
00:04:52,592 --> 00:04:57,164 line:-1
and present them in a menu,
using UIMenu class.


110
00:04:57.164 --> 00:05:00.500 line:-1 position:50%
UIMenus presented
by AVPlayerViewController


111
00:05:00,500 --> 00:05:03,303 line:-1
support up to one level
of nesting,


112
00:05:03.303 --> 00:05:07.040 line:-1 position:50%
using the displayInline option.


113
00:05:07,040 --> 00:05:10,777 line:0
For greater detail on using
UIMenu and UIAction classes,


114
00:05:10,777 --> 00:05:12,546 line:0
I recommend you to watch


115
00:05:12,546 --> 00:05:19,219 position:50%
"Modernizing your UI for iOS 13"
from WWDC 2019.


116
00:05:19,219 --> 00:05:22,556 line:-1
Now, let's talk
about content tabs.


117
00:05:22.556 --> 00:05:25.192 line:-1 position:50%
Content tabs will allow
your application


118
00:05:25.192 --> 00:05:27.794 line:-1 position:50%
to display
complementary information


119
00:05:27,794 --> 00:05:30,664 line:-1
or recommendations
for more content.


120
00:05:30,664 --> 00:05:34,167 line:-1
AVPlayerViewController
will display the Info tab


121
00:05:34,167 --> 00:05:37,370 line:-1
when a media asset
contains embedded metadata


122
00:05:37,370 --> 00:05:42,676 line:-1
or when you supplement external
metadata with AVPlayerItem.


123
00:05:42.676 --> 00:05:45.445 line:-1 position:50%
Also, when you supply
navigationMarkerGroups


124
00:05:45.445 --> 00:05:47.581 line:-1 position:50%
with AVPlayerItem,


125
00:05:47,581 --> 00:05:51,885 line:-1
AVPlayerViewController
will show the Chapters tab.


126
00:05:51.885 --> 00:05:55.155 line:-1 position:50%
Your application can present
additional content tabs


127
00:05:55,155 --> 00:05:58,024 line:-1
using the new property
of AVPlayerViewController,


128
00:05:58.024 --> 00:06:00.527 line:-1 position:50%
customInfoViewControllers.


129
00:06:00,527 --> 00:06:03,029 line:-1
And in tvOS 15,
we are deprecating


130
00:06:03,029 --> 00:06:05,565 line:-1
the customInfoViewController
property


131
00:06:05,565 --> 00:06:07,133 line:-1
in favor of the new property


132
00:06:07,133 --> 00:06:10,804 line:-1
that allows
for multiple view controllers.


133
00:06:10.804 --> 00:06:13.406 line:-1 position:50%
To size your content tabs
appropriately,


134
00:06:13,406 --> 00:06:15,242 line:-1
please specify the height


135
00:06:15,242 --> 00:06:18,445 line:-1
using
preferredContentSize property


136
00:06:18,445 --> 00:06:22,415 line:-1
or define appropriate
autolayout constraints.


137
00:06:22,415 --> 00:06:25,418 line:-1
When calculating the required
height to display content tabs,


138
00:06:25,418 --> 00:06:28,021 line:-1
the system will size
all view controllers


139
00:06:28.021 --> 00:06:30.790 line:-1 position:50%
to the height
of the tallest content tab.


140
00:06:30.790 --> 00:06:32.892 line:-1 position:50%
When working with
multiple content tabs,


141
00:06:32.892 --> 00:06:35.562 line:-1 position:50%
size your custom view
controllers consistently


142
00:06:35,562 --> 00:06:39,232 line:-1
or verify that the layout
is expected at runtime.


143
00:06:39,232 --> 00:06:41,301 line:-1
And don't forget
to set title property


144
00:06:41,301 --> 00:06:43,036 line:-1
on your custom view controller.


145
00:06:43.036 --> 00:06:47.374 line:-1 position:50%
We will use it for the title
of the content tab.


146
00:06:47.374 --> 00:06:50.143 line:-1 position:50%
To help you create
great-looking content tabs,


147
00:06:50,143 --> 00:06:53,613 line:-1
this year, we are introducing
new content configurations


148
00:06:53.613 --> 00:06:56.049 line:-1 position:50%
in TVUIKit framework:


149
00:06:56,049 --> 00:06:58,685 line:-1
TVMediaItemContent
Configuration


150
00:06:58,685 --> 00:07:02,188 line:-1
and TVMonogramContent
Configuration.


151
00:07:02.188 --> 00:07:03.990 line:-1 position:50%
Let's take a look
at a couple examples


152
00:07:03,990 --> 00:07:08,328 line:-1
of how these configurations
can be used in your code.


153
00:07:08.328 --> 00:07:09.496 line:-1 position:50%
For instance,


154
00:07:09,496 --> 00:07:13,833 line:-1
to present a list of media items
at 16:9 aspect ratio,


155
00:07:13,833 --> 00:07:15,201 line:-1
you can use the wide cell


156
00:07:15,201 --> 00:07:18,505 line:-1
from TVMediaItem
ContentConfiguration.


157
00:07:18,505 --> 00:07:22,609 line:-1
Set its properties, like image,
title, or secondary text.


158
00:07:22,609 --> 00:07:25,245 line:-1
You could also configure it
to show a badge


159
00:07:25,245 --> 00:07:27,180 line:-1
and playback progress.


160
00:07:27.180 --> 00:07:28.181 line:-1 position:50%
When you're done,


161
00:07:28,181 --> 00:07:31,651 line:-1
assign the contentConfiguration
to your collection view cell.


162
00:07:31,651 --> 00:07:33,753 line:-1
It's that easy.


163
00:07:33,753 --> 00:07:36,356 line:-1
If you would like to display
people or characters


164
00:07:36,356 --> 00:07:39,392 line:-1
associated with the current
media content,


165
00:07:39.392 --> 00:07:42.696 line:-1 position:50%
use
TVMonogramContentConfiguration.


166
00:07:42,696 --> 00:07:45,565 line:-1
For more information
on using content configurations,


167
00:07:45,565 --> 00:07:49,202 position:50%
I recommend you to watch
"Modern cell configuration"


168
00:07:49,202 --> 00:07:52,772 position:50%
from WWDC 2020.


169
00:07:52,772 --> 00:07:55,075 line:0
Finally, contextual actions.


170
00:07:55,075 --> 00:07:57,143 line:0
Contextual actions
allow your application


171
00:07:57,143 --> 00:08:00,947 position:50%
to display relevant controls
during the playback.


172
00:08:00,947 --> 00:08:02,749 line:0
To display contextual actions,


173
00:08:02,749 --> 00:08:05,018 line:0
use new contextualActions
property


174
00:08:05,018 --> 00:08:06,986 position:50%
of AVPlayerViewController


175
00:08:06,986 --> 00:08:10,457 position:50%
and provide one
or more UIActions.


176
00:08:10.457 --> 00:08:11.591 line:-1 position:50%
Typically,


177
00:08:11,591 --> 00:08:14,494 line:-1
your application would want
to present contextual actions


178
00:08:14.494 --> 00:08:17.797 line:-1 position:50%
during a relevant section
of the content.


179
00:08:17,797 --> 00:08:21,234 line:-1
To achieve this,
observe the AVPlayer timing


180
00:08:21,234 --> 00:08:25,138 line:-1
by adding periodic
or boundary time observers.


181
00:08:25,138 --> 00:08:27,107 line:-1
To hide contextual actions,


182
00:08:27,107 --> 00:08:30,310 line:-1
reset the property
to an empty array.


183
00:08:30.310 --> 00:08:32.679 line:-1 position:50%
Some of you may have already
implemented solutions


184
00:08:32,679 --> 00:08:35,815 line:-1
for the skip functionality
within your applications.


185
00:08:35,815 --> 00:08:38,518 line:-1
With this new API,
the user interaction


186
00:08:38.518 --> 00:08:42.922 line:-1 position:50%
with contextual controls is
consistent with focus behavior,


187
00:08:42.922 --> 00:08:43.957 line:-1 position:50%
and when used,


188
00:08:43.957 --> 00:08:46.526 line:-1 position:50%
it will also maintain
the Now Playing status


189
00:08:46,526 --> 00:08:48,228 line:-1
for your application.


190
00:08:48.228 --> 00:08:50.764 line:-1 position:50%
Now, let's talk about
some best practices


191
00:08:50.764 --> 00:08:54.768 line:-1 position:50%
with AVPlayerViewController
on tvOS.


192
00:08:54.768 --> 00:08:56.870 line:-1 position:50%
First --
and most important --


193
00:08:56.870 --> 00:09:00.140 line:-1 position:50%
avoid adding extra gestures
to the player.


194
00:09:00,140 --> 00:09:03,176 line:-1
This will interfere
with standard playback UI


195
00:09:03.176 --> 00:09:06.446 line:-1 position:50%
and most certainly
might not work in the future.


196
00:09:06,446 --> 00:09:10,350 line:-1
Second, supplement
missing metadata.


197
00:09:10,350 --> 00:09:13,653 line:-1
Sometimes we have media that
doesn't have all the metadata


198
00:09:13,653 --> 00:09:15,655 line:-1
baked in with the asset.


199
00:09:15,655 --> 00:09:19,125 line:-1
In those cases, provide
all essential metadata --


200
00:09:19,125 --> 00:09:22,028 line:-1
like title, artwork,
or description --


201
00:09:22,028 --> 00:09:26,065 line:-1
using the externalMetadata
property of AVPlayerItem.


202
00:09:26,065 --> 00:09:27,167 line:-1
And when you do so,


203
00:09:27.167 --> 00:09:31.004 line:-1 position:50%
we will do the rest to populate
Title View and Info tab


204
00:09:31.004 --> 00:09:34.307 line:-1 position:50%
with all relevant information.


205
00:09:34.307 --> 00:09:37.444 line:-1 position:50%
Lastly, consider enabling
Picture in Picture


206
00:09:37,444 --> 00:09:39,579 line:-1
in your tvOS application.


207
00:09:39,579 --> 00:09:42,916 line:-1
It will give your users
multitasking flexibility,


208
00:09:42.916 --> 00:09:45.785 line:-1 position:50%
allowing for simultaneous
video playback


209
00:09:45,785 --> 00:09:48,555 line:-1
and the ability to swap
between full-screen content


210
00:09:48,555 --> 00:09:50,490 line:-1
and Picture in Picture.


211
00:09:50,490 --> 00:09:52,459 line:0
To get started
with Picture in Picture,


212
00:09:52,459 --> 00:09:54,294 line:0
I recommend you to watch


213
00:09:54,294 --> 00:10:00,200 position:50%
"Master Picture in Picture
on tvOS" from WWDC 2020.


214
00:10:00.200 --> 00:10:01.601 line:-1 position:50%
So to recap.


215
00:10:01.601 --> 00:10:04.504 line:-1 position:50%
tvOS 15 makes it
easier than ever


216
00:10:04,504 --> 00:10:09,108 line:-1
to build great media experiences
using standard playback UI.


217
00:10:09.108 --> 00:10:12.512 line:-1 position:50%
The powerful new APIs make
AVPlayerViewController


218
00:10:12,512 --> 00:10:15,415 line:-1
more configurable
and customizable than ever.


219
00:10:15,415 --> 00:10:16,883 line:-1
There's never been a better time


220
00:10:16.883 --> 00:10:19.285 line:-1 position:50%
to adopt it
into your applications.


221
00:10:19,285 --> 00:10:21,521 line:-1
And it's easy to get started.


222
00:10:21.521 --> 00:10:23.857 line:-1 position:50%
For more information,
see additional resources


223
00:10:23,857 --> 00:10:26,493 line:-1
for this session
in the Developer app.


224
00:10:26.493 --> 00:10:28.862 line:-1 position:50%
Thanks for watching
and enjoy the conference.


225
00:10:28,862 --> 00:10:32,866 line:0 size:2% position:89%
♪

