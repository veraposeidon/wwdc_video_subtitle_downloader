2
00:00:00.567 --> 00:00:07.541 line:-1 align:center
[upbeat music]


3
00:00:09.042 --> 00:00:11.879 line:-2 align:center
[Jason] Welcome to
What's new in Mac Catalyst.


4
00:00:11.879 --> 00:00:14.348 line:-2 align:center
My name is Jason Beaver,
and I'll be joined later


5
00:00:14.348 --> 00:00:16.183 line:-2 align:center
by my colleague
Nick Teissler.


6
00:00:16,183 --> 00:00:19,152 line:-2
Mac Catalyst is the technology
that lets you bring your


7
00:00:19,152 --> 00:00:22,089 line:-2
existing iOS applications
to macOS,


8
00:00:22.089 --> 00:00:23.857 line:-2 align:center
allowing them
to take full advantage


9
00:00:23.857 --> 00:00:25.726 line:-1 align:center
of the Mac's larger display,


10
00:00:25,726 --> 00:00:28,495 line:-2
integrated keyboard,
and mouse or trackpad.


11
00:00:29.429 --> 00:00:31.832 line:-2 align:center
Thousands of developers
have used Mac Catalyst


12
00:00:31,832 --> 00:00:34,701 line:-2
to bring their iOS
applications to macOS,


13
00:00:34,701 --> 00:00:36,870 line:-2
and the results have been
incredible.


14
00:00:36,870 --> 00:00:38,605 line:-2
Let me tell you about
a few of the recent


15
00:00:38.605 --> 00:00:40.774 line:-2 align:center
Apple Award-winning
Mac Catalyst apps.


16
00:00:42,342 --> 00:00:45,345 line:-2
Shapr3D is an
industrial-strength CAD tool,


17
00:00:45,345 --> 00:00:48,248 line:-1
supported on both Mac and iPad.


18
00:00:48.248 --> 00:00:51.084 line:-2 align:center
While the iPad version was
designed as a multi-touch


19
00:00:51.084 --> 00:00:54.087 line:-2 align:center
and Pencil experience,
the new Mac version,


20
00:00:54.087 --> 00:00:56.857 line:-2 align:center
built with Mac Catalyst,
takes advantage of mouse


21
00:00:56.857 --> 00:01:00.227 line:-2 align:center
and keyboard support, just as
desktop users would expect.


22
00:01:01,962 --> 00:01:06,133 line:-2
Instapaper is a very popular app
for reading articles offline,


23
00:01:06.133 --> 00:01:10.637 line:-2 align:center
and because of Mac Catalyst,
it's made its debut on the Mac.


24
00:01:10.637 --> 00:01:14.308 line:-2 align:center
Notability is an outstanding
note-taking app.


25
00:01:14.308 --> 00:01:16.810 line:-2 align:center
Replacing the existing
Mac version,


26
00:01:16.810 --> 00:01:19.680 line:-2 align:center
the new version of the app gives
users all the cool features


27
00:01:19,680 --> 00:01:22,416 line:-2
of iPad,
but optimized to take advantage


28
00:01:22.416 --> 00:01:26.353 line:-2 align:center
of Mac's screen size,
keyboard, and faster speed.


29
00:01:26.353 --> 00:01:29.389 line:-2 align:center
It even supports Sidecar
with Apple Pencil.


30
00:01:29.389 --> 00:01:32.593 line:-2 align:center
We're going to start
with an overview of new APIs,


31
00:01:32.593 --> 00:01:37.030 line:-2 align:center
and then cover APIs that we've
enhanced in macOS Monterey.


32
00:01:37,030 --> 00:01:39,466 line:-2
Finally, we'll show these
new APIs in action


33
00:01:39,466 --> 00:01:42,536 line:-2
when Nick adopts
them in our demo app.


34
00:01:42,536 --> 00:01:44,037 line:-1
Let's start with an overview


35
00:01:44,037 --> 00:01:46,073 line:-2
of the new APIs
in macOS Monterey.


36
00:01:47,674 --> 00:01:50,611 line:-2
Previously, in macOS Big Sur,
we added support


37
00:01:50.611 --> 00:01:52.880 line:-2 align:center
for attaching a menu
to a button with


38
00:01:52.880 --> 00:01:55.415 line:-2 align:center
the showsMenuAsPrimaryAction
property.


39
00:01:55,415 --> 00:01:57,351 line:-2
This allowed you to create
a pull-down menu.


40
00:01:58.719 --> 00:02:01.455 line:-2 align:center
Now, in macOS Monterey,
we've added support


41
00:02:01.455 --> 00:02:03.690 line:-2 align:center
for pop-up buttons,
with a new property called


42
00:02:03.690 --> 00:02:07.060 line:-2 align:center
changesSelectionAsPrimaryAction,
that causes the title


43
00:02:07.060 --> 00:02:10.597 line:-2 align:center
of the button to track
the selection in the menu.


44
00:02:10.597 --> 00:02:13.100 line:-2 align:center
With these two properties,
there are now four ways


45
00:02:13.100 --> 00:02:14.668 line:-2 align:center
that we can configure
our button.


46
00:02:16.570 --> 00:02:18.539 line:-2 align:center
With both properties set
to false,


47
00:02:18.539 --> 00:02:20.707 line:-1 align:center
we get a standard push button.


48
00:02:20.707 --> 00:02:22.976 line:-2 align:center
Note that this can still
display a menu if one


49
00:02:22.976 --> 00:02:25.812 line:-2 align:center
is set when you click
and hold on the button.


50
00:02:25,812 --> 00:02:28,182 line:0
The code to create
that button is shown below.


51
00:02:29,883 --> 00:02:32,452 align:center
If only
changesSelectionAsPrimaryAction


52
00:02:32,452 --> 00:02:34,154 align:center
is set to true,


53
00:02:34,154 --> 00:02:37,891 line:0
you get a toggle button that can
clicked to turn on and off.


54
00:02:37,891 --> 00:02:40,260 align:center
This can be used to indicate
state in your application.


55
00:02:42,129 --> 00:02:44,565 align:center
If only showsMenuAsPrimaryAction


56
00:02:44,565 --> 00:02:48,001 align:center
is set to true,
you get a pull-down menu.


57
00:02:48,001 --> 00:02:50,304 line:0
And if both properties
are set to true,


58
00:02:50,304 --> 00:02:53,574 line:0
you get the new pop-up button.


59
00:02:53,574 --> 00:02:55,609 line:-2
Now, for buttons configured
to show a menu


60
00:02:55.609 --> 00:02:57.377 line:-1 align:center
as the primary action,


61
00:02:57,377 --> 00:02:59,179 line:-2
the buttons will
show the menus immediately


62
00:02:59,179 --> 00:03:03,250 line:-2
with the primary interaction,
which is a left click in macOS.


63
00:03:03.250 --> 00:03:06.453 line:-2 align:center
However, for buttons that are
not configured to show a menu


64
00:03:06,453 --> 00:03:08,021 line:-1
as the primary action,


65
00:03:08,021 --> 00:03:10,657 line:-2
the behavior depends
on the app's idiom.


66
00:03:10,657 --> 00:03:12,893 line:-2
In the iPad idiom,
menus are triggered


67
00:03:12.893 --> 00:03:17.631 line:-2 align:center
with the secondary interaction,
which is a right click in macOS.


68
00:03:17,631 --> 00:03:19,933 line:-2
But if the application
adopts the Mac idiom,


69
00:03:19.933 --> 00:03:22.236 line:-2 align:center
the menu is triggered by
a long press on the button.


70
00:03:24,171 --> 00:03:26,273 align:center
You can find out more about
what's new with buttons


71
00:03:26,273 --> 00:03:28,876 line:0
in the "Meet the UIKit
button system" video.


72
00:03:29.676 --> 00:03:33.947 line:-2 align:center
We've now made ToolTips
available to Mac Catalyst apps.


73
00:03:33,947 --> 00:03:36,550 line:-2
A ToolTip is a small,
floating window that will appear


74
00:03:36,550 --> 00:03:39,887 line:-2
when the cursor hovers
over a view in your application.


75
00:03:39.887 --> 00:03:41.522 line:-2 align:center
And it can
be used to provide context


76
00:03:41,522 --> 00:03:44,625 line:-2
or additional detail
about your content.


77
00:03:44,625 --> 00:03:49,396 line:-2
To add a ToolTip to any UIView,
use UIToolTipInteraction.


78
00:03:49,396 --> 00:03:52,633 line:-2
All you need to do is create
a UIToolTipInteraction


79
00:03:52,633 --> 00:03:55,869 line:-2
with a text string, and then add
that interaction to your view.


80
00:03:57,704 --> 00:03:59,706 line:-2
One common use of ToolTips,
however,


81
00:03:59.706 --> 00:04:03.177 line:-2 align:center
is to clarify the behavior
of controls in your UI.


82
00:04:03,177 --> 00:04:04,645 line:-1
This is a common enough pattern


83
00:04:04.645 --> 00:04:07.314 line:-2 align:center
that we've added a convenience
property to UIControl


84
00:04:07.314 --> 00:04:09.216 line:-2 align:center
to let you
quickly set a ToolTip.


85
00:04:10,884 --> 00:04:12,986 line:-2
Labels are used throughout
iOS apps


86
00:04:12.986 --> 00:04:15.789 line:-1 align:center
to display non-editable strings.


87
00:04:15.789 --> 00:04:18.325 line:-2 align:center
When the contents of a label
are too long to fit,


88
00:04:18,325 --> 00:04:21,094 line:-2
the label has to truncate
the text.


89
00:04:21.094 --> 00:04:23.830 line:-2 align:center
Now, in macOS Monterey,
we've added support


90
00:04:23.830 --> 00:04:26.400 line:-2 align:center
for expansion ToolTips
so that the full contents


91
00:04:26.400 --> 00:04:28.936 line:-1 align:center
of the label are available.


92
00:04:28.936 --> 00:04:31.605 line:-2 align:center
In this sample UI,
the title label's contents


93
00:04:31,605 --> 00:04:33,707 line:-1
are too long to fit.


94
00:04:33.707 --> 00:04:35.642 line:-1 align:center
By enabling expansion ToolTips,


95
00:04:35.642 --> 00:04:37.377 line:-2 align:center
when we hover the mouse
over the label,


96
00:04:37.377 --> 00:04:40.614 line:-1 align:center
it shows the full title.


97
00:04:40.614 --> 00:04:42.449 line:-2 align:center
You can enable this
with a new property


98
00:04:42,449 --> 00:04:46,253 line:-2
on UILabel called
showsExpansionTextWhenTruncated.


99
00:04:47.955 --> 00:04:50.123 line:-2 align:center
We've introduced a new
info.plist key


100
00:04:50,123 --> 00:04:52,860 line:-2
called UIApplicationSupports
PrintCommand


101
00:04:52.860 --> 00:04:55.028 line:-2 align:center
that you can add
to your info.plist.


102
00:04:55.028 --> 00:04:57.865 line:-2 align:center
If set to true, we will
automatically add "Print,"


103
00:04:57.865 --> 00:04:59.700 line:-2 align:center
and "Export as PDF"
menu items


104
00:04:59.700 --> 00:05:02.703 line:-2 align:center
to your Mac Catalyst
application at launch.


105
00:05:02,703 --> 00:05:05,572 line:-2
This plist key can also be added
to your iOS applications


106
00:05:05.572 --> 00:05:08.942 line:-2 align:center
and will result in just
the "Print" option on the iPadOS


107
00:05:08.942 --> 00:05:12.045 line:-2 align:center
shortcuts overlay and will also
show the "Print"


108
00:05:12,045 --> 00:05:14,047 line:-1
and "Export as PDF" menu items


109
00:05:14.047 --> 00:05:17.084 line:-2 align:center
when your iOS application
is run on M1 Macs.


110
00:05:18,919 --> 00:05:21,421 line:-2
While this plist key
tells the operating system


111
00:05:21,421 --> 00:05:24,758 line:-2
that you want the "Print,"
and "Export as PDF" menu items,


112
00:05:24,758 --> 00:05:26,760 line:-1
it is only half of the story.


113
00:05:26.760 --> 00:05:28.662 line:-2 align:center
You still need to explicitly
implement


114
00:05:28,662 --> 00:05:30,898 line:-1
print support in your code.


115
00:05:30.898 --> 00:05:33.400 line:-2 align:center
To do that, there
is a new UIResponder action


116
00:05:33.400 --> 00:05:35.602 line:-1 align:center
called printContent.


117
00:05:35,602 --> 00:05:38,105 line:-2
You can implement this on any
UIResponder,


118
00:05:38.105 --> 00:05:40.274 line:-2 align:center
and the responder
chain search is used


119
00:05:40,274 --> 00:05:43,744 line:-2
to find
the appropriate print target.


120
00:05:43,744 --> 00:05:46,513 line:-2
When your implementation
of printContent is invoked,


121
00:05:46.513 --> 00:05:49.149 line:-2 align:center
simply set up and use
a UIPrintInteractionController


122
00:05:49,149 --> 00:05:51,752 line:-1
as you normally would.


123
00:05:51.752 --> 00:05:54.988 line:-2 align:center
We now have support for adding
a subtitle to your window.


124
00:05:54.988 --> 00:05:57.324 line:-2 align:center
This could be used
to provide auxiliary information


125
00:05:57,324 --> 00:06:00,160 line:-2
about the state
of your application.


126
00:06:00.160 --> 00:06:02.829 line:-2 align:center
This can be set with a new
property on UIScene


127
00:06:02.829 --> 00:06:04.898 line:-1 align:center
called subtitle.


128
00:06:06.099 --> 00:06:08.502 line:-2 align:center
In macOS Monterey,
the Shortcuts application


129
00:06:08,502 --> 00:06:10,871 line:-1
is now available on the Mac.


130
00:06:10,871 --> 00:06:13,707 line:-2
If your application adopts
custom intents on iOS,


131
00:06:13.707 --> 00:06:15.909 line:-2 align:center
they will
now be available with Siri


132
00:06:15,909 --> 00:06:18,078 line:-1
and Shortcuts on the Mac.


133
00:06:18,078 --> 00:06:20,914 line:-2
Both in-app intent handling
and Intents extensions


134
00:06:20,914 --> 00:06:22,049 line:-1
are available.


135
00:06:22.049 --> 00:06:23.450 line:-2 align:center
So, if you've previously
disabled


136
00:06:23.450 --> 00:06:25.118 line:-1 align:center
building your Intents extension


137
00:06:25.118 --> 00:06:28.188 line:-2 align:center
in your Mac Catalyst app,
you can now re-enable it.


138
00:06:28,188 --> 00:06:29,523 align:center
You can find out more


139
00:06:29,523 --> 00:06:32,659 align:center
in the "Meet Shortcuts
for macOS" video.


140
00:06:32,659 --> 00:06:35,062 line:-2
That wraps up
the overview of our APIs


141
00:06:35.062 --> 00:06:37.598 line:-1 align:center
that are new in macOS Monterey.


142
00:06:37.598 --> 00:06:39.199 line:-1 align:center
Let's move on to an overview


143
00:06:39.199 --> 00:06:42.569 line:-2 align:center
of the APIs that we've
enhanced in macOS Monterey.


144
00:06:42.569 --> 00:06:45.906 line:-2 align:center
If you have custom buttons
or sliders that you've written


145
00:06:45,906 --> 00:06:48,208 line:-2
to fit the theme of your app,
you can keep those


146
00:06:48.208 --> 00:06:50.911 line:-2 align:center
in Mac Catalyst
when you adopt the Mac idiom


147
00:06:50,911 --> 00:06:53,247 line:-2
by opting out
of the native controls,


148
00:06:53.247 --> 00:06:57.150 line:-2 align:center
but you'll need to take care
of your own scaling down to 77%.


149
00:06:57,150 --> 00:06:59,419 line:-2
Now, we don't recommend doing
this app-wide,


150
00:06:59,419 --> 00:07:00,988 line:-1
but only for certain controls


151
00:07:00.988 --> 00:07:03.824 line:-2 align:center
that are key
to your app's experience.


152
00:07:03.824 --> 00:07:06.660 line:-2 align:center
The new button system can also
be used to create buttons


153
00:07:06.660 --> 00:07:09.930 line:-2 align:center
that fit with your app's theme
in a more cross-platform way.


154
00:07:09.930 --> 00:07:11.465 line:-2 align:center
And you can find out more
about this


155
00:07:11,465 --> 00:07:14,801 align:center
in the "Meet the UIKit
button system" video.


156
00:07:14.801 --> 00:07:18.272 line:-2 align:center
UIBehavioralStyle is the new
enum that makes this possible.


157
00:07:18,272 --> 00:07:21,808 line:-2
UIButton and UISlider have
two new properties each:


158
00:07:21,808 --> 00:07:24,411 line:-2
preferredBehavioralStyle
is readwrite,


159
00:07:24,411 --> 00:07:26,713 line:-2
and behavioralStyle
is the readonly


160
00:07:26,713 --> 00:07:29,249 line:-2
resolved value
for this property.


161
00:07:29.249 --> 00:07:33.086 line:-2 align:center
On iOS, the resolved value for
behavioralStyle won't change,


162
00:07:33,086 --> 00:07:35,989 line:-2
so it's easy to set
this line of code to .pad


163
00:07:35,989 --> 00:07:38,759 line:-2
or ,mac explicitly to handle
the Mac Catalyst case


164
00:07:38.759 --> 00:07:40.661 line:-1 align:center
without affecting your iOS app.


165
00:07:42.529 --> 00:07:45.832 line:-2 align:center
For document-based apps,
there's a new plist property


166
00:07:45,832 --> 00:07:48,969 line:-2
called UIApplicationSupports
TabbedSceneCollection


167
00:07:48.969 --> 00:07:51.205 line:-1 align:center
to opt out of window tabbing.


168
00:07:51,205 --> 00:07:54,374 line:-2
When set to false,
window tabbing will be disabled,


169
00:07:54.374 --> 00:07:59.246 line:-2 align:center
and the default tab-related menu
items will not be added.


170
00:07:59,246 --> 00:08:01,014 line:-2
We now support
UIPointerLockState


171
00:08:01.014 --> 00:08:02.749 line:-2 align:center
for hiding the cursor
and locking it


172
00:08:02,749 --> 00:08:05,319 line:-2
so that it doesn't move
outside the Mac window.


173
00:08:05,319 --> 00:08:07,754 line:-2
This is really useful for games,
so that the user doesn't


174
00:08:07,754 --> 00:08:09,523 line:-2
inadvertently click
outside the game


175
00:08:09.523 --> 00:08:12.192 line:-2 align:center
and bring another
application to the front.


176
00:08:12,192 --> 00:08:14,561 line:-2
It temporarily unlocks
the window when you switch apps


177
00:08:14,561 --> 00:08:17,464 line:-2
or windows, and relocks it
when you click the window.


178
00:08:19.299 --> 00:08:22.169 line:-2 align:center
We also support UIPointerShape,
which can be used


179
00:08:22,169 --> 00:08:26,106 line:-2
to get iBeam cursors in either
the horizontal or vertical axes.


180
00:08:26.106 --> 00:08:28.742 line:-2 align:center
When you use this API on macOS,
you'll get one of


181
00:08:28,742 --> 00:08:31,245 line:-1
the canonical NSCursor shapes.


182
00:08:33,146 --> 00:08:36,750 line:-2
Finally, we support a pointer
style of hidden to allow you


183
00:08:36,750 --> 00:08:39,453 line:-2
to hide the cursor
when necessary in your app.


184
00:08:39,453 --> 00:08:43,323 line:-2
We've gone over a number of new
and enhanced UIKit APIs.


185
00:08:43.323 --> 00:08:46.026 line:-2 align:center
Now, I'll hand it over to Nick
to take us through


186
00:08:46,026 --> 00:08:48,595 line:-2
how we'll use these new
and enhanced APIs


187
00:08:48,595 --> 00:08:50,063 line:-1
to make our Mac Catalyst app


188
00:08:50,063 --> 00:08:52,232 line:-2
feel even
more at home on the Mac.


189
00:08:52.232 --> 00:08:54.134 line:-1 align:center
[Nick] Thanks, Jason!


190
00:08:54.134 --> 00:08:56.937 line:-2 align:center
Those new features
are very intriguing.


191
00:08:56.937 --> 00:08:59.339 line:-2 align:center
I've already had the chance
to try them out.


192
00:08:59.339 --> 00:09:02.176 line:-2 align:center
I'm going to walk you
through a demo of an app


193
00:09:02,176 --> 00:09:04,344 line:-2
that the Catalyst team
has developed.


194
00:09:04.344 --> 00:09:08.048 line:-2 align:center
It turns out the Catalyst team
moonlights as travel writers.


195
00:09:08,048 --> 00:09:09,917 line:-2
And so,
we developed Trip Planner


196
00:09:09.917 --> 00:09:12.052 line:-1 align:center
for the iPhone and iPad.


197
00:09:12.052 --> 00:09:13.687 line:-1 align:center
Here is Trip Planner


198
00:09:13,687 --> 00:09:16,823 line:-2
running on a 13-inch
MacBook Pro with M1.


199
00:09:19.159 --> 00:09:22.362 line:-2 align:center
We opted our app in to running
on M1 Macs so we could have


200
00:09:22,362 --> 00:09:25,832 line:-2
the app available to as
many users as possible.


201
00:09:25.832 --> 00:09:28.502 line:-2 align:center
Let me give you a tour
of the app's features.


202
00:09:28,502 --> 00:09:31,839 line:-2
Trip Planner is an app
that lists some great places


203
00:09:31,839 --> 00:09:35,042 line:-2
to visit across the globe
and allows you to redeem


204
00:09:35,042 --> 00:09:38,645 line:-2
reward points for various
frequent-traveler programs.


205
00:09:38.645 --> 00:09:41.248 line:-2 align:center
Its UI is
based around a three-column


206
00:09:41,248 --> 00:09:43,684 line:-1
split-view controller.


207
00:09:43,684 --> 00:09:47,421 line:-2
Using the sidebar,
I can navigate between lodgings,


208
00:09:47.421 --> 00:09:51.225 line:-2 align:center
restaurants, and sites
in my favorite countries,


209
00:09:51.225 --> 00:09:55.395 line:-2 align:center
or select a rewards program
to review and spend my points.


210
00:09:55.395 --> 00:09:58.031 line:-2 align:center
When I select
something in the sidebar,


211
00:09:58.031 --> 00:10:00.868 line:-2 align:center
if it's a category,
Trip Planner shows its content


212
00:10:00,868 --> 00:10:04,571 line:-2
in the supplementary column
of the split-view controller.


213
00:10:04,571 --> 00:10:06,273 line:-2
The supplementary-view
controller


214
00:10:06,273 --> 00:10:08,442 line:-2
populates with sights,
restaurants,


215
00:10:08.442 --> 00:10:14.314 line:-2 align:center
and lodgings in Japan,
Spain, Brazil, and Tanzania.


216
00:10:14.314 --> 00:10:17.918 line:-2 align:center
If I instead select a leaf item
in the sidebar


217
00:10:17,918 --> 00:10:21,121 line:-2
or an item in the
supplementary-view controller,


218
00:10:21.121 --> 00:10:25.959 line:-2 align:center
the secondary-view controller
shows details for that item.


219
00:10:25.959 --> 00:10:31.031 line:-2 align:center
I'll select one of my favorite
cafes in Japan, Extreme Matcha.


220
00:10:31.031 --> 00:10:32.733 line:-2 align:center
The detail-view controller
includes


221
00:10:32.733 --> 00:10:36.803 line:-2 align:center
some text about the cafe,
buttons to help me plan my trip,


222
00:10:36,803 --> 00:10:40,307 line:-2
and a map view showing
where Extreme Matcha is located.


223
00:10:40.307 --> 00:10:42.442 line:-1 align:center
In the case of Trip Planner,


224
00:10:42.442 --> 00:10:46.079 line:-2 align:center
everything just worked out
of the box on M1 Macs.


225
00:10:46.079 --> 00:10:50.117 line:-2 align:center
However, being an iOS app,
there was only so much


226
00:10:50.117 --> 00:10:52.419 line:-2 align:center
we could do to make it
feel at home on the Mac.


227
00:10:52,419 --> 00:10:56,156 line:-2
To go further,
we needed to check that checkbox


228
00:10:56,156 --> 00:10:58,392 line:-1
and make it a Mac Catalyst app.


229
00:10:58.392 --> 00:11:01.862 line:-2 align:center
This checkbox, to be specific.
Can we zoom?


230
00:11:01.862 --> 00:11:05.532 line:-2 align:center
And enhance your app
by checking the check box.


231
00:11:05,532 --> 00:11:09,336 line:-2
Here is Trip Planner
optimized for Mac Catalyst.


232
00:11:09.336 --> 00:11:12.339 line:-2 align:center
We've added
Mac-specific functionality,


233
00:11:12.339 --> 00:11:15.809 line:-2 align:center
like double-tap gesture
recognizers to open new windows,


234
00:11:15.809 --> 00:11:19.746 line:-1 align:center
custom title bar appearances,


235
00:11:19,746 --> 00:11:23,016 line:-2
and we've gone all-in
by optimizing for the Mac


236
00:11:23.016 --> 00:11:28.222 line:-2 align:center
giving us
native controls and sharp text.


237
00:11:28,222 --> 00:11:31,692 align:center
Watch the "Qualities of a great
Mac Catalyst app"


238
00:11:31,692 --> 00:11:33,894 align:center
and the "Optimize the interface


239
00:11:33,894 --> 00:11:35,529 align:center
of your Mac Catalyst app"


240
00:11:35,529 --> 00:11:37,364 align:center
for the full
story on that process.


241
00:11:37.397 --> 00:11:39.566 line:-2 align:center
In the final
version of Trip Planner,


242
00:11:39,600 --> 00:11:43,036 line:-2
I've adopted the new APIs Jason
just told you about.


243
00:11:43.036 --> 00:11:45.372 line:-2 align:center
I'll cover
the adoption of each one.


244
00:11:45.372 --> 00:11:48.342 line:-2 align:center
I highly recommend you
download the sample project.


245
00:11:48,342 --> 00:11:50,377 line:-2
All of the snippets
I'll show here are taken


246
00:11:50.377 --> 00:11:52.446 line:-1 align:center
directly from that code.


247
00:11:52,479 --> 00:11:57,084 line:-2
Here's the app completely
updated for macOS Monterey.


248
00:11:57,084 --> 00:11:59,820 line:-2
I have Extreme Matcha
selected again.


249
00:11:59.820 --> 00:12:02.356 line:-2 align:center
You may notice some color
in the UI


250
00:12:02,356 --> 00:12:05,792 line:-2
in the form of macOS-style
buttons with a background color.


251
00:12:05.792 --> 00:12:07.294 line:-1 align:center
But I'll come back to those.


252
00:12:07.294 --> 00:12:10.097 line:-2 align:center
I'd like to talk about
scene subtitles first.


253
00:12:10,097 --> 00:12:14,034 line:-2
I'm using the new UIScene
subtitle property


254
00:12:14.034 --> 00:12:15.869 line:-1 align:center
to do two things.


255
00:12:15,869 --> 00:12:18,205 line:-1
First, I'm using the subtitle


256
00:12:18.205 --> 00:12:20.474 line:-2 align:center
to show the detail-view
controller's title


257
00:12:20.474 --> 00:12:23.677 line:-2 align:center
in a way that feels more
at home on the Mac.


258
00:12:23,677 --> 00:12:25,746 line:-2
A window subtitle
is more Mac-like


259
00:12:25,746 --> 00:12:28,715 line:-2
than a navigation item's
title is.


260
00:12:28,715 --> 00:12:31,051 line:-2
Second,
I'm changing the subtitle


261
00:12:31,051 --> 00:12:35,189 line:-2
to provide some helpful context
as a user navigates the app.


262
00:12:35.189 --> 00:12:39.259 line:-2 align:center
In Trip Planner,
I'll select Japan and Tanzania.


263
00:12:43.497 --> 00:12:47.100 line:-2 align:center
So, the window's subtitle
reads "Countries."


264
00:12:47,134 --> 00:12:50,137 line:-2
If I select this little
camping spot,


265
00:12:50,137 --> 00:12:52,806 line:-2
here in the supplementary-view
controller,


266
00:12:52.806 --> 00:12:54.474 line:-2 align:center
the subtitle changes
to let me know


267
00:12:54,474 --> 00:12:57,377 line:-1
I've selected Glamp Kilimanjaro.


268
00:12:57,377 --> 00:13:01,381 line:-2
And if I select the whole
Rewards Programs section...


269
00:13:01.415 --> 00:13:04.818 line:-2 align:center
The subtitle changes again
to Countries & Rewards Programs,


270
00:13:04,818 --> 00:13:08,222 line:-1
adding context for the user.


271
00:13:08,255 --> 00:13:11,191 line:-2
Think about how subtitles
might help to add context


272
00:13:11.191 --> 00:13:13.360 line:-1 align:center
to your Catalyst apps, too.


273
00:13:13,360 --> 00:13:16,630 line:-2
Also note that the subtitle
is displayed differently


274
00:13:16,630 --> 00:13:20,000 line:-2
for each
UITitlebar toolbarStyle.


275
00:13:20.000 --> 00:13:24.071 line:-2 align:center
Experiment with this to find
the best look for your app.


276
00:13:26.373 --> 00:13:29.810 line:-2 align:center
To set the subtitle,
start with a string value,


277
00:13:29.810 --> 00:13:32.246 line:-1 align:center
get a reference to the scene,


278
00:13:32.246 --> 00:13:34.448 line:-2 align:center
and then
set the subtitle property.


279
00:13:34.448 --> 00:13:37.184 line:-2 align:center
You can either set this
at scene connection time,


280
00:13:37,184 --> 00:13:41,822 line:-2
or later by accessing
the scene of a view's window.


281
00:13:41.822 --> 00:13:44.625 line:-2 align:center
Next, I'll show you
how I adopted ToolTips


282
00:13:44.625 --> 00:13:46.360 line:-1 align:center
in Trip Planner.


283
00:13:46.360 --> 00:13:49.196 line:-2 align:center
A very common interaction
pattern on macOS


284
00:13:49,196 --> 00:13:51,865 line:-2
is momentarily hovering
the mouse over something


285
00:13:51,865 --> 00:13:55,702 line:-2
to get more detail
about that something.


286
00:13:55.702 --> 00:13:57.905 line:-2 align:center
This technique
is a long-established way


287
00:13:57.905 --> 00:14:03.143 line:-2 align:center
of educating the user without
cluttering your app's UI.


288
00:14:03.143 --> 00:14:08.382 line:-2 align:center
ToolTips also can also show
a truncated label's full text.


289
00:14:10.050 --> 00:14:14.521 line:-2 align:center
Here, I've selected
Iguaçu Falls in Brazil.


290
00:14:14.521 --> 00:14:17.424 line:-2 align:center
Hovering the mouse over the
image for a moment


291
00:14:17.424 --> 00:14:20.027 line:-1 align:center
reveals a ToolTip!


292
00:14:20,027 --> 00:14:21,728 line:-1
"A lush, deep green forest


293
00:14:21,728 --> 00:14:25,365 line:-2
surrounds the roaring Iguaçu
Falls on an overcast day."


294
00:14:25,365 --> 00:14:28,068 line:-1
What a nice description.


295
00:14:28.068 --> 00:14:31.538 line:-2 align:center
We've used the new
UIToolTipInteraction API


296
00:14:31,538 --> 00:14:35,676 line:-2
to add this functionality
to all of our images,


297
00:14:35,676 --> 00:14:38,312 line:-2
and it really makes the app feel
more at home on the Mac.


298
00:14:40.347 --> 00:14:44.585 line:-2 align:center
I've also used the UILabel API
to allow expansion of these


299
00:14:44,585 --> 00:14:48,255 line:-2
labels that get truncated
due to the internationalized


300
00:14:48.255 --> 00:14:51.825 line:-2 align:center
currency formatting, making them
a bit longer than expected.


301
00:14:53,527 --> 00:14:55,295 line:-1
As Jason went over earlier,


302
00:14:55,295 --> 00:14:58,465 line:-2
there are
various forms of ToolTip API.


303
00:14:58.465 --> 00:15:00.300 line:-1 align:center
In the hero image case,


304
00:15:00,300 --> 00:15:03,437 line:-2
using
the UIToolTipInteraction API


305
00:15:03,437 --> 00:15:07,074 line:-2
without
a UITooltipInteractionDelegate


306
00:15:07.074 --> 00:15:10.744 line:-2 align:center
fit my need because I wanted
to attach constant text


307
00:15:10.744 --> 00:15:13.213 line:-2 align:center
as the ToolTip
to an arbitrary view.


308
00:15:14.982 --> 00:15:16.183 line:-1 align:center
For the currency text,


309
00:15:16,183 --> 00:15:19,419 line:-2
I used the
showsExpansionTextWhenTruncated


310
00:15:19,419 --> 00:15:22,689 line:-1
property on UILabel.


311
00:15:22.689 --> 00:15:24.858 line:-2 align:center
And if I
want to attach a ToolTip


312
00:15:24,858 --> 00:15:26,660 line:-1
to an arbitrary control,


313
00:15:26.660 --> 00:15:29.062 line:-2 align:center
the ToolTip property
on UIControl


314
00:15:29,062 --> 00:15:30,898 line:-1
is the right API to use.


315
00:15:33,400 --> 00:15:36,637 align:center
I'll move on to the wide
variety of new buttons


316
00:15:36,637 --> 00:15:39,806 line:0
available in Catalyst
on macOS Monterey.


317
00:15:39,806 --> 00:15:41,475 line:0
I recommend you check out


318
00:15:41,475 --> 00:15:44,044 line:0
the "Meet the UIKit
button system" video


319
00:15:44,044 --> 00:15:47,247 align:center
for an introduction
to the new iOS 15


320
00:15:47,247 --> 00:15:50,250 align:center
UIButtonConfiguration APIs.


321
00:15:50,250 --> 00:15:54,688 align:center
Many of those new
UIButtonConfiguration properties


322
00:15:54,688 --> 00:15:56,190 line:0
have their own manifestations


323
00:15:56,190 --> 00:15:59,092 line:0
in Catalyst apps
optimized for Mac.


324
00:15:59,092 --> 00:16:01,962 line:0
And even better,
just like on iOS,


325
00:16:01,962 --> 00:16:04,698 align:center
the properties defined
on UIButton can be mixed


326
00:16:04,698 --> 00:16:08,569 align:center
and matched with those
on UIButtonConfiguration.


327
00:16:08,569 --> 00:16:12,039 align:center
I'm going to show you a bunch
of buttons, and then after,


328
00:16:12,039 --> 00:16:14,708 align:center
I'll show how each one
was configured in code.


329
00:16:15.909 --> 00:16:17.444 line:-1 align:center
I'll pick a new destination


330
00:16:17.444 --> 00:16:20.647 line:-2 align:center
to show off the new
button background color.


331
00:16:20,647 --> 00:16:22,916 line:-1
How about Copacabana?


332
00:16:22.916 --> 00:16:26.653 line:-2 align:center
The buttons here are using
the filled configuration,


333
00:16:26.653 --> 00:16:29.990 line:-2 align:center
and so they pick up the tint
color of their environment,


334
00:16:29.990 --> 00:16:32.259 line:-2 align:center
automatically getting
a color that matches


335
00:16:32.259 --> 00:16:35.195 line:-2 align:center
the image
and background blur well.


336
00:16:35.195 --> 00:16:39.433 line:-2 align:center
Now, I'll navigate to a rewards
detail-view controller.


337
00:16:39.433 --> 00:16:42.035 line:-2 align:center
I'll bring up my programs
from the sidebar...


338
00:16:43,871 --> 00:16:47,908 line:-2
And select the Diamond Dubloons
Rewards Program.


339
00:16:47.908 --> 00:16:50.711 line:-2 align:center
The purpose of this view
is to allow me


340
00:16:50,711 --> 00:16:52,746 line:-2
to redeem points
I've earned from traveling


341
00:16:52.746 --> 00:16:54.948 line:-2 align:center
and choose what to redeem
them on.


342
00:16:56.850 --> 00:17:01.388 line:-2 align:center
I can use the slider to choose
how many points I'm spending.


343
00:17:01.388 --> 00:17:03.624 line:-2 align:center
I can use this toggle
button to activate


344
00:17:03.624 --> 00:17:06.059 line:-1 align:center
the points multiplier,


345
00:17:06,059 --> 00:17:10,931 line:-2
and even choose my multiplier
with the attached menu.


346
00:17:10,931 --> 00:17:13,667 line:-2
I feel like choosing
the biggest number


347
00:17:13,667 --> 00:17:17,004 line:-2
as my points multiplier
only makes sense.


348
00:17:17,004 --> 00:17:19,072 line:-1
So, I'll choose six.


349
00:17:19.072 --> 00:17:21.808 line:-1 align:center
I wonder what the catch is.


350
00:17:21.808 --> 00:17:23.777 line:-2 align:center
I can toggle these larger
buttons


351
00:17:23.777 --> 00:17:25.879 line:-2 align:center
to select
the categories to redeem.


352
00:17:29.116 --> 00:17:31.285 line:-1 align:center
I can choose between redeeming,


353
00:17:31,285 --> 00:17:34,454 line:-2
cashing out,
or donating my points.


354
00:17:34.454 --> 00:17:36.523 line:-2 align:center
And when I'm finally ready
to submit,


355
00:17:36,523 --> 00:17:39,493 line:-2
I can click the submit
button in the bottom right,


356
00:17:39.493 --> 00:17:42.663 line:-2 align:center
or click this reset button
to start over.


357
00:17:42,663 --> 00:17:45,899 line:-2
There are a quite a few
new buttons here.


358
00:17:45,899 --> 00:17:48,468 line:-2
I'll show you how to configure
each one.


359
00:17:50.003 --> 00:17:53.006 line:-2 align:center
I'll first cover the one
we're all familiar with:


360
00:17:53.006 --> 00:17:55.042 line:-1 align:center
the push button.


361
00:17:55.042 --> 00:17:58.879 line:-2 align:center
In the detail-view controller,
this was the submit button.


362
00:17:58.879 --> 00:18:01.682 line:-2 align:center
This is just a UIButton
of the system type,


363
00:18:01,682 --> 00:18:05,052 line:-2
introduced in Big Sur,
with its role set to primary.


364
00:18:07.321 --> 00:18:11.758 line:-2 align:center
Up next, I have the points
multiplier menu button.


365
00:18:11,758 --> 00:18:16,096 line:-2
This button toggles
its state on primary click


366
00:18:16.096 --> 00:18:17.798 line:-1 align:center
and shows a menu on long press.


367
00:18:17.798 --> 00:18:20.968 line:-2 align:center
I know I'll want a custom
background color eventually,


368
00:18:20.968 --> 00:18:24.171 line:-2 align:center
so I'll use the filled
configuration


369
00:18:24.171 --> 00:18:26.373 line:-2 align:center
and set the title
to "Points Multiplier."


370
00:18:28.509 --> 00:18:30.277 line:-1 align:center
To get the toggle behavior,


371
00:18:30.277 --> 00:18:33.313 line:-2 align:center
I'll use the new boolean
property Jason told us about,


372
00:18:33.313 --> 00:18:36.683 line:-1 align:center
changesSelectionAsPrimaryAction.


373
00:18:36.683 --> 00:18:38.652 line:-1 align:center
Set that to true.


374
00:18:38,652 --> 00:18:40,454 line:-2
Now, our button's
background color will


375
00:18:40,454 --> 00:18:42,956 line:-2
toggle between the app's
tint color


376
00:18:42.956 --> 00:18:45.025 line:-2 align:center
and the standard colorless
appearance.


377
00:18:47,461 --> 00:18:49,062 line:-1
I'll attach a menu, as well,


378
00:18:49.062 --> 00:18:52.733 line:-2 align:center
configured with our multiplier
values and some UIActions.


379
00:18:55,102 --> 00:18:58,038 align:center
And finally,
in our menu's action handlers,


380
00:18:58,038 --> 00:19:01,041 align:center
if the user selects
the biggest points multiplier,


381
00:19:01,041 --> 00:19:04,611 align:center
we will conditionally change
the toggle's background color


382
00:19:04,611 --> 00:19:06,446 line:0
to a system red.


383
00:19:08.849 --> 00:19:11.151 line:-2 align:center
Now to configure
the Reset button.


384
00:19:13,153 --> 00:19:14,755 line:-2
I can use the plain
configuration


385
00:19:14.755 --> 00:19:17.357 line:-2 align:center
to get the borderless
appearance.


386
00:19:17,357 --> 00:19:19,560 line:-2
This configuration
looks very similar


387
00:19:19,560 --> 00:19:21,628 line:-1
to the iPadOS appearance.


388
00:19:23.764 --> 00:19:25.999 line:-2 align:center
I'll set the button's
role to destructive,


389
00:19:25,999 --> 00:19:28,535 line:-2
which tells the system
to do some event handling


390
00:19:28,535 --> 00:19:32,339 line:-2
that prevents accidentally
triggering its action.


391
00:19:32.339 --> 00:19:35.008 line:-2 align:center
And set its
tintColor to a systemRed.


392
00:19:35,008 --> 00:19:37,511 line:-1
That's it for that button.


393
00:19:37.511 --> 00:19:40.047 line:-2 align:center
For the pop-up button
in the bottom left of the view


394
00:19:40,047 --> 00:19:44,585 line:-2
that lets me select between
Redeem, Cash Out, and Donate,


395
00:19:44,585 --> 00:19:48,922 line:-2
there's no need to use
the button configuration API.


396
00:19:48.922 --> 00:19:52.392 line:-2 align:center
I'll just create
a system button


397
00:19:52,392 --> 00:19:54,695 line:-2
and set
changesSelectionAsPrimaryAction


398
00:19:54.695 --> 00:19:56.330 line:-1 align:center
to true.


399
00:19:56,330 --> 00:19:59,333 line:-2
Semantically, that's what
a pop-up button does.


400
00:20:01.568 --> 00:20:04.605 line:-2 align:center
Next, I want to set
showsMenuAsPrimaryAction


401
00:20:04,605 --> 00:20:07,341 line:-2
to true because that is
also semantically


402
00:20:07,341 --> 00:20:09,610 line:-1
what a pop-up button does.


403
00:20:09.610 --> 00:20:12.813 line:-2 align:center
But what gives?
The button hasn't changed.


404
00:20:12.813 --> 00:20:14.648 line:-1 align:center
Actually, it has.


405
00:20:14.648 --> 00:20:17.050 line:-2 align:center
We've achieved another
toggle button.


406
00:20:17.050 --> 00:20:19.119 line:-2 align:center
But the default state is,
of course, off.


407
00:20:20.988 --> 00:20:24.424 line:-2 align:center
We are missing a non-null menu
property.


408
00:20:24.424 --> 00:20:27.060 line:-2 align:center
That is critical to getting
the pop-up appearance


409
00:20:27,060 --> 00:20:29,596 line:-1
new in Mac Catalyst.


410
00:20:29,596 --> 00:20:31,598 line:-2
Now that we've set
the menu to something,


411
00:20:31,598 --> 00:20:33,667 line:-2
our pop-up button
is fully functional.


412
00:20:35.969 --> 00:20:40.340 line:-2 align:center
Finally, focus on these big,
panel-like toggle buttons.


413
00:20:40.340 --> 00:20:43.644 line:-2 align:center
This layout takes advantage
of how iPad-style buttons


414
00:20:43.644 --> 00:20:47.581 line:-2 align:center
stretch to fill the space
they are laid out in.


415
00:20:47.581 --> 00:20:51.285 line:-2 align:center
Buttons using the Mac style
don't behave this way.


416
00:20:51.285 --> 00:20:53.620 line:-2 align:center
I was able to keep the iPad
behavior,


417
00:20:53,620 --> 00:20:56,957 line:-2
even while Trip Planner
was set to Optimize for Mac,


418
00:20:56,957 --> 00:20:59,226 line:-1
and here's how.


419
00:20:59.226 --> 00:21:03.263 line:-2 align:center
I started with yet another
filled-button configuration.


420
00:21:05,332 --> 00:21:08,669 line:-2
I then used the configuration
to set an image,


421
00:21:08,669 --> 00:21:11,939 line:-2
with no need to specify a button
state for the image.


422
00:21:14,675 --> 00:21:17,611 line:-2
By specifying the
.pad behavioral style,


423
00:21:17,611 --> 00:21:21,014 line:-2
I get the layout behavior
I would on iPad.


424
00:21:21.014 --> 00:21:24.751 line:-2 align:center
Namely, the button's background
stretches to fill its frame.


425
00:21:27.287 --> 00:21:29.556 line:-2 align:center
The symbol
needed to be a bit bigger,


426
00:21:29.556 --> 00:21:31.458 line:-2 align:center
so I set a preferred
symbol configuration


427
00:21:31.458 --> 00:21:33.827 line:-2 align:center
on the button with a larger
point size.


428
00:21:36,063 --> 00:21:39,466 line:-2
As before, I set
changesSelectionAsPrimaryAction


429
00:21:39.466 --> 00:21:42.803 line:-2 align:center
to true and provided
a colorUpdateHandler


430
00:21:42.803 --> 00:21:47.107 line:-2 align:center
to specify a selected
and unselected color,


431
00:21:47.107 --> 00:21:49.743 line:-2 align:center
based off the button's
isSelected property.


432
00:21:51.078 --> 00:21:55.716 line:-2 align:center
I know you're as excited as I am
for all of these new options.


433
00:21:55.716 --> 00:21:59.920 line:-2 align:center
The long-standing members
of UIButton's API and shiny,


434
00:21:59,920 --> 00:22:02,222 line:-2
brand-new properties
can be mixed and matched


435
00:22:02,222 --> 00:22:06,593 line:-2
in many, many ways to create
a plethora of buttons


436
00:22:06,593 --> 00:22:10,063 line:-2
that are all
right at home on the Mac.


437
00:22:10.063 --> 00:22:12.332 line:-2 align:center
The last feature
of Trip Planner


438
00:22:12.332 --> 00:22:15.035 line:-2 align:center
I'd like to show you
is printing.


439
00:22:15.035 --> 00:22:18.005 line:-2 align:center
Printing is easier than
it's ever been on Catalyst


440
00:22:18.005 --> 00:22:21.074 line:-2 align:center
with the new built-in
key command support.


441
00:22:21.074 --> 00:22:23.644 line:-2 align:center
I was able to enhance
the printing experience


442
00:22:23.644 --> 00:22:26.513 line:-2 align:center
in Trip Planner by using
the responder chain


443
00:22:26.513 --> 00:22:28.615 line:-2 align:center
to select
the most appropriate object


444
00:22:28.615 --> 00:22:30.651 line:-1 align:center
to handle printing.


445
00:22:30,651 --> 00:22:33,187 line:-2
Let me demonstrate
what I mean by that.


446
00:22:33.187 --> 00:22:35.822 line:-2 align:center
Back in the newest
version of Trip Planner,


447
00:22:35.822 --> 00:22:38.926 line:-2 align:center
I've selected one of my most
beloved restaurants in Spain,


448
00:22:38.926 --> 00:22:41.728 line:-1 align:center
Charcuterie Bored.


449
00:22:41,728 --> 00:22:44,598 line:-2
I'll interact with the map view
by clicking


450
00:22:44.598 --> 00:22:47.067 line:-2 align:center
on the Catalyst-specific zoom
controls.


451
00:22:51.839 --> 00:22:55.576 line:-2 align:center
Now, application focus
and first responder status


452
00:22:55.576 --> 00:22:59.646 line:-2 align:center
have moved into this
detail-view controller.


453
00:22:59.646 --> 00:23:02.182 line:-2 align:center
When I select File Print
from the menu,


454
00:23:02.182 --> 00:23:04.318 line:-1 align:center
a Print dialog comes up...


455
00:23:08.422 --> 00:23:11.258 line:-2 align:center
Offering
to print just this one item.


456
00:23:11,258 --> 00:23:15,195 line:-2
Now, I'll also select Parque
Guell and Hotel Barcelona


457
00:23:15,195 --> 00:23:17,698 line:-2
to complete
my planning for the day.


458
00:23:21.068 --> 00:23:24.238 line:-2 align:center
I'll use the built-in
shortcut command+P to print.


459
00:23:27.107 --> 00:23:30.110 line:-2 align:center
The Print dialog that comes
up now offers to print


460
00:23:30.110 --> 00:23:32.579 line:-2 align:center
all three of my selected
items...


461
00:23:34,848 --> 00:23:38,652 line:-2
Not just the current
detail-view controller.


462
00:23:38.652 --> 00:23:44.324 line:-2 align:center
Lastly, if I Shift+Tab focus
over to countries in the sidebar


463
00:23:44.324 --> 00:23:46.894 line:-2 align:center
and have nothing selected
in the supplementary


464
00:23:46,894 --> 00:23:48,462 line:-1
or detail-view controllers...


465
00:23:52,733 --> 00:23:56,270 line:-1
And then try to print,


466
00:23:56,270 --> 00:23:58,172 line:-1
Trip Planner knows what to do


467
00:23:58.172 --> 00:24:01.341 line:-2 align:center
and prints every item
I've selected in the sidebar.


468
00:24:03,477 --> 00:24:06,046 line:-1
So, how do I achieve this?


469
00:24:06.046 --> 00:24:11.118 line:-2 align:center
First and foremost, the new
info.plist key Jason introduced


470
00:24:11,118 --> 00:24:14,688 line:-2
must be set to let
the system know Trip Planner


471
00:24:14.688 --> 00:24:18.692 line:-2 align:center
supports printing and would like
the menu item added.


472
00:24:18,692 --> 00:24:20,527 line:-1
In the detail-view controller,


473
00:24:20,527 --> 00:24:24,231 line:-2
I've overridden two
methods from UIResponder.


474
00:24:24.231 --> 00:24:26.767 line:-2 align:center
Print content
does the actual printing,


475
00:24:26.767 --> 00:24:29.736 line:-2 align:center
and UIKit looks for objects
that can perform this action


476
00:24:29.736 --> 00:24:32.105 line:-1 align:center
in the responder chain.


477
00:24:32,105 --> 00:24:35,676 line:-2
In some cases, dictated by
application business logic,


478
00:24:35.676 --> 00:24:38.846 line:-2 align:center
the detail-view controller
may not want to print.


479
00:24:40.314 --> 00:24:43.350 line:-2 align:center
So, I've used the method
canPerformAction


480
00:24:43,350 --> 00:24:45,152 line:-1
to inform the responder chain


481
00:24:45.152 --> 00:24:48.956 line:-2 align:center
whether or not the detail-view
controller can print.


482
00:24:48.956 --> 00:24:52.159 line:-2 align:center
This method is called
before printContent,


483
00:24:52.159 --> 00:24:54.328 line:-1 align:center
and if it returns false,


484
00:24:54.328 --> 00:24:56.730 line:-2 align:center
the detail-view controller
will be skipped over,


485
00:24:56.730 --> 00:24:58.665 line:-2 align:center
as UIKit
climbs the responder chain


486
00:24:58,665 --> 00:25:02,236 line:-2
looking for an object
that can perform that action.


487
00:25:02.236 --> 00:25:04.538 line:-2 align:center
In
the BrowserSplitViewController,


488
00:25:04.538 --> 00:25:07.241 line:-2 align:center
which is the application's
root-view controller,


489
00:25:07,241 --> 00:25:11,011 line:-2
and therefore almost always near
the top of the responder chain,


490
00:25:11,011 --> 00:25:14,481 line:-2
I've implemented another
UIResponder method,


491
00:25:14.481 --> 00:25:17.484 line:-1 align:center
targetForAction:withSender.


492
00:25:17.484 --> 00:25:19.653 line:-2 align:center
This lets
the split-view controller


493
00:25:19.653 --> 00:25:23.423 line:-2 align:center
choose which object
should handle the printing.


494
00:25:23,423 --> 00:25:27,494 line:-2
This is useful when the user's
selection and business logic


495
00:25:27.494 --> 00:25:30.797 line:-2 align:center
dictate we should
be printing some set of pages,


496
00:25:30.797 --> 00:25:34.334 line:-2 align:center
but the object that implements
that specific printing


497
00:25:34.334 --> 00:25:37.404 line:-2 align:center
isn't part of
the responder chain.


498
00:25:37,404 --> 00:25:40,541 line:-2
This is much preferred
over forcing that object


499
00:25:40,541 --> 00:25:43,043 line:-2
into the responder chain
by sending


500
00:25:43,043 --> 00:25:45,312 line:-2
becomeFirstResponder
to that object,


501
00:25:45,312 --> 00:25:49,249 line:-2
which would be an anti-pattern
if used in this scenario.


502
00:25:49.249 --> 00:25:50.517 line:-1 align:center
And that's it for printing.


503
00:25:50.517 --> 00:25:52.753 line:-2 align:center
Looks like I'm ready
to travel off the grid.


504
00:25:52,753 --> 00:25:55,522 line:-2
In this video,
Jason introduced us


505
00:25:55.522 --> 00:25:58.091 line:-1 align:center
to new Mac Catalyst APIs


506
00:25:58,091 --> 00:26:00,694 line:-2
and enhanced
Mac Catalyst APIs


507
00:26:00.694 --> 00:26:02.963 line:-2 align:center
that help
bring your app to the Mac


508
00:26:02,963 --> 00:26:05,499 line:-1
better than ever before.


509
00:26:05.499 --> 00:26:08.535 line:-2 align:center
Then, I showed how to adopt
them in Trip Planner.


510
00:26:08.535 --> 00:26:11.672 line:-2 align:center
In most cases,
they are just new properties,


511
00:26:11.672 --> 00:26:13.707 line:-1 align:center
a single line to set,


512
00:26:13.707 --> 00:26:15.809 line:-2 align:center
that bring quintessential
Mac features


513
00:26:15.809 --> 00:26:17.945 line:-1 align:center
to your Catalyst app.


514
00:26:17,945 --> 00:26:19,847 line:-1
Go try these out for yourself.


515
00:26:19,847 --> 00:26:21,715 line:-1
Make some minor code changes,


516
00:26:21.715 --> 00:26:23.650 line:-2 align:center
and watch how your
Mac Catalyst app


517
00:26:23.650 --> 00:26:25.719 line:-1 align:center
gets some major improvements.


518
00:26:25,719 --> 00:26:26,920 line:-1
Thanks for watching.


519
00:26:26,920 --> 00:26:28,989 line:-1
[percussive music]

