2
00:00:00,033 --> 00:00:02,302 line:-1
[MACBOOK STARTUP CHIME]


3
00:00:02.302 --> 00:00:05.505 line:-1 position:50%
♪ Bass music playing ♪


4
00:00:05.505 --> 00:00:07.941 line:-1 position:50%
[KEYSTROKES]


5
00:00:07,941 --> 00:00:09,710 size:2% position:90% align:right
♪


6
00:00:09.710 --> 00:00:11.912 line:-1 position:50%
Sommer Panage: Hi,
my name is Sommer Panage.


7
00:00:11,912 --> 00:00:13,847 line:-1
I'm excited to talk to you today


8
00:00:13.847 --> 00:00:16.884 line:-1 position:50%
about Full Keyboard Access
on iOS.


9
00:00:16.884 --> 00:00:18.886 line:-1 position:50%
Full Keyboard Access
is a feature


10
00:00:18,886 --> 00:00:21,188 line:-1
for our customers
with motor impairments.


11
00:00:21.188 --> 00:00:22.990 line:-1 position:50%
So to begin today,


12
00:00:22,990 --> 00:00:24,992 line:-1
I'll be giving you
a quick overview


13
00:00:24.992 --> 00:00:28.662 line:-1 position:50%
of motor accessibility
in general on iOS.


14
00:00:28,662 --> 00:00:30,797 line:-1
After that,
we'll take a closer look


15
00:00:30,797 --> 00:00:32,199 line:-1
at Full Keyboard Access


16
00:00:32.199 --> 00:00:34.268 line:-1 position:50%
and all the power
it brings users,


17
00:00:34.268 --> 00:00:36.169 line:-1 position:50%
particularly on iPad.


18
00:00:36,169 --> 00:00:39,773 line:-1
And finally, we'll dive
into key APIs and principles


19
00:00:39.773 --> 00:00:43.343 line:-1 position:50%
that you as a developer
should be sure to keep in mind


20
00:00:43,343 --> 00:00:44,811 line:-1
as you build your applications


21
00:00:44.811 --> 00:00:48.115 line:-1 position:50%
to be certain that they support
keyboard users.


22
00:00:48.115 --> 00:00:53.520 line:-1 position:50%
Now, let's get started with
a review of motor accessibility.


23
00:00:53.520 --> 00:00:56.990 line:-1 position:50%
When we discuss developing
accessible apps for iOS,


24
00:00:56,990 --> 00:00:59,326 line:-1
we want to keep all users
in mind.


25
00:00:59.326 --> 00:01:01.295 line:-1 position:50%
We often talk about
accessibility


26
00:01:01.295 --> 00:01:02.829 line:-1 position:50%
in terms of VoiceOver,


27
00:01:02.829 --> 00:01:05.832 line:-1 position:50%
a technology for those
who are blind or low vision.


28
00:01:05.832 --> 00:01:08.201 line:-1 position:50%
However, it's important
to also make sure


29
00:01:08.201 --> 00:01:12.739 line:-1 position:50%
our software works for anyone
with motor impairments as well.


30
00:01:12.739 --> 00:01:15.208 line:-1 position:50%
Motor impairment
is a wide-ranging term


31
00:01:15,208 --> 00:01:19,513 line:-1
and can impact how someone uses
their iOS device in many ways.


32
00:01:19.513 --> 00:01:22.516 line:-1 position:50%
Some people may have
a limited range of motion.


33
00:01:22.516 --> 00:01:25.118 line:-1 position:50%
Others may have
finer motor impairments


34
00:01:25,118 --> 00:01:27,287 line:-1
such as tremors
or other difficulties


35
00:01:27,287 --> 00:01:29,156 line:-1
touching the screen.


36
00:01:29.156 --> 00:01:32.092 line:-1 position:50%
And depending on the severity
of the motor impairment,


37
00:01:32,092 --> 00:01:35,395 line:-1
many people find it easier
or even necessary


38
00:01:35.395 --> 00:01:38.498 line:-1 position:50%
to interact with their devices
via external hardware


39
00:01:38,498 --> 00:01:42,903 line:-1
such as keyboards,
joysticks, or buttons.


40
00:01:42,903 --> 00:01:45,706 line:-1
iOS provides numerous
assistive technologies


41
00:01:45.706 --> 00:01:47.341 line:-1 position:50%
to help those
with motor impairments


42
00:01:47.341 --> 00:01:50.944 line:-1 position:50%
have a seamless experience
with their devices.


43
00:01:50,944 --> 00:01:53,413 line:-1
For example,
we offer AssistiveTouch


44
00:01:53.413 --> 00:01:55.148 line:-1 position:50%
for people who might have
some difficulty


45
00:01:55,148 --> 00:01:58,719 line:-1
with hardware interactions
or Multi-Touch gestures.


46
00:01:58.719 --> 00:02:01.321 line:-1 position:50%
AssistiveTouch uses
an onscreen menu


47
00:02:01,321 --> 00:02:06,493 line:-1
to simplify these interactions
down to simple single taps.


48
00:02:06,493 --> 00:02:09,629 position:50%
Switch Control allows those with
more limited motor abilities


49
00:02:09,629 --> 00:02:11,631 position:50%
to interact
with their iOS devices


50
00:02:11,631 --> 00:02:15,168 line:0
using one or more
external switches or buttons.


51
00:02:15.168 --> 00:02:17.604 line:-1 position:50%
And of course,
there's also Voice Control,


52
00:02:17.604 --> 00:02:20.007 line:-1 position:50%
which allows people to interact
with their iOS devices


53
00:02:20,007 --> 00:02:22,709 line:-1
using only their voice.


54
00:02:22.709 --> 00:02:25.912 line:-1 position:50%
And that brings us to one of our
newest motor technologies,


55
00:02:25.912 --> 00:02:28.882 line:-1 position:50%
Full Keyboard Access.


56
00:02:28,882 --> 00:02:32,486 line:-1
While iOS has offered support
for keyboards since iOS 9,


57
00:02:32.486 --> 00:02:35.222 line:-1 position:50%
it's been a supplementary mode
of input.


58
00:02:35.222 --> 00:02:39.793 line:-1 position:50%
With Full Keyboard Access,
released in iOS 13.4.1,


59
00:02:39.793 --> 00:02:42.029 line:-1 position:50%
customers can now interact
with their device


60
00:02:42.029 --> 00:02:44.731 line:-1 position:50%
100 percent via the keyboard.


61
00:02:44,731 --> 00:02:46,066 line:-1
It's a middle ground


62
00:02:46.066 --> 00:02:48.702 line:-1 position:50%
between AssistiveTouch
and Switch Control


63
00:02:48,702 --> 00:02:50,971 line:-1
for those who may not have
enough dexterity


64
00:02:50.971 --> 00:02:52.539 line:-1 position:50%
to touch their screens


65
00:02:52,539 --> 00:02:55,342 line:-1
but who also do not
necessarily need or want


66
00:02:55,342 --> 00:02:57,978 line:-1
to use external switches.


67
00:02:57.978 --> 00:03:01.014 line:-1 position:50%
It also offers an alternative
to Voice Control


68
00:03:01.014 --> 00:03:04.317 line:-1 position:50%
for those who may be nonverbal,
have a speech impairment,


69
00:03:04.317 --> 00:03:07.087 line:-1 position:50%
or who simply might be in
an environment


70
00:03:07.087 --> 00:03:10.290 line:-1 position:50%
where using Voice Control
doesn't make sense.


71
00:03:10,290 --> 00:03:12,225 line:-1
Full Keyboard Access
is also great


72
00:03:12.225 --> 00:03:16.063 line:-1 position:50%
for those who depend on custom
or accessible keyboard layouts


73
00:03:16.063 --> 00:03:17.998 line:-1 position:50%
such as a one-handed keyboard


74
00:03:17.998 --> 00:03:21.968 line:-1 position:50%
or this ergonomic split keyboard
here.


75
00:03:21,968 --> 00:03:23,770 line:-1
In order for
Full Keyboard Access


76
00:03:23,770 --> 00:03:26,573 line:-1
to offer people
a true iOS experience


77
00:03:26.573 --> 00:03:28.175 line:-1 position:50%
without the touchscreen,


78
00:03:28.175 --> 00:03:31.912 line:-1 position:50%
it provides numerous additions
to basic keyboard input.


79
00:03:31.912 --> 00:03:35.382 line:-1 position:50%
Full Keyboard Access
also has navigation commands


80
00:03:35,382 --> 00:03:38,285 line:-1
so that users can get to
every single element onscreen,


81
00:03:38.285 --> 00:03:39.920 line:-1 position:50%
interaction commands,


82
00:03:39.920 --> 00:03:43.523 line:-1 position:50%
and a Gesture mode
for things like drag and drop.


83
00:03:43.523 --> 00:03:47.094 line:-1 position:50%
And all of these commands
use Tab as the modifier key.


84
00:03:47.094 --> 00:03:49.329 line:-1 position:50%
However, they're also
fully customizable


85
00:03:49.329 --> 00:03:53.033 line:-1 position:50%
for people who may prefer
different key combos.


86
00:03:53,033 --> 00:03:55,635 line:-1
So let's take a look at how
a user might navigate


87
00:03:55.635 --> 00:04:00.240 line:-1 position:50%
on their iPad using
Full Keyboard Access.


88
00:04:00,240 --> 00:04:01,908 line:-1
So first, I can use
the arrow keys


89
00:04:01,908 --> 00:04:05,946 line:-1
to move to the Notes app
and Space bar to activate.


90
00:04:05,946 --> 00:04:09,683 line:-1
From there, I can Tab over
to create a new note


91
00:04:09.683 --> 00:04:12.619 line:-1 position:50%
and then I can
immediately edit.


92
00:04:12.619 --> 00:04:14.855 line:-1 position:50%
I think I'm going to take
some notes about version two


93
00:04:14.855 --> 00:04:17.190 line:-1 position:50%
from one of my apps
called Shape Shuffle.


94
00:04:17.190 --> 00:04:19.726 line:-1 position:50%
[KEYSTROKES]


95
00:04:19.726 --> 00:04:21.661 line:-1 position:50%
Let's make it great for iPad.


96
00:04:21,661 --> 00:04:24,965 line:-1
[KEYSTROKES]


97
00:04:24.965 --> 00:04:26.299 line:-1 position:50%
When I'm done editing,


98
00:04:26,299 --> 00:04:30,937 line:-1
I can use Control-Tab
to get out of editing mode.


99
00:04:30.937 --> 00:04:32.906 line:-1 position:50%
Now if I want to delete
an old note,


100
00:04:32,906 --> 00:04:38,778 line:-1
I can use Tab-Z
to bring up a list of actions.


101
00:04:38.778 --> 00:04:44.251 line:-1 position:50%
Then I can use arrow and Space
to delete the note.


102
00:04:44,251 --> 00:04:47,554 line:-1
Now, let's say I want to make
one more new note.


103
00:04:47.554 --> 00:04:50.423 line:-1 position:50%
Well, I could Tab over
to the Create Note button again,


104
00:04:50.423 --> 00:04:55.595 line:-1 position:50%
or I could use the Find feature
by using Tab-F.


105
00:04:55,595 --> 00:05:00,300 line:-1
Then I just type in "new",
and there we go.


106
00:05:00,300 --> 00:05:03,003 line:-1
So now that you know
all about Full Keyboard Access


107
00:05:03,003 --> 00:05:04,471 line:-1
and how it's used,


108
00:05:04,471 --> 00:05:07,874 line:-1
it's time to look into how you,
as an app developer,


109
00:05:07.874 --> 00:05:09.843 line:-1 position:50%
can make sure
that keyboard users


110
00:05:09.843 --> 00:05:13.146 line:-1 position:50%
have the best possible
experience.


111
00:05:13,146 --> 00:05:16,516 line:-1
In 2020, I talked with you
about Switch Control,


112
00:05:16.516 --> 00:05:18.552 line:-1 position:50%
and we worked
on this fun game for kids


113
00:05:18,552 --> 00:05:21,254 line:-1
to learn their shapes,
colors, and numbers.


114
00:05:21,254 --> 00:05:24,524 line:-1
Together, we made this app
accessible.


115
00:05:24,524 --> 00:05:28,094 line:-1
This year, I decided to rev
Shape Shuffle for iPad


116
00:05:28.094 --> 00:05:30.063 line:-1 position:50%
so that we can make sure
that it works great


117
00:05:30,063 --> 00:05:32,465 line:-1
with Full Keyboard Access.


118
00:05:32.465 --> 00:05:34.935 line:-1 position:50%
If you haven't seen
Shape Shuffle yet, no worries.


119
00:05:34.935 --> 00:05:36.836 line:-1 position:50%
Here's a quick tour.


120
00:05:36,836 --> 00:05:38,872 line:-1
In each level,
the player gets a prompt


121
00:05:38,872 --> 00:05:42,475 line:-1
like the one we see here:
Two Yellow Squares.


122
00:05:42.475 --> 00:05:45.078 line:-1 position:50%
Then they have to tap through
the cards below


123
00:05:45,078 --> 00:05:47,847 line:-1
to try to find
the three required cards;


124
00:05:47,847 --> 00:05:50,450 line:-1
in this case,
a card with two objects,


125
00:05:50.450 --> 00:05:53.086 line:-1 position:50%
a square card,
and a yellow card.


126
00:05:53.086 --> 00:05:55.455 line:-1 position:50%
Once they've double-tapped
each correct card,


127
00:05:55,455 --> 00:05:57,691 line:-1
they can move on
to the next level.


128
00:05:57,691 --> 00:06:01,261 line:-1
And as the levels go up,
the prompts get harder.


129
00:06:01.261 --> 00:06:02.929 line:-1 position:50%
It looks like I just found two,


130
00:06:02,929 --> 00:06:05,031 line:-1
so I can double-tap
to add it to my board


131
00:06:05.031 --> 00:06:08.268 line:-1 position:50%
and continue searching
for yellow and square.


132
00:06:08,268 --> 00:06:12,806 line:0
Now, if I'm not sure if the card
is the right one or not,


133
00:06:12,806 --> 00:06:15,141 position:50%
I can put a pin in it
by long-pressing it


134
00:06:15,141 --> 00:06:17,177 line:0
so I know to come back later.


135
00:06:17,177 --> 00:06:20,247 line:0
I'll put a pin in these two
in the bottom left.


136
00:06:20,247 --> 00:06:23,817 position:50%
Then, when I return,
I can make my final pick


137
00:06:23,817 --> 00:06:25,986 position:50%
and beat the level.


138
00:06:25,986 --> 00:06:31,024 line:0
Hm...
I got it!


139
00:06:31,024 --> 00:06:33,560 line:-1
Now let's start
with our gameplay view


140
00:06:33.560 --> 00:06:35.895 line:-1 position:50%
to see how things work
when I play another round


141
00:06:35.895 --> 00:06:38.732 line:-1 position:50%
but this time via my keyboard.


142
00:06:38.732 --> 00:06:42.769 line:-1 position:50%
So as I hit Tab and Space bar,
things seem to be working well.


143
00:06:42.769 --> 00:06:44.271 line:-1 position:50%
I can move between cards
with Tab


144
00:06:44,271 --> 00:06:46,806 line:-1
and flip them with Space.


145
00:06:46,806 --> 00:06:51,011 line:-1
Now let's try to add or pin
our triangle card.


146
00:06:51,011 --> 00:06:54,047 line:-1
I'll hit Tab-Z to bring up
my Actions menu,


147
00:06:54.047 --> 00:06:56.750 line:-1 position:50%
but I'm not seeing
any actions available.


148
00:06:56.750 --> 00:07:00.553 line:-1 position:50%
Now, there are actually two ways
we can address helping users


149
00:07:00.553 --> 00:07:05.325 line:-1 position:50%
to quickly get to common actions
in our game, like add and pin.


150
00:07:05.325 --> 00:07:09.195 line:-1 position:50%
The first way we can solve this
is via a custom action.


151
00:07:09,195 --> 00:07:10,397 line:-1
Custom actions are great


152
00:07:10,397 --> 00:07:13,933 line:-1
because they translate across
many assistive technologies.


153
00:07:13.933 --> 00:07:16.036 line:-1 position:50%
When you add custom actions
to something,


154
00:07:16.036 --> 00:07:18.672 line:-1 position:50%
it will show up in VoiceOver,
Switch Control,


155
00:07:18.672 --> 00:07:21.041 line:-1 position:50%
and Full Keyboard Access.


156
00:07:21,041 --> 00:07:25,011 line:-1
Custom actions are what show up
when you hit Tab-Z.


157
00:07:25,011 --> 00:07:26,313 line:-1
As you can see here,


158
00:07:26.313 --> 00:07:30.550 line:-1 position:50%
all I need to do is create
a UIAccessibilityCustomAction


159
00:07:30.550 --> 00:07:34.754 line:-1 position:50%
for the actions I want to add,
then go ahead and set those


160
00:07:34,754 --> 00:07:38,925 line:-1
to my accessibilityCustomActions
array on my cardView.


161
00:07:38,925 --> 00:07:41,294 line:-1
Also, it's always great
to add an image.


162
00:07:41,294 --> 00:07:44,364 line:-1
While these images won't show up
for Full Keyboard Access,


163
00:07:44.364 --> 00:07:47.534 line:-1 position:50%
they will show up
for Switch Control.


164
00:07:47,534 --> 00:07:50,670 line:0
Here's what my UI looks like
with custom actions added.


165
00:07:50,670 --> 00:07:52,238 line:0
When I press Tab-Z,


166
00:07:52,238 --> 00:07:56,943 line:0
I see this nice popover letting
me add the card or pin it.


167
00:07:56,943 --> 00:07:58,044 line:-1
Custom actions are great


168
00:07:58.044 --> 00:08:00.814 line:-1 position:50%
for anyone using
our accessibility features;


169
00:08:00,814 --> 00:08:02,949 line:-1
however, there's another
really cool approach


170
00:08:02.949 --> 00:08:04.451 line:-1 position:50%
that you can take here.


171
00:08:04,451 --> 00:08:07,320 line:-1
You can add
a custom keyboard shortcut.


172
00:08:07,320 --> 00:08:09,789 line:-1
The nice thing
with a custom keyboard shortcut


173
00:08:09.789 --> 00:08:13.393 line:-1 position:50%
is that it will work for both
your Full Keyboard Access users


174
00:08:13.393 --> 00:08:15.795 line:-1 position:50%
as well as for those
who are just using a keyboard


175
00:08:15,795 --> 00:08:16,996 line:-1
with their device,


176
00:08:16,996 --> 00:08:20,467 line:-1
but they don't have
Full Keyboard Access turned on.


177
00:08:20.467 --> 00:08:24.104 line:-1 position:50%
It's great for accessibility
and power users alike.


178
00:08:24,104 --> 00:08:26,106 line:-1
To see a list
of keyboard shortcuts,


179
00:08:26,106 --> 00:08:29,075 line:-1
you just need to hold down
the Command key.


180
00:08:29,075 --> 00:08:31,077 line:0
You can learn all about
keyboard shortcuts


181
00:08:31,077 --> 00:08:34,414 position:50%
and much more for iPad
in our talk this year,


182
00:08:34,414 --> 00:08:38,184 line:0
"Take your iPad apps
to the next level."


183
00:08:38,184 --> 00:08:40,520 line:-1
Today, I'll show you
a short example


184
00:08:40.520 --> 00:08:45.291 line:-1 position:50%
of how you can harness this API
which was new in Mac Catalyst 13


185
00:08:45.291 --> 00:08:50.163 line:-1 position:50%
and now brought to iOS
and iPadOS 15.


186
00:08:50,163 --> 00:08:53,199 line:-1
By overriding buildMenu
in your AppDelegate,


187
00:08:53.199 --> 00:08:54.934 line:-1 position:50%
you can set your key commands


188
00:08:54,934 --> 00:08:57,704 line:-1
Here I create
two UIKeyCommands;


189
00:08:57.704 --> 00:09:01.040 line:-1 position:50%
one for my add action
and one for my pin action.


190
00:09:01,040 --> 00:09:04,010 line:-1
I make sure to add
a discoverability title


191
00:09:04,010 --> 00:09:06,413 line:-1
as that's what will show up
in my KeyCommand HUD


192
00:09:06.413 --> 00:09:08.748 line:-1 position:50%
when I hold down Command.


193
00:09:08,748 --> 00:09:12,952 line:0
Next, I create a new UI menu,
which I name "gameplay",


194
00:09:12,952 --> 00:09:16,423 line:0
and I pass the new commands
as "children".


195
00:09:16,423 --> 00:09:19,058 line:0
Finally, I insert the menu
into my menu builder,


196
00:09:19,058 --> 00:09:22,128 position:50%
and I'm done!


197
00:09:22.128 --> 00:09:25.432 line:-1 position:50%
Now, since I only want these
items to be active in the HUD


198
00:09:25.432 --> 00:09:27.867 line:-1 position:50%
when I actually have
a selected card,


199
00:09:27.867 --> 00:09:32.272 line:-1 position:50%
I also override canPerformAction
on my GameViewController


200
00:09:32,272 --> 00:09:33,773 line:-1
so that I only show these items


201
00:09:33.773 --> 00:09:36.810 line:-1 position:50%
when a card
is actually selected.


202
00:09:36,810 --> 00:09:38,077 line:0
Here's what our game looks like


203
00:09:38,077 --> 00:09:39,712 position:50%
when I hold down
the Command key,


204
00:09:39,712 --> 00:09:42,382 position:50%
and I have a card selected.


205
00:09:42.382 --> 00:09:44.751 line:-1 position:50%
And here, I want to highlight
a key principle


206
00:09:44.751 --> 00:09:47.720 line:-1 position:50%
of developing
for Full Keyboard Access.


207
00:09:47.720 --> 00:09:49.923 line:-1 position:50%
You should try to add
custom actions


208
00:09:49,923 --> 00:09:53,426 line:-1
and keyboard shortcuts
to all of your common actions


209
00:09:53,426 --> 00:09:56,396 line:-1
to improve efficiency
for your users.


210
00:09:56,396 --> 00:09:59,566 line:-1
Not only are they both
easily discoverable,


211
00:09:59.566 --> 00:10:01.434 line:-1 position:50%
but they improve
the experience for anyone


212
00:10:01,434 --> 00:10:05,138 line:-1
interacting with your app
via a keyboard.


213
00:10:05.138 --> 00:10:07.173 line:-1 position:50%
Let's come back to our game.


214
00:10:07.173 --> 00:10:09.809 line:-1 position:50%
I've added the triangle
with my new actions.


215
00:10:09.809 --> 00:10:11.711 line:-1 position:50%
Now I'll use Shift-Tab


216
00:10:11.711 --> 00:10:13.847 line:-1 position:50%
to go back
toward the home button.


217
00:10:13.847 --> 00:10:17.083 line:-1 position:50%
However, as I'm doing that,
I see another issue.


218
00:10:17,083 --> 00:10:18,918 line:-1
That triangle is selectable


219
00:10:18,918 --> 00:10:23,189 line:-1
even though when I tap on it
with Space bar nothing happens.


220
00:10:23.189 --> 00:10:26.292 line:-1 position:50%
So first of all, why is our
cursor going to this element


221
00:10:26.292 --> 00:10:28.595 line:-1 position:50%
if we can't interact with it?


222
00:10:28,595 --> 00:10:31,264 line:-1
Well, I've already done some
VoiceOver support work


223
00:10:31,264 --> 00:10:33,967 line:-1
on this app,
and here's what that looks like.


224
00:10:33,967 --> 00:10:37,403 line:-1
You'll see that I'm setting
isAccessibilityElement to true


225
00:10:37,403 --> 00:10:41,641 line:-1
on my items as well as giving it
an accessibilityLabel.


226
00:10:41,641 --> 00:10:44,978 line:-1
This is great because VoiceOver
needs to read each item


227
00:10:44,978 --> 00:10:46,212 line:-1
to our user.


228
00:10:46.212 --> 00:10:49.148 line:-1 position:50%
However, if someone is a
Full Keyboard Access user only,


229
00:10:49.148 --> 00:10:51.451 line:-1 position:50%
then their cursor will also
go to many items


230
00:10:51,451 --> 00:10:54,721 line:-1
marked with
isAccessibilityElement.


231
00:10:54.721 --> 00:10:58.124 line:-1 position:50%
In order to tell Full Keyboard
Access to skip this element,


232
00:10:58.124 --> 00:11:00.460 line:-1 position:50%
we need to add one more line.


233
00:11:00,460 --> 00:11:02,228 line:-1
Here, you can see that we set


234
00:11:02,228 --> 00:11:06,032 line:-1
accessibilityResponds
ToUserInteraction to false.


235
00:11:06.032 --> 00:11:07.534 line:-1 position:50%
This tells our system


236
00:11:07,534 --> 00:11:10,270 line:-1
that while this is
an accessibility element,


237
00:11:10.270 --> 00:11:12.839 line:-1 position:50%
it's not one that the user
can interact with.


238
00:11:12,839 --> 00:11:14,974 line:-1
So the cursor
for motor technologies


239
00:11:14,974 --> 00:11:19,445 line:-1
such as Full Keyboard Access or
Switch Control should skip it.


240
00:11:19.445 --> 00:11:22.382 line:-1 position:50%
Note that accessibility
RespondsToUserInteraction


241
00:11:22,382 --> 00:11:25,752 line:-1
is only meaningful
if isAccessibilityElement


242
00:11:25,752 --> 00:11:27,353 line:-1
is already true.


243
00:11:27.353 --> 00:11:30.390 line:-1 position:50%
By default, the system tries
to correctly set elements


244
00:11:30.390 --> 00:11:34.694 line:-1 position:50%
with isAccessibilityElement true
to interactive or not.


245
00:11:34.694 --> 00:11:37.096 line:-1 position:50%
In most cases
you'll only need to set


246
00:11:37.096 --> 00:11:40.466 line:-1 position:50%
accessibilityResponds
ToUserInteraction to false


247
00:11:40.466 --> 00:11:42.769 line:-1 position:50%
when you have an object
that you want to be accessible


248
00:11:42.769 --> 00:11:45.805 line:-1 position:50%
to VoiceOver but not
to Full Keyboard Access


249
00:11:45.805 --> 00:11:48.775 line:-1 position:50%
or other motor technologies.


250
00:11:48,775 --> 00:11:51,411 line:-1
This brings us
to a second key principle


251
00:11:51.411 --> 00:11:54.547 line:-1 position:50%
of developing for
Full Keyboard Access.


252
00:11:54.547 --> 00:11:56.015 line:-1 position:50%
As you're testing your app,


253
00:11:56.015 --> 00:11:58.618 line:-1 position:50%
you'll want to be sure
that the cursor only goes


254
00:11:58.618 --> 00:12:02.422 line:-1 position:50%
to items that the user
can interact with.


255
00:12:02,422 --> 00:12:04,290 line:-1
Now, as you're building your app


256
00:12:04.290 --> 00:12:06.993 line:-1 position:50%
and making sure focus only goes
to the right places,


257
00:12:06.993 --> 00:12:10.163 line:-1 position:50%
it might be tempting to override
canBecomeFocused


258
00:12:10,163 --> 00:12:12,966 line:-1
instead of the API
that we just discussed.


259
00:12:12,966 --> 00:12:15,068 line:-1
However, this overrides
focus behavior


260
00:12:15.068 --> 00:12:16.936 line:-1 position:50%
for the whole focus engine


261
00:12:16,936 --> 00:12:19,138 line:-1
and will impact people
using Tab to navigate


262
00:12:19,138 --> 00:12:21,908 line:-1
when Full Keyboard Access
isn't even on.


263
00:12:21.908 --> 00:12:24.978 line:-1 position:50%
So it's best to steer clear
of this when only wanting


264
00:12:24.978 --> 00:12:28.848 line:-1 position:50%
to modify behavior for
Full Keyboard Access users.


265
00:12:28,848 --> 00:12:31,584 line:-1
In fact, this brings up
an important area.


266
00:12:31.584 --> 00:12:34.787 line:-1 position:50%
The focus system that's used
to drive Full Keyboard Access


267
00:12:34.787 --> 00:12:37.090 line:-1 position:50%
is the same one
that drives Tab navigation


268
00:12:37,090 --> 00:12:40,326 line:-1
across all of our OSs
like iPadOS.


269
00:12:40,326 --> 00:12:42,061 position:50%
While you likely
won't need to touch it


270
00:12:42,061 --> 00:12:44,530 position:50%
in order to work with
Full Keyboard Access,


271
00:12:44,530 --> 00:12:48,234 line:0
if you'd like to learn more,
I recommend these three talks.


272
00:12:48,234 --> 00:12:50,903 position:50%
This year we have
two other talks called


273
00:12:50,903 --> 00:12:53,406 line:0
"Focus on iPad
keyboard navigation"


274
00:12:53,406 --> 00:12:57,310 line:0
and "Direct and reflect focus
in SwiftUI."


275
00:12:57,310 --> 00:13:00,346 line:0
And back in 2017,
there's a fantastic talk


276
00:13:00,346 --> 00:13:04,517 position:50%
all about how the focus engine
drives tvOS.


277
00:13:04,517 --> 00:13:06,986 position:50%
Now, coming back
to our home screen,


278
00:13:06,986 --> 00:13:08,488 position:50%
I want to be sure that I can use


279
00:13:08,488 --> 00:13:11,591 line:0
Full Keyboard Access's
awesome Find feature.


280
00:13:11,591 --> 00:13:13,960 line:0
So let's give it a try.


281
00:13:13,960 --> 00:13:17,764 line:0
OK, the number levels
work great out of the box.


282
00:13:17,764 --> 00:13:22,769 line:0
Searching for levels eight
and twelve is easy.


283
00:13:22,769 --> 00:13:25,672 line:0
And because I've already added
some VoiceOver support,


284
00:13:25,672 --> 00:13:28,908 line:0
I'm getting the Settings button,
too, with Find.


285
00:13:28.908 --> 00:13:30.376 line:-1 position:50%
But what happens if I don't know


286
00:13:30.376 --> 00:13:32.679 line:-1 position:50%
that the button
is called Settings?


287
00:13:32,679 --> 00:13:36,315 line:-1
Maybe I type in "preferences"
or "prefs."


288
00:13:36,315 --> 00:13:38,785 line:-1
Hm. No luck.


289
00:13:38.785 --> 00:13:41.320 line:-1 position:50%
To solve this, we can set
an array of strings


290
00:13:41,320 --> 00:13:44,390 line:-1
to our
accessibilityUserInputLabels.


291
00:13:44,390 --> 00:13:47,727 line:0
Here, I'm setting the localized
words for prefs,


292
00:13:47,727 --> 00:13:50,963 position:50%
preferences, gear,
and settings to this label


293
00:13:50,963 --> 00:13:52,699 line:0
to be sure that people
can reach it


294
00:13:52,699 --> 00:13:55,234 position:50%
no matter what they might type.


295
00:13:55,234 --> 00:13:56,636 position:50%
By adding these strings,


296
00:13:56,636 --> 00:13:59,772 line:0
you'll also be doing a favor
to your Voice Control users,


297
00:13:59,772 --> 00:14:01,974 position:50%
as they can now speak
any of these names


298
00:14:01,974 --> 00:14:04,410 line:0
to tap your Settings button
as well.


299
00:14:04,410 --> 00:14:08,448 position:50%
Of course, this won't interfere
with your VoiceOver label.


300
00:14:08.448 --> 00:14:15.555 line:-1 position:50%
So now when you type in
"prefs" it works great!


301
00:14:15.555 --> 00:14:19.692 line:-1 position:50%
And this brings me to our
third and final principle today.


302
00:14:19.692 --> 00:14:22.095 line:-1 position:50%
Make sure that you always
provide as many labels


303
00:14:22.095 --> 00:14:24.831 line:-1 position:50%
as you can for
your image-based controls


304
00:14:24.831 --> 00:14:29.368 line:-1 position:50%
so your users can always
get to them quickly with Find.


305
00:14:29,368 --> 00:14:31,437 line:0
Now, before we finish up,


306
00:14:31,437 --> 00:14:33,606 line:0
I want to do
a little fun polish.


307
00:14:33,606 --> 00:14:36,576 line:0
So let's take one more look
at my home screen.


308
00:14:36,576 --> 00:14:38,878 line:0
Since all these items
are UI buttons,


309
00:14:38,878 --> 00:14:40,980 line:0
Tab is moving to them naturally.


310
00:14:40,980 --> 00:14:42,215 position:50%
And that's great.


311
00:14:42,215 --> 00:14:45,651 line:0
But notice how my cursor
is always a rectangle?


312
00:14:45,651 --> 00:14:47,420 line:-1
To make things more playful,


313
00:14:47,420 --> 00:14:50,723 line:-1
let's make it match
the shapes of the buttons.


314
00:14:50.723 --> 00:14:53.259 line:-1 position:50%
To show nice cursor shapes
around our buttons,


315
00:14:53.259 --> 00:14:55.661 line:-1 position:50%
we can just use
accessibilityPath --


316
00:14:55.661 --> 00:14:57.697 line:-1 position:50%
the same accessibilityPath,
in fact,


317
00:14:57,697 --> 00:14:59,866 line:-1
that you'd use for VoiceOver.


318
00:14:59,866 --> 00:15:02,835 line:-1
For static views, you can set
the accessibilityPath


319
00:15:02,835 --> 00:15:06,506 line:-1
to that of the shape
itself with a UIBezierPath.


320
00:15:06.506 --> 00:15:08.975 line:-1 position:50%
Notice that I'm setting
the accessibilityPath


321
00:15:08.975 --> 00:15:11.911 line:-1 position:50%
in screen coordinates.


322
00:15:11,911 --> 00:15:13,479 line:-1
If you're in a scroll view,


323
00:15:13,479 --> 00:15:15,681 line:-1
you'll want to override
accessibilityPath


324
00:15:15,681 --> 00:15:18,818 line:-1
so it's always correct
relative to screen coordinates,


325
00:15:18.818 --> 00:15:20.720 line:-1 position:50%
even when you're scrolling.


326
00:15:20,720 --> 00:15:24,390 line:-1
Let's take a look at how fun
this bit of polish looks.


327
00:15:24.390 --> 00:15:29.162 line:-1 position:50%
Now as I Tab through,
we can see circles,


328
00:15:29,162 --> 00:15:33,566 line:-1
[KEYSTROKES]
triangles, and squares.


329
00:15:33.566 --> 00:15:37.837 line:-1 position:50%
And it'll be the same
with VoiceOver as well.


330
00:15:37,837 --> 00:15:41,240 line:-1
With that, let's review some
of the key ideas to keep in mind


331
00:15:41,240 --> 00:15:43,709 line:-1
when you're developing your app
for keyboards,


332
00:15:43.709 --> 00:15:46.813 line:-1 position:50%
but particularly,
for Full Keyboard Access.


333
00:15:46.813 --> 00:15:50.449 line:-1 position:50%
First, use custom actions
and keyboard shortcuts


334
00:15:50.449 --> 00:15:52.318 line:-1 position:50%
to really go that extra mile,


335
00:15:52.318 --> 00:15:55.188 line:-1 position:50%
adding efficient means
to navigate your apps.


336
00:15:55,188 --> 00:15:58,558 line:-1
Next, make sure the cursor
doesn't land on items


337
00:15:58,558 --> 00:16:01,961 line:-1
that the user cannot
actually interact with.


338
00:16:01.961 --> 00:16:05.765 line:-1 position:50%
And finally, be sure that
you add user input labels,


339
00:16:05.765 --> 00:16:08.067 line:-1 position:50%
especially on
image-based controls,


340
00:16:08.067 --> 00:16:09.902 line:-1 position:50%
so that people can take
full advantage


341
00:16:09.902 --> 00:16:13.673 line:-1 position:50%
of Full Keyboard Access's
Find feature.


342
00:16:13.673 --> 00:16:15.208 line:-1 position:50%
And that's everything!


343
00:16:15,208 --> 00:16:17,910 line:-1
I hope that today you now
understand the importance


344
00:16:17,910 --> 00:16:21,347 line:-1
of motor accessibility
in all of Apple's products.


345
00:16:21.347 --> 00:16:24.483 line:-1 position:50%
While there are numerous ways
of interacting with our devices,


346
00:16:24,483 --> 00:16:28,321 line:-1
the keyboard has become
a powerful tool for our users.


347
00:16:28.321 --> 00:16:30.189 line:-1 position:50%
With the information
from this talk,


348
00:16:30.189 --> 00:16:32.925 line:-1 position:50%
you should now be able
to be certain your apps provide


349
00:16:32,925 --> 00:16:35,928 line:-1
an excellent experience
to Full Keyboard Access users


350
00:16:35.928 --> 00:16:37.897 line:-1 position:50%
and to everyone.


351
00:16:37,897 --> 00:16:42,301 line:-1
Thank you and have
an amazing WWDC 2021.


352
00:16:42,301 --> 00:16:47,006 line:0 align:center size:2%
♪

