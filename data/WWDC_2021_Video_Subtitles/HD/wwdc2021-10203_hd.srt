2
00:00:00,400 --> 00:00:07,407 line:-1
[upbeat music]


3
00:00:09.042 --> 00:00:10.143 line:-1 align:center
[Matt] Hello.


4
00:00:10.210 --> 00:00:13.113 line:-2 align:center
Welcome to Triaging TestFlight
crashes with Xcode Organizer.


5
00:00:13,180 --> 00:00:15,349 line:-2
My name is Matt,
and I'm an Xcode engineer.


6
00:00:15.849 --> 00:00:17.184 line:-1 align:center
Today I'm going to show you


7
00:00:17.251 --> 00:00:20.220 line:-2 align:center
some of the new tools we have
built into the Xcode Organizer


8
00:00:20,287 --> 00:00:21,922 line:-2
that will help you
triage crashes


9
00:00:21,989 --> 00:00:23,790 line:-2
across all of your
app's targets


10
00:00:23,857 --> 00:00:26,260 line:-2
and how to leverage feedback
from your TestFlight users


11
00:00:26.326 --> 00:00:29.329 line:-2 align:center
so you can get crash fixes
into your builds faster.


12
00:00:30.697 --> 00:00:32.733 line:-2 align:center
Then I'm going to show you
the new Terminations Organizer


13
00:00:32,799 --> 00:00:35,068 line:-2
and advancements
we've made in MetricKit.


14
00:00:36,136 --> 00:00:37,771 line:-2
If your app is utilizing
TestFlight


15
00:00:37.838 --> 00:00:39.439 line:-1 align:center
to test your beta versions,


16
00:00:39.506 --> 00:00:41.508 line:-2 align:center
you'll know that crash
feedback from your testers


17
00:00:41,575 --> 00:00:43,610 line:-1
can be really valuable.


18
00:00:43,677 --> 00:00:44,912 line:-2
When a tester
writes some feedback


19
00:00:44.978 --> 00:00:46.446 line:-2 align:center
after they
have hit a crash,


20
00:00:46.513 --> 00:00:48.782 line:-2 align:center
you can view that feedback
in App Store Connect


21
00:00:48.849 --> 00:00:50.184 line:-1 align:center
and download the crash log


22
00:00:50,250 --> 00:00:52,186 line:-2
to start analyzing
what happened.


23
00:00:52.252 --> 00:00:55.088 line:-2 align:center
Later on, I'm going to show you
the changes we made in Xcode


24
00:00:55.155 --> 00:00:57.090 line:-2 align:center
that will supercharge
this workflow.


25
00:00:59.226 --> 00:01:00.994 line:-2 align:center
First, I want to give
a quick overview


26
00:01:01.061 --> 00:01:03.764 line:-2 align:center
of the features available
before Xcode 13.


27
00:01:04.798 --> 00:01:06.800 line:-2 align:center
In the Crashes Organizer,
we support crashes


28
00:01:06.867 --> 00:01:09.369 line:-2 align:center
for both apps
on the App Store and TestFlight.


29
00:01:10,337 --> 00:01:13,040 line:-2
We show your app's crashes
across all of our platforms,


30
00:01:13.106 --> 00:01:15.742 line:-2 align:center
including crashes from your
App Clip and app extensions.


31
00:01:16,877 --> 00:01:18,512 line:-2
The Organizer
ranks your issues


32
00:01:18.579 --> 00:01:20.581 line:-2 align:center
to show you the highest
priority crashes


33
00:01:20,647 --> 00:01:22,583 line:-2
and shows
you how those crashes


34
00:01:22.649 --> 00:01:26.587 line:-2 align:center
are distributed across different
devices and OS versions.


35
00:01:26,653 --> 00:01:29,089 line:-2
And once you've decided to start
attacking that crash,


36
00:01:29.156 --> 00:01:32.392 line:-2 align:center
you can open it directly
in your Xcode project.


37
00:01:32.459 --> 00:01:34.695 line:-2 align:center
All of these great features
work out of the box


38
00:01:34,761 --> 00:01:37,731 line:-2
by simply signing into Xcode
with your developer account.


39
00:01:37,798 --> 00:01:39,900 line:-2
The journey of making
a great app


40
00:01:39,967 --> 00:01:41,902 line:-2
can be long and bumpy
at times,


41
00:01:41.969 --> 00:01:44.638 line:-2 align:center
because once you ship it,
customers always seem to


42
00:01:44,705 --> 00:01:48,041 line:-2
break it in ways that you didn't
even know were possible.


43
00:01:48.108 --> 00:01:49.209 line:-1 align:center
In Xcode 13,


44
00:01:49,276 --> 00:01:51,778 line:-2
we wanted to make the
Crashes Organizer even better


45
00:01:51.845 --> 00:01:53.947 line:-2 align:center
so you can continue
to get closer to the goal


46
00:01:54.014 --> 00:01:56.016 line:-1 align:center
of no crashes.


47
00:01:56.083 --> 00:01:57.618 line:-1 align:center
This set us on a mission


48
00:01:57,684 --> 00:02:00,087 line:-2
to make crash log delivery
almost instant,


49
00:02:00.153 --> 00:02:02.256 line:-2 align:center
provide richer data
about your crashes,


50
00:02:02.322 --> 00:02:04.024 line:-1 align:center
and give you more context


51
00:02:04.091 --> 00:02:06.994 line:-2 align:center
to help you fix those
hard-to-reproduce issues.


52
00:02:07,060 --> 00:02:08,462 line:-1
I am thrilled to show you


53
00:02:08,529 --> 00:02:11,732 line:-2
all of the incredible new
features we've added to Xcode 13


54
00:02:11.798 --> 00:02:13.300 line:-1 align:center
in the Crashes Organizer.


55
00:02:13,367 --> 00:02:15,435 line:-1
There are six major improvements


56
00:02:15.502 --> 00:02:17.137 line:-2 align:center
that I'm going to
share with you.


57
00:02:17,204 --> 00:02:19,973 line:-2
First, speedy delivery
of your TestFlight crashes.


58
00:02:20.841 --> 00:02:23.544 line:-2 align:center
Now when any of your testers
crash a TestFlight build,


59
00:02:23,610 --> 00:02:25,646 line:-2
we will deliver that crash
to you in the Organizer


60
00:02:25,712 --> 00:02:27,381 line:-1
just moments later.


61
00:02:27.447 --> 00:02:30.784 line:-2 align:center
This quick crash delivery
now allows you to view


62
00:02:30,851 --> 00:02:33,220 line:-2
all of your TestFlight crashes
from the last day,


63
00:02:33.287 --> 00:02:35.155 line:-2 align:center
and you will now have
an hourly graph


64
00:02:35.222 --> 00:02:38.091 line:-2 align:center
telling you when
the selected crash occurred.


65
00:02:38,158 --> 00:02:41,195 line:-2
In Xcode 13,
we're now making a year's worth


66
00:02:41,261 --> 00:02:43,163 line:-2
of crash history
available to you.


67
00:02:44.765 --> 00:02:46.667 line:-2 align:center
You can now filter crashes
by time period


68
00:02:46,733 --> 00:02:48,502 line:-2
to see all of the crashes
that have occurred


69
00:02:48,569 --> 00:02:50,237 line:-1
in the last year.


70
00:02:50,304 --> 00:02:52,706 line:-2
Because we can now show you
a year's worth of crashes,


71
00:02:52.773 --> 00:02:54.474 line:-1 align:center
you will see a time distribution


72
00:02:54.541 --> 00:02:56.610 line:-2 align:center
in the inspector's
graph area showing you


73
00:02:56.677 --> 00:02:59.880 line:-2 align:center
the prevalence of a crash
on a month-to-month basis.


74
00:02:59.947 --> 00:03:02.850 line:-2 align:center
We wanted to give you
more tools to better understand


75
00:03:02.916 --> 00:03:05.419 line:-2 align:center
the health across
all parts of your app.


76
00:03:05.485 --> 00:03:08.922 line:-2 align:center
So this year, we're adding more
filters to the Crashes Organizer


77
00:03:08.989 --> 00:03:12.125 line:-2 align:center
to allow you to focus
on specific parts of your app.


78
00:03:13.694 --> 00:03:16.096 line:-2 align:center
The Organizer can now also
filter the crashes list


79
00:03:16.163 --> 00:03:17.998 line:-1 align:center
by all versions and builds


80
00:03:18.065 --> 00:03:21.268 line:-2 align:center
or drill down to any
individual past release.


81
00:03:21,335 --> 00:03:23,570 line:-2
You can also filter
by any of the extensions


82
00:03:23,637 --> 00:03:26,106 line:-2
that ship with your app,
like your watch app,


83
00:03:26,173 --> 00:03:28,542 line:-1
App Clip or share extension.


84
00:03:28.609 --> 00:03:31.078 line:-2 align:center
You can even check in how
your iOS app is doing


85
00:03:31.144 --> 00:03:34.481 line:-2 align:center
running on those phenomenal
Apple silicon Macs.


86
00:03:34.548 --> 00:03:36.884 line:-2 align:center
Part of triaging
your app's issues


87
00:03:36,950 --> 00:03:38,285 line:-1
is getting the full picture


88
00:03:38,352 --> 00:03:40,254 line:-2
of who is affected
by a particular crash


89
00:03:40.320 --> 00:03:44.124 line:-2 align:center
and that crash is distributed
across different categories.


90
00:03:45,325 --> 00:03:47,094 line:-2
So this year,
we've added the ability


91
00:03:47,160 --> 00:03:49,096 line:-2
to see how a unique crash
is distributed


92
00:03:49.162 --> 00:03:51.098 line:-1 align:center
across your appâ€™s versions


93
00:03:51,164 --> 00:03:54,001 line:-2
and across TestFlight
and the App Store.


94
00:03:54.067 --> 00:03:57.771 line:-2 align:center
You all have shipped some
amazing apps as solo artists,


95
00:03:57,838 --> 00:04:01,141 line:-2
in large teams,
and everything in between.


96
00:04:01,208 --> 00:04:03,877 line:-2
In Xcode 13,
we are introducing a new way


97
00:04:03.944 --> 00:04:06.446 line:-2 align:center
to collaborate with each
other by adding the ability


98
00:04:06,513 --> 00:04:09,750 line:-2
for you to share crash reports
directly from the Organizer.


99
00:04:09.816 --> 00:04:12.819 line:-2 align:center
Using the new Share
button in the toolbar,


100
00:04:12,886 --> 00:04:15,822 line:-2
you can share a crash directly
with members of your team


101
00:04:15.889 --> 00:04:18.192 line:-2 align:center
or just simply
add it to your to-do list.


102
00:04:19,359 --> 00:04:21,028 line:-2
And when you click
on one of these links,


103
00:04:21,094 --> 00:04:23,931 line:-2
the Organizer downloads
and focuses on this issue,


104
00:04:23.997 --> 00:04:27.668 line:-2 align:center
allowing you to zero in on this
crash and start investigating.


105
00:04:28,368 --> 00:04:31,171 line:-2
TestFlight is a valuable tool
for developers


106
00:04:31,238 --> 00:04:33,140 line:-2
to quickly
get new features and fixes


107
00:04:33,207 --> 00:04:34,775 line:-1
in the hands of their testers,


108
00:04:34,842 --> 00:04:37,511 line:-2
who help find
new crashes and bugs.


109
00:04:37.578 --> 00:04:39.213 line:-2 align:center
Beta testing an app
with TestFlight


110
00:04:39,279 --> 00:04:41,181 line:-2
helps instill confidence
in developers


111
00:04:41.248 --> 00:04:42.482 line:-2 align:center
that they are going to be
shipping


112
00:04:42,549 --> 00:04:44,818 line:-2
a sweet update
to the App Store.


113
00:04:44.885 --> 00:04:48.121 line:-2 align:center
I am super excited
to announce that in Xcode 13,


114
00:04:48.188 --> 00:04:50.257 line:-2 align:center
we are bringing TestFlight
Crash Feedback


115
00:04:50.324 --> 00:04:52.659 line:-2 align:center
directly into
the Crashes Organizer.


116
00:04:54,361 --> 00:04:56,997 line:-2
App Store Connect shows you
all of your TestFlight feedback,


117
00:04:57,064 --> 00:04:58,899 line:-1
including crash feedback.


118
00:04:58,966 --> 00:05:01,702 line:-2
You can continue to download
the raw feedback and crash log


119
00:05:01.768 --> 00:05:04.838 line:-2 align:center
directly from App Store Connect
or, new this year,


120
00:05:04,905 --> 00:05:06,507 line:-2
you can open
the associated crash


121
00:05:06.573 --> 00:05:09.910 line:-2 align:center
right in the Organizer with
the new Open in Xcode button.


122
00:05:11,612 --> 00:05:14,648 line:-2
Viewing your crash feedback
is now easier than ever.


123
00:05:14.715 --> 00:05:17.150 line:-2 align:center
There is a new inspector
in the Crashes Organizer


124
00:05:17.217 --> 00:05:19.920 line:-2 align:center
dedicated
to TestFlight crash feedback.


125
00:05:19,987 --> 00:05:22,623 line:-2
Opening this Inspector will show
you all of the feedback


126
00:05:22,689 --> 00:05:24,291 line:-2
that has been submitted
by testers


127
00:05:24,358 --> 00:05:26,293 line:-2
that have hit the crash
you have selected.


128
00:05:26,360 --> 00:05:29,997 line:-2
This allows you to see
one unified feedback list


129
00:05:30,063 --> 00:05:31,365 line:-1
alongside your crash report


130
00:05:31,431 --> 00:05:32,766 line:-2
that you can quickly
sift through


131
00:05:32.833 --> 00:05:34.701 line:-2 align:center
to find that extra bit
of information needed


132
00:05:34,768 --> 00:05:36,236 line:-1
to help you fix a crash.


133
00:05:36.303 --> 00:05:39.406 line:-2 align:center
We think this added context
is invaluable


134
00:05:39.473 --> 00:05:41.975 line:-2 align:center
when tracking down
hard-to-reproduce issues.


135
00:05:42.042 --> 00:05:44.511 line:-1 align:center
So a lot of cool new stuff.


136
00:05:44.578 --> 00:05:46.380 line:-2 align:center
Let's dive in and start
triaging some crashes


137
00:05:46.446 --> 00:05:48.248 line:-1 align:center
in the new Crashes Organizer.


138
00:05:50.817 --> 00:05:52.386 line:-2 align:center
I've been working on
my team's app, Fruta,


139
00:05:52,452 --> 00:05:54,154 line:-2
and we've have recently
shipped a new version


140
00:05:54.221 --> 00:05:56.757 line:-2 align:center
to the App Store but are
also continuously deploying


141
00:05:56,823 --> 00:05:59,593 line:-2
new versions to TestFlight
with Xcode Cloud.


142
00:05:59.660 --> 00:06:02.563 line:-2 align:center
Today I want to see if there
have been any recent crashes


143
00:06:02,629 --> 00:06:04,765 line:-2
in our App Clip,
so let's open up the Organizer


144
00:06:04.831 --> 00:06:06.600 line:-1 align:center
and see what's going on.


145
00:06:06.667 --> 00:06:09.603 line:-2 align:center
I can do this by selecting
the Window menu bar item


146
00:06:09.670 --> 00:06:11.305 line:-1 align:center
and selecting Organizer.


147
00:06:13.340 --> 00:06:15.642 line:-2 align:center
From the sidebar on the left,
I can tell that Xcode


148
00:06:15,709 --> 00:06:17,377 line:-2
has opened
to the Crashes Organizer


149
00:06:17.444 --> 00:06:20.214 line:-1 align:center
for my iOS app, Fruta.


150
00:06:20.280 --> 00:06:21.849 line:-2 align:center
In the toolbar at the top
of the window,


151
00:06:21,915 --> 00:06:23,784 line:-2
you'll notice all
of the new filter options


152
00:06:23.851 --> 00:06:25.986 line:-1 align:center
that are available this year.


153
00:06:26.053 --> 00:06:28.388 line:-2 align:center
Underneath the filter bar
is the crashes list,


154
00:06:28.455 --> 00:06:31.358 line:-2 align:center
which is showing us all of our
crashes for the last two weeks


155
00:06:31.425 --> 00:06:34.828 line:-2 align:center
across all versions,
builds, and products.


156
00:06:34.895 --> 00:06:36.496 line:-1 align:center
Quickly scanning this list,


157
00:06:36.563 --> 00:06:39.700 line:-2 align:center
I can see a number
of different kinds of issues.


158
00:06:39,766 --> 00:06:42,069 line:-2
Crashes in the list
display various badges


159
00:06:42.135 --> 00:06:44.738 line:-2 align:center
indicating whether
they came from our App Clip,


160
00:06:44.805 --> 00:06:46.573 line:-2 align:center
our watch app,
or an app extension.


161
00:06:47,708 --> 00:06:50,911 line:-2
This allows us to quickly
identify which area of our app


162
00:06:50.978 --> 00:06:52.179 line:-1 align:center
a crash is affecting.


163
00:06:53,680 --> 00:06:56,316 line:-2
To the right of the crashes
list, I see the log view.


164
00:06:56.383 --> 00:06:59.419 line:-2 align:center
This is showing me the friendly,
simplified view of the crash


165
00:06:59,486 --> 00:07:02,155 line:-2
I have selected
in the crashes list.


166
00:07:02.222 --> 00:07:03.991 line:-2 align:center
And finally,
to the right of the log view,


167
00:07:04,057 --> 00:07:06,827 line:-2
I see the inspector,
which shows me all kinds of


168
00:07:06.894 --> 00:07:10.297 line:-2 align:center
interesting information
about the selected crash.


169
00:07:10.364 --> 00:07:12.232 line:-2 align:center
Now that we're familiar
with the Organizer,


170
00:07:12.299 --> 00:07:14.334 line:-2 align:center
I want to take a look at all
of our recent issues


171
00:07:14.401 --> 00:07:16.036 line:-1 align:center
for our App Clip.


172
00:07:16.103 --> 00:07:18.972 line:-2 align:center
I can open up the products
filter in the toolbar


173
00:07:19.039 --> 00:07:21.808 line:-2 align:center
which lists all of the products
that ship with my app,


174
00:07:21,875 --> 00:07:25,078 line:-2
like our watch app,
App Clip, or app extensions.


175
00:07:25,145 --> 00:07:26,914 line:-2
I'll go ahead
and select App Clip here.


176
00:07:29.249 --> 00:07:31.785 line:-2 align:center
Selecting App Clip has filtered
the crashes list


177
00:07:31.852 --> 00:07:33.720 line:-2 align:center
to only display
our App Clip crashes


178
00:07:33,787 --> 00:07:36,156 line:-1
from the last two weeks.


179
00:07:36,223 --> 00:07:39,193 line:-2
The first crash in the list
here is our top crash.


180
00:07:39.259 --> 00:07:41.595 line:-2 align:center
Underneath the title,
the Organizer is letting us know


181
00:07:41,662 --> 00:07:44,198 line:-2
that this crash has been
affecting 21 devices


182
00:07:44,264 --> 00:07:47,334 line:-2
in the last two weeks
and 7 in the last day.


183
00:07:47.401 --> 00:07:49.503 line:-2 align:center
Now, before I start
digging into the code,


184
00:07:49,570 --> 00:07:51,605 line:-2
I like to ask myself some
questions that will help


185
00:07:51,672 --> 00:07:55,509 line:-2
guide my investigation and lead
me to some context clues.


186
00:07:55.576 --> 00:07:58.312 line:-2 align:center
First, how long has
this been an issue?


187
00:07:58,378 --> 00:08:00,881 line:-2
If we head over
to the inspector's graph area


188
00:08:00,948 --> 00:08:02,449 line:-1
on the right side of the window,


189
00:08:02.516 --> 00:08:04.218 line:-2 align:center
we can tell from
the graph legend


190
00:08:04.284 --> 00:08:06.887 line:-2 align:center
that this crash first
appeared in version 2.0


191
00:08:06.954 --> 00:08:10.991 line:-2 align:center
and is affecting our latest
TestFlight build, 2.0.1.


192
00:08:11,058 --> 00:08:13,594 line:-2
Next question, is this
affecting my production app


193
00:08:13,660 --> 00:08:15,262 line:-1
or just TestFlight?


194
00:08:15.329 --> 00:08:18.265 line:-2 align:center
I can change the filter
to Release to find out


195
00:08:18,332 --> 00:08:21,869 line:-2
that this is affecting both
TestFlight and App Store builds.


196
00:08:21,935 --> 00:08:23,637 line:-2
So this issue is pretty
important,


197
00:08:23.704 --> 00:08:25.672 line:-2 align:center
because our customers
are experiencing it,


198
00:08:25,739 --> 00:08:27,441 line:-2
and it looks like
it may have regressed


199
00:08:27.508 --> 00:08:29.243 line:-2 align:center
in our most recent
App Store release.


200
00:08:30.744 --> 00:08:32.946 line:-2 align:center
Now let's focus on
the log view.


201
00:08:33.013 --> 00:08:35.449 line:-2 align:center
The log view is conveniently
highlighting for me


202
00:08:35,516 --> 00:08:38,118 line:-1
the exact frame that crashed.


203
00:08:38,185 --> 00:08:40,220 line:-2
I also know that this happened
on a background thread


204
00:08:40.287 --> 00:08:44.324 line:-2 align:center
by looking at the thread number
above the back trace, thread number 6.


205
00:08:46.426 --> 00:08:48.929 line:-2 align:center
I can see this is crashing while
we're syncing favorites,


206
00:08:48.996 --> 00:08:52.232 line:-2 align:center
but isn't an area of code that
I work in too often,


207
00:08:52.299 --> 00:08:55.135 line:-2 align:center
and so I don't quite know
how to reproduce this.


208
00:08:55.202 --> 00:08:57.604 line:-2 align:center
I can't really think of more
questions to ask myself


209
00:08:57,671 --> 00:09:00,407 line:-2
that are going to give me more
insight into this crash,


210
00:09:00.474 --> 00:09:03.510 line:-2 align:center
so it would be really helpful
to get some more context.


211
00:09:03,577 --> 00:09:05,379 line:-2
Fortunately,
there's a feedback icon


212
00:09:05,445 --> 00:09:07,381 line:-1
next to this crash in the list,


213
00:09:07.447 --> 00:09:09.149 line:-2 align:center
so I know that
one of our testers


214
00:09:09.216 --> 00:09:12.452 line:-2 align:center
has experienced this crash
and submitted feedback.


215
00:09:12.519 --> 00:09:14.988 line:-2 align:center
This might just be the missing
piece of context I need


216
00:09:15,055 --> 00:09:17,424 line:-1
to start working on this crash.


217
00:09:17,491 --> 00:09:18,625 line:-1
I can see their feedback


218
00:09:18.692 --> 00:09:20.327 line:-2 align:center
by heading over
to the inspector area


219
00:09:20.394 --> 00:09:22.462 line:-2 align:center
and opening the new
Feedback Inspector.


220
00:09:24,131 --> 00:09:26,466 line:-2
I see that several testers
have hit this same crash,


221
00:09:26.533 --> 00:09:28.836 line:-2 align:center
including one who saw it
just a minute ago.


222
00:09:30,304 --> 00:09:32,172 line:-2
In the inspector,
I can see a preview


223
00:09:32.239 --> 00:09:34.641 line:-2 align:center
of each feedback report,
or if I click on one,


224
00:09:34.708 --> 00:09:37.344 line:-2 align:center
I can see more details
in a popover.


225
00:09:37.411 --> 00:09:39.713 line:-2 align:center
I'll click on this latest
feedback,


226
00:09:39.780 --> 00:09:41.081 line:-1 align:center
which opens up a popover


227
00:09:41.148 --> 00:09:44.484 line:-2 align:center
and shows me all of the rich
context for this tester's crash,


228
00:09:44,551 --> 00:09:46,720 line:-2
like the exact version
and build they had installed,


229
00:09:46.787 --> 00:09:48.889 line:-2 align:center
their device model,
battery level,


230
00:09:48.956 --> 00:09:51.158 line:-1 align:center
and available disk space.


231
00:09:51.225 --> 00:09:54.228 line:-2 align:center
These can all be helpful clues
when diagnosing a crash.


232
00:09:54.294 --> 00:09:57.497 line:-2 align:center
In this case, I can see
the tester was on cellular,


233
00:09:57.564 --> 00:09:59.266 line:-1 align:center
and their comment says,


234
00:09:59.333 --> 00:10:01.468 line:-2 align:center
"I was going through a tunnel
and I hit the favorite button.


235
00:10:01,535 --> 00:10:03,871 line:-2
A few seconds later,
it crashed."


236
00:10:03.937 --> 00:10:05.973 line:-2 align:center
Hmm. if they were going
through a tunnel,


237
00:10:06,039 --> 00:10:09,276 line:-2
they might have had a poor
network connection.


238
00:10:09.343 --> 00:10:11.378 line:-2 align:center
Now we can combine
all of our clues together


239
00:10:11.445 --> 00:10:13.180 line:-2 align:center
to know that pressing
the favorite button


240
00:10:13.247 --> 00:10:16.250 line:-2 align:center
will trigger some background
task that will eventually crash.


241
00:10:16,316 --> 00:10:19,353 line:-2
I think we have enough to start
diving into the code.


242
00:10:19.419 --> 00:10:21.455 line:-2 align:center
I'll use the Open in Project
button


243
00:10:21,522 --> 00:10:24,925 line:-2
to open this crash directly
in the Fruta Xcode project.


244
00:10:27.828 --> 00:10:30.430 line:-2 align:center
OK, so Xcode has opened
and is showing the backtrace


245
00:10:30.497 --> 00:10:32.566 line:-2 align:center
in the Debug Navigator
on the left,


246
00:10:32.633 --> 00:10:34.368 line:-2 align:center
and the editor
with our source file


247
00:10:34.434 --> 00:10:37.471 line:-2 align:center
and the exact line of crashing
code highlighted.


248
00:10:37.538 --> 00:10:40.040 line:-1 align:center
So why is this code crashing?


249
00:10:40,107 --> 00:10:42,009 line:-2
Well, it seems like
we're crashing on purpose


250
00:10:42,075 --> 00:10:45,712 line:-2
with a fatal error,
which is an interesting choice.


251
00:10:45.779 --> 00:10:47.981 line:-2 align:center
Let's take a quick pass through
our syncFavorites function


252
00:10:48,048 --> 00:10:49,750 line:-2
to understand
what it's trying to do.


253
00:10:51,451 --> 00:10:54,955 line:-2
First, we're jumping onto
a background thread.


254
00:10:55,022 --> 00:10:57,357 line:-2
Next, it appears like
we're saving this smoothie


255
00:10:57.424 --> 00:10:59.293 line:-1 align:center
as a favorite to disk.


256
00:10:59.359 --> 00:11:02.596 line:-2 align:center
Then we're updating our back end,
and we're using a dispatch group


257
00:11:02.663 --> 00:11:04.531 line:-2 align:center
to sync these operations
together.


258
00:11:05,966 --> 00:11:08,735 line:-2
We then wait on these operations
with a 10-second timeout,


259
00:11:08,802 --> 00:11:11,305 line:-2
and if it takes longer,
we crash.


260
00:11:11,371 --> 00:11:13,440 line:-1
This is pretty unfair.


261
00:11:13.507 --> 00:11:15.142 line:-2 align:center
Remembering
our tester's feedback,


262
00:11:15.209 --> 00:11:16.877 line:-2 align:center
it said they were
going through a tunnel


263
00:11:16.944 --> 00:11:18.645 line:-1 align:center
when they favorited a smoothie.


264
00:11:18.712 --> 00:11:20.480 line:-2 align:center
If they were going through
a tunnel,


265
00:11:20.547 --> 00:11:23.450 line:-2 align:center
then they probably had a poor
quality network connection,


266
00:11:23,517 --> 00:11:25,085 line:-2
which means that syncing
with our backend


267
00:11:25.152 --> 00:11:28.021 line:-2 align:center
could definitely take a lot
longer than 10 seconds.


268
00:11:28,088 --> 00:11:29,957 line:-2
This crash makes total
sense now.


269
00:11:30.023 --> 00:11:32.659 line:-2 align:center
Now that we know that
our timeout is too short


270
00:11:32,726 --> 00:11:36,763 line:-2
and we aren't handling it
properly, let's fix this.


271
00:11:36.830 --> 00:11:38.832 line:-2 align:center
I've been practicing
my Combine skills recently,


272
00:11:38,899 --> 00:11:41,201 line:-2
so I think I want to use
Combine to fix this.


273
00:11:46,173 --> 00:11:47,441 line:-1
Awesome.


274
00:11:47.508 --> 00:11:49.443 line:-2 align:center
So now we are merging
the results


275
00:11:49.510 --> 00:11:50.911 line:-1 align:center
of two publishers together,


276
00:11:50.978 --> 00:11:53.480 line:-2 align:center
and when we timeout,
which is now 30 seconds,


277
00:11:53.547 --> 00:11:56.650 line:-2 align:center
we call our completion
handler rather than crash.


278
00:11:56,717 --> 00:11:58,552 line:-1
Problem solved.


279
00:11:58.619 --> 00:12:01.788 line:-2 align:center
Let's head back to the Organizer
and mark this issue as resolved.


280
00:12:01.855 --> 00:12:03.857 line:-1 align:center
[chime]


281
00:12:03,924 --> 00:12:05,993 line:-2
Oh, it looks like my boss
just sent me a text.


282
00:12:07.461 --> 00:12:10.998 line:-2 align:center
Ooh, Craig
hit a crash in his demo.


283
00:12:11.064 --> 00:12:14.101 line:-2 align:center
Thankfully, my boss used the new
sharing feature in the Organizer


284
00:12:14,168 --> 00:12:16,236 line:-2
to send me the exact
crash that Craig hit,


285
00:12:16,303 --> 00:12:18,205 line:-2
so I don't have to
go digging for it.


286
00:12:18.272 --> 00:12:20.140 line:-1 align:center
When I click on this link,


287
00:12:20.207 --> 00:12:22.409 line:-2 align:center
the Organizer
creates this focused view


288
00:12:22,476 --> 00:12:26,213 line:-2
of the single crash that was
embedded in that link.


289
00:12:26.280 --> 00:12:28.215 line:-2 align:center
I've actually seen
this crash before.


290
00:12:28.282 --> 00:12:31.685 line:-2 align:center
I just fixed this the other day
and marked it as resolved.


291
00:12:31,752 --> 00:12:33,520 line:-2
I also gave the crash
a friendlier name


292
00:12:33,587 --> 00:12:36,523 line:-2
so that I could remember
the underlying issue.


293
00:12:36.590 --> 00:12:37.991 line:-2 align:center
I'll go ahead
and let my boss know


294
00:12:38,058 --> 00:12:39,927 line:-1
that I've already fixed this.


295
00:12:45,999 --> 00:12:48,969 line:-2
So we've just looked at how to
triage our App Clip crashes


296
00:12:49.036 --> 00:12:51.038 line:-2 align:center
using the new filters
in the Organizer,


297
00:12:51.104 --> 00:12:53.774 line:-2 align:center
how to use the new distribution
graphs in the inspector,


298
00:12:53,841 --> 00:12:56,009 line:-2
and how to make use
of our TestFlight feedback


299
00:12:56,076 --> 00:12:57,477 line:-2
to fix an issue
that would have been


300
00:12:57,544 --> 00:12:59,513 line:-1
otherwise hard to reproduce.


301
00:12:59.580 --> 00:13:02.482 line:-2 align:center
Now let's take a look at the
new Terminations Organizer


302
00:13:02,549 --> 00:13:04,651 line:-2
and improvements
we've made to MetricKit.


303
00:13:04.718 --> 00:13:08.622 line:-2 align:center
The new Terminations Organizer
shows trends of app terminations


304
00:13:08,689 --> 00:13:10,724 line:-2
that may be
affecting your customers.


305
00:13:10,791 --> 00:13:13,260 line:-2
The crashes you'll see
in the Crashes Organizer


306
00:13:13,327 --> 00:13:15,295 line:-2
are the result of programming
failures,


307
00:13:15,362 --> 00:13:16,597 line:-1
but there are other ways


308
00:13:16.663 --> 00:13:18.298 line:-2 align:center
that your app's process
can be terminated.


309
00:13:19.733 --> 00:13:21.101 line:-1 align:center
Terminations are categorized


310
00:13:21,168 --> 00:13:23,537 line:-2
by reasons like
"timing out on launch"


311
00:13:23.604 --> 00:13:25.939 line:-2 align:center
or "hitting
the system memory limit."


312
00:13:26,006 --> 00:13:29,076 line:-2
You can compare these categories
of termination events


313
00:13:29,142 --> 00:13:32,112 line:-2
for your app against previous
versions to find regressions.


314
00:13:33.647 --> 00:13:36.383 line:-2 align:center
Some of these terminations
happen in the background,


315
00:13:36.450 --> 00:13:37.851 line:-1 align:center
but in certain cases,


316
00:13:37.918 --> 00:13:40.354 line:-2 align:center
they can happen
while your app is onscreen.


317
00:13:40.420 --> 00:13:42.456 line:-2 align:center
The Terminations Organizer
can help you understand


318
00:13:42.523 --> 00:13:45.325 line:-2 align:center
the difference so you
can make a plan to fix them.


319
00:13:45,392 --> 00:13:47,261 line:0
If you'd like to dive
into regressions,


320
00:13:47,327 --> 00:13:48,495 line:0
check out


321
00:13:48,562 --> 00:13:49,930 line:0
the Application performance
survival guide session


322
00:13:49,997 --> 00:13:52,599 align:center
this year, and to learn
more about terminations,


323
00:13:52,666 --> 00:13:54,101 align:center
I recommend
checking out the session


324
00:13:54,168 --> 00:13:56,737 line:0
Why is my app getting killed?
from 2020.


325
00:13:56.803 --> 00:13:58.405 line:-1 align:center
If you're not familiar,


326
00:13:58,472 --> 00:14:00,641 line:-2
you can use the
Apple framework MetricKit


327
00:14:00,707 --> 00:14:02,643 line:-2
to collect
crash logs in your code.


328
00:14:02.709 --> 00:14:05.879 line:-2 align:center
All you need to do
is import MetricKit,


329
00:14:05.946 --> 00:14:08.615 line:-2 align:center
begin listening
to the MetricKit manager,


330
00:14:08,682 --> 00:14:10,517 line:-2
and use the crashDiagnostics
property


331
00:14:10.584 --> 00:14:13.453 line:-2 align:center
on MetricKit diagnostic payloads
when they are received.


332
00:14:15,689 --> 00:14:18,559 line:-2
New this year, crash diagnostics
are no longer aggregated


333
00:14:18,625 --> 00:14:20,360 line:-1
and delivered once daily


334
00:14:20.427 --> 00:14:22.663 line:-2 align:center
but are now delivered
on the next launch of your app


335
00:14:22.729 --> 00:14:25.966 line:-2 align:center
so you gain access
to crash logs faster.


336
00:14:26,033 --> 00:14:29,169 line:-2
I'm also happy to announce that
MetricKit now supports macOS.


337
00:14:29,236 --> 00:14:31,872 align:center
To learn more about using
MetricKit,


338
00:14:31,939 --> 00:14:33,373 line:0
I recommend the session


339
00:14:33,440 --> 00:14:36,109 line:0
What's new
in MetricKit from 2020.


340
00:14:36.176 --> 00:14:39.980 line:-2 align:center
There are many other ways
to track down and view crashes.


341
00:14:40,047 --> 00:14:42,482 line:-2
You can access crashes
on your connected device


342
00:14:42.549 --> 00:14:43.784 line:-1 align:center
from the Devices window


343
00:14:43,851 --> 00:14:47,087 line:-2
or by sharing a log directly
from your device.


344
00:14:47,154 --> 00:14:49,423 line:-2
XCTest will collect
your crashes that occur


345
00:14:49,489 --> 00:14:52,292 line:-2
when running your tests,
and you can use the Console app


346
00:14:52,359 --> 00:14:55,429 line:-3
to view crashes from
your Mac and the simulator.


347
00:14:55.495 --> 00:14:57.965 line:-3 align:center
For more on these additional
tools, check out the session


348
00:14:58.031 --> 00:15:01.435 line:-3 align:center
Understanding crashes
and crash logs from 2018.


349
00:15:01.502 --> 00:15:04.471 line:-2 align:center
Today we saw
some great new features.


350
00:15:04,538 --> 00:15:06,840 line:-2
We hope that the new
speedy crash log delivery,


351
00:15:06.907 --> 00:15:10.244 line:-2 align:center
TestFlight feedback integration,
and distribution metrics


352
00:15:10.310 --> 00:15:13.213 line:-2 align:center
will dramatically improve
your experience fixes crashes


353
00:15:13,280 --> 00:15:15,382 line:-2
and ultimately improve
your app's health


354
00:15:15.449 --> 00:15:17.551 line:-1 align:center
and your users experiences.


355
00:15:17.618 --> 00:15:19.119 line:-1 align:center
Thank you for watching.


356
00:15:19.186 --> 00:15:20.954 line:-2 align:center
And remember,
the road to success


357
00:15:21.021 --> 00:15:22.990 line:-1 align:center
is always under construction.


358
00:15:23,056 --> 00:15:26,026 align:center
[percussive music]

