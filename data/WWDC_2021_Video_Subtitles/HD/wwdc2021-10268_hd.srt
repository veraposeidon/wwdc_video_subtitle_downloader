2
00:00:03.837 --> 00:00:08.842 line:-1 align:center
[music]


3
00:00:09,376 --> 00:00:10,978 line:-2
[Justin] Hello,
and welcome to this session


4
00:00:11,011 --> 00:00:12,913 line:-1
on Xcode Cloud workflows.


5
00:00:12.946 --> 00:00:14.848 line:-2 align:center
My name is Justin,
and I'm an engineer


6
00:00:14.882 --> 00:00:17.184 line:-2 align:center
with the TestFlight team,
and along with my colleagues,


7
00:00:17,217 --> 00:00:19,486 line:-2
Wesley and Kevin,
we're here to introduce


8
00:00:19.520 --> 00:00:24.091 line:-2 align:center
the ins and outs of creating
your workflows in Xcode Cloud.


9
00:00:24.124 --> 00:00:26.527 line:-2 align:center
Workflows are at the heart
of Xcode Cloud


10
00:00:26.560 --> 00:00:28.462 line:-2 align:center
and drive
the continuous integration


11
00:00:28.495 --> 00:00:30.430 line:-1 align:center
that enables you and your team


12
00:00:30,464 --> 00:00:34,535 line:-2
to automate building,
analyzing, testing, archiving,


13
00:00:34,568 --> 00:00:37,004 line:-2
and distributing
your apps and frameworks.


14
00:00:37,037 --> 00:00:38,939 line:-2
They are
flexible and extensible,


15
00:00:38,972 --> 00:00:41,608 line:-2
so you can customize workflows
around your team's


16
00:00:41,642 --> 00:00:44,811 line:-2
existing development
and distribution processes.


17
00:00:44.845 --> 00:00:46.480 line:-1 align:center
And with Xcode Cloud,


18
00:00:46,513 --> 00:00:48,182 line:-2
workflow management
is integrated


19
00:00:48.215 --> 00:00:50.717 line:-2 align:center
into the Apple developer tools
you already use:


20
00:00:50,751 --> 00:00:53,353 line:-1
Xcode and App Store Connect.


21
00:00:53,387 --> 00:00:55,589 line:-2
In this session,
let's break workflows


22
00:00:55,622 --> 00:00:57,858 line:-2
down into
their specific components.


23
00:00:57,891 --> 00:01:00,194 line:-2
First, we'll walk through
how to configure the conditions


24
00:01:00,227 --> 00:01:03,163 line:-2
that automatically
run your workflow.


25
00:01:03.197 --> 00:01:04.998 line:-2 align:center
Then, we'll talk
about the options


26
00:01:05,032 --> 00:01:07,100 line:-1
for setting up your environment.


27
00:01:07,134 --> 00:01:09,536 line:-2
We'll also show you how
to create multiple actions


28
00:01:09,570 --> 00:01:11,805 line:-2
for the tasks you want
to automate,


29
00:01:11,839 --> 00:01:13,874 line:-2
along with actions
to run afterward,


30
00:01:13.907 --> 00:01:16.243 line:-2 align:center
like sending notifications
about your builds,


31
00:01:16,276 --> 00:01:19,980 line:-2
or automatically deploying
those builds to TestFlight.


32
00:01:20,013 --> 00:01:22,049 line:-2
Finally, we have
some strategies for different


33
00:01:22,082 --> 00:01:24,918 line:-2
workflows you may find
useful and super convenient


34
00:01:24,952 --> 00:01:28,121 line:-2
to boost your team's
collaboration and productivity.


35
00:01:28,155 --> 00:01:30,724 line:-2
We have a lot to cover,
so let's get started.


36
00:01:30,757 --> 00:01:32,159 line:-1
Let me hand it off to Wesley.


37
00:01:33,994 --> 00:01:34,995 line:-1
[Wesley] Thanks, Justin!


38
00:01:35.028 --> 00:01:36.597 line:-2 align:center
I'm collaborating
on an app called Fruta


39
00:01:36,630 --> 00:01:38,398 line:-2
with members
of my developer team.


40
00:01:38.432 --> 00:01:41.602 line:-2 align:center
It is already up and running
on Xcode Cloud.


41
00:01:41.635 --> 00:01:43.103 line:-2 align:center
If you haven't
yet seen the session


42
00:01:43.136 --> 00:01:45.706 line:-2 align:center
"Meet Xcode Cloud,"
be sure to check it out to learn


43
00:01:45,739 --> 00:01:48,308 line:-2
about setting up
your first workflow.


44
00:01:48.342 --> 00:01:51.778 line:-2 align:center
Right here, integrated
in Xcode's Report Navigator,


45
00:01:51,812 --> 00:01:53,113 line:-1
is a new Cloud tab,


46
00:01:53,146 --> 00:01:56,250 line:-2
where I see the workflows
and builds from my team.


47
00:01:56,283 --> 00:01:59,152 line:-2
When I onboarded the Fruta app,
it created a default workflow


48
00:01:59,186 --> 00:02:01,722 line:-2
for me
that builds the main branch.


49
00:02:01,755 --> 00:02:03,557 line:-2
This workflow has
been working great for us,


50
00:02:03.590 --> 00:02:06.326 line:-2 align:center
but because we're a team
that also uses pull requests,


51
00:02:06.360 --> 00:02:08.395 line:-2 align:center
I'd like to create
a pull-request-specific workflow


52
00:02:08,428 --> 00:02:12,499 line:-1
that my team can leverage.


53
00:02:12,533 --> 00:02:15,235 line:-2
I'd like it to run every time
a pull request is created


54
00:02:15,269 --> 00:02:17,204 line:-1
by anyone on my team,


55
00:02:17.237 --> 00:02:20.107 line:-2 align:center
analyze, test,
and archive my app,


56
00:02:20.140 --> 00:02:23.043 line:-2 align:center
notify my team when
a pull-request build finishes,


57
00:02:23,076 --> 00:02:25,479 line:-2
and deliver a version
of my app to members of my team


58
00:02:25,512 --> 00:02:28,248 line:-2
so they can test out the
features before they're merged


59
00:02:28,282 --> 00:02:31,385 line:-2
into our main
integration branch.


60
00:02:31,418 --> 00:02:34,121 line:-2
Creating
a workflow is easy to do.


61
00:02:34.154 --> 00:02:37.357 line:-2 align:center
Under the Product menu,
I can go to Manage Workflows,


62
00:02:37.391 --> 00:02:40.894 line:-1 align:center
click Plus, and select my app.


63
00:02:44.932 --> 00:02:48.702 line:-1 align:center
[trackpad clicking sounds]


64
00:02:51.004 --> 00:02:53.807 line:-2 align:center
This will bring track
a new workflow editor.


65
00:02:53.841 --> 00:02:57.678 line:-2 align:center
A workflow is made up of several
configurable components.


66
00:02:57,711 --> 00:03:01,548 line:-2
Here's the general section,
where I can name my workflow.


67
00:03:01.582 --> 00:03:03.917 line:-2 align:center
I'm gonna name this
"Pull Requests."


68
00:03:10.657 --> 00:03:12.726 line:-2 align:center
If I were on a team
where only a small number


69
00:03:12,759 --> 00:03:14,661 line:-2
of individuals
are responsible for making


70
00:03:14.695 --> 00:03:16.797 line:-1 align:center
changes to our workflows,


71
00:03:16,830 --> 00:03:19,633 line:-2
I can choose to restrict editing
to prevent unintended updates


72
00:03:19.666 --> 00:03:22.803 line:-1 align:center
that might impact our team.


73
00:03:22,836 --> 00:03:24,004 line:-1
By default,


74
00:03:24,037 --> 00:03:25,906 line:-2
Xcode Cloud sets the primary
repository


75
00:03:25.939 --> 00:03:27.608 line:-2 align:center
and project information
with the knowledge


76
00:03:27.641 --> 00:03:29.142 line:-1 align:center
of my local settings,


77
00:03:29.176 --> 00:03:31.712 line:-2 align:center
but if I ever decide to move
my primary repository


78
00:03:31,745 --> 00:03:34,948 line:-2
or migrate from an Xcode project
to a workspace,


79
00:03:34.982 --> 00:03:37.584 line:-2 align:center
I can change
those settings here.


80
00:03:37.618 --> 00:03:41.221 line:-2 align:center
Next, let's take a look
at the Start Condition section.


81
00:03:41.255 --> 00:03:45.526 line:-2 align:center
This is where I can define
when I want my workflow to run.


82
00:03:50.197 --> 00:03:52.933 line:-2 align:center
Xcode Cloud has
a number of condition types.


83
00:03:52,966 --> 00:03:55,502 line:-2
For this workflow, I want
to set its start condition


84
00:03:55.536 --> 00:03:56.970 line:-1 align:center
to run for all pull requests


85
00:03:57,004 --> 00:04:00,007 line:-2
that intend to merge
into the main branch.


86
00:04:00,040 --> 00:04:02,576 line:-2
To do that,
I can select from the Type menu


87
00:04:02,609 --> 00:04:05,612 line:-2
and choose Every Change
to a Pull Request.


88
00:04:05,646 --> 00:04:07,915 line:-2
This condition type
allows me to specify the source


89
00:04:07,948 --> 00:04:10,150 line:-1
and target branch.


90
00:04:12.920 --> 00:04:15.389 line:-2 align:center
I'll set the source branch
to Any Branch


91
00:04:15.422 --> 00:04:17.090 line:-1 align:center
and the target branch to Main.


92
00:04:22.129 --> 00:04:24.998 line:-2 align:center
Now every time a team
member creates a pull request


93
00:04:25,032 --> 00:04:27,134 line:-2
against Main
and makes changes to it,


94
00:04:27,167 --> 00:04:30,771 line:-2
Xcode Cloud will
automatically run this workflow.


95
00:04:30.804 --> 00:04:34.007 line:-2 align:center
When building pull requests,
Xcode Cloud will now build


96
00:04:34.041 --> 00:04:36.643 line:-2 align:center
and test the merge of the source
and target branch together,


97
00:04:36,677 --> 00:04:38,278 line:-2
so my team members
can be confident


98
00:04:38,312 --> 00:04:40,247 line:-2
and know the real impact
of their changes


99
00:04:40.280 --> 00:04:42.216 line:-1 align:center
with the rest of the team.


100
00:04:42.249 --> 00:04:44.117 line:-2 align:center
I can also narrow
those conditions


101
00:04:44.151 --> 00:04:45.652 line:-1 align:center
to specific files or folders


102
00:04:45,686 --> 00:04:47,955 line:-2
and choose to set whether or
not I want to auto-cancel


103
00:04:47,988 --> 00:04:51,091 line:-2
any previously running builds
when the workflow runs.


104
00:04:51,124 --> 00:04:53,026 line:-2
This is useful
if I push one commit


105
00:04:53.060 --> 00:04:55.295 line:-2 align:center
on top of another
in quick succession.


106
00:04:55,329 --> 00:04:57,264 line:-2
Every Change to a Pull Request
is just one


107
00:04:57.297 --> 00:05:00.000 line:-2 align:center
of the start conditions that you
can set for a workflow,


108
00:05:00,033 --> 00:05:02,236 line:-2
and depending on
the needs of your team,


109
00:05:02,269 --> 00:05:03,270 line:-1
we have other condition types


110
00:05:03,303 --> 00:05:06,039 line:-2
that you can configure
to meet those needs.


111
00:05:06,073 --> 00:05:08,008 line:-2
Every Change to a Branch
will always build


112
00:05:08,041 --> 00:05:09,109 line:-1
the source branch


113
00:05:09,142 --> 00:05:12,179 line:-2
and will ignore
any pull-request states.


114
00:05:12,212 --> 00:05:13,981 line:-2
Every Change to a Tag
will build whenever


115
00:05:14,014 --> 00:05:16,283 line:-1
new tags are created.


116
00:05:16.316 --> 00:05:18.051 line:-2 align:center
On a Schedule
will build a branch


117
00:05:18,085 --> 00:05:20,854 line:-2
of your choosing on a recurring
schedule that you can choose.


118
00:05:20,888 --> 00:05:22,723 line:-2
This is great
if you have long-running tests


119
00:05:22.756 --> 00:05:24.324 line:-2 align:center
that you want
to run on occasion.


120
00:05:24.358 --> 00:05:26.426 line:-2 align:center
Now that I have configured
the start condition,


121
00:05:26,460 --> 00:05:28,762 line:-2
which dictates
when this workflow will run,


122
00:05:28.795 --> 00:05:30.564 line:-2 align:center
let's configure
the Environment section,


123
00:05:30,597 --> 00:05:33,734 line:-2
which dictates
how the workflow will run.


124
00:05:33,767 --> 00:05:36,603 line:-2
Xcode Cloud runs
on Apple's Cloud Infrastructure


125
00:05:36.637 --> 00:05:40.707 line:-2 align:center
and makes available various
macOS and Xcode versions.


126
00:05:45,045 --> 00:05:47,514 line:-2
To choose
your Xcode and macOS version,


127
00:05:47,548 --> 00:05:49,550 line:-2
you just need
to select it from a menu.


128
00:05:49,583 --> 00:05:52,352 line:-2
You can also set your workflow
to point to the Latest Release


129
00:05:52.386 --> 00:05:54.588 line:-2 align:center
or Beta version,
so you could always build


130
00:05:54,621 --> 00:05:56,557 line:-1
or test on the latest software.


131
00:05:56,590 --> 00:05:58,759 line:-2
As developers,
we all care deeply


132
00:05:58,792 --> 00:06:01,061 line:-2
about our productivity,
and a large part of that


133
00:06:01.094 --> 00:06:03.597 line:-2 align:center
is the performance
of the tools we use.


134
00:06:03.630 --> 00:06:05.666 line:-2 align:center
Many of you will be working
on large projects


135
00:06:05.699 --> 00:06:09.036 line:-2 align:center
with many files and deal with
potentially long build times.


136
00:06:09,069 --> 00:06:11,305 line:-1
Just as locally within Xcode,


137
00:06:11,338 --> 00:06:13,707 line:-2
you have the option to build
your changes incrementally


138
00:06:13.740 --> 00:06:16.009 line:-2 align:center
by just building
the files that have changed.


139
00:06:16,043 --> 00:06:18,545 line:-2
You also have
this option in Xcode Cloud.


140
00:06:18.579 --> 00:06:21.215 line:-2 align:center
This typically
leads to faster builds.


141
00:06:21.248 --> 00:06:22.950 line:-2 align:center
However,
there are times when you might


142
00:06:22,983 --> 00:06:25,385 line:-2
wanna perform
a clean build instead.


143
00:06:25,419 --> 00:06:27,754 line:-2
This is important to make
sure everything is functioning


144
00:06:27,788 --> 00:06:30,257 line:-2
in your final build,
and is also required to produce


145
00:06:30.290 --> 00:06:32.793 line:-2 align:center
builds that could be deployed
to External Beta Testers


146
00:06:32.826 --> 00:06:35.896 line:-2 align:center
with TestFlight or
to submit to the App Store.


147
00:06:35,929 --> 00:06:37,598 line:-1
In the environment section,


148
00:06:37.631 --> 00:06:39.933 line:-2 align:center
I have the option to select
Clean.


149
00:06:39,967 --> 00:06:41,869 line:-2
Since this is a pull-request
workflow,


150
00:06:41.902 --> 00:06:44.037 line:-2 align:center
I'll leave it unchecked
so I can take advantage


151
00:06:44,071 --> 00:06:46,240 line:-1
of the performance benefits.


152
00:06:46.273 --> 00:06:48.675 line:-2 align:center
Every team works
in its own unique way,


153
00:06:48.709 --> 00:06:51.011 line:-2 align:center
and teams need their tools
to have the flexibility


154
00:06:51,044 --> 00:06:54,281 line:-2
to be able to work
the way they want to work.


155
00:06:54,314 --> 00:06:56,416 line:-2
Xcode Cloud provides
options to do what we believe


156
00:06:56,450 --> 00:06:59,353 line:-2
are the most common development
tasks out of the box.


157
00:06:59,386 --> 00:07:01,288 line:-2
However,
it also provides a range


158
00:07:01.321 --> 00:07:03.891 line:-1 align:center
of options for extensibility.


159
00:07:03.924 --> 00:07:06.460 line:-2 align:center
This extensibility allows
you to connect Xcode Cloud


160
00:07:06.493 --> 00:07:07.828 line:-1 align:center
with the other tools and systems


161
00:07:07.861 --> 00:07:10.664 line:-2 align:center
your teams use
to get your work done.


162
00:07:10,697 --> 00:07:13,033 line:-2
Xcode Cloud offers
a comprehensive API


163
00:07:13.066 --> 00:07:18.138 line:-2 align:center
to access your data, configure
workflows, and kick off builds.


164
00:07:18.172 --> 00:07:20.174 line:-2 align:center
In addition to the existing
scripting options


165
00:07:20,207 --> 00:07:21,675 line:-1
that Xcode provides,


166
00:07:21.708 --> 00:07:24.478 line:-2 align:center
Xcode adds the ability
to create custom scripts


167
00:07:24.511 --> 00:07:25.712 line:-1 align:center
that run on the devices


168
00:07:25,746 --> 00:07:28,282 line:-2
which are performing
your builds and tests.


169
00:07:28,315 --> 00:07:30,017 line:-1
In the Environment section,


170
00:07:30,050 --> 00:07:31,985 line:-2
I can specify environment
variables


171
00:07:32,019 --> 00:07:34,655 line:-2
that Xcode Cloud makes
available to custom scripts.


172
00:07:34.688 --> 00:07:36.990 line:-2 align:center
This is useful
for configuration and secrets


173
00:07:37.024 --> 00:07:41.128 line:-2 align:center
that I don't want to check
into the source code repository.


174
00:07:49,102 --> 00:07:51,205 line:-2
I also have the ability
to mark an environment variable


175
00:07:51,238 --> 00:07:54,107 line:-2
as secret to provide
an extra level of protection.


176
00:07:54,141 --> 00:07:56,109 line:-2
You can find further
information on this


177
00:07:56,143 --> 00:07:59,680 line:-2
in the "Customize your Advanced
Xcode Cloud Workflows" session


178
00:07:59,713 --> 00:08:02,583 line:-1
or in our documentation.


179
00:08:02,616 --> 00:08:04,084 line:-1
So far, we've shown you how


180
00:08:04,117 --> 00:08:06,954 line:-2
to configure when your workflows
run and when they run.


181
00:08:06.987 --> 00:08:09.389 line:-2 align:center
What environment
should they run in?


182
00:08:09,423 --> 00:08:12,125 line:-1
Next, let's talk about actions.


183
00:08:12,159 --> 00:08:14,494 line:-2
Actions define the work
that you want the workflow to do


184
00:08:14,528 --> 00:08:17,397 line:-2
for you and your team
every time the workflow runs.


185
00:08:17,431 --> 00:08:20,467 line:-2
The key actions you could ask
Xcode to perform locally


186
00:08:20.501 --> 00:08:23.770 line:-2 align:center
are now all available to you
within Xcode Cloud:


187
00:08:23.804 --> 00:08:25.072 line:-1 align:center
building,


188
00:08:25,105 --> 00:08:26,573 line:-1
running static analysis,


189
00:08:26,607 --> 00:08:27,474 line:-1
testing,


190
00:08:27.508 --> 00:08:29.543 line:-1 align:center
and archiving.


191
00:08:29,576 --> 00:08:32,179 line:-2
The actions I want
to set up are the Archive,


192
00:08:32,212 --> 00:08:35,148 line:-1
Test, and Analyze actions.


193
00:08:35.182 --> 00:08:36.850 line:-2 align:center
Let's start by adding
the Archive action


194
00:08:36.884 --> 00:08:39.152 line:-2 align:center
by clicking the plus icon
by Actions


195
00:08:39.186 --> 00:08:41.188 line:-1 align:center
and selecting Archive.


196
00:08:47.027 --> 00:08:49.062 line:-2 align:center
I need to select
the platform and the scheme


197
00:08:49,096 --> 00:08:51,198 line:-1
I want to create an archive for.


198
00:08:51,231 --> 00:08:53,333 line:-2
It already
pre-selected the iOS platform


199
00:08:53,367 --> 00:08:56,970 line:-2
and the iOS scheme,
which is exactly what I wanted.


200
00:08:57.004 --> 00:08:58.772 line:-2 align:center
I also have
the option to register


201
00:08:58,805 --> 00:09:01,375 line:-2
for TestFlight or make it ready
for App Store distribution,


202
00:09:01,408 --> 00:09:02,976 line:-1
but more on this later.


203
00:09:03,010 --> 00:09:04,545 line:-2
You may notice
that I didn't have to manage


204
00:09:04.578 --> 00:09:07.347 line:-2 align:center
provisioning profiles
or code-signing identities.


205
00:09:07,381 --> 00:09:10,784 line:-2
Xcode Cloud handles
this automatically for you.


206
00:09:10,817 --> 00:09:12,252 line:-1
To learn more about this,


207
00:09:12,286 --> 00:09:13,620 line:-1
check out the session


208
00:09:13,654 --> 00:09:15,956 line:-2
"Distribute Apps in Xcode
with Cloud Signing."


209
00:09:15.989 --> 00:09:17.824 line:-2 align:center
Now that the Archive action
is set up,


210
00:09:17.858 --> 00:09:20.627 line:-2 align:center
let's focus our attention
on the Test action.


211
00:09:20,661 --> 00:09:22,396 line:-2
Testing
your apps is an incredibly


212
00:09:22,429 --> 00:09:24,431 line:-2
important part
of the development process.


213
00:09:24,464 --> 00:09:27,100 line:-2
Not only does it help
ensure your users experience


214
00:09:27.134 --> 00:09:30.070 line:-2 align:center
fewer bugs, but it can speed
up your development process


215
00:09:30,103 --> 00:09:33,106 line:-2
by giving you confidence
in the changes you are making.


216
00:09:33.140 --> 00:09:35.809 line:-2 align:center
However, sometimes it can
be cumbersome and slow


217
00:09:35.843 --> 00:09:37.177 line:-1 align:center
to run your tests locally,


218
00:09:37.211 --> 00:09:38.879 line:-2 align:center
and sometimes,
you might just forget.


219
00:09:38.912 --> 00:09:41.882 line:-2 align:center
By setting up a workflow
with testing in Xcode Cloud,


220
00:09:41,915 --> 00:09:46,253 line:-2
tests run in a stable, reliable,
and reproducible environment.


221
00:09:46.286 --> 00:09:48.622 line:-2 align:center
They run in the background
while you are doing other work,


222
00:09:48,655 --> 00:09:50,324 line:-2
freeing up
your local environment,


223
00:09:50.357 --> 00:09:52.125 line:-1 align:center
and they run automatically,


224
00:09:52.159 --> 00:09:55.596 line:-2 align:center
freeing you up of having to
remember to manually run them.


225
00:09:55.629 --> 00:09:57.231 line:-1 align:center
To add a Test action,


226
00:09:57.264 --> 00:10:00.601 line:-2 align:center
I just need to click on
the Plus button and select Test.


227
00:10:06,306 --> 00:10:08,475 line:-2
For Test actions,
I can choose to make them


228
00:10:08,509 --> 00:10:10,577 line:-1
required to pass or not.


229
00:10:10,611 --> 00:10:13,347 line:-2
Marking the action as required
means that the overall build


230
00:10:13.380 --> 00:10:16.083 line:-2 align:center
will fail if this Test action
fails.


231
00:10:16,116 --> 00:10:17,651 line:-2
If I were building up
my test suite,


232
00:10:17,684 --> 00:10:20,621 line:-2
I may choose to set this as
Not Required to Pass


233
00:10:20.654 --> 00:10:22.456 line:-2 align:center
so it doesn't affect
the overall build state.


234
00:10:22.489 --> 00:10:23.790 line:-1 align:center
When it comes to choosing


235
00:10:23,824 --> 00:10:26,793 line:-2
which tests to run,
I have a couple of options.


236
00:10:26,827 --> 00:10:28,829 line:-2
I can choose
Use Scheme Settings


237
00:10:28.862 --> 00:10:31.765 line:-2 align:center
to reference the settings
in my Fruta iOS scheme,


238
00:10:31,798 --> 00:10:33,800 line:-2
or I can
select a particular test plan


239
00:10:33,834 --> 00:10:38,338 line:-2
if I want to hone in
on a certain set of tests.


240
00:10:38,372 --> 00:10:40,574 line:-2
Once I have that set,
all that is left to do


241
00:10:40.607 --> 00:10:44.044 line:-2 align:center
is to choose the simulators
I want to run my tests on.


242
00:10:44.077 --> 00:10:46.580 line:-2 align:center
Xcode Cloud provides
a recommended option,


243
00:10:46.613 --> 00:10:47.581 line:-1 align:center
which is a collection


244
00:10:47,614 --> 00:10:49,883 line:-2
of simulators
with different screen sizes.


245
00:10:49,917 --> 00:10:52,319 line:-2
The recommended option always
tests against the Xcode


246
00:10:52,352 --> 00:10:54,555 line:-2
selected
in the Environment section,


247
00:10:54,588 --> 00:10:56,523 line:-2
but if I choose
specific simulators,


248
00:10:56.557 --> 00:11:00.060 line:-2 align:center
I can also select from a list
of older OS versions.


249
00:11:06.400 --> 00:11:10.304 line:-2 align:center
The last action I want
to run is the Analyze action.


250
00:11:10,337 --> 00:11:12,606 line:-2
The compiler is capable
of automatically finding


251
00:11:12.639 --> 00:11:15.509 line:-2 align:center
many classes of bugs
and warning us about them.


252
00:11:15.542 --> 00:11:17.578 line:-2 align:center
Heeding and fixing these
can save us a great deal


253
00:11:17.611 --> 00:11:19.379 line:-2 align:center
of development time
compared with tracking down


254
00:11:19.413 --> 00:11:21.014 line:-1 align:center
these issues at run time


255
00:11:21.048 --> 00:11:22.883 line:-2 align:center
and will give our users
a much more stable


256
00:11:22.916 --> 00:11:24.918 line:-2 align:center
and bug-free experience
with our app.


257
00:11:24.952 --> 00:11:27.354 line:-2 align:center
However,
because running static analysis


258
00:11:27,387 --> 00:11:31,258 line:-2
is not part of our typical local
iterative development workflow,


259
00:11:31,291 --> 00:11:32,960 line:-1
many of us forget to run it,


260
00:11:32.993 --> 00:11:36.230 line:-2 align:center
only to see the issues mount up
across the team over time.


261
00:11:36,263 --> 00:11:38,365 line:-2
With Xcode Cloud,
you could make sure that


262
00:11:38,398 --> 00:11:42,669 line:-2
static analysis runs every time
you make a code change.


263
00:11:42,703 --> 00:11:46,073 line:-2
To add an Analyze action,
I'll click on the Plus button,


264
00:11:46.106 --> 00:11:49.076 line:-1 align:center
and select Analyze.


265
00:11:52,880 --> 00:11:54,781 line:-2
Like tests,
I have the option to mark


266
00:11:54.815 --> 00:11:58.318 line:-2 align:center
static analysis issues
as Required to Pass or not.


267
00:11:58.352 --> 00:12:00.621 line:-2 align:center
Right now, I only want
to monitor the results


268
00:12:00,654 --> 00:12:04,324 line:-2
of static analysis, so I won't
mark it as Required to Pass.


269
00:12:07.961 --> 00:12:10.564 line:-2 align:center
The last action
is the Build action.


270
00:12:10,597 --> 00:12:12,332 line:-2
On occasion,
you might need to run


271
00:12:12,366 --> 00:12:14,735 line:-1
a simple Xcode Build action.


272
00:12:14,768 --> 00:12:16,537 line:-2
This might be useful
to make sure a particular


273
00:12:16.570 --> 00:12:20.374 line:-2 align:center
secondary build configuration
or scheme still compiles,


274
00:12:20.407 --> 00:12:22.743 line:-2 align:center
or perhaps to ensure
that a framework that is part


275
00:12:22.776 --> 00:12:25.512 line:-2 align:center
of your app
can be built on its own.


276
00:12:25.546 --> 00:12:27.915 line:-2 align:center
Now that I've set
up the Archive, Test,


277
00:12:27.948 --> 00:12:30.684 line:-2 align:center
and Analyze actions
for my pull-request workflow,


278
00:12:30.717 --> 00:12:34.321 line:-2 align:center
I'll hand it off to Kevin to add
post-actions to this workflow.


279
00:12:34.354 --> 00:12:35.956 line:-1 align:center
[Kevin] Thanks, Wesley.


280
00:12:35,989 --> 00:12:37,624 line:-1
With Xcode Cloud workflows,


281
00:12:37,658 --> 00:12:40,460 line:-2
you have the ability
to configure post-actions.


282
00:12:40.494 --> 00:12:43.363 line:-2 align:center
Post-actions run after
all Build, Analyze, Test,


283
00:12:43.397 --> 00:12:45.766 line:-2 align:center
and Archive actions
have completed.


284
00:12:45.799 --> 00:12:48.502 line:-2 align:center
The post-actions you can
configure with Xcode Cloud


285
00:12:48.535 --> 00:12:52.673 line:-2 align:center
are sending notifications
and deploying with TestFlight.


286
00:12:52,706 --> 00:12:55,242 line:-2
Let's first talk
about notifications.


287
00:12:55,275 --> 00:12:57,044 line:-2
There are two types
of notification events


288
00:12:57.077 --> 00:12:58.712 line:-1 align:center
you can send.


289
00:12:58,745 --> 00:13:00,647 line:-2
The first
is when a build succeeds.


290
00:13:00.681 --> 00:13:02.583 line:-2 align:center
You have the option
to send notifications


291
00:13:02.616 --> 00:13:06.119 line:-2 align:center
for all build successes;
only fixes,


292
00:13:06.153 --> 00:13:08.822 line:-2 align:center
which is when a branch or
pull-request build transitions


293
00:13:08,856 --> 00:13:10,791 line:-1
from failing to passing;


294
00:13:10.824 --> 00:13:13.460 line:-1 align:center
or don't notify.


295
00:13:13,493 --> 00:13:16,530 line:-2
The other notification event
is for when a build fails.


296
00:13:16.563 --> 00:13:20.200 line:-2 align:center
You can send a notification
for all build failures;


297
00:13:20,234 --> 00:13:22,970 line:-2
only breaks, which is when
a branch or pull-request build


298
00:13:23.003 --> 00:13:27.174 line:-2 align:center
transitions from passing
to failing; or don't notify.


299
00:13:27,207 --> 00:13:29,810 line:-2
For this workflow,
I want to notify my team


300
00:13:29.843 --> 00:13:32.746 line:-1 align:center
when pull-request builds finish.


301
00:13:32.779 --> 00:13:36.049 line:-2 align:center
Below the Actions section
is post-actions.


302
00:13:36.083 --> 00:13:37.551 line:-1 align:center
To add a Notification action,


303
00:13:37.584 --> 00:13:40.187 line:-2 align:center
I'll click the Plus button
and select Notify.


304
00:13:44,691 --> 00:13:46,059 line:-2
I'll leave All
for Build Success


305
00:13:46,093 --> 00:13:47,561 line:-1
and Build Failure.


306
00:13:47.594 --> 00:13:48.996 line:-1 align:center
Below the Notification Events,


307
00:13:49,029 --> 00:13:52,733 line:-2
I have a couple of options
for where to send notifications.


308
00:13:52.766 --> 00:13:54.101 line:-1 align:center
Xcode Cloud integrates


309
00:13:54,134 --> 00:13:57,404 line:-2
with the popular
collaboration tool Slack.


310
00:13:57,437 --> 00:13:59,373 line:-2
Once a Slack account
has been authorized,


311
00:13:59.406 --> 00:14:03.977 line:-2 align:center
I can click the Plus button
to bring up a list of channels.


312
00:14:05,746 --> 00:14:08,815 line:-2
I'll select the "ci-builds"
channel and click OK.


313
00:14:10.817 --> 00:14:14.154 line:-2 align:center
I also have the option
to add email addresses.


314
00:14:14.188 --> 00:14:16.190 line:-2 align:center
By default,
all users automatically


315
00:14:16,223 --> 00:14:18,625 line:-2
receive notifications
for the builds they kick off,


316
00:14:18.659 --> 00:14:21.495 line:-2 align:center
so you don't have
to add them to this list.


317
00:14:21.528 --> 00:14:23.630 line:-2 align:center
However,
if you have a group email


318
00:14:23.664 --> 00:14:25.632 line:-2 align:center
or if you have users
who want to receive builds


319
00:14:25,666 --> 00:14:27,367 line:-1
they did not kick off,


320
00:14:27.401 --> 00:14:29.169 line:-1 align:center
you can add their email here.


321
00:14:29,203 --> 00:14:31,004 line:-2
Finally,
I'd like to share with you


322
00:14:31.038 --> 00:14:34.174 line:-2 align:center
one of my favorite features
of Xcode Cloud Workflows:


323
00:14:34.208 --> 00:14:37.411 line:-2 align:center
the ability to automatically
deploy with TestFlight.


324
00:14:37,444 --> 00:14:39,246 line:-2
And now,
with TestFlight on Mac,


325
00:14:39.279 --> 00:14:42.216 line:-2 align:center
you can deploy to every platform
Apple has to offer.


326
00:14:42,249 --> 00:14:44,218 line:-2
There are two
TestFlight deployment options


327
00:14:44.251 --> 00:14:45.652 line:-1 align:center
with Xcode Cloud.


328
00:14:45.686 --> 00:14:47.888 line:-2 align:center
Deploying to internal testers
has been enhanced


329
00:14:47.921 --> 00:14:49.122 line:-1 align:center
to quickly send builds


330
00:14:49,156 --> 00:14:51,258 line:-2
to members
of your development team.


331
00:14:51.291 --> 00:14:52.960 line:-2 align:center
Because they're members
of your team,


332
00:14:52.993 --> 00:14:54.628 line:-2 align:center
they can receive builds
that were produced


333
00:14:54.661 --> 00:14:55.963 line:-1 align:center
from pull requests


334
00:14:55.996 --> 00:14:58.799 line:-2 align:center
and builds
without Clean selected.


335
00:14:58.832 --> 00:15:00.400 line:-1 align:center
If you use TestFlight today,


336
00:15:00.434 --> 00:15:02.503 line:-2 align:center
External Testing and App Store
is equivalent


337
00:15:02.536 --> 00:15:04.137 line:-1 align:center
to what you already know.


338
00:15:04.171 --> 00:15:06.673 line:-2 align:center
It's recommended for
candidate and release branches


339
00:15:06.707 --> 00:15:08.775 line:-2 align:center
and can be distributed
to external testers


340
00:15:08,809 --> 00:15:12,145 line:-2
and the App Store,
subject to beta app review.


341
00:15:12.179 --> 00:15:14.581 line:-2 align:center
TestFlight is a great way
to get builds of your app


342
00:15:14.615 --> 00:15:16.550 line:-2 align:center
onto devices
of your teammates


343
00:15:16,583 --> 00:15:19,453 line:-2
and beta testers
outside of your organization.


344
00:15:19.486 --> 00:15:21.555 line:-2 align:center
You can configure
a workflow to automatically


345
00:15:21.588 --> 00:15:24.458 line:-2 align:center
deploy a build to any
TestFlight group you have.


346
00:15:24.491 --> 00:15:25.993 line:-2 align:center
You manage
your TestFlight groups


347
00:15:26.026 --> 00:15:27.294 line:-1 align:center
the same way you do today,


348
00:15:27,327 --> 00:15:30,497 line:-2
in App Store Connect
under the TestFlight tab.


349
00:15:30.531 --> 00:15:33.300 line:-2 align:center
Here, I have multiple internal
and external groups,


350
00:15:33.333 --> 00:15:36.503 line:-2 align:center
and each one of them is
available to me in my workflow.


351
00:15:36.537 --> 00:15:38.505 line:-1 align:center
To automatically deploy


352
00:15:38.539 --> 00:15:40.040 line:-2 align:center
with an internal
TestFlight group,


353
00:15:40,073 --> 00:15:42,276 line:-1
you'll need to do three things.


354
00:15:42,309 --> 00:15:45,345 line:-2
First, you'll need
to add an Archive action.


355
00:15:45,379 --> 00:15:47,915 line:-2
Next, you'll need
to set the Deployment option


356
00:15:47,948 --> 00:15:51,018 line:-2
on the archive to
Internal Testing.


357
00:15:51.051 --> 00:15:51.919 line:-1 align:center
Finally,


358
00:15:51.952 --> 00:15:55.422 line:-2 align:center
you'll need to add a TestFlight
Internal Testing post-action.


359
00:15:55.455 --> 00:15:58.225 line:-2 align:center
Let's configure
our workflow to do just that.


360
00:15:58.258 --> 00:15:59.560 line:-1 align:center
I want this workflow


361
00:15:59.593 --> 00:16:01.962 line:-2 align:center
to automatically
deploy to my QA team.


362
00:16:01,995 --> 00:16:05,632 line:-2
To do that, first, I'll
click on the Archive iOS action,


363
00:16:05.666 --> 00:16:09.069 line:-2 align:center
and select TestFlight
Internal Testing Only.


364
00:16:13.473 --> 00:16:16.844 line:-2 align:center
Doing this means my builds
will be available in TestFlight.


365
00:16:16,877 --> 00:16:19,313 line:-2
This is great if I don't want
to automatically send builds


366
00:16:19,346 --> 00:16:21,982 line:-2
to anyone, but keep
the option to do it later


367
00:16:22.015 --> 00:16:25.285 line:-2 align:center
from the TestFlight section
on App Store Connect.


368
00:16:25,319 --> 00:16:27,087 line:-2
For this app,
I also want to deploy


369
00:16:27.120 --> 00:16:31.024 line:-2 align:center
to my colleagues automatically
whenever a build is produced.


370
00:16:31,058 --> 00:16:35,929 line:-2
To do that, I need to add
a TestFlight post-action.


371
00:16:35.963 --> 00:16:38.665 line:-2 align:center
I'll click the Plus button
beside Post-Actions,


372
00:16:38,699 --> 00:16:41,301 line:-2
and add TestFlight
Internal Testing.


373
00:16:45.906 --> 00:16:48.442 line:-2 align:center
The Archive iOS
artifact is pre-selected,


374
00:16:48.475 --> 00:16:49.810 line:-1 align:center
which is what I want.


375
00:16:49.843 --> 00:16:52.846 line:-2 align:center
I'll hit the Plus button
to add an internal group.


376
00:16:54,081 --> 00:16:56,416 line:-2
Finally,
I'll select the QA team.


377
00:17:01,088 --> 00:17:03,457 line:-2
Now members of my QA
team can verify


378
00:17:03,490 --> 00:17:05,492 line:-2
and test all features
before they're merged


379
00:17:05.526 --> 00:17:07.327 line:-1 align:center
onto the Main branch.


380
00:17:07.361 --> 00:17:09.997 line:-2 align:center
Sending a build to testers
outside of your organization


381
00:17:10,030 --> 00:17:12,032 line:-1
with TestFlight External Testing


382
00:17:12.065 --> 00:17:13.800 line:-2 align:center
is a great way to get feedback
on your app


383
00:17:13,834 --> 00:17:17,137 line:-2
and its features before
submitting to the App Store.


384
00:17:17,171 --> 00:17:19,306 line:-2
This way, you can gain
confidence in your changes


385
00:17:19.339 --> 00:17:20.941 line:-1 align:center
from a wider set of users


386
00:17:20,974 --> 00:17:23,110 line:-2
and potentially make changes
and fix issues


387
00:17:23,143 --> 00:17:25,646 line:-2
before it's released
to the App Store.


388
00:17:25.679 --> 00:17:28.215 line:-2 align:center
To deploy with TestFlight
External Testing,


389
00:17:28,248 --> 00:17:30,684 line:-2
a few more
conditions need to be set.


390
00:17:30.717 --> 00:17:33.487 line:-2 align:center
Select a single branch
in the start condition.


391
00:17:33.520 --> 00:17:35.522 line:-2 align:center
This ensures consistency
in the builds


392
00:17:35,556 --> 00:17:38,792 line:-2
you intend to send
to your external beta testers.


393
00:17:38.825 --> 00:17:41.962 line:-2 align:center
Next, select Clean
in the Environment section.


394
00:17:41,995 --> 00:17:43,797 line:-2
This guarantees
your code will be built


395
00:17:43,830 --> 00:17:47,000 line:-2
from scratch,
without using derived data.


396
00:17:47,034 --> 00:17:49,102 line:-2
Lastly,
set the Deployment setting


397
00:17:49.136 --> 00:17:52.606 line:-2 align:center
in your Archive action
to TestFlight and App Store.


398
00:17:52,639 --> 00:17:53,941 line:-1
After all that is set,


399
00:17:53,974 --> 00:17:56,476 line:-2
configuring the TestFlight
External Testing post-action


400
00:17:56.510 --> 00:17:59.980 line:-2 align:center
is similar to configuring
TestFlight Internal Testing.


401
00:18:00,013 --> 00:18:02,049 line:-2
You simply add
external groups


402
00:18:02,082 --> 00:18:03,984 line:-2
that have been created
in TestFlight.


403
00:18:04,017 --> 00:18:06,920 line:-2
TestFlight External Testing
also has the added ability


404
00:18:06,954 --> 00:18:10,524 line:-1
to deploy to individual testers.


405
00:18:10.557 --> 00:18:11.859 line:-2 align:center
We've just
created a pull-request workflow


406
00:18:11,892 --> 00:18:13,393 line:-1
in Xcode,


407
00:18:13,427 --> 00:18:15,996 line:-2
but you can also create,
edit, and manage workflows


408
00:18:16.029 --> 00:18:17.731 line:-1 align:center
in App Store Connect.


409
00:18:17.764 --> 00:18:20.100 line:-2 align:center
It's a great option
if you're away from Xcode


410
00:18:20,133 --> 00:18:22,669 line:-2
and need to make changes
to your workflows.


411
00:18:22,703 --> 00:18:25,472 line:-2
Now back over to Justin
to make a few recommendations


412
00:18:25.506 --> 00:18:28.375 line:-2 align:center
on the types of workflows
you can create for your team.


413
00:18:28.408 --> 00:18:29.977 line:-1 align:center
Justin?


414
00:18:30,010 --> 00:18:31,044 line:-1
[Justin] Thanks, Kevin.


415
00:18:31,078 --> 00:18:33,547 line:-2
I think the Fruta QA team
will love accessing builds


416
00:18:33,580 --> 00:18:36,416 line:-2
faster with
our pull-request workflow.


417
00:18:36,450 --> 00:18:38,986 line:-2
So as you've seen,
workflows have a lot of power


418
00:18:39,019 --> 00:18:41,922 line:-2
and flexibility to model
the way your teams work.


419
00:18:41,955 --> 00:18:44,124 line:-2
You can create
as many workflows as you need


420
00:18:44,157 --> 00:18:45,492 line:-1
to get your work done.


421
00:18:45.526 --> 00:18:47.961 line:-2 align:center
I know our team
will create several.


422
00:18:47.995 --> 00:18:50.531 line:-2 align:center
Kevin just showed you
a workflow for pull requests,


423
00:18:50,564 --> 00:18:51,865 line:-1
but here are a couple of ideas


424
00:18:51,899 --> 00:18:55,469 line:-2
for more workflows
you and your team can try out.


425
00:18:55,502 --> 00:18:56,737 line:-1
To show your app to users


426
00:18:56,770 --> 00:18:58,438 line:-2
outside
of your development team,


427
00:18:58,472 --> 00:19:00,841 line:-2
you might distribute to
an external TestFlight group


428
00:19:00.874 --> 00:19:03.443 line:-2 align:center
or submit
your app to the App Store.


429
00:19:03,477 --> 00:19:06,380 line:-2
The idea here is that I want to
enforce high quality


430
00:19:06,413 --> 00:19:09,316 line:-2
so my app's users
have a great experience.


431
00:19:09.349 --> 00:19:11.285 line:-2 align:center
I need to run
a workflow on the branches


432
00:19:11,318 --> 00:19:13,320 line:-1
designated for releases.


433
00:19:13.353 --> 00:19:16.089 line:-2 align:center
It should execute a
comprehensive battery of tests,


434
00:19:16,123 --> 00:19:18,358 line:-2
archive the build,
and, finally,


435
00:19:18,392 --> 00:19:20,394 line:-2
deploy
to an external TestFlight group


436
00:19:20.427 --> 00:19:22.329 line:-1 align:center
and into the hands of users.


437
00:19:22,362 --> 00:19:26,733 line:-2
To better illustrate, let me
show you my Release Workflow.


438
00:19:26,767 --> 00:19:28,669 line:-2
To make sure
my workflow will build


439
00:19:28,702 --> 00:19:31,171 line:-2
all of our future releases
as well,


440
00:19:31,205 --> 00:19:34,174 line:-2
I set the start condition to
Every Change to a Branch


441
00:19:34.208 --> 00:19:36.410 line:-1 align:center
on my Release branch.


442
00:19:36,443 --> 00:19:38,245 line:-2
To be thorough,
I want every build


443
00:19:38,278 --> 00:19:40,948 line:-2
from this workflow
to be generated from scratch,


444
00:19:40,981 --> 00:19:44,284 line:-2
so I checked Clean
in the Environment section.


445
00:19:44.318 --> 00:19:46.687 line:-2 align:center
Doing so typically increases
build times


446
00:19:46,720 --> 00:19:48,555 line:-2
since everything
is compiled again,


447
00:19:48,589 --> 00:19:51,458 line:-2
but it gives us confidence
that there are no issues


448
00:19:51,491 --> 00:19:54,294 line:-1
caused by caching.


449
00:19:54.328 --> 00:19:58.031 line:-2 align:center
Notice that I also selected
specific versions of Xcode


450
00:19:58,065 --> 00:20:00,934 line:-1
and macOS for this workflow.


451
00:20:00.968 --> 00:20:03.003 line:-2 align:center
Pinning the tools down
is an important part


452
00:20:03,036 --> 00:20:06,907 line:-2
of converging
and finalizing a release.


453
00:20:06,940 --> 00:20:08,842 line:-1
To ensure that our app will work


454
00:20:08.876 --> 00:20:11.845 line:-2 align:center
across the range of users'
iPhones and iPads,


455
00:20:11,879 --> 00:20:14,314 line:-2
I run our tests on a variety
of simulators


456
00:20:14.348 --> 00:20:17.084 line:-1 align:center
in the Test section.


457
00:20:17,117 --> 00:20:19,820 line:-2
To distribute the build
of our app via TestFlight,


458
00:20:19,853 --> 00:20:21,655 line:-1
I included an Archive action


459
00:20:21,688 --> 00:20:23,524 line:-2
and set the deployment
preparation


460
00:20:23,557 --> 00:20:26,226 line:-1
to TestFlight and App Store.


461
00:20:26,260 --> 00:20:27,995 line:-1
To ensure our beta testers


462
00:20:28.028 --> 00:20:30.063 line:-2 align:center
always get the most
up-to-date build,


463
00:20:30,097 --> 00:20:31,598 line:-1
I set up a post-action


464
00:20:31,632 --> 00:20:34,635 line:-2
to deploy to our external
TestFlight group.


465
00:20:34.668 --> 00:20:37.004 line:-2 align:center
When new code is merged
into our release branch,


466
00:20:37.037 --> 00:20:39.239 line:-2 align:center
it gets automatically built,
tested,


467
00:20:39,273 --> 00:20:41,909 line:-2
and deployed
to our beta testers.


468
00:20:41,942 --> 00:20:44,578 line:-2
Now we can get feedback
quickly on our changes


469
00:20:44,611 --> 00:20:49,183 line:-2
while maintaining confidence
that the quality remains high.


470
00:20:49.216 --> 00:20:51.585 line:-2 align:center
Here's another workflow
you might want to create


471
00:20:51,618 --> 00:20:54,721 line:-2
that performs a deeper set
of testing every night.


472
00:20:54.755 --> 00:20:57.991 line:-2 align:center
My Overnight Testing workflow
runs periodically,


473
00:20:58,025 --> 00:20:59,793 line:-2
testing against
multiple simulators


474
00:20:59.826 --> 00:21:02.729 line:-2 align:center
to cover as many platforms
as I need.


475
00:21:02.763 --> 00:21:05.899 line:-2 align:center
Any test failures get reported
to the QA team,


476
00:21:05.933 --> 00:21:08.635 line:-2 align:center
and since the focus
is entirely on testing,


477
00:21:08.669 --> 00:21:12.272 line:-2 align:center
there's no need
to deploy a build anywhere.


478
00:21:12,306 --> 00:21:14,374 line:-2
I set my start condition
to run this workflow


479
00:21:14,408 --> 00:21:17,578 line:-2
every weeknight by choosing
On a Schedule for a Branch


480
00:21:17.611 --> 00:21:19.279 line:-1 align:center
as my start condition type


481
00:21:19,313 --> 00:21:21,448 line:-1
with weekly frequency.


482
00:21:21,481 --> 00:21:24,384 line:-2
Then, I selected my days
as Monday through Friday


483
00:21:24.418 --> 00:21:25.919 line:-1 align:center
at 1:00 a.m.


484
00:21:25,953 --> 00:21:27,321 line:-1
In the Environment section,


485
00:21:27,354 --> 00:21:30,357 line:-2
I selected the latest
Xcode version to make sure


486
00:21:30.390 --> 00:21:34.461 line:-2 align:center
our app builds successfully
as new tools are released.


487
00:21:34,494 --> 00:21:36,430 line:-2
I want to thoroughly test
our app,


488
00:21:36.463 --> 00:21:38.198 line:-1 align:center
so I selected a few test plans


489
00:21:38,232 --> 00:21:42,536 line:-2
and simulators
that are required to pass.


490
00:21:42.569 --> 00:21:45.005 line:-2 align:center
I also want
to run static analysis,


491
00:21:45.038 --> 00:21:50.177 line:-2 align:center
so I added an Analyze action
and also require that to pass.


492
00:21:50.210 --> 00:21:52.179 line:-2 align:center
Should any
of the previous tests fail,


493
00:21:52,212 --> 00:21:55,649 line:-2
the QA team will find
out with a Notify post-action.


494
00:21:55,682 --> 00:21:58,318 line:-2
I set Build Success to
Don't Notify,


495
00:21:58,352 --> 00:22:00,287 line:-1
and Build Failure to All.


496
00:22:00.320 --> 00:22:02.689 line:-2 align:center
My QA team
has their own Slack channel,


497
00:22:02.723 --> 00:22:05.492 line:-2 align:center
but I could also specify
an email address.


498
00:22:05.526 --> 00:22:07.594 line:-2 align:center
Either way,
the QA team will find out


499
00:22:07.628 --> 00:22:10.731 line:-2 align:center
about any build failures
by the following morning.


500
00:22:10,764 --> 00:22:12,466 line:-1
Running a workflow like this


501
00:22:12.499 --> 00:22:14.001 line:-1 align:center
is a great way to save time


502
00:22:14.034 --> 00:22:16.737 line:-2 align:center
since you and your team can
keep developing during the day


503
00:22:16,770 --> 00:22:19,173 line:-2
and leave Xcode Cloud
to thoroughly test your app


504
00:22:19,206 --> 00:22:20,207 line:-1
at night.


505
00:22:20,240 --> 00:22:23,343 line:-2
And lastly,
under the Product menu in Xcode


506
00:22:23,377 --> 00:22:24,745 line:-1
is Manage Workflows,


507
00:22:24,778 --> 00:22:28,282 line:-2
where I can take a look at all
the workflows our team uses.


508
00:22:28.315 --> 00:22:30.117 line:-2 align:center
I see the Overnight Testing
workflow


509
00:22:30,150 --> 00:22:31,385 line:-1
that I just created


510
00:22:31.418 --> 00:22:32.619 line:-1 align:center
along with the workflows


511
00:22:32.653 --> 00:22:34.955 line:-2 align:center
that Wesley and Kevin
created earlier.


512
00:22:34,988 --> 00:22:38,559 line:-2
As our project grows,
I can add more, edit,


513
00:22:38.592 --> 00:22:42.196 line:-2 align:center
or remove workflows
to suit the team's needs.


514
00:22:42,229 --> 00:22:44,731 line:-2
And that's it
for our team's workflows.


515
00:22:44.765 --> 00:22:47.434 line:-2 align:center
We've shown you how to create
workflows for pull requests,


516
00:22:47,467 --> 00:22:50,337 line:-2
how to configure actions
for different platforms,


517
00:22:50,370 --> 00:22:52,973 line:-2
how to distribute
releases to TestFlight users,


518
00:22:53,006 --> 00:22:54,741 line:-2
and how to set
up overnight testing.


519
00:22:54,775 --> 00:22:55,976 line:-2
But there are so many
more things


520
00:22:56,009 --> 00:22:57,544 line:-1
you could do with workflows.


521
00:22:57,578 --> 00:22:58,478 line:-1
On top of that,


522
00:22:58,512 --> 00:23:00,714 line:-2
you can even create and manage
those workflows


523
00:23:00,747 --> 00:23:02,716 line:-1
from App Store Connect.


524
00:23:02,749 --> 00:23:04,551 line:-2
To learn even more
about workflows,


525
00:23:04,585 --> 00:23:08,322 line:-2
check out "Customize Your
Advanced Xcode Cloud Workflows."


526
00:23:08,355 --> 00:23:09,890 line:-1
If you haven't had a chance yet,


527
00:23:09,923 --> 00:23:11,458 line:-1
watch "Meet Xcode Cloud"


528
00:23:11,491 --> 00:23:13,794 line:-2
to learn how to onboard
your project.


529
00:23:13.827 --> 00:23:16.230 line:-2 align:center
There are also other great
sessions that dive deeper


530
00:23:16,263 --> 00:23:21,235 line:-2
into cloud signing and Xcode's
new support for pull requests.


531
00:23:21.268 --> 00:23:24.338 line:-2 align:center
Xcode Cloud gives your team
the ability to create flexible,


532
00:23:24,371 --> 00:23:26,406 line:-2
extensible workflows
that can adapt


533
00:23:26.440 --> 00:23:27.574 line:-1 align:center
to the way you work


534
00:23:27,608 --> 00:23:29,843 line:-2
and help make sure the team
consistently follows


535
00:23:29.877 --> 00:23:31.778 line:-1 align:center
their development practices.


536
00:23:31.812 --> 00:23:33.947 line:-2 align:center
I hope this session helps
you create workflows


537
00:23:33,981 --> 00:23:35,916 line:-2
to leverage as you
and your team iterate


538
00:23:35.949 --> 00:23:38.652 line:-2 align:center
development
and deliver a high-quality app.


539
00:23:38,685 --> 00:23:42,122 line:-2
Thank you for watching,
and enjoy the rest of WWDC.


540
00:23:42,155 --> 00:23:45,158 line:-1
[music]

