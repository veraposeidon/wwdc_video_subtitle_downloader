2
00:00:00.601 --> 00:00:07.474 line:-1 align:center
[upbeat music]


3
00:00:09.042 --> 00:00:12.312 line:-2 align:center
[Nils] Hello, my name is
Nils Beck, and I welcome you


4
00:00:12.312 --> 00:00:16.383 line:-2 align:center
to "Qualities of great iPad and
iPhone apps on Macs with M1."


5
00:00:17.618 --> 00:00:19.720 line:-2 align:center
More than a million
iPad and iPhone apps


6
00:00:19,720 --> 00:00:22,723 line:-2
are already available
on the Mac App Store.


7
00:00:22.723 --> 00:00:25.292 line:-2 align:center
The experience is great
on macOS Big Sur,


8
00:00:25,292 --> 00:00:28,061 line:-2
and we've further improved
it in macOS Monterey.


9
00:00:28.061 --> 00:00:32.733 line:-2 align:center
In this video, we'll discuss
how we mapped several iOS APIs


10
00:00:32,733 --> 00:00:35,602 line:-2
to the corresponding
Mac features, some general


11
00:00:35.602 --> 00:00:38.805 line:-2 align:center
best practices to keep in mind
that will also help


12
00:00:38,805 --> 00:00:41,141 line:-1
your app shine on Macs with M1,


13
00:00:41.141 --> 00:00:44.611 line:-2 align:center
improvements that we
made in macOS Big Sur


14
00:00:44,611 --> 00:00:45,879 line:-1
software updates,


15
00:00:45.879 --> 00:00:48.482 line:-1 align:center
as well as in macOS Monterey,


16
00:00:48,482 --> 00:00:50,384 line:-1
and then we'll finish off with


17
00:00:50.384 --> 00:00:53.253 line:-2 align:center
Mac App Store
deployment considerations.


18
00:00:53,253 --> 00:00:57,157 line:-2
iPad and iPhone apps on Macs
with M1 are the easiest way


19
00:00:57.157 --> 00:01:00.427 line:-2 align:center
to expand your existing
app's reach to the Mac.


20
00:01:00,427 --> 00:01:04,164 line:-2
This is your unmodified
iPad or iPhone app,


21
00:01:04,164 --> 00:01:07,301 line:-2
as submitted and approved
for the iOS App Store,


22
00:01:07.301 --> 00:01:09.069 line:-2 align:center
offered through
the Mac App Store


23
00:01:09.069 --> 00:01:11.972 line:-1 align:center
to anyone with an M1 Mac.


24
00:01:11.972 --> 00:01:15.876 line:-2 align:center
To make this possible, we focus
heavily on compatibility.


25
00:01:15,876 --> 00:01:19,213 line:-2
System APIs are mapped
to their natural Mac equivalents


26
00:01:19.213 --> 00:01:20.814 line:-1 align:center
wherever possible.


27
00:01:20.814 --> 00:01:23.550 line:-2 align:center
Our aim is to ensure
a smooth app experience


28
00:01:23.550 --> 00:01:27.387 line:-2 align:center
on the Mac without you
making any changes.


29
00:01:27.387 --> 00:01:30.090 line:-2 align:center
And most
existing apps work great!


30
00:01:30,090 --> 00:01:33,193 line:-2
This includes everything
from small iPhone utilities


31
00:01:33.193 --> 00:01:36.964 line:-2 align:center
to cutting-edge iPad
games and Pro Apps.


32
00:01:36.964 --> 00:01:39.833 line:-2 align:center
A variety of extensions
are also supported.


33
00:01:39.833 --> 00:01:43.237 line:-2 align:center
For example, share extensions,
WidgetKit widgets,


34
00:01:43,237 --> 00:01:45,038 line:-1
photo editing extensions,


35
00:01:45.038 --> 00:01:49.576 line:-2 align:center
VPN network extensions,
audio units, and more.


36
00:01:49.576 --> 00:01:52.946 line:-2 align:center
So, it's very likely that your
existing iPad or iPhone app


37
00:01:52.946 --> 00:01:56.617 line:-2 align:center
already works well on the Mac,
right out of the box.


38
00:01:56.617 --> 00:01:59.419 line:-2 align:center
Of course, we support all
basic functionality,


39
00:01:59.419 --> 00:02:03.123 line:-2 align:center
such as text interactions,
copy and paste, a Mac menu bar,


40
00:02:03,123 --> 00:02:06,960 line:-2
and so on, but there is also
a lot of advanced functionality,


41
00:02:06.960 --> 00:02:09.997 line:-2 align:center
like background app refresh,
user notifications,


42
00:02:09,997 --> 00:02:13,367 line:-2
camera access, Siri intents,
and more.


43
00:02:13,367 --> 00:02:16,370 line:0
Many of these topics are
discussed in the video,


44
00:02:16,370 --> 00:02:19,239 line:0
"iPad and iPhone apps
on Apple silicon Macs,"


45
00:02:19,239 --> 00:02:22,109 line:0
so check that out for more
details.


46
00:02:22.109 --> 00:02:24.511 line:-2 align:center
And when you want your
app to take advantage


47
00:02:24.511 --> 00:02:26.914 line:-2 align:center
of even more of what
the Mac has to offer,


48
00:02:26,914 --> 00:02:30,117 line:-2
consider building a Mac Catalyst
version of your app.


49
00:02:30,117 --> 00:02:32,786 align:center
You can learn more about
that in the videos,


50
00:02:32,786 --> 00:02:35,189 line:0
"Qualities of a great
Mac Catalyst app"


51
00:02:35,189 --> 00:02:38,659 line:0
and "What's New
in Mac Catalyst."


52
00:02:38.659 --> 00:02:42.529 line:-2 align:center
Now, let's dive into more detail
for some of the APIs


53
00:02:42.529 --> 00:02:44.164 line:-1 align:center
I just mentioned.


54
00:02:44,164 --> 00:02:47,267 line:-2
You are likely already using
these to make your app great


55
00:02:47.267 --> 00:02:49.670 line:-2 align:center
on iPad and iPhone,
and we've bridged them


56
00:02:49,670 --> 00:02:53,507 line:-2
to seamlessly give you the same
great features on the Mac.


57
00:02:53.507 --> 00:02:56.643 line:-2 align:center
Naturally,
you can use the Mac keyboard


58
00:02:56,643 --> 00:02:59,146 line:-1
for text input into text fields,


59
00:02:59,146 --> 00:03:02,316 line:-2
as well as for UIKeyCommand
keyboard shortcuts.


60
00:03:02,316 --> 00:03:05,018 line:-2
But if you need more
control and want to write


61
00:03:05.018 --> 00:03:07.221 line:-2 align:center
your own keypress handling,
you can do that


62
00:03:07.221 --> 00:03:11.058 line:-2 align:center
with the UIPress API
on UIResponder.


63
00:03:11,058 --> 00:03:14,394 line:-2
All Macs have a physical
keyboard, so apps that have


64
00:03:14.394 --> 00:03:18.065 line:-2 align:center
taken the time to add support
for physical keyboards on iPad


65
00:03:18,065 --> 00:03:21,935 line:-2
and iPhone are greatly improved
on the Mac at the same time.


66
00:03:21.935 --> 00:03:24.938 line:-2 align:center
Next,
let's talk about the menu bar.


67
00:03:24.938 --> 00:03:28.141 line:-2 align:center
As a reminder, the Mac
menu bar is intended to help


68
00:03:28.141 --> 00:03:32.179 line:-2 align:center
with the discoverability of app
features and keyboard shortcuts.


69
00:03:32.179 --> 00:03:35.315 line:-2 align:center
The menu bar structure
is determined at launch,


70
00:03:35,315 --> 00:03:38,385 line:-2
and should remain more
or less constant after that.


71
00:03:38.385 --> 00:03:42.222 line:-2 align:center
Items are not added or removed,
but rather, they get enabled


72
00:03:42,222 --> 00:03:45,893 line:-2
or disabled, depending
on whether they currently apply.


73
00:03:46.960 --> 00:03:49.630 line:-2 align:center
We automatically populate
your app's menu bar,


74
00:03:49.630 --> 00:03:52.633 line:-2 align:center
taking into account
your app's features.


75
00:03:52.633 --> 00:03:55.302 line:-2 align:center
For example, we might add
menu items to create


76
00:03:55.302 --> 00:03:57.804 line:-2 align:center
a new window,
to work with rich texts,


77
00:03:57,804 --> 00:04:00,674 line:-2
or to change the device
orientation.


78
00:04:00,674 --> 00:04:03,777 line:-2
Note that UIKeyCommands
that are directly attached


79
00:04:03,777 --> 00:04:06,947 line:-2
to UIResponders through
the keyCommands property


80
00:04:06.947 --> 00:04:11.018 line:-2 align:center
do not appear in the menu bar,
but their keyboard shortcuts


81
00:04:11.018 --> 00:04:14.021 line:-2 align:center
will take priority over
the shortcuts of menu items,


82
00:04:14.021 --> 00:04:16.256 line:-1 align:center
whenever they apply.


83
00:04:16,256 --> 00:04:19,459 line:-2
You might already be
using the more recent


84
00:04:19.459 --> 00:04:23.730 line:-2 align:center
UIMenuBuilder API that we
introduced in iOS 13.


85
00:04:23.730 --> 00:04:27.901 line:-2 align:center
This adds semantic structure
to your UIKeyCommands.


86
00:04:27,901 --> 00:04:31,605 line:-2
This structure is visible
in the Keyboard Shortcuts menu


87
00:04:31,605 --> 00:04:34,141 line:-2
that appears when you
hold down the Command key


88
00:04:34,141 --> 00:04:37,277 line:-1
on an iPad with a keyboard.


89
00:04:37.277 --> 00:04:40.147 line:-2 align:center
On the Mac, the default
structure that gets passed into


90
00:04:40,147 --> 00:04:43,317 line:-2
the builder will be different,
but your customizations


91
00:04:43.317 --> 00:04:46.820 line:-2 align:center
to the structure will be
reflected in the main menu.


92
00:04:46,820 --> 00:04:49,723 line:-2
UIKeyCommands rely
on the responder chain


93
00:04:49,723 --> 00:04:52,593 line:-2
to find an applicable
target for their action,


94
00:04:52.593 --> 00:04:56.463 line:-2 align:center
and this determines whether
or not a menu item is enabled.


95
00:04:56,463 --> 00:04:59,199 line:0
For much more on this,
check out the videos,


96
00:04:59,199 --> 00:05:01,468 align:center
"Take your iPad apps
to the next level,"


97
00:05:01,468 --> 00:05:04,071 align:center
"Focus on iPad keyboard
navigation,"


98
00:05:04,071 --> 00:05:07,875 align:center
and "Qualities of a great
Mac Catalyst app."


99
00:05:07,875 --> 00:05:10,777 line:-2
For apps that use drag
and drop on iPad and iPhone,


100
00:05:10.777 --> 00:05:14.147 line:-2 align:center
using UIDragInteraction
and UIDropInteraction,


101
00:05:14.147 --> 00:05:17.317 line:-2 align:center
this automatically carries
over to the Mac as well.


102
00:05:17.317 --> 00:05:20.320 line:-2 align:center
This lets people seamlessly
drag content between


103
00:05:20.320 --> 00:05:22.956 line:-2 align:center
your app and others,
like in this example,


104
00:05:22.956 --> 00:05:27.227 line:-2 align:center
where I'm dragging a QR code
from Qrafter to my desktop.


105
00:05:27,227 --> 00:05:28,862 line:-1
And for apps


106
00:05:28.862 --> 00:05:31.198 line:-2 align:center
that print with
UIPrintInteractionController,


107
00:05:31.198 --> 00:05:34.301 line:-2 align:center
this is automatically
bridged to a Mac print dialog


108
00:05:34.301 --> 00:05:37.638 line:-2 align:center
when printing
is initiated in your code.


109
00:05:37,638 --> 00:05:41,141 line:-2
Even better, when you adopt
the new Info.plist key


110
00:05:41,141 --> 00:05:43,877 line:-2
"UIApplicationSupports
PrintCommand"


111
00:05:43,877 --> 00:05:47,014 line:-2
and implement the corresponding
standard print action,


112
00:05:47,014 --> 00:05:51,018 line:-2
the Print and Export as PDF
menu items will be added


113
00:05:51.018 --> 00:05:53.787 line:-2 align:center
to your app's menu
bar automatically.


114
00:05:53,787 --> 00:05:55,889 align:center
For more details on this
new API,


115
00:05:55,889 --> 00:05:59,092 line:0
check out "What's new
in Mac Catalyst."


116
00:05:59.092 --> 00:06:01.962 line:-2 align:center
Many apps use a settings bundle,
and we will automatically


117
00:06:01,962 --> 00:06:04,865 line:-2
generate a Mac-style
preference panel from this.


118
00:06:04.865 --> 00:06:07.935 line:-2 align:center
It is also common to put
credits in the settings bundle,


119
00:06:07.935 --> 00:06:09.803 line:-1 align:center
and we identify such cases


120
00:06:09.803 --> 00:06:12.806 line:-2 align:center
and move that text
to the About box for you.


121
00:06:12,806 --> 00:06:15,209 line:-2
But if you want more
control over what is shown


122
00:06:15,209 --> 00:06:18,045 line:-2
in the About box on the Mac,
you now also have


123
00:06:18.045 --> 00:06:20.948 line:-2 align:center
the option to add a credits
file to your bundle.


124
00:06:20.948 --> 00:06:24.518 line:-2 align:center
You can use RTF,
RTFD, or HTML files,


125
00:06:24.518 --> 00:06:27.087 line:-1 align:center
the same way Mac apps do this.


126
00:06:27.087 --> 00:06:29.690 line:-2 align:center
There are a number
of iPad-centric APIs


127
00:06:29.690 --> 00:06:33.160 line:-2 align:center
that will help make your
app a great iPad app.


128
00:06:33.160 --> 00:06:35.929 line:-2 align:center
These all come across
wonderfully on the Mac.


129
00:06:35,929 --> 00:06:37,798 line:-1
So, by making a great iPad app,


130
00:06:37,798 --> 00:06:40,968 line:-2
you're also making your app
better on Macs with M1.


131
00:06:40.968 --> 00:06:43.237 line:-2 align:center
If your app supports
multiple scenes


132
00:06:43,237 --> 00:06:45,873 line:-2
according to the
UIApplicationSupports


133
00:06:45.873 --> 00:06:48.408 line:-1 align:center
MultipleScenes Info.plist key,


134
00:06:48.408 --> 00:06:52.012 line:-2 align:center
each scene is translated
into a separate window,


135
00:06:52.012 --> 00:06:54.047 line:-2 align:center
and we automatically
add a menu item


136
00:06:54,047 --> 00:06:56,416 line:-1
to create a new scene.


137
00:06:56.416 --> 00:06:59.520 line:-2 align:center
On the Mac,
a system-wide setting determines


138
00:06:59.520 --> 00:07:02.289 line:-2 align:center
whether all windows are
closed when the app quits,


139
00:07:02.289 --> 00:07:06.193 line:-2 align:center
or whether existing windows
are restored on the next launch.


140
00:07:06,193 --> 00:07:09,296 line:-2
We respect this setting if your
app supports multiple scenes,


141
00:07:09.296 --> 00:07:12.432 line:-2 align:center
so don't be surprised
if all scenes disconnect,


142
00:07:12,432 --> 00:07:16,170 line:-2
or if state restoration does not
occur in some cases.


143
00:07:16.170 --> 00:07:19.006 line:-2 align:center
iPad multitasking support,
on the other hand,


144
00:07:19,006 --> 00:07:23,010 line:-2
automatically translates
to resizable windows on macOS.


145
00:07:23,010 --> 00:07:26,847 line:-2
Since your app already supports
dynamic layout changes on iPad,


146
00:07:26,847 --> 00:07:29,917 line:-2
you get live resizing
windows on the Mac.


147
00:07:29,917 --> 00:07:33,420 line:-2
You can limit the range
of allowable scene sizes using


148
00:07:33,420 --> 00:07:39,226 line:-2
the minimumSize and maximumSize
API on UIWindowScene.


149
00:07:39,226 --> 00:07:41,962 line:-2
Note that only the window
scene size will change


150
00:07:41,962 --> 00:07:43,931 line:-1
when the window is resized.


151
00:07:43.931 --> 00:07:46.834 line:-2 align:center
The UI screen size,
on the other hand, will continue


152
00:07:46.834 --> 00:07:50.537 line:-2 align:center
to report the device size, which
doesn't change in this case.


153
00:07:50,537 --> 00:07:52,906 line:-2
So, make sure you don't use
the screen size


154
00:07:52,906 --> 00:07:55,576 line:-2
for your layout calculations,
even on iPad,


155
00:07:55.576 --> 00:07:59.246 line:-2 align:center
or your UI elements will
end up in the wrong place.


156
00:07:59,246 --> 00:08:02,182 line:-2
If your app expects to be
in control of the entire


157
00:08:02.182 --> 00:08:03.784 line:-1 align:center
screen of the device,


158
00:08:03,784 --> 00:08:07,120 line:-2
we will use a fixed
scene size and aspect ratio.


159
00:08:07.120 --> 00:08:11.758 line:-2 align:center
But window contents may be
scaled up or down as needed,


160
00:08:11.758 --> 00:08:15.495 line:-2 align:center
in a way that is transparent
to your app.


161
00:08:15.495 --> 00:08:17.464 line:-2 align:center
And if your app supports
multiple


162
00:08:17.464 --> 00:08:19.199 line:-1 align:center
user interface orientations,


163
00:08:19,199 --> 00:08:21,468 line:-2
the window orientation
can be changed


164
00:08:21,468 --> 00:08:24,304 line:-2
using the automatically added
menu bar items,


165
00:08:24,304 --> 00:08:27,274 line:-2
or by dragging the edges
of the window.


166
00:08:27.274 --> 00:08:31.111 line:-2 align:center
Here, I am using the menu bar
items to change the orientation


167
00:08:31,111 --> 00:08:34,381 line:-2
of the Chess.com app,
and the user interface


168
00:08:34.381 --> 00:08:38.752 line:-2 align:center
adapts to make optimal use
of each device orientation.


169
00:08:38,752 --> 00:08:41,355 line:-2
These and other mappings
are able to remove


170
00:08:41.355 --> 00:08:44.057 line:-2 align:center
most of the friction
when bringing your iPad


171
00:08:44.057 --> 00:08:47.127 line:-2 align:center
or iPhone app to the Mac,
but let's touch on


172
00:08:47.127 --> 00:08:49.196 line:-2 align:center
some coding practices
that you should follow


173
00:08:49,196 --> 00:08:52,733 line:-2
to ensure that your app
works well across all platforms,


174
00:08:52,733 --> 00:08:54,268 line:-1
including the Mac.


175
00:08:54.268 --> 00:08:57.204 line:-2 align:center
When using Apple frameworks,
it is important that you


176
00:08:57,204 --> 00:09:00,007 line:-2
only use
officially supported APIs,


177
00:09:00.007 --> 00:09:02.543 line:-2 align:center
as undocumented methods
in our frameworks


178
00:09:02,543 --> 00:09:06,146 line:-2
may not exist on the Mac,
or could change at any time.


179
00:09:07.548 --> 00:09:10.284 line:-2 align:center
Avoid hard-coding paths
to file system locations,


180
00:09:10,284 --> 00:09:12,819 line:-2
as these
may be different on the Mac.


181
00:09:12.819 --> 00:09:16.089 line:-2 align:center
For example, do not prefix
your paths with "/private,"


182
00:09:16.089 --> 00:09:17.591 line:-1 align:center
or "var mobile."


183
00:09:17.591 --> 00:09:20.127 line:-2 align:center
Instead,
use the appropriate APIs


184
00:09:20,127 --> 00:09:23,497 line:-2
to determine each path
at runtime.


185
00:09:23,497 --> 00:09:27,401 line:-2
Similarly, for UI that is not
under your direct control,


186
00:09:27.401 --> 00:09:30.771 line:-2 align:center
it is best not to make
assumptions in your code about


187
00:09:30.771 --> 00:09:33.874 line:-2 align:center
the onscreen positioning
of views and alerts,


188
00:09:33,874 --> 00:09:36,944 line:-2
or the exact setup
of such view hierarchies,


189
00:09:36,944 --> 00:09:39,446 line:-2
as these can be drastically
different on the Mac.


190
00:09:39.446 --> 00:09:42.749 line:-2 align:center
Please also be aware
that the available camera


191
00:09:42,749 --> 00:09:44,818 line:-1
resolutions and orientations


192
00:09:44.818 --> 00:09:47.287 line:-2 align:center
might be quite different
on the Mac.


193
00:09:47,287 --> 00:09:50,958 line:-2
For example, if your iPhone app
is in portrait orientation


194
00:09:50,958 --> 00:09:53,861 line:-2
when a picture is taken,
you might expect the resulting


195
00:09:53,861 --> 00:09:56,864 line:-2
camera picture to be in portrait
orientation as well.


196
00:09:56,864 --> 00:09:59,433 line:-2
But this is not necessarily
the case


197
00:09:59.433 --> 00:10:03.070 line:-2 align:center
when the app is in portrait
orientation on the Mac.


198
00:10:03,070 --> 00:10:05,906 line:-2
You might receive images in
landscape orientation instead,


199
00:10:05,906 --> 00:10:08,375 line:-2
because that's
how the camera is positioned.


200
00:10:08,375 --> 00:10:11,378 line:-2
We've already included
a number of heuristics


201
00:10:11,378 --> 00:10:14,114 line:-2
to improve compatibility
with many apps.


202
00:10:14,114 --> 00:10:16,216 line:-2
For example,
we will give you the picture


203
00:10:16,216 --> 00:10:17,851 line:-2
of the Mac's front-facing
camera,


204
00:10:17.851 --> 00:10:20.153 line:-2 align:center
even when you asked
for the rear-facing camera.


205
00:10:22,489 --> 00:10:27,361 line:-2
AVCaptureDeviceDiscoverySession
and related AVFoundation APIs


206
00:10:27,361 --> 00:10:30,230 line:-2
to gather information about
the available cameras


207
00:10:30.230 --> 00:10:34.234 line:-2 align:center
and their true properties,
such as the preview dimensions.


208
00:10:34,234 --> 00:10:37,304 line:-2
And you should aim to handle
all possible configurations


209
00:10:37.304 --> 00:10:39.673 line:-1 align:center
well in your UI.


210
00:10:39.673 --> 00:10:42.509 line:-2 align:center
Also keep in mind
that some hardware features


211
00:10:42.509 --> 00:10:44.611 line:-1 align:center
are unavailable on the Mac.


212
00:10:44.611 --> 00:10:46.813 line:-2 align:center
Your code should be
able to handle such


213
00:10:46.813 --> 00:10:50.050 line:-2 align:center
situations gracefully,
and offer alternatives.


214
00:10:50.050 --> 00:10:53.020 line:-2 align:center
For example,
augmented reality with ARKit


215
00:10:53.020 --> 00:10:55.255 line:-1 align:center
is not supported on the Mac.


216
00:10:55.255 --> 00:10:58.158 line:-2 align:center
If ARKit is the core
functionality of your app,


217
00:10:58.158 --> 00:11:01.094 line:-2 align:center
you have likely made it
a required device capability,


218
00:11:01,094 --> 00:11:04,064 line:-2
so your app will not appear
on the Mac App Store.


219
00:11:04.064 --> 00:11:06.300 line:-2 align:center
But if the ARKit
is an optional feature,


220
00:11:06,300 --> 00:11:09,169 line:-2
you should already be checking
the isSupported property


221
00:11:09.169 --> 00:11:12.239 line:-2 align:center
of the appropriate
ARConfiguration subclass.


222
00:11:12,239 --> 00:11:15,576 line:-2
And for the best experience
on the Mac, and elsewhere,


223
00:11:15.576 --> 00:11:19.012 line:-2 align:center
make sure you only show
augmented reality features


224
00:11:19.012 --> 00:11:22.482 line:-2 align:center
in your UI on devices
that have this capability.


225
00:11:23,851 --> 00:11:27,588 line:-2
If your app relies on direct
Multi-Touch or on CoreMotion,


226
00:11:27,588 --> 00:11:30,791 line:-2
consider additionally offering
alternatives that are more


227
00:11:30.791 --> 00:11:33.760 line:-2 align:center
suitable for the Mac
keyboard and trackpad.


228
00:11:33,760 --> 00:11:35,896 line:-1
That said, Touch Alternatives


229
00:11:35,896 --> 00:11:37,865 line:-2
may be able to help
in this case.


230
00:11:37,865 --> 00:11:39,800 line:-2
I'll talk more about
that in a moment.


231
00:11:39.800 --> 00:11:43.036 line:-2 align:center
And if you use CoreLocation,
your app should remain usable


232
00:11:43.036 --> 00:11:47.241 line:-2 align:center
even if no accurate
location data is available.


233
00:11:47.241 --> 00:11:50.377 line:-2 align:center
For example, you can
offer manual location entry


234
00:11:50.377 --> 00:11:53.447 line:-2 align:center
as an alternative,
like the Lowe's app does here.


235
00:11:53.447 --> 00:11:56.016 line:-2 align:center
Next, let's go over some
of the improvements


236
00:11:56,016 --> 00:11:59,887 line:-2
we've made since we first
started shipping Macs with M1.


237
00:11:59,887 --> 00:12:04,825 line:-2
In macOS Big Sur 11.3, we made
several improvements to the way


238
00:12:04,825 --> 00:12:08,896 line:-2
that windows of iPad and iPhone
apps behave on the Mac.


239
00:12:08.896 --> 00:12:11.798 line:-2 align:center
If your app has
a fixed content size


240
00:12:11,798 --> 00:12:14,067 line:-2
because it does
not support multitasking


241
00:12:14,067 --> 00:12:16,937 line:-2
but it does support
large device sizes,


242
00:12:16.937 --> 00:12:20.240 line:-2 align:center
at launch we will now pick the
largest supported device size


243
00:12:20.240 --> 00:12:23.644 line:-2 align:center
that fits onto the screen
where the app is launching.


244
00:12:23,644 --> 00:12:26,013 line:-2
As far as your app is concerned,
the device size


245
00:12:26.013 --> 00:12:28.515 line:-2 align:center
still remains fixed
for the entire session,


246
00:12:28.515 --> 00:12:32.419 line:-2 align:center
but the window makes much better
use of the available space.


247
00:12:32,419 --> 00:12:34,021 line:-2
There is
also a preference to use


248
00:12:34,021 --> 00:12:36,390 line:-2
the smallest supported
device size instead.


249
00:12:36,390 --> 00:12:38,926 line:-2
And as I mentioned earlier,
the window contents


250
00:12:38.926 --> 00:12:41.461 line:-2 align:center
will be scaled
up or down as needed.


251
00:12:41.461 --> 00:12:44.131 line:-2 align:center
For example, when I make the
window full screen,


252
00:12:44,131 --> 00:12:47,034 line:-2
the window contents are
automatically scaled up


253
00:12:47,034 --> 00:12:48,802 line:-1
to fit the available space


254
00:12:48.802 --> 00:12:52.139 line:-2 align:center
while maintaining
the original scene aspect ratio.


255
00:12:52.139 --> 00:12:54.875 line:-2 align:center
Or, if the window is
moved to a smaller screen


256
00:12:54,875 --> 00:12:57,244 line:-2
after launch,
we will automatically reduce


257
00:12:57,244 --> 00:13:00,380 line:-2
the scale as needed to ensure
that the window still fits.


258
00:13:00.380 --> 00:13:04.785 line:-2 align:center
It is now also possible
to use the Window Zoom feature


259
00:13:04,785 --> 00:13:06,920 line:-2
to toggle between
two zoom factors,


260
00:13:06.920 --> 00:13:10.691 line:-2 align:center
one prioritizing the natural
size of UI elements,


261
00:13:10,691 --> 00:13:14,328 line:-2
the other prioritizing
pixel-perfect accuracy.


262
00:13:14,328 --> 00:13:16,997 line:-2
Here, I am using this
feature to switch between


263
00:13:16,997 --> 00:13:21,268 line:-2
the two zoom factors
in the Chess.com app.


264
00:13:21.268 --> 00:13:24.171 line:-2 align:center
Game controllers have been
supported from day one through


265
00:13:24.171 --> 00:13:26.073 line:-2 align:center
the GameController.framework,
which is


266
00:13:26,073 --> 00:13:29,510 line:-2
available on all of our
gaming-capable platforms.


267
00:13:29.510 --> 00:13:32.379 line:-2 align:center
Starting
with macOS Big Sur 11.3,


268
00:13:32,379 --> 00:13:35,182 line:-2
we've made it possible
to use the Mac's keyboard


269
00:13:35,182 --> 00:13:37,818 line:-2
and trackpad as
a virtual game controller.


270
00:13:37,818 --> 00:13:40,854 line:-2
So, even if you don't
have an actual controller handy,


271
00:13:40.854 --> 00:13:44.358 line:-2 align:center
it is easy to use the keyboard
to access all the functionality


272
00:13:44,358 --> 00:13:47,160 line:-2
that your game maps
to controller buttons.


273
00:13:47.160 --> 00:13:50.230 line:-2 align:center
And in macOS Monterey,
we've further refined this


274
00:13:50.230 --> 00:13:52.199 line:-2 align:center
with the addition
of a sensitivity slider


275
00:13:52,199 --> 00:13:54,868 line:-2
and pointer hiding,
as shown on this picture


276
00:13:54,868 --> 00:13:57,237 line:-2
of the corresponding
preference panel.


277
00:13:57,237 --> 00:13:58,939 line:0
For more on this framework,


278
00:13:58,939 --> 00:14:02,209 align:center
check out "Advancements
in Game Controllers."


279
00:14:02.209 --> 00:14:05.245 line:-2 align:center
Moreover, since day one,
Touch Alternatives


280
00:14:05.245 --> 00:14:07.080 line:-2 align:center
have mapped the keyboard and
trackpad


281
00:14:07.080 --> 00:14:08.916 line:-2 align:center
to several interaction
styles


282
00:14:08,916 --> 00:14:12,085 line:-2
that would otherwise not
be easy to use on the Mac,


283
00:14:12.085 --> 00:14:15.522 line:-2 align:center
such as Multi-Touch,
drag, tap, and swipe.


284
00:14:15.522 --> 00:14:20.027 line:-2 align:center
And with MacOS 11.3, we've made
a number of improvements.


285
00:14:20,027 --> 00:14:22,062 line:-2
For example,
you now have the ability


286
00:14:22,062 --> 00:14:24,498 line:-1
to virtually tilt your device.


287
00:14:24.498 --> 00:14:27.167 line:-2 align:center
This opens the door to a number
of additional games.


288
00:14:27.167 --> 00:14:31.471 line:-2 align:center
Also, the preference panel
now includes a helpful graphical


289
00:14:31,471 --> 00:14:35,142 line:-2
representation that illustrates
how to access each of the five


290
00:14:35,142 --> 00:14:38,946 line:-2
interaction styles through
the keyboard and trackpad.


291
00:14:38.946 --> 00:14:41.915 line:-2 align:center
In addition,
we've made it possible for apps


292
00:14:41.915 --> 00:14:45.219 line:-2 align:center
to automatically opt themselves
into Touch Alternatives.


293
00:14:45,219 --> 00:14:47,421 line:-2
When you opt in,
an onboarding dialog


294
00:14:47,421 --> 00:14:49,056 line:-1
is shown on first launch,


295
00:14:49,056 --> 00:14:52,125 line:-2
in order to help with the
discovery of this feature.


296
00:14:52,125 --> 00:14:53,527 line:-2
The graphics are similar
to those


297
00:14:53.527 --> 00:14:55.929 line:-2 align:center
from the preference panel,
but we only highlight


298
00:14:55.929 --> 00:14:58.866 line:-2 align:center
the interaction styles
that you've selected.


299
00:14:58.866 --> 00:15:01.969 line:-2 align:center
In this example, only Tilt
and Multi-Touch are shown.


300
00:15:03,871 --> 00:15:06,206 line:-2
If you determine that your
app would benefit from


301
00:15:06.206 --> 00:15:09.309 line:-2 align:center
any of these Touch Alternatives,
here's how you can enable


302
00:15:09.309 --> 00:15:12.412 line:-2 align:center
Touch Alternatives for your app,
right from the start.


303
00:15:12.412 --> 00:15:15.048 line:-2 align:center
All you need to do is
add a new.plist file


304
00:15:15.048 --> 00:15:16.350 line:-1 align:center
to your bundle, named


305
00:15:16,350 --> 00:15:21,221 line:-2
"com.apple.uikit.inputalternativ
es.plist."


306
00:15:21.221 --> 00:15:25.125 line:-2 align:center
Then, add the keys and values
shown in the snippet.


307
00:15:25,125 --> 00:15:26,860 line:-2
And for the requiredOnboarding
array,


308
00:15:26,860 --> 00:15:30,163 line:-2
include only the features that
are useful for your app.


309
00:15:30.163 --> 00:15:31.832 line:-2 align:center
That way,
only those features are


310
00:15:31.832 --> 00:15:34.101 line:-2 align:center
highlighted
in the onboarding dialog.


311
00:15:34.101 --> 00:15:36.036 line:-1 align:center
Let me demonstrate this for you.


312
00:15:36.036 --> 00:15:38.772 line:-2 align:center
Take, for example,
this iPad game called


313
00:15:38.772 --> 00:15:43.177 line:-2 align:center
"Assoluto Racing," running
unmodified on a Mac with M1.


314
00:15:43.177 --> 00:15:46.046 line:-2 align:center
The app enables Touch
Alternatives automatically,


315
00:15:46.046 --> 00:15:48.048 line:-2 align:center
right from the start,
so on first launch,


316
00:15:48.048 --> 00:15:51.685 line:-2 align:center
this onboarding dialog shows
us the keyboard controls.


317
00:15:51,685 --> 00:15:54,721 align:center
But first, let's show the
software keyboard


318
00:15:54,721 --> 00:15:57,424 line:0
and take the window full screen.


319
00:15:57.424 --> 00:16:00.561 line:-2 align:center
The contents are now scaled
up to fit the screen,


320
00:16:00,561 --> 00:16:03,597 line:-2
and we maintain the iPad
aspect ratio.


321
00:16:11,038 --> 00:16:12,739 line:-2
Let's head over to the
"Airport" level


322
00:16:12,739 --> 00:16:14,474 line:-1
for some freestyle drifting.


323
00:16:16,543 --> 00:16:19,179 line:-2
This app uses CoreMotion,
so that on iPad,


324
00:16:19,179 --> 00:16:21,615 line:-1
I can tilt the device to steer.


325
00:16:21,615 --> 00:16:24,785 line:-2
With Touch Alternatives
enabled on Macs with M1,


326
00:16:24,785 --> 00:16:28,956 line:-2
the W, A, S, and D
keys simulate tilting.


327
00:16:28,956 --> 00:16:31,158 line:-2
And here
I control the car that way,


328
00:16:31.158 --> 00:16:32.793 line:-1 align:center
while using my trackpad


329
00:16:32,793 --> 00:16:35,362 line:-2
to click the accelerator
button on the screen.


330
00:16:35,362 --> 00:16:38,298 line:-2
And all of this is completely
transparent to the app.


331
00:16:38,298 --> 00:16:40,667 line:-1
Let's see how I do.


332
00:16:50.744 --> 00:16:52.379 line:-1 align:center
That worked great!


333
00:16:52,379 --> 00:16:54,448 line:-2
I need to work on my drifting
skills a bit, though.


334
00:16:54,448 --> 00:16:58,218 line:-2
With macOS Monterey, we have
made even more improvements.


335
00:16:58,218 --> 00:17:01,655 align:center
Apple Pay is now available
for iPad and iPhone apps


336
00:17:01,655 --> 00:17:05,526 align:center
on M1 Macs using the same
enhanced cross-platform API


337
00:17:05,526 --> 00:17:09,563 line:0
we introduced for Mac Catalyst
applications in macOS Big Sur.


338
00:17:09,563 --> 00:17:12,299 line:-2
This means you can now
accept payments on every


339
00:17:12.299 --> 00:17:14.434 line:-2 align:center
platform
where Apple Pay is available,


340
00:17:14,434 --> 00:17:16,136 line:-1
using a single implementation.


341
00:17:16,136 --> 00:17:18,338 line:-2
Just make sure
you've implemented the


342
00:17:18,338 --> 00:17:22,609 line:-2
"paymentAuthorizationController,
didRequestMerchantSessionUpdate"


343
00:17:22,609 --> 00:17:24,178 line:-1
delegate call on your


344
00:17:24.178 --> 00:17:27.047 line:-2 align:center
PKPaymentAuthorizationController
Delegate.


345
00:17:27,047 --> 00:17:29,583 align:center
For more details,
check out the video,


346
00:17:29,583 --> 00:17:32,286 line:0
"What's new
in Wallet and Apple Pay."


347
00:17:32.286 --> 00:17:36.657 line:-2 align:center
We've also made full-screen
video with AVKit even better.


348
00:17:36.657 --> 00:17:39.259 line:-2 align:center
AVPlayerView
and AVPlayerViewController


349
00:17:39,259 --> 00:17:41,695 line:-2
can now automatically
take a video full screen


350
00:17:41,695 --> 00:17:43,797 line:-1
using a separate window.


351
00:17:43.797 --> 00:17:46.800 line:-2 align:center
This means that even apps
whose window is otherwise


352
00:17:46.800 --> 00:17:50.437 line:-2 align:center
restricted to the launch-time
resolution and aspect ratio


353
00:17:50.437 --> 00:17:52.606 line:-2 align:center
will make full
use of the Mac display,


354
00:17:52.606 --> 00:17:55.309 line:-2 align:center
as appropriate for the video
content.


355
00:17:55,309 --> 00:17:57,344 line:-2
And in case you need
more control over


356
00:17:57.344 --> 00:18:00.480 line:-2 align:center
the full screen experience,
we've added new API


357
00:18:00.480 --> 00:18:04.351 line:-2 align:center
to AVPlayerViewDelegate and
AVPlayerViewControllerDelegate.


358
00:18:05.652 --> 00:18:07.955 line:-2 align:center
On top of that,
AVFoundation supports


359
00:18:07,955 --> 00:18:11,658 line:-2
HDR playback and streaming on
Macs with M1.


360
00:18:11.658 --> 00:18:16.196 line:-2 align:center
No Mac-specific adoption
work is needed in your app.


361
00:18:16,196 --> 00:18:20,200 line:-2
Finally, AVKit controls
in iPad and iPhone apps now


362
00:18:20,200 --> 00:18:22,870 line:-2
look the same as they
do in other Mac apps.


363
00:18:22.870 --> 00:18:25.572 line:-2 align:center
We even take full
advantage of the Mac trackpad


364
00:18:25.572 --> 00:18:28.041 line:-1 align:center
with support for new gestures.


365
00:18:28,041 --> 00:18:30,744 line:0
For more details,
you can hop over to the video,


366
00:18:30,744 --> 00:18:32,746 line:0
"What's new in AVKit."


367
00:18:32,746 --> 00:18:35,782 align:center
And if your app uses
the intents framework to offer


368
00:18:35,782 --> 00:18:39,086 line:0
custom SiriKit Shortcuts,
on macOS Monterey,


369
00:18:39,086 --> 00:18:43,290 line:0
those are now supported for iPad
and iPhone apps on M1 Macs.


370
00:18:43,290 --> 00:18:45,826 line:0
For more on Shortcuts,
check out the talks,


371
00:18:45,826 --> 00:18:48,795 align:center
"Meet Shortcuts for macOS"
and


372
00:18:48,795 --> 00:18:51,198 line:0
"Design great actions
for Shortcuts, Siri,


373
00:18:51,198 --> 00:18:52,799 line:0
and Suggestions."


374
00:18:52.799 --> 00:18:54.501 line:-1 align:center
Good news!


375
00:18:54.501 --> 00:18:56.637 line:-2 align:center
It's easy
to be on the Mac App Store.


376
00:18:56.637 --> 00:19:00.073 line:-2 align:center
In fact, most apps are
there automatically.


377
00:19:00,073 --> 00:19:02,543 line:-2
As I mentioned earlier,
in most cases,


378
00:19:02.543 --> 00:19:04.845 line:-1 align:center
it makes sense to be on the Mac.


379
00:19:04,845 --> 00:19:08,048 line:-2
After all,
even a Bluetooth door-lock app,


380
00:19:08.048 --> 00:19:10.484 line:-2 align:center
designed to be mobile,
might prove useful


381
00:19:10.484 --> 00:19:13.654 line:-2 align:center
if you've locked yourself out
of your home without your phone,


382
00:19:13,654 --> 00:19:16,690 line:-2
but you have your
Mac with M1 in hand.


383
00:19:16,690 --> 00:19:19,359 line:-2
So, if you've previously
opted your app out


384
00:19:19.359 --> 00:19:22.829 line:-2 align:center
of the Mac App Store, now may
be the time to reconsider.


385
00:19:22,829 --> 00:19:25,365 line:-2
With improvements
such as Touch Alternatives


386
00:19:25.365 --> 00:19:27.467 line:-2 align:center
and enhanced full-screen video
playback,


387
00:19:27,467 --> 00:19:30,671 line:-2
your app may very well be
a great fit for the Mac.


388
00:19:30,671 --> 00:19:34,474 line:-2
In that case, simply recheck
the "Make this app available"


389
00:19:34,474 --> 00:19:36,343 line:-1
checkbox in App Store Connect


390
00:19:36.343 --> 00:19:39.513 line:-2 align:center
to make the app available
on the Mac App Store.


391
00:19:39,513 --> 00:19:42,649 line:-2
Regardless of whether you
previously opted out,


392
00:19:42,649 --> 00:19:44,184 line:-1
you will want to confirm


393
00:19:44.184 --> 00:19:47.120 line:-2 align:center
that your app really
works well on Macs with M1.


394
00:19:47.120 --> 00:19:49.990 line:-2 align:center
Once you're confident
that the user experience


395
00:19:49,990 --> 00:19:51,458 line:-1
is up to your standards,


396
00:19:51,458 --> 00:19:53,827 line:-2
click the Verify
Compatibility link


397
00:19:53.827 --> 00:19:56.296 line:-2 align:center
in App Store Connect,
shown here.


398
00:19:56.296 --> 00:19:59.867 line:-2 align:center
This removes the "Not
verified for macOS" text,


399
00:19:59.867 --> 00:20:02.903 line:-2 align:center
which is shown next to your
app on the Mac App Store,


400
00:20:02.903 --> 00:20:06.039 line:-2 align:center
and replaces it with
"Designed for iPad."


401
00:20:06,039 --> 00:20:08,475 line:-2
App shoppers will take
this as a sign that you have


402
00:20:08.475 --> 00:20:10.544 line:-2 align:center
taken the time to make
sure that they will


403
00:20:10,544 --> 00:20:13,547 line:-2
have a good experience
with your app on the Mac.


404
00:20:13.547 --> 00:20:15.649 line:-2 align:center
You only have to do
this once per app.


405
00:20:15.649 --> 00:20:18.886 line:-2 align:center
Oh, and we've also made
iPad and iPhone apps


406
00:20:18.886 --> 00:20:21.121 line:-2 align:center
much more discoverable
on the Mac App Store.


407
00:20:21.121 --> 00:20:23.423 line:-2 align:center
When customers search
for them by name,


408
00:20:23.423 --> 00:20:27.160 line:-2 align:center
they no longer have to switch
to the iPhone and iPad Apps tab.


409
00:20:27,160 --> 00:20:30,297 line:0
Apple will automatically
pick the recommended


410
00:20:30,297 --> 00:20:33,333 line:0
minimum macOS version
required for compatibility,


411
00:20:33,333 --> 00:20:35,636 line:0
and for most situations,
this is fine.


412
00:20:35,636 --> 00:20:39,072 line:0
But in certain rare cases,
you may wish to override this


413
00:20:39,072 --> 00:20:41,942 line:0
with a custom
macOS availability.


414
00:20:41,942 --> 00:20:45,712 line:-2
For example, your video app
may work fine on Big Sur,


415
00:20:45,712 --> 00:20:47,981 line:-2
but if you want to ensure that
you have access


416
00:20:47.981 --> 00:20:50.284 line:-2 align:center
to the AVKit full
screen improvements,


417
00:20:50,284 --> 00:20:53,053 line:-2
you may decide that it
should only be available


418
00:20:53.053 --> 00:20:54.888 line:-1 align:center
on Monterey and beyond.


419
00:20:54,888 --> 00:20:57,691 line:0
In this case,
you have two options.


420
00:20:57,691 --> 00:21:00,460 align:center
Starting shortly,
you will be able to choose


421
00:21:00,460 --> 00:21:03,597 line:0
a different minimum macOS
version on the Pricing


422
00:21:03,597 --> 00:21:06,700 line:0
and Availability page
of App Store Connect.


423
00:21:06,700 --> 00:21:09,603 align:center
This is great for apps that are
already on the store


424
00:21:09,603 --> 00:21:12,706 align:center
because you don't have
to resubmit a new version.


425
00:21:12,706 --> 00:21:16,243 align:center
Or, you can specify
the LSMinimumSystemVersion


426
00:21:16,243 --> 00:21:18,612 align:center
in the Info.plist,
and submit this change


427
00:21:18,612 --> 00:21:20,747 align:center
as part of your next update.


428
00:21:20,747 --> 00:21:22,850 align:center
This is the recommended
approach for apps


429
00:21:22,850 --> 00:21:24,384 line:0
that are
under active development.


430
00:21:24,384 --> 00:21:28,288 line:-2
Note that this does not replace
the MinimumOSVersion key,


431
00:21:28,288 --> 00:21:31,725 line:-2
which specifies the iOS
minimum system version.


432
00:21:31,725 --> 00:21:34,895 line:-2
But really, both options
should rarely be needed.


433
00:21:34.895 --> 00:21:38.498 line:-2 align:center
Finally, let's talk
for a moment about testing.


434
00:21:38,498 --> 00:21:41,835 line:-2
Testing on macOS is very
similar to testing on iPad.


435
00:21:41.835 --> 00:21:45.639 line:-2 align:center
You can use the same workflows
you are already familiar with.


436
00:21:45,639 --> 00:21:48,275 line:-2
For local testing in Xcode,
simply select


437
00:21:48.275 --> 00:21:51.945 line:-2 align:center
My Mac (Designed for iPad)
as the run destination,


438
00:21:51,945 --> 00:21:54,414 line:-2
and debugging, unit testing,
et cetera,


439
00:21:54.414 --> 00:21:56.817 line:-2 align:center
all work just like they
do for other devices.


440
00:21:56.817 --> 00:21:59.920 line:-2 align:center
For beta testing,
we've added TestFlight support


441
00:21:59.920 --> 00:22:02.089 line:-2 align:center
for all apps
in macOS Monterey,


442
00:22:02,089 --> 00:22:06,226 line:-2
including iPhone and iPad apps,
so you can now distribute


443
00:22:06,226 --> 00:22:09,596 line:-2
your app to beta testers
who are using Macs with M1.


444
00:22:09,596 --> 00:22:11,632 align:center
For more information on this,


445
00:22:11,632 --> 00:22:15,369 line:0
head over to the video,
"Meet TestFlight on Mac."


446
00:22:15,369 --> 00:22:17,938 line:-1
So, welcome to the Mac!


447
00:22:17,938 --> 00:22:20,474 line:-1
Go verify your app and opt in.


448
00:22:20,474 --> 00:22:21,775 line:-1
It's easy.


449
00:22:21,775 --> 00:22:24,444 line:-2
And just remember,
as you continue to improve


450
00:22:24,444 --> 00:22:27,481 line:-2
your iPad and iPhone apps,
you're also making


451
00:22:27,481 --> 00:22:29,783 line:-2
those apps better on Macs
with M1.


452
00:22:29,783 --> 00:22:32,052 line:-1
Thank you very much.


453
00:22:32.052 --> 00:22:34.054 line:-1 align:center
[upbeat music]

