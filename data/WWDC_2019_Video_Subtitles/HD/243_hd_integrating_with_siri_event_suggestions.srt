1
00:00:00,506 --> 00:00:04,500
[ Music ]


2
00:00:09,016 --> 00:00:10,636
[ Applause ]


3
00:00:10,636 --> 00:00:11,076
>> Good afternoon.


4
00:00:11,076 --> 00:00:14,466
And welcome to Integrating with


5
00:00:14,466 --> 00:00:15,626
Siri Event Suggestions.


6
00:00:16,245 --> 00:00:17,576
My name is Sofiane, and I'm an


7
00:00:17,576 --> 00:00:18,706
Engineer, working on Siri


8
00:00:18,706 --> 00:00:19,626
frameworks here at Apple.


9
00:00:20,436 --> 00:00:21,666
And today, I'll be joined by my


10
00:00:21,666 --> 00:00:22,496
colleague, Magnus.


11
00:00:23,236 --> 00:00:24,746
We're really thrilled to be here


12
00:00:24,746 --> 00:00:26,646
today to tell you all about how


13
00:00:26,646 --> 00:00:28,416
to integrate your apps with Siri


14
00:00:28,416 --> 00:00:29,206
Event Suggestions.


15
00:00:30,976 --> 00:00:32,766
Siri is the virtual assistant we


16
00:00:32,766 --> 00:00:34,606
all know and love, and with


17
00:00:34,606 --> 00:00:36,746
SiriKit, your app can work with


18
00:00:36,746 --> 00:00:38,806
Siri, for things like sending


19
00:00:38,806 --> 00:00:40,946
messages, requesting rides, as


20
00:00:40,946 --> 00:00:41,986
well as expose the key


21
00:00:41,986 --> 00:00:43,816
capabilities of your app using


22
00:00:43,816 --> 00:00:44,336
shortcuts.


23
00:00:45,696 --> 00:00:47,516
Siri is also deeply integrated


24
00:00:47,766 --> 00:00:49,576
across our platforms, adding


25
00:00:49,576 --> 00:00:51,256
on-device intelligence to the


26
00:00:51,256 --> 00:00:53,296
apps you use every day.


27
00:00:53,486 --> 00:00:55,756
In Calendar, Siri is personal


28
00:00:55,756 --> 00:00:56,756
and knows about your


29
00:00:56,756 --> 00:00:58,096
reservations to help you get


30
00:00:58,096 --> 00:01:00,446
organized, and Siri can then use


31
00:01:00,446 --> 00:01:01,906
that information about your


32
00:01:01,906 --> 00:01:03,716
reservations to make proactive


33
00:01:03,716 --> 00:01:04,926
suggestions throughout the


34
00:01:04,926 --> 00:01:05,406
system.


35
00:01:06,356 --> 00:01:08,606
So, on the lock screen, Siri


36
00:01:08,606 --> 00:01:09,936
notifies you when it's time to


37
00:01:09,936 --> 00:01:11,006
leave, based on traffic


38
00:01:11,006 --> 00:01:11,556
conditions.


39
00:01:12,126 --> 00:01:14,196
And when you open Maps, you get


40
00:01:14,196 --> 00:01:15,756
Siri suggestions, which make it


41
00:01:15,826 --> 00:01:17,446
super convenient to get


42
00:01:17,446 --> 00:01:18,646
directions right to your


43
00:01:18,646 --> 00:01:20,696
destination with just one tap.


44
00:01:21,536 --> 00:01:23,326
Now, when you get there, Siri


45
00:01:23,326 --> 00:01:24,826
can proactively suggest to turn


46
00:01:24,826 --> 00:01:26,466
on Do Not Disturb and help you


47
00:01:26,466 --> 00:01:27,816
stay focused on what matters.


48
00:01:28,206 --> 00:01:30,606
And all of that starts with the


49
00:01:30,606 --> 00:01:31,896
system knowing about your


50
00:01:31,896 --> 00:01:33,666
reservations, wherever they come


51
00:01:33,666 --> 00:01:36,076
from, whether it's in the car


52
00:01:36,076 --> 00:01:38,286
rental reservation in mail, a


53
00:01:38,286 --> 00:01:39,646
restaurant reservation in


54
00:01:39,646 --> 00:01:41,756
messages, or even when you're


55
00:01:41,756 --> 00:01:43,396
booking a flight directly in


56
00:01:43,396 --> 00:01:43,796
Safari.


57
00:01:44,786 --> 00:01:47,556
Now, in iOS 13, we're really


58
00:01:47,556 --> 00:01:49,556
excited to introduce new APIs


59
00:01:49,776 --> 00:01:51,316
for your apps, to integrate


60
00:01:51,316 --> 00:01:52,756
directly with this ecosystem.


61
00:01:53,516 --> 00:01:57,776
[ Applause ]


62
00:01:58,276 --> 00:02:00,166
So for example, when you view


63
00:02:00,166 --> 00:02:01,846
your flight reservation inside


64
00:02:01,846 --> 00:02:03,876
the American Airline app, the


65
00:02:03,876 --> 00:02:05,286
app donates that information to


66
00:02:05,286 --> 00:02:05,766
the system.


67
00:02:06,706 --> 00:02:08,026
Siri can then use it to


68
00:02:08,026 --> 00:02:09,106
automatically show a


69
00:02:09,106 --> 00:02:11,026
notification and add that flight


70
00:02:11,026 --> 00:02:12,306
to your calendar.


71
00:02:12,866 --> 00:02:14,366
Siri will then go on to make


72
00:02:14,366 --> 00:02:15,976
proactive suggestions for that


73
00:02:15,976 --> 00:02:17,596
flight, at the right time, in


74
00:02:17,596 --> 00:02:18,416
all of the places that I


75
00:02:18,416 --> 00:02:19,116
mentioned before.


76
00:02:20,086 --> 00:02:21,146
And all of that intelligence


77
00:02:21,376 --> 00:02:23,496
happens directly on the device.


78
00:02:24,476 --> 00:02:25,816
But we didn't want to stop here.


79
00:02:26,366 --> 00:02:28,426
This year, we wanted to extend


80
00:02:28,426 --> 00:02:30,506
that deep system integration and


81
00:02:30,506 --> 00:02:32,046
promote your app in even more


82
00:02:32,046 --> 00:02:33,036
places in the system.


83
00:02:34,326 --> 00:02:36,346
So, in iOS 13, if your app


84
00:02:36,346 --> 00:02:38,056
supports check-in, it can get


85
00:02:38,056 --> 00:02:39,576
promoted right on the lock


86
00:02:39,576 --> 00:02:41,596
screen, taking users directly


87
00:02:41,596 --> 00:02:44,616
into your app at the right time.


88
00:02:44,756 --> 00:02:46,596
Also new in iOS 13, with maps,


89
00:02:47,246 --> 00:02:48,396
when the time is right, when a


90
00:02:48,396 --> 00:02:50,206
user goes into maps, they can


91
00:02:50,206 --> 00:02:52,016
get up to date information about


92
00:02:52,016 --> 00:02:53,306
their flight, and even get


93
00:02:53,446 --> 00:02:55,456
directions, indoor directions


94
00:02:55,526 --> 00:02:58,276
directly to their gate.


95
00:02:58,476 --> 00:02:59,826
So Siri is there to help at


96
00:02:59,976 --> 00:03:02,096
every step of the way, from the


97
00:03:02,096 --> 00:03:03,426
moment you make your reservation


98
00:03:03,696 --> 00:03:04,706
to the moment you walk in.


99
00:03:05,616 --> 00:03:07,326
So, by now, I hope you're all


100
00:03:07,326 --> 00:03:09,186
thinking that is pretty cool,


101
00:03:09,316 --> 00:03:09,746
hopefully.


102
00:03:10,546 --> 00:03:11,776
But how does that all work?


103
00:03:12,266 --> 00:03:14,776
Well, the API is built as part


104
00:03:14,776 --> 00:03:16,466
of SiriKit which allow you to do


105
00:03:16,466 --> 00:03:17,876
many things, like setting up


106
00:03:17,876 --> 00:03:19,616
shortcuts, sending payments, and


107
00:03:19,616 --> 00:03:20,156
much more.


108
00:03:20,876 --> 00:03:21,836
And more specifically,


109
00:03:22,316 --> 00:03:23,186
everything we will talk about


110
00:03:23,186 --> 00:03:24,796
today is exposed as part of the


111
00:03:24,796 --> 00:03:25,606
intense framework.


112
00:03:26,076 --> 00:03:28,496
We support reservations across


113
00:03:28,496 --> 00:03:30,086
many categories, ranging from


114
00:03:30,086 --> 00:03:31,736
restaurants to ticketed events,


115
00:03:31,866 --> 00:03:34,136
to various forms of transit, and


116
00:03:34,136 --> 00:03:35,846
this year, we're introducing new


117
00:03:35,846 --> 00:03:37,736
classes in the intense framework


118
00:03:38,156 --> 00:03:39,926
to represent details for all of


119
00:03:39,926 --> 00:03:41,186
these reservation categories.


120
00:03:42,016 --> 00:03:43,026
Now, all of these classes


121
00:03:43,026 --> 00:03:44,276
inherit from the new IN


122
00:03:44,276 --> 00:03:45,026
Reservation Class.


123
00:03:45,536 --> 00:03:47,096
So, for instance, to represent a


124
00:03:47,096 --> 00:03:48,786
restaurant reservation, you can


125
00:03:48,786 --> 00:03:49,476
create an


126
00:03:49,476 --> 00:03:50,996
INRestaurantReservation object.


127
00:03:52,676 --> 00:03:53,916
Those of you familiar with


128
00:03:53,916 --> 00:03:55,546
SiriKit will recognize the


129
00:03:55,546 --> 00:03:57,266
INInteraction API, which is also


130
00:03:57,266 --> 00:03:58,796
used for shortcut donations.


131
00:03:58,796 --> 00:04:00,756
So when a user views a


132
00:04:00,756 --> 00:04:02,556
reservation inside your app,


133
00:04:02,776 --> 00:04:05,016
your app creates an interaction


134
00:04:05,016 --> 00:04:06,116
and donate to the system.


135
00:04:07,016 --> 00:04:08,416
Interactions are made up of an


136
00:04:08,416 --> 00:04:09,766
intent, an intent response,


137
00:04:10,156 --> 00:04:11,436
which together represent a full


138
00:04:11,436 --> 00:04:13,406
user interaction.


139
00:04:15,056 --> 00:04:16,146
Now, this year, we're


140
00:04:16,146 --> 00:04:17,146
introducing the new


141
00:04:17,286 --> 00:04:18,946
INGetReservationDetailsIntent,


142
00:04:19,185 --> 00:04:20,856
an intent response that are


143
00:04:20,856 --> 00:04:22,996
intended to capture details that


144
00:04:23,026 --> 00:04:24,636
pertain to user's reservations.


145
00:04:25,016 --> 00:04:26,646
This provides a way for your app


146
00:04:27,066 --> 00:04:28,076
to share those details with


147
00:04:28,076 --> 00:04:28,376
Siri.


148
00:04:28,916 --> 00:04:31,036
Now, the intent response takes a


149
00:04:31,036 --> 00:04:32,626
list of INReservation objects,


150
00:04:32,626 --> 00:04:34,506
as we just saw previously, which


151
00:04:34,506 --> 00:04:35,486
represent your specific


152
00:04:35,486 --> 00:04:36,146
reservations.


153
00:04:36,736 --> 00:04:38,416
So here, for example, we are


154
00:04:38,416 --> 00:04:40,106
creating an INLodgingReservation


155
00:04:40,106 --> 00:04:41,306
and attaching it to the intent


156
00:04:41,306 --> 00:04:42,756
response to represent the


157
00:04:42,756 --> 00:04:43,876
details of a hotel state.


158
00:04:43,876 --> 00:04:46,446
Now, all that is left for you is


159
00:04:46,446 --> 00:04:47,966
to donate that interaction to


160
00:04:47,966 --> 00:04:50,076
the system, so that Siri can use


161
00:04:50,076 --> 00:04:51,566
it in places like Siri event


162
00:04:51,566 --> 00:04:53,366
suggestions, or Siri shortcuts,


163
00:04:53,366 --> 00:04:54,056
for example.


164
00:04:55,266 --> 00:04:57,226
Okay, now, let's move on and


165
00:04:57,226 --> 00:04:58,686
talk about the three easy steps


166
00:04:58,986 --> 00:05:00,756
that your app should follow to


167
00:05:00,756 --> 00:05:02,166
take advantage of all these


168
00:05:02,166 --> 00:05:02,766
great features.


169
00:05:03,546 --> 00:05:05,396
And first, we will talk about


170
00:05:05,396 --> 00:05:06,776
how to create and donate good


171
00:05:06,776 --> 00:05:07,636
interactions.


172
00:05:08,486 --> 00:05:10,116
Next, we will look into how to


173
00:05:10,116 --> 00:05:11,556
adopt the new reservation


174
00:05:11,556 --> 00:05:13,306
actions API, so your app can


175
00:05:13,306 --> 00:05:14,666
benefit from the new check-in


176
00:05:14,666 --> 00:05:15,386
shortcut feature.


177
00:05:16,296 --> 00:05:17,846
And finally, your app may be


178
00:05:17,846 --> 00:05:18,946
launched with a reservation that


179
00:05:18,946 --> 00:05:20,006
you previously donated.


180
00:05:20,696 --> 00:05:22,146
So we will talk about various


181
00:05:22,146 --> 00:05:23,326
launch scenarios that you should


182
00:05:23,326 --> 00:05:24,026
handle.


183
00:05:24,986 --> 00:05:26,736
And now, I'd like to invite my


184
00:05:26,736 --> 00:05:28,366
colleague, Magnus, up to tell us


185
00:05:28,366 --> 00:05:29,026
all about the API.


186
00:05:29,026 --> 00:05:29,886
Magnus?


187
00:05:30,516 --> 00:05:34,286
[ Cheers and Applause ]


188
00:05:34,786 --> 00:05:36,186
>> Thank you, Sofiane.


189
00:05:36,796 --> 00:05:37,636
Hey, everyone.


190
00:05:37,916 --> 00:05:38,846
My name is Magnus.


191
00:05:39,446 --> 00:05:40,786
I'm excited to be here today to


192
00:05:40,786 --> 00:05:42,416
talk to you about Siri event


193
00:05:42,416 --> 00:05:43,136
suggestions.


194
00:05:44,256 --> 00:05:45,766
First, I'll show you a demo of


195
00:05:45,766 --> 00:05:47,666
how to use the API, and then we


196
00:05:47,666 --> 00:05:48,626
will talk a little bit about the


197
00:05:48,666 --> 00:05:49,766
details later on.


198
00:05:50,596 --> 00:05:55,426
Let's jump into the demo.


199
00:05:55,616 --> 00:05:56,636
So, I'm working on this flight


200
00:05:56,636 --> 00:05:58,036
app called My Flights.


201
00:05:58,746 --> 00:06:00,046
Let's open it, and see what it


202
00:06:00,126 --> 00:06:01,046
looks like.


203
00:06:02,016 --> 00:06:03,696
So it displays a list of all my


204
00:06:03,746 --> 00:06:04,676
flight reservations.


205
00:06:05,716 --> 00:06:07,336
If I tap one, I can see more


206
00:06:07,336 --> 00:06:08,706
details about the reservation.


207
00:06:09,166 --> 00:06:11,646
I want to take advantage of the


208
00:06:11,646 --> 00:06:13,106
Siri event suggestions API, and


209
00:06:13,386 --> 00:06:14,786
donate the reservation details


210
00:06:14,786 --> 00:06:15,746
when it is displayed to the


211
00:06:15,746 --> 00:06:15,956
user.


212
00:06:18,616 --> 00:06:21,996
Let's switch over to Xcode.


213
00:06:22,136 --> 00:06:23,706
Now, my app consists of some


214
00:06:23,706 --> 00:06:25,246
view controllers and a server,


215
00:06:25,246 --> 00:06:26,276
where I get my reservation


216
00:06:26,276 --> 00:06:27,116
details from.


217
00:06:27,776 --> 00:06:28,566
Since I want to donate the


218
00:06:28,566 --> 00:06:30,546
reservation details when they're


219
00:06:30,546 --> 00:06:31,926
displayed to the user, let's


220
00:06:31,926 --> 00:06:32,496
take a look at my


221
00:06:32,496 --> 00:06:33,466
ReservationDetails


222
00:06:33,466 --> 00:06:34,066
ViewController.


223
00:06:34,616 --> 00:06:38,446
The view controller gets the


224
00:06:38,446 --> 00:06:39,746
reservations from the server.


225
00:06:39,746 --> 00:06:42,096
For the purposes of this demo,


226
00:06:42,176 --> 00:06:43,546
the server returns


227
00:06:43,546 --> 00:06:45,216
INReservations SiriKit objects.


228
00:06:46,446 --> 00:06:47,416
I started doing some work on


229
00:06:47,416 --> 00:06:48,636
this already, but there is still


230
00:06:48,636 --> 00:06:49,776
some missing code here, marked


231
00:06:49,776 --> 00:06:50,486
by to-dos.


232
00:06:50,986 --> 00:06:53,686
Let's go to the server, and see


233
00:06:53,686 --> 00:06:55,286
what makes up the INReservation


234
00:06:55,286 --> 00:06:55,606
object.


235
00:06:59,136 --> 00:07:00,456
In my server code, I have a


236
00:07:00,456 --> 00:07:01,066
method called


237
00:07:01,066 --> 00:07:02,696
createFlightReservation, to


238
00:07:02,696 --> 00:07:04,086
create and save the reservation


239
00:07:04,306 --> 00:07:05,506
so I can access it from my view


240
00:07:05,506 --> 00:07:05,946
controller.


241
00:07:07,386 --> 00:07:07,946
I'll create the


242
00:07:07,946 --> 00:07:08,976
INFlightReservation object here.


243
00:07:17,046 --> 00:07:18,106
Now, this method creates an


244
00:07:18,106 --> 00:07:19,206
INFlightReservation object.


245
00:07:19,856 --> 00:07:21,116
This object contains all the


246
00:07:21,116 --> 00:07:22,506
reservation details about the


247
00:07:22,536 --> 00:07:22,766
flight.


248
00:07:23,466 --> 00:07:25,636
Let's take a look at some of the


249
00:07:25,636 --> 00:07:26,096
properties.


250
00:07:26,756 --> 00:07:31,116
First up is the itemReference.


251
00:07:31,966 --> 00:07:33,646
This is a unique identifier for


252
00:07:33,646 --> 00:07:34,546
this reservation item.


253
00:07:34,646 --> 00:07:36,576
It will be used when the system


254
00:07:36,576 --> 00:07:38,426
launches my app to tell it which


255
00:07:38,426 --> 00:07:39,746
specific reservation item to


256
00:07:39,746 --> 00:07:39,976
show.


257
00:07:41,756 --> 00:07:43,506
In my app, the reservationNumber


258
00:07:43,506 --> 00:07:44,546
is unique for this flight.


259
00:07:44,546 --> 00:07:46,076
So I will use that for the


260
00:07:46,076 --> 00:07:47,546
vocabulary identifier.


261
00:07:47,546 --> 00:07:50,846
I also said a spoken phrase that


262
00:07:51,166 --> 00:07:52,376
can be displayed to the user.


263
00:07:53,466 --> 00:07:55,886
I'm using Flight XX815, which is


264
00:07:55,886 --> 00:07:57,626
short, and descriptive.


265
00:08:00,596 --> 00:08:02,046
Here are some common properties


266
00:08:03,336 --> 00:08:04,496
that are shared among all


267
00:08:04,496 --> 00:08:05,456
reservation types.


268
00:08:05,856 --> 00:08:07,146
Like the reservationNumber, and


269
00:08:07,146 --> 00:08:07,686
the name of the


270
00:08:07,686 --> 00:08:08,506
reservationHolder.


271
00:08:12,136 --> 00:08:13,206
We also want to capture


272
00:08:13,206 --> 00:08:14,426
information about the flight.


273
00:08:15,656 --> 00:08:16,916
It's created here in a separate


274
00:08:16,916 --> 00:08:18,086
method called createFlight.


275
00:08:18,886 --> 00:08:19,446
Let's jump to the


276
00:08:19,446 --> 00:08:19,976
implementation.


277
00:08:28,046 --> 00:08:29,726
Here, I'm creating an INFlight


278
00:08:29,726 --> 00:08:30,176
object.


279
00:08:30,826 --> 00:08:32,166
This represents all the details


280
00:08:32,166 --> 00:08:33,716
about the flight, such as the


281
00:08:33,716 --> 00:08:35,306
flight number, the airline,


282
00:08:35,936 --> 00:08:36,996
along with the information about


283
00:08:36,996 --> 00:08:37,946
departure and arrival.


284
00:08:37,946 --> 00:08:40,756
I still have some to-dos here,


285
00:08:41,135 --> 00:08:42,246
so let's go ahead and fix that


286
00:08:42,506 --> 00:08:43,966
starting with the airline and


287
00:08:43,966 --> 00:08:44,976
airport information.


288
00:08:54,046 --> 00:08:54,946
These objects represent the


289
00:08:54,946 --> 00:08:56,386
airline, and information about


290
00:08:56,386 --> 00:08:57,486
the flight departure and


291
00:08:57,486 --> 00:08:57,866
arrival.


292
00:08:58,866 --> 00:09:00,156
In this case, the flight is from


293
00:09:00,156 --> 00:09:01,656
San Francisco to Paris.


294
00:09:03,226 --> 00:09:04,676
Both airlines and airports are


295
00:09:04,676 --> 00:09:06,206
identified using either an IATA


296
00:09:06,246 --> 00:09:07,456
or ICAO code.


297
00:09:08,456 --> 00:09:10,086
For airports, this is also used


298
00:09:11,016 --> 00:09:12,246
to determine the physical


299
00:09:12,246 --> 00:09:13,406
location of the airport.


300
00:09:14,016 --> 00:09:17,396
I'm adding gate and terminal


301
00:09:17,396 --> 00:09:19,346
information for departure, since


302
00:09:19,346 --> 00:09:20,616
it's already known at this time.


303
00:09:21,586 --> 00:09:22,426
I don't know the gate


304
00:09:22,426 --> 00:09:23,726
information for the arrival, so


305
00:09:23,726 --> 00:09:24,616
I set that nil.


306
00:09:29,056 --> 00:09:30,696
Next, I also need to specify the


307
00:09:30,696 --> 00:09:31,596
departure and arrival time for


308
00:09:31,596 --> 00:09:31,976
my flight.


309
00:09:37,276 --> 00:09:38,176
We are using the


310
00:09:38,176 --> 00:09:39,786
INDateComponentsRangeClass to


311
00:09:39,786 --> 00:09:40,976
represent the departure and


312
00:09:40,976 --> 00:09:41,586
arrival time.


313
00:09:41,586 --> 00:09:43,876
For the best user experience,


314
00:09:44,586 --> 00:09:45,786
I'm also setting the local time


315
00:09:45,786 --> 00:09:48,136
zone, sorry, I'm also setting


316
00:09:48,136 --> 00:09:49,936
the local time zone for the


317
00:09:49,936 --> 00:09:51,576
departure and arrival airports.


318
00:09:52,116 --> 00:09:54,736
Okay. So we set all the


319
00:09:54,736 --> 00:09:56,496
information we need to represent


320
00:09:56,496 --> 00:09:56,816
the flight.


321
00:09:57,616 --> 00:09:58,896
Let's go back and look at the


322
00:09:58,966 --> 00:09:59,976
rest of the reservation.


323
00:10:07,316 --> 00:10:08,746
I want to provide my users with


324
00:10:08,746 --> 00:10:10,616
a great check-in experience, so


325
00:10:10,616 --> 00:10:12,436
I want to take advantage of the


326
00:10:12,436 --> 00:10:13,316
new check-in shortcut.


327
00:10:14,606 --> 00:10:16,766
To do that, I need to create a


328
00:10:16,766 --> 00:10:17,496
check-in action.


329
00:10:18,316 --> 00:10:19,026
Let's jump to my


330
00:10:19,026 --> 00:10:19,976
createCheckInAction method.


331
00:10:27,386 --> 00:10:28,506
This method creates an


332
00:10:28,506 --> 00:10:30,566
INReservation action, which


333
00:10:30,566 --> 00:10:32,266
consists of a type, a valid


334
00:10:32,266 --> 00:10:33,876
duration, and a user activity.


335
00:10:35,276 --> 00:10:36,446
In my case, the type is


336
00:10:36,446 --> 00:10:38,606
Check-In, and the valid duration


337
00:10:38,606 --> 00:10:40,586
is the time when the user can


338
00:10:40,586 --> 00:10:41,276
check-in online.


339
00:10:41,876 --> 00:10:44,126
During this time, the user


340
00:10:44,126 --> 00:10:46,136
activity I specify will be


341
00:10:46,136 --> 00:10:47,326
displayed as a suggested


342
00:10:47,326 --> 00:10:47,706
shortcut.


343
00:10:50,016 --> 00:10:50,556
I'll start by creating the


344
00:10:50,556 --> 00:10:50,966
NSUserActivity.


345
00:11:03,046 --> 00:11:04,366
I'm creating the NSUserActivity


346
00:11:04,366 --> 00:11:05,876
with an activityType that lets


347
00:11:05,876 --> 00:11:07,466
my app know that this is a


348
00:11:07,466 --> 00:11:09,076
check-in activity when it is


349
00:11:09,546 --> 00:11:09,706
launched.


350
00:11:10,496 --> 00:11:12,586
I set the title to Check-In for


351
00:11:12,586 --> 00:11:13,456
Flight XX815.


352
00:11:13,516 --> 00:11:16,366
This is displayed to the user in


353
00:11:16,366 --> 00:11:17,936
the shortcut, so make sure it's


354
00:11:17,936 --> 00:11:22,536
short and descriptive.


355
00:11:22,536 --> 00:11:24,186
Next, I'm adding the details I


356
00:11:24,186 --> 00:11:25,756
need to know to start the


357
00:11:25,756 --> 00:11:27,156
check-in process when my app is


358
00:11:27,156 --> 00:11:27,556
launched.


359
00:11:27,986 --> 00:11:29,496
I add them to both the user info


360
00:11:29,496 --> 00:11:30,796
under requiredUserInfoKeys


361
00:11:30,796 --> 00:11:31,436
properties.


362
00:11:34,956 --> 00:11:37,026
I also add a webpage URL value.


363
00:11:38,306 --> 00:11:39,856
So the check-in process can be


364
00:11:39,856 --> 00:11:41,086
used even if my app is not


365
00:11:41,086 --> 00:11:41,676
installed.


366
00:11:43,116 --> 00:11:44,256
So I'm pretty happy with this


367
00:11:44,256 --> 00:11:46,016
user activity, but I also need


368
00:11:46,016 --> 00:11:46,976
to specify the valid duration.


369
00:11:53,626 --> 00:11:54,866
We're using EndDateComponents


370
00:11:54,866 --> 00:11:55,526
range again here.


371
00:11:56,116 --> 00:11:57,596
This time, to represent a start


372
00:11:57,596 --> 00:11:58,926
and end time for the valid


373
00:11:58,926 --> 00:11:59,346
duration.


374
00:12:00,306 --> 00:12:02,526
In this case check-in starts 24


375
00:12:02,526 --> 00:12:04,466
hours before departure, and ends


376
00:12:04,466 --> 00:12:06,356
one hour before departure, so


377
00:12:06,356 --> 00:12:07,526
that will be my valid duration.


378
00:12:08,066 --> 00:12:10,336
That's really all we need to


379
00:12:10,336 --> 00:12:11,076
create the great check-in


380
00:12:11,076 --> 00:12:11,726
shortcut.


381
00:12:12,226 --> 00:12:13,856
Let's go back and summarize what


382
00:12:13,856 --> 00:12:14,926
the reservation we created.


383
00:12:21,046 --> 00:12:22,126
Now, we have all the information


384
00:12:22,126 --> 00:12:23,126
we need including the


385
00:12:23,126 --> 00:12:24,996
reservation details, the flight


386
00:12:24,996 --> 00:12:26,536
information, and the check-in


387
00:12:26,536 --> 00:12:26,936
action.


388
00:12:28,016 --> 00:12:28,916
Let's go back to the


389
00:12:28,916 --> 00:12:29,816
ReservationDetails


390
00:12:30,616 --> 00:12:32,626
ViewController, to add the


391
00:12:32,626 --> 00:12:33,946
donation code.


392
00:12:34,836 --> 00:12:36,456
So, our view controller already


393
00:12:36,456 --> 00:12:37,626
knows about the reservation we


394
00:12:37,626 --> 00:12:38,266
just created.


395
00:12:38,916 --> 00:12:40,716
I set up a method here to donate


396
00:12:40,716 --> 00:12:41,346
the reservation.


397
00:12:42,156 --> 00:12:42,976
So let's add the donation code.


398
00:12:56,056 --> 00:12:57,486
Let me just remove the


399
00:12:57,486 --> 00:12:58,526
navigator, so you can see


400
00:12:58,526 --> 00:12:58,806
better.


401
00:12:59,466 --> 00:13:03,036
So I'm starting by creating the


402
00:13:03,036 --> 00:13:03,386
intent.


403
00:13:04,116 --> 00:13:05,616
The intent tells Siri which


404
00:13:05,616 --> 00:13:07,006
reservation was displayed to the


405
00:13:07,006 --> 00:13:07,396
user.


406
00:13:08,516 --> 00:13:10,326
It takes two parameters, the


407
00:13:10,326 --> 00:13:11,696
ContainerReference, and the


408
00:13:11,696 --> 00:13:12,356
ItemReference.


409
00:13:13,596 --> 00:13:14,876
The ContainerReference uniquely


410
00:13:14,876 --> 00:13:16,586
identifies the reservation as a


411
00:13:16,586 --> 00:13:16,976
whole.


412
00:13:18,086 --> 00:13:19,176
In this case, I only have a


413
00:13:19,176 --> 00:13:20,906
single reservation item, the


414
00:13:20,906 --> 00:13:21,156
flight.


415
00:13:21,156 --> 00:13:23,486
So I will use the ItemReference


416
00:13:23,486 --> 00:13:25,376
I set on the ReservationItem, as


417
00:13:25,376 --> 00:13:26,366
the ContainerReference.


418
00:13:27,486 --> 00:13:28,206
If I have multiple


419
00:13:28,206 --> 00:13:30,316
ReservationItems, such as a


420
00:13:30,316 --> 00:13:32,236
hotel and a flight, I would


421
00:13:32,236 --> 00:13:33,636
create a new ContainerReference


422
00:13:33,916 --> 00:13:36,566
to represent that reservation as


423
00:13:36,566 --> 00:13:37,046
a whole.


424
00:13:39,226 --> 00:13:39,546
I'll set the


425
00:13:39,546 --> 00:13:40,686
ReservationItemReference as


426
00:13:40,686 --> 00:13:41,536
property to nil.


427
00:13:42,326 --> 00:13:44,246
This is populated by the system


428
00:13:44,246 --> 00:13:45,646
when launching my app.


429
00:13:48,176 --> 00:13:49,986
In addition to the Intent, I


430
00:13:49,986 --> 00:13:51,606
also specify an intentResponse,


431
00:13:51,786 --> 00:13:53,076
and add my reservation to it.


432
00:13:53,976 --> 00:13:55,386
This informs Siri about what


433
00:13:55,386 --> 00:13:57,446
reservation details I display to


434
00:13:57,996 --> 00:13:58,856
the user.


435
00:13:58,996 --> 00:14:00,856
Finally, I'll add the intent and


436
00:14:00,856 --> 00:14:02,076
intentResponse to an


437
00:14:02,166 --> 00:14:03,936
INInteraction, and donate that


438
00:14:03,936 --> 00:14:04,586
to the system.


439
00:14:05,166 --> 00:14:07,296
So, now we've written all the


440
00:14:07,296 --> 00:14:08,566
code we need to donate this


441
00:14:08,566 --> 00:14:10,046
reservation, but there is one


442
00:14:10,046 --> 00:14:10,876
more thing we need to check


443
00:14:11,126 --> 00:14:11,976
before we can launch the app.


444
00:14:18,266 --> 00:14:19,106
I need to add


445
00:14:19,106 --> 00:14:20,656
INGetReservationDetailsIntent,


446
00:14:20,656 --> 00:14:22,466
and my custom CheckInActivity to


447
00:14:22,466 --> 00:14:23,816
the list of supported activity


448
00:14:23,816 --> 00:14:25,276
types in my info.plist.


449
00:14:26,116 --> 00:14:27,616
Luckily, I already did this


450
00:14:27,616 --> 00:14:28,936
earlier, so we're good to go.


451
00:14:34,156 --> 00:14:35,786
First, let's recap.


452
00:14:37,066 --> 00:14:38,406
We created and donated an


453
00:14:38,496 --> 00:14:39,846
INFlightReservation that


454
00:14:39,846 --> 00:14:41,076
contains all the information


455
00:14:41,326 --> 00:14:42,226
about the reservation.


456
00:14:43,666 --> 00:14:44,676
Now, Siri knows about the


457
00:14:44,676 --> 00:14:46,436
reservation, and can provide


458
00:14:46,436 --> 00:14:48,396
proactive suggestions throughout


459
00:14:49,096 --> 00:14:49,986
the system.


460
00:14:50,126 --> 00:14:51,486
We also added an INReservation


461
00:14:51,486 --> 00:14:52,886
action, to provide a great


462
00:14:52,886 --> 00:14:54,136
check-in experience, with a


463
00:14:54,136 --> 00:14:55,646
shortcut that is displayed to


464
00:14:55,646 --> 00:14:57,206
the user, and takes them


465
00:14:57,206 --> 00:14:58,636
directly into the check-in flow


466
00:14:58,636 --> 00:14:59,326
at the right time.


467
00:15:00,676 --> 00:15:02,316
Let's see this in action.


468
00:15:06,266 --> 00:15:07,226
So, I'm back in my app.


469
00:15:07,636 --> 00:15:08,806
Let's view the flight to Paris


470
00:15:08,806 --> 00:15:10,356
reservation like we did before.


471
00:15:10,356 --> 00:15:14,156
When I view the reservation this


472
00:15:14,156 --> 00:15:15,676
time, I see a notification


473
00:15:16,296 --> 00:15:17,326
telling me Siri found an event


474
00:15:17,326 --> 00:15:17,976
and put it in my calendar.


475
00:15:18,016 --> 00:15:19,766
[ Applause ]


476
00:15:19,766 --> 00:15:19,976
Thank you.


477
00:15:20,516 --> 00:15:22,846
[ Applause ]


478
00:15:23,346 --> 00:15:24,656
I'll tap the notification and


479
00:15:24,656 --> 00:15:26,086
see what it looks like.


480
00:15:27,346 --> 00:15:28,896
So, as we can see, Siri used the


481
00:15:28,896 --> 00:15:30,916
information I donated to create


482
00:15:30,916 --> 00:15:32,396
an event in My Siri Suggestions


483
00:15:32,396 --> 00:15:32,836
Calendar.


484
00:15:32,836 --> 00:15:35,326
Now, there is also a link back


485
00:15:35,326 --> 00:15:35,896
to my app.


486
00:15:37,086 --> 00:15:38,786
When I tap it, I am brought


487
00:15:38,786 --> 00:15:40,196
right back into my app.


488
00:15:40,566 --> 00:15:41,156
So that's great.


489
00:15:42,056 --> 00:15:43,206
However, I don't see the


490
00:15:43,206 --> 00:15:44,616
reservation details about the


491
00:15:44,616 --> 00:15:45,396
event that I was viewing in


492
00:15:45,396 --> 00:15:47,216
Calendar, and I think we can do


493
00:15:47,216 --> 00:15:47,516
better.


494
00:15:47,956 --> 00:15:49,416
Let's go back to Xcode and see


495
00:15:49,416 --> 00:15:53,886
how to implement app launch.


496
00:15:54,076 --> 00:15:55,556
To handle app launch, I'm going


497
00:15:55,746 --> 00:15:59,006
to go to my AppDelegate.


498
00:15:59,006 --> 00:16:00,426
When Siri launches my app, it's


499
00:16:00,426 --> 00:16:01,596
going to be launched using an


500
00:16:01,596 --> 00:16:02,486
NSUserActivity.


501
00:16:02,706 --> 00:16:03,646
So I need to implement the


502
00:16:03,646 --> 00:16:04,306
application


503
00:16:04,306 --> 00:16:05,996
ContinueUserActivity, Delegate


504
00:16:05,996 --> 00:16:06,316
Method.


505
00:16:10,356 --> 00:16:11,566
I'm adding support for two


506
00:16:11,566 --> 00:16:12,516
activity types here.


507
00:16:13,266 --> 00:16:14,396
The first is the


508
00:16:14,396 --> 00:16:15,846
INGetReservationDetailsIntent.


509
00:16:16,856 --> 00:16:18,526
This activity type indicates


510
00:16:18,586 --> 00:16:19,596
that a user wanted to see


511
00:16:19,876 --> 00:16:21,096
details about a specific


512
00:16:21,096 --> 00:16:22,276
reservation in my app.


513
00:16:22,916 --> 00:16:24,296
I'll call my


514
00:16:24,296 --> 00:16:25,846
handleShowReservation method,


515
00:16:26,246 --> 00:16:27,286
which will display the relevant


516
00:16:27,286 --> 00:16:27,976
reservation to the user.


517
00:16:35,316 --> 00:16:37,876
The second one is the activity


518
00:16:37,876 --> 00:16:39,116
type I define for the check-in


519
00:16:39,116 --> 00:16:39,636
shortcut.


520
00:16:40,236 --> 00:16:41,576
This is used when the user taps


521
00:16:41,576 --> 00:16:42,906
the check-in shortcut on the


522
00:16:42,906 --> 00:16:44,196
lock screen or in search.


523
00:16:44,746 --> 00:16:46,876
I'll call my handleCheckIn


524
00:16:46,876 --> 00:16:48,136
method when this happens, to


525
00:16:48,136 --> 00:16:49,366
start the check-in process.


526
00:16:51,586 --> 00:16:53,056
So, now handling both cases,


527
00:16:53,606 --> 00:16:54,826
let's launch the app and see


528
00:16:54,826 --> 00:16:55,976
this in action.


529
00:17:02,066 --> 00:17:04,046
First, let's go back to


530
00:17:04,046 --> 00:17:06,026
Calendar, and tap the show in My


531
00:17:06,026 --> 00:17:06,986
Flights button again.


532
00:17:07,576 --> 00:17:10,896
As you can see, my app now


533
00:17:10,896 --> 00:17:12,076
launches directly into the


534
00:17:12,076 --> 00:17:13,226
reservation details for this


535
00:17:13,226 --> 00:17:13,536
event.


536
00:17:14,096 --> 00:17:15,246
Now, this is a much better user


537
00:17:15,246 --> 00:17:15,856
experience.


538
00:17:16,516 --> 00:17:20,786
[ Applause ]


539
00:17:21,286 --> 00:17:22,386
I also added support for the


540
00:17:22,386 --> 00:17:24,626
check-in shortcut, and my flight


541
00:17:24,626 --> 00:17:26,876
leaves tomorrow at 2:50 PM, so


542
00:17:26,876 --> 00:17:28,205
check-in should already be open.


543
00:17:29,406 --> 00:17:30,306
Let's see how that works.


544
00:17:31,756 --> 00:17:32,756
Now, the check-in shortcut


545
00:17:32,756 --> 00:17:34,136
appears both on the lock screen


546
00:17:34,646 --> 00:17:35,386
and in the Search UI.


547
00:17:35,386 --> 00:17:38,246
When I tap it, I'm launched


548
00:17:38,246 --> 00:17:39,706
directly into the check-in flow


549
00:17:39,706 --> 00:17:40,126
of my app.


550
00:17:40,126 --> 00:17:40,956
That's pretty awesome.


551
00:17:41,516 --> 00:17:47,416
[ Applause ]


552
00:17:47,916 --> 00:17:48,936
So let's recap.


553
00:17:49,746 --> 00:17:51,136
We created and donated a


554
00:17:51,136 --> 00:17:51,746
reservation.


555
00:17:53,106 --> 00:17:54,496
We provided a check-in action,


556
00:17:55,546 --> 00:17:56,866
and we made sure to handle app


557
00:17:56,866 --> 00:17:57,136
launch.


558
00:17:58,646 --> 00:17:59,686
This is how we see it, is to


559
00:17:59,686 --> 00:18:01,206
take advantage of the Siri Event


560
00:18:01,206 --> 00:18:03,026
Suggestions API, to provide deep


561
00:18:03,026 --> 00:18:04,806
system integration and the great


562
00:18:04,806 --> 00:18:05,766
user experience.


563
00:18:06,446 --> 00:18:07,776
Now, I would like to tell you


564
00:18:07,776 --> 00:18:11,366
more about the API.


565
00:18:11,606 --> 00:18:12,986
We'll begin with Donations, and


566
00:18:12,986 --> 00:18:14,126
talk about how Siri used the


567
00:18:14,126 --> 00:18:16,126
information you donate in places


568
00:18:16,126 --> 00:18:18,356
like Shortcut Suggestions, and


569
00:18:18,356 --> 00:18:18,776
Calendar.


570
00:18:20,486 --> 00:18:22,336
As we saw in the demo, your app


571
00:18:22,336 --> 00:18:23,656
is front and center in the


572
00:18:23,656 --> 00:18:24,486
check-in shortcut.


573
00:18:24,486 --> 00:18:26,596
We display your app name and


574
00:18:26,596 --> 00:18:28,026
icon along with the information


575
00:18:28,026 --> 00:18:28,966
about the reservation.


576
00:18:30,266 --> 00:18:32,046
Again, we use the title you set


577
00:18:32,046 --> 00:18:33,766
on the NSUserActivity in the


578
00:18:33,766 --> 00:18:34,316
shortcut.


579
00:18:34,936 --> 00:18:36,386
So, make sure you use a string


580
00:18:36,386 --> 00:18:37,616
that is accurate and


581
00:18:37,616 --> 00:18:38,826
descriptive.


582
00:18:40,576 --> 00:18:42,026
Now, Siri automatically


583
00:18:42,026 --> 00:18:43,066
synchronized the reservation


584
00:18:43,066 --> 00:18:44,236
details across the user's


585
00:18:44,286 --> 00:18:45,846
devices using end-to-end


586
00:18:45,846 --> 00:18:46,306
encryption.


587
00:18:46,536 --> 00:18:48,136
So the user might see the


588
00:18:48,136 --> 00:18:49,576
check-in shortcut on the device


589
00:18:49,576 --> 00:18:50,716
where your app is not installed.


590
00:18:51,296 --> 00:18:52,616
In this case, an iPad.


591
00:18:54,056 --> 00:18:55,556
When this happens, we'll use the


592
00:18:55,556 --> 00:18:57,486
web page URL property you set on


593
00:18:57,486 --> 00:18:59,476
the NSUserActivity to provide a


594
00:18:59,476 --> 00:19:01,056
web base check-in flow using


595
00:19:01,056 --> 00:19:01,506
Safari.


596
00:19:02,176 --> 00:19:04,236
So that is a check-in shortcut.


597
00:19:04,776 --> 00:19:07,476
Let's take a look at Calendar.


598
00:19:07,566 --> 00:19:09,076
Now, first up is the Title.


599
00:19:10,016 --> 00:19:11,376
The title is auto-generated by


600
00:19:11,376 --> 00:19:13,726
Siri using the reservation


601
00:19:13,726 --> 00:19:14,836
details you provided.


602
00:19:15,846 --> 00:19:17,376
As you can see, Siri adds a


603
00:19:17,376 --> 00:19:19,086
localized reservation type to


604
00:19:19,086 --> 00:19:20,186
the title.


605
00:19:20,696 --> 00:19:22,046
Depending on the reservation


606
00:19:22,046 --> 00:19:23,436
type, different parts of the


607
00:19:23,436 --> 00:19:24,656
information may be used to


608
00:19:24,656 --> 00:19:25,476
generate the title.


609
00:19:26,286 --> 00:19:27,416
So make sure you provide all


610
00:19:27,416 --> 00:19:30,306
details as is, and do not


611
00:19:30,516 --> 00:19:30,956
prepend or append anything for display


612
00:19:30,956 --> 00:19:31,606
purposes.


613
00:19:32,066 --> 00:19:34,646
Next is Location.


614
00:19:35,756 --> 00:19:37,236
Location is a key component to


615
00:19:37,236 --> 00:19:39,106
the user experience, and it


616
00:19:39,376 --> 00:19:41,006
drives system integrations such


617
00:19:41,006 --> 00:19:42,516
as a time-to-leave notification


618
00:19:42,516 --> 00:19:43,606
and Maps integration.


619
00:19:44,666 --> 00:19:46,046
For most reservation types,


620
00:19:46,256 --> 00:19:47,846
SiriKit uses the CLPlacemark


621
00:19:47,846 --> 00:19:49,406
class to represent locations.


622
00:19:50,806 --> 00:19:52,046
You can create the CLPlacemark


623
00:19:52,046 --> 00:19:53,666
object yourself, or if your app


624
00:19:53,666 --> 00:19:55,366
uses MapKit, you can get it off


625
00:19:55,366 --> 00:19:56,116
the MapKit item.


626
00:19:56,486 --> 00:19:59,346
If you do create a CLPlacemark


627
00:19:59,346 --> 00:20:01,106
object yourself, be sure to


628
00:20:01,106 --> 00:20:02,996
include both location and postal


629
00:20:02,996 --> 00:20:04,986
address if you have both.


630
00:20:05,956 --> 00:20:07,076
If you do not know the


631
00:20:07,076 --> 00:20:09,066
coordinates, set them to 00.


632
00:20:09,746 --> 00:20:11,106
This will let Siri know to use


633
00:20:11,106 --> 00:20:12,216
only the postal address.


634
00:20:12,666 --> 00:20:15,996
Next step is the start and end


635
00:20:15,996 --> 00:20:17,106
time of the reservation.


636
00:20:18,466 --> 00:20:19,916
As you can see, the event


637
00:20:20,306 --> 00:20:22,006
displays both the start and end


638
00:20:22,006 --> 00:20:23,746
time using the user's current


639
00:20:23,746 --> 00:20:25,506
time zone, and the time zone of


640
00:20:25,556 --> 00:20:26,836
the reservation.


641
00:20:27,636 --> 00:20:29,416
So, make sure you set the local


642
00:20:29,416 --> 00:20:31,486
time zone for the reservation or


643
00:20:31,486 --> 00:20:33,176
use UTC if you don't have that


644
00:20:33,176 --> 00:20:35,646
available in your app.


645
00:20:35,916 --> 00:20:37,106
Some reservation types have a


646
00:20:37,106 --> 00:20:38,316
clear start and end time.


647
00:20:39,286 --> 00:20:41,026
For instance, for a flight, use


648
00:20:41,026 --> 00:20:42,836
the scheduled departure and the


649
00:20:42,836 --> 00:20:43,876
scheduled arrival time.


650
00:20:45,146 --> 00:20:46,856
For reservations like lodging


651
00:20:46,856 --> 00:20:49,056
and car rental, use the check-in


652
00:20:49,056 --> 00:20:51,526
and check-out time.


653
00:20:51,736 --> 00:20:52,776
If your reservation doesn't have


654
00:20:52,776 --> 00:20:54,526
a specific end time, set at nil,


655
00:20:55,466 --> 00:20:56,796
that way Siri will use the


656
00:20:56,796 --> 00:20:58,486
de-filterization based on the


657
00:20:58,486 --> 00:20:59,626
reservation type.


658
00:21:00,116 --> 00:21:03,366
Next is the Notes section.


659
00:21:04,086 --> 00:21:05,996
Siri uses the Notes section to


660
00:21:05,996 --> 00:21:07,096
populate it with more


661
00:21:07,096 --> 00:21:08,096
information from your


662
00:21:08,096 --> 00:21:09,586
reservation details that might


663
00:21:09,586 --> 00:21:11,406
be useful to the user, such as


664
00:21:11,406 --> 00:21:12,626
the reservation number or


665
00:21:12,626 --> 00:21:13,496
seating information.


666
00:21:14,706 --> 00:21:15,856
Be sure you populate all the


667
00:21:15,856 --> 00:21:17,096
reservation details for which


668
00:21:17,096 --> 00:21:18,716
you have information, as it may


669
00:21:18,716 --> 00:21:20,356
be displayed to the user.


670
00:21:21,816 --> 00:21:24,166
Finally, Siri provides a link


671
00:21:24,166 --> 00:21:25,596
directly from Calendar into your


672
00:21:25,596 --> 00:21:25,766
app.


673
00:21:26,786 --> 00:21:28,566
Tapping on it launches your app,


674
00:21:28,676 --> 00:21:30,146
so it can display more details


675
00:21:30,416 --> 00:21:31,356
about the reservation.


676
00:21:31,356 --> 00:21:33,776
So, let's take a look at what


677
00:21:33,776 --> 00:21:35,196
you need to know to handle this


678
00:21:35,196 --> 00:21:36,406
in your app.


679
00:21:38,156 --> 00:21:40,316
To understand app launch, let's


680
00:21:40,316 --> 00:21:42,736
take a step back and look at


681
00:21:42,736 --> 00:21:43,696
what we're donating.


682
00:21:44,636 --> 00:21:46,586
Earlier in the demo, we donated


683
00:21:46,586 --> 00:21:47,866
a single reservation item.


684
00:21:48,426 --> 00:21:50,486
But let's consider a case when


685
00:21:50,486 --> 00:21:51,616
there are multiple reservation


686
00:21:51,616 --> 00:21:52,066
items.


687
00:21:52,796 --> 00:21:53,906
For instance, a round trip


688
00:21:53,906 --> 00:21:54,196
flight.


689
00:21:54,916 --> 00:21:57,096
In that case, we have two


690
00:21:57,096 --> 00:21:58,436
reservation items that might


691
00:21:58,436 --> 00:21:59,426
share the same reservation


692
00:21:59,426 --> 00:21:59,776
number.


693
00:22:01,206 --> 00:22:02,876
As such, the reservation number


694
00:22:02,876 --> 00:22:04,466
can be used to uniquely identify


695
00:22:04,466 --> 00:22:07,656
a specific reservation item.


696
00:22:08,046 --> 00:22:09,186
For this reason, your app must


697
00:22:09,256 --> 00:22:10,716
always provide an additional


698
00:22:10,716 --> 00:22:12,356
identifier called the


699
00:22:12,356 --> 00:22:13,086
itemReference.


700
00:22:13,596 --> 00:22:16,346
The itemReference must be unique


701
00:22:16,396 --> 00:22:18,086
for every reservation item in


702
00:22:18,086 --> 00:22:19,326
your app.


703
00:22:19,606 --> 00:22:20,536
How you structure the


704
00:22:20,536 --> 00:22:21,836
itemReference is really up to


705
00:22:21,836 --> 00:22:23,416
you, as long as you're able to


706
00:22:23,416 --> 00:22:24,896
reason about which reservation


707
00:22:24,896 --> 00:22:25,876
it belongs to later on.


708
00:22:27,306 --> 00:22:29,206
In this example, we're creating


709
00:22:29,206 --> 00:22:30,656
a reservation item by combining


710
00:22:30,656 --> 00:22:31,906
the shared reservation number


711
00:22:32,276 --> 00:22:33,716
and the specific flight number.


712
00:22:37,896 --> 00:22:39,526
Next, we add the two reservation


713
00:22:39,526 --> 00:22:40,376
items to an


714
00:22:40,456 --> 00:22:41,906
INGetReservationDetailsIntent


715
00:22:41,906 --> 00:22:43,816
response, and to complete our


716
00:22:43,816 --> 00:22:45,466
donation, we also need to create


717
00:22:45,466 --> 00:22:45,636
the


718
00:22:45,636 --> 00:22:47,186
INGetReservationDetailsIntent.


719
00:22:50,046 --> 00:22:51,606
When creating the intent, we


720
00:22:51,606 --> 00:22:52,856
need to tell Siri which


721
00:22:52,856 --> 00:22:54,236
reservation the user was


722
00:22:54,236 --> 00:22:54,606
viewing.


723
00:22:55,106 --> 00:22:57,166
This is represented by the


724
00:22:57,166 --> 00:22:58,126
ContainerReference.


725
00:22:58,676 --> 00:23:01,186
In this example, we're donating


726
00:23:01,186 --> 00:23:02,806
two flights that are part of the


727
00:23:02,806 --> 00:23:03,776
same reservation.


728
00:23:04,566 --> 00:23:05,136
So we are setting the


729
00:23:05,136 --> 00:23:06,736
ContainerReference to the shared


730
00:23:06,736 --> 00:23:08,436
reservation number, since it


731
00:23:08,436 --> 00:23:09,596
uniquely identifies the


732
00:23:09,596 --> 00:23:10,676
reservation as a whole.


733
00:23:12,616 --> 00:23:13,996
Finally, we are setting the


734
00:23:13,996 --> 00:23:15,766
Reservation Item References area


735
00:23:15,766 --> 00:23:16,186
to nil.


736
00:23:16,856 --> 00:23:18,046
This is only used when launching


737
00:23:18,046 --> 00:23:19,396
your app, to let it know which


738
00:23:19,396 --> 00:23:21,056
specific reservation the user


739
00:23:21,056 --> 00:23:22,406
wants to see.


740
00:23:23,866 --> 00:23:24,756
So that's our donation.


741
00:23:25,306 --> 00:23:27,486
Let's take a look at how this


742
00:23:27,486 --> 00:23:28,836
information is used when


743
00:23:28,836 --> 00:23:30,126
launching your app.


744
00:23:31,676 --> 00:23:33,556
When your app is launched to


745
00:23:33,556 --> 00:23:34,756
show reservation details, it


746
00:23:35,026 --> 00:23:36,016
will be launched using an


747
00:23:36,106 --> 00:23:37,586
INGetReservationDetailsIntent.


748
00:23:39,056 --> 00:23:40,796
This represents what reservation


749
00:23:40,796 --> 00:23:41,976
the user wants to see details


750
00:23:41,976 --> 00:23:42,326
about.


751
00:23:43,216 --> 00:23:45,296
In this example, we're launching


752
00:23:45,296 --> 00:23:46,596
the app with an intent saying


753
00:23:46,596 --> 00:23:47,976
the user wants detail about a


754
00:23:47,976 --> 00:23:49,976
reservation identified as B9C8.


755
00:23:51,666 --> 00:23:52,706
If the reservation item


756
00:23:52,706 --> 00:23:54,306
reference array is set to nil,


757
00:23:54,756 --> 00:23:55,896
your app should show a UI


758
00:23:55,896 --> 00:23:57,376
displaying this reservation as a


759
00:23:57,376 --> 00:23:57,876
whole.


760
00:23:58,816 --> 00:24:00,216
In our previous example, that


761
00:24:00,216 --> 00:24:01,466
would mean showing both flights.


762
00:24:02,956 --> 00:24:05,266
The user might also want to see


763
00:24:05,476 --> 00:24:06,596
details about a specific


764
00:24:06,596 --> 00:24:08,456
reservation, such as one of the


765
00:24:08,456 --> 00:24:09,756
flights from our previous


766
00:24:09,756 --> 00:24:10,166
example.


767
00:24:11,426 --> 00:24:13,056
In that case, your app will be


768
00:24:13,056 --> 00:24:14,776
launched with a Reservation Item


769
00:24:14,776 --> 00:24:16,426
References Array populated with


770
00:24:16,426 --> 00:24:17,156
a single item.


771
00:24:18,336 --> 00:24:19,736
This will be the item reference


772
00:24:19,736 --> 00:24:21,236
you set on the INReservation


773
00:24:21,236 --> 00:24:22,546
object for this reservation.


774
00:24:23,906 --> 00:24:24,976
In that case, your app should


775
00:24:24,976 --> 00:24:26,706
show a UI displaying details


776
00:24:26,706 --> 00:24:27,756
about only the specific


777
00:24:27,756 --> 00:24:28,386
reservation.


778
00:24:31,496 --> 00:24:33,066
Before launching your app, we


779
00:24:33,066 --> 00:24:34,096
wrap the intent in an


780
00:24:34,166 --> 00:24:35,956
INInteraction and NSUserActivity


781
00:24:35,956 --> 00:24:36,316
object.


782
00:24:36,936 --> 00:24:38,276
With the activity type, set the


783
00:24:38,276 --> 00:24:40,016
name of the Intent and launch


784
00:24:40,016 --> 00:24:41,646
your app using that, like we saw


785
00:24:41,646 --> 00:24:41,976
in the demo.


786
00:24:45,646 --> 00:24:46,826
So, we looked at how Siri uses


787
00:24:46,826 --> 00:24:47,976
the reservation details you


788
00:24:47,976 --> 00:24:49,576
donate, and how that information


789
00:24:49,576 --> 00:24:51,246
is used later on to launch your


790
00:24:51,956 --> 00:24:52,026
app.


791
00:24:52,656 --> 00:24:54,906
But as we know, life happens.


792
00:24:55,886 --> 00:24:57,136
A user might change or even


793
00:24:57,136 --> 00:24:58,896
cancel their reservation, and


794
00:24:58,896 --> 00:25:00,026
that can happen inside or


795
00:25:00,026 --> 00:25:00,696
outside your app.


796
00:25:01,086 --> 00:25:02,556
For instance, from a web page.


797
00:25:03,916 --> 00:25:04,756
Let's take a look at how to


798
00:25:04,756 --> 00:25:06,096
handle some of those cases.


799
00:25:06,576 --> 00:25:09,916
First, let's talk about when is


800
00:25:09,916 --> 00:25:11,146
the right time for your app to


801
00:25:11,146 --> 00:25:11,516
donate.


802
00:25:12,056 --> 00:25:14,746
In this example, the user is


803
00:25:14,746 --> 00:25:15,766
looking at details for a


804
00:25:15,766 --> 00:25:16,736
specific reservation.


805
00:25:17,916 --> 00:25:19,256
Now, this is an excellent time


806
00:25:19,256 --> 00:25:21,116
for your app to donate, because


807
00:25:21,116 --> 00:25:23,016
like we saw earlier in the demo,


808
00:25:23,076 --> 00:25:24,256
we might show a notification to


809
00:25:24,256 --> 00:25:24,776
the user.


810
00:25:26,056 --> 00:25:27,736
Seeing the notification and the


811
00:25:27,736 --> 00:25:29,216
reservation details at the same


812
00:25:29,216 --> 00:25:31,046
time provides a great contextual


813
00:25:31,046 --> 00:25:32,006
user experience.


814
00:25:32,526 --> 00:25:34,996
But life also happens when your


815
00:25:34,996 --> 00:25:37,046
app is in the background, and


816
00:25:37,046 --> 00:25:38,386
users should always have up to


817
00:25:38,386 --> 00:25:39,186
date information.


818
00:25:40,056 --> 00:25:41,636
So a new or updated reservation


819
00:25:41,636 --> 00:25:43,206
information becomes available,


820
00:25:44,276 --> 00:25:45,416
donate that from the background.


821
00:25:46,826 --> 00:25:48,146
In that case, we won't show a


822
00:25:48,146 --> 00:25:49,366
notification to the user.


823
00:25:49,966 --> 00:25:52,446
So those are great times for


824
00:25:52,446 --> 00:25:53,956
your app to donate, while there


825
00:25:53,956 --> 00:25:55,106
are some not so great times for


826
00:25:55,106 --> 00:25:55,726
your app to donate.


827
00:25:56,296 --> 00:25:59,036
As we showed earlier in the


828
00:25:59,036 --> 00:26:01,116
demo, your app should not donate


829
00:26:01,176 --> 00:26:02,716
when showing a list of unrelated


830
00:26:02,716 --> 00:26:03,516
reservations.


831
00:26:05,176 --> 00:26:06,396
Showing a notification at that


832
00:26:06,396 --> 00:26:08,456
point might surprise the user


833
00:26:08,626 --> 00:26:09,806
because of a lack of context.


834
00:26:10,376 --> 00:26:12,346
To provide a seamless


835
00:26:12,346 --> 00:26:14,016
experience, your app should not


836
00:26:14,016 --> 00:26:15,146
provide UI elements that


837
00:26:15,146 --> 00:26:16,606
explicitly donate to Siri.


838
00:26:17,216 --> 00:26:20,066
In this example, the app should


839
00:26:20,066 --> 00:26:21,246
donate when the reservation


840
00:26:21,246 --> 00:26:22,476
details are being displayed.


841
00:26:22,476 --> 00:26:26,436
Next, let's look at some changes


842
00:26:26,436 --> 00:26:27,726
that might happen to the


843
00:26:27,726 --> 00:26:28,306
reservation.


844
00:26:28,866 --> 00:26:31,736
Here, we use the example of a


845
00:26:31,736 --> 00:26:33,146
user selecting a seat for a


846
00:26:33,146 --> 00:26:33,446
flight.


847
00:26:35,016 --> 00:26:36,256
We previously donated this


848
00:26:36,256 --> 00:26:36,826
reservation.


849
00:26:37,346 --> 00:26:39,626
At the time, seating information


850
00:26:39,626 --> 00:26:41,146
was not available, so we set the


851
00:26:41,146 --> 00:26:42,176
seat property to nil.


852
00:26:43,366 --> 00:26:44,546
Now, the user has selected a


853
00:26:44,546 --> 00:26:46,826
seat, so we are going to donate


854
00:26:46,826 --> 00:26:48,126
the updated reservation details


855
00:26:48,626 --> 00:26:49,696
with the seating information


856
00:26:49,696 --> 00:26:50,066
set.


857
00:26:51,526 --> 00:26:52,906
Keep in mind that the item


858
00:26:52,906 --> 00:26:54,586
reference must remain the same


859
00:26:54,816 --> 00:26:55,906
throughout the reservation life


860
00:26:55,906 --> 00:26:56,286
cycle.


861
00:26:57,806 --> 00:26:59,176
Once donated, Siri will


862
00:26:59,176 --> 00:27:00,816
propagate this information to


863
00:27:00,816 --> 00:27:01,846
all the relevant places,


864
00:27:02,206 --> 00:27:02,976
including Calendar.


865
00:27:03,456 --> 00:27:05,636
Next, let's talk about


866
00:27:05,636 --> 00:27:06,396
cancellations.


867
00:27:07,836 --> 00:27:09,696
Cancellations are a special type


868
00:27:09,696 --> 00:27:10,546
of modification.


869
00:27:11,566 --> 00:27:13,246
In this example, we already


870
00:27:13,246 --> 00:27:15,636
donated this reservation with a


871
00:27:15,636 --> 00:27:16,786
status that confirmed.


872
00:27:17,886 --> 00:27:19,326
Unfortunately, the user had to


873
00:27:19,326 --> 00:27:20,456
cancel the reservation.


874
00:27:21,126 --> 00:27:22,106
So we are going to donate the


875
00:27:22,106 --> 00:27:23,776
updated reservation details with


876
00:27:23,776 --> 00:27:25,056
a status set to cancel.


877
00:27:25,476 --> 00:27:28,356
Like with all modifications, the


878
00:27:28,356 --> 00:27:29,786
itemReference must remain the


879
00:27:29,786 --> 00:27:30,146
same.


880
00:27:30,696 --> 00:27:32,786
So, that's how your app should


881
00:27:32,786 --> 00:27:33,976
handle some of the things that


882
00:27:33,976 --> 00:27:34,716
can happen during the


883
00:27:34,716 --> 00:27:35,776
reservation life cycle.


884
00:27:37,086 --> 00:27:38,496
Now, let's summarize what we


885
00:27:38,496 --> 00:27:39,896
talked about today.


886
00:27:41,336 --> 00:27:43,026
So, we've seen how easy it is to


887
00:27:43,026 --> 00:27:44,486
take advantage of the Siri Event


888
00:27:44,486 --> 00:27:46,156
Suggestions API, and how we


889
00:27:46,196 --> 00:27:47,836
provide a great user experience


890
00:27:47,996 --> 00:27:49,056
throughout the reservation life


891
00:27:49,056 --> 00:27:49,426
cycle.


892
00:27:50,516 --> 00:27:51,726
Here are the three main


893
00:27:51,726 --> 00:27:52,376
takeaways.


894
00:27:52,886 --> 00:27:55,086
Your app should donate


895
00:27:55,086 --> 00:27:56,386
reservation details when they


896
00:27:56,386 --> 00:27:58,336
are displayed to the user, or


897
00:27:58,336 --> 00:27:59,416
when they are received in the


898
00:27:59,416 --> 00:27:59,896
background.


899
00:28:02,056 --> 00:28:03,196
Make sure you keep your users up


900
00:28:03,196 --> 00:28:04,506
to date by donating when the


901
00:28:04,506 --> 00:28:05,756
reservation details change.


902
00:28:06,966 --> 00:28:09,206
And finally, remember to handle


903
00:28:09,206 --> 00:28:11,366
app launch, so the users can get


904
00:28:11,366 --> 00:28:13,206
back into your app at the right


905
00:28:13,206 --> 00:28:16,866
time, and the right place.


906
00:28:17,046 --> 00:28:18,406
For more information, and to get


907
00:28:18,406 --> 00:28:19,916
access to our sample code, you


908
00:28:19,916 --> 00:28:21,166
can visit our session link on


909
00:28:21,166 --> 00:28:22,026
the Developer Portal.


910
00:28:22,976 --> 00:28:24,026
We also have some related


911
00:28:24,026 --> 00:28:25,456
sessions from previous years


912
00:28:25,546 --> 00:28:26,666
that we encourage you to check


913
00:28:27,356 --> 00:28:27,426
out.


914
00:28:28,216 --> 00:28:29,776
Thank you, and I hope you had a


915
00:28:29,776 --> 00:28:30,616
great conference.


916
00:28:31,516 --> 00:28:38,460
[ Applause ]

