1
00:00:00,506 --> 00:00:04,516
[ Music ]


2
00:00:05,016 --> 00:00:07,016
[ Silence ]


3
00:00:07,516 --> 00:00:13,416
[ Applause ]


4
00:00:13,916 --> 00:00:14,696
>> Good afternoon.


5
00:00:15,066 --> 00:00:16,946
And welcome to Mastering Xcode


6
00:00:16,996 --> 00:00:17,466
Previews.


7
00:00:17,636 --> 00:00:19,196
You have probably seen Xcode


8
00:00:19,196 --> 00:00:21,626
Previews in multiple places


9
00:00:21,626 --> 00:00:22,356
through the week: in the


10
00:00:22,356 --> 00:00:23,556
keynote, in the State of the


11
00:00:23,556 --> 00:00:24,686
Union address, and multiple


12
00:00:24,686 --> 00:00:25,986
sessions focusing on SwiftUI.


13
00:00:25,986 --> 00:00:27,916
But today we are going to focus


14
00:00:27,916 --> 00:00:29,176
on previewing - on Xcode


15
00:00:29,176 --> 00:00:30,016
previews themselves.


16
00:00:30,946 --> 00:00:31,826
My name is Anton.


17
00:00:31,826 --> 00:00:33,206
And a little bit later I will be


18
00:00:33,206 --> 00:00:34,806
joined onstage by my colleague


19
00:00:34,806 --> 00:00:36,496
Nate to talk about what Xcode


20
00:00:36,496 --> 00:00:38,536
previews are, how they work, and


21
00:00:38,536 --> 00:00:39,866
how to configure them to take


22
00:00:39,866 --> 00:00:41,056
advantage of them in your


23
00:00:41,056 --> 00:00:42,176
workflow -- whether you are


24
00:00:42,176 --> 00:00:43,126
working on a brand new


25
00:00:43,126 --> 00:00:44,536
application using SwiftUI or an


26
00:00:45,096 --> 00:00:47,396
existing app using UIKit or


27
00:00:47,396 --> 00:00:47,766
AppKit.


28
00:00:48,826 --> 00:00:50,186
So let me start with a little


29
00:00:50,186 --> 00:00:50,506
story.


30
00:00:51,226 --> 00:00:53,326
Let's say a designer comes to


31
00:00:53,326 --> 00:00:54,526
you and brings a mockup for a


32
00:00:54,526 --> 00:00:56,246
screen that they have been


33
00:00:56,246 --> 00:00:58,106
working on for your Disney


34
00:00:58,106 --> 00:00:58,646
[phonetic] application.


35
00:00:59,186 --> 00:01:00,766
You take this mockup, and you


36
00:01:00,766 --> 00:01:01,686
take it to your desk, and you


37
00:01:01,686 --> 00:01:02,146
work on it.


38
00:01:02,146 --> 00:01:02,576
You build it.


39
00:01:03,036 --> 00:01:04,936
And you bring it back to show


40
00:01:04,936 --> 00:01:05,876
your designer your work.


41
00:01:06,626 --> 00:01:07,676
You run the code.


42
00:01:08,146 --> 00:01:09,416
You navigate through a bunch of


43
00:01:09,416 --> 00:01:10,266
screens that you have already


44
00:01:10,266 --> 00:01:11,836
built before to this new screen,


45
00:01:12,256 --> 00:01:12,966
show it to them.


46
00:01:13,076 --> 00:01:15,166
And they say, "Hey that looks


47
00:01:15,166 --> 00:01:15,666
pretty good.


48
00:01:15,976 --> 00:01:18,566
But now that I see this thing in


49
00:01:18,566 --> 00:01:20,816
the flesh, that button, that


50
00:01:20,856 --> 00:01:21,826
could be a little bit more


51
00:01:21,826 --> 00:01:22,336
blue."


52
00:01:23,256 --> 00:01:24,276
That - that's no big deal.


53
00:01:24,276 --> 00:01:25,276
You quit the app, you open


54
00:01:25,326 --> 00:01:26,456
Xcode, you make the edit that


55
00:01:26,456 --> 00:01:27,296
you want to make.


56
00:01:27,366 --> 00:01:29,326
You run it again.


57
00:01:29,326 --> 00:01:30,916
You navigate through a bunch of


58
00:01:30,916 --> 00:01:32,106
screens to the new screen that


59
00:01:32,106 --> 00:01:32,756
you have just built.


60
00:01:32,756 --> 00:01:33,956
You show it to your designer.


61
00:01:33,956 --> 00:01:37,436
And they go, "Hey, that's much


62
00:01:37,476 --> 00:01:37,746
better.


63
00:01:38,086 --> 00:01:41,656
But the padding on that text is


64
00:01:41,656 --> 00:01:42,786
- it could be a little tighter,


65
00:01:42,786 --> 00:01:43,296
don't you think?"


66
00:01:44,546 --> 00:01:45,616
You get where I'm going with


67
00:01:45,616 --> 00:01:46,076
this story.


68
00:01:46,076 --> 00:01:48,036
This sort of iteration, this


69
00:01:48,036 --> 00:01:49,356
back-and-forth, is a normal


70
00:01:49,356 --> 00:01:49,936
process.


71
00:01:49,936 --> 00:01:51,556
It happens to all of us.


72
00:01:51,556 --> 00:01:52,746
And this is how we get


73
00:01:53,196 --> 00:01:54,376
great-looking apps.


74
00:01:54,756 --> 00:01:55,706
But this is something that's


75
00:01:55,706 --> 00:01:58,006
also potentially time consuming.


76
00:01:58,006 --> 00:01:59,626
And the time-consuming bit here


77
00:01:59,896 --> 00:02:01,816
is not the iteration itself.


78
00:02:01,816 --> 00:02:03,066
It's not the making of the small


79
00:02:03,066 --> 00:02:04,136
changes here and there.


80
00:02:04,136 --> 00:02:05,236
And it's not the getting of the


81
00:02:05,236 --> 00:02:05,756
feedback.


82
00:02:06,126 --> 00:02:08,166
It's the building and running


83
00:02:08,166 --> 00:02:10,145
and configuring and navigating


84
00:02:10,455 --> 00:02:11,586
and getting your app to the


85
00:02:11,586 --> 00:02:13,596
state where you can verify that


86
00:02:13,596 --> 00:02:14,646
the changes that you are making


87
00:02:14,646 --> 00:02:15,806
have the results you expect.


88
00:02:17,796 --> 00:02:20,266
So let me give you another


89
00:02:21,166 --> 00:02:21,406
example.


90
00:02:22,296 --> 00:02:23,746
So let's say your designer - you


91
00:02:23,786 --> 00:02:25,586
and your designer are now done,


92
00:02:25,586 --> 00:02:28,656
and you are happy with the view


93
00:02:28,656 --> 00:02:29,136
that you got.


94
00:02:29,136 --> 00:02:30,496
And you take it to your desk.


95
00:02:30,956 --> 00:02:32,936
But your work as a developer


96
00:02:33,716 --> 00:02:36,276
isn't done yet because, as


97
00:02:36,276 --> 00:02:38,036
developers, we want to build


98
00:02:38,386 --> 00:02:39,386
well-behaved apps.


99
00:02:39,546 --> 00:02:42,066
And a well-behaved app means


100
00:02:42,066 --> 00:02:44,706
that your new view, it needs to


101
00:02:44,706 --> 00:02:45,976
look good no matter what


102
00:02:45,976 --> 00:02:47,206
configuration your user is


103
00:02:47,206 --> 00:02:47,746
running it in.


104
00:02:48,256 --> 00:02:49,406
So for example, it needs to look


105
00:02:49,406 --> 00:02:52,786
great in dark mode.


106
00:02:53,936 --> 00:02:56,016
Or at a different dynamic


107
00:02:56,046 --> 00:02:56,876
content size.


108
00:02:57,426 --> 00:03:00,366
Or maybe even on a different


109
00:03:00,366 --> 00:03:00,786
device.


110
00:03:02,256 --> 00:03:04,056
And there is a real tension


111
00:03:04,566 --> 00:03:07,496
between verifying that your UI


112
00:03:07,496 --> 00:03:08,996
and your app looks as good as it


113
00:03:08,996 --> 00:03:11,056
can possibly look under a


114
00:03:11,056 --> 00:03:12,396
variety of circumstances.


115
00:03:12,736 --> 00:03:14,656
And, you know, actually shipping


116
00:03:14,656 --> 00:03:16,576
your app to the App Store that


117
00:03:16,576 --> 00:03:18,416
we as developers are all


118
00:03:18,936 --> 00:03:19,586
familiar with.


119
00:03:20,386 --> 00:03:22,416
So the Xcode team has thought


120
00:03:22,416 --> 00:03:23,616
about this problem for a while.


121
00:03:23,956 --> 00:03:25,346
And the solution that we got -


122
00:03:25,386 --> 00:03:27,796
came up with is Xcode Previews.


123
00:03:28,136 --> 00:03:29,426
Now Xcode Previews is a new


124
00:03:29,486 --> 00:03:32,676
feature of Xcode that allows you


125
00:03:33,076 --> 00:03:35,056
to - that institute - minimize


126
00:03:35,056 --> 00:03:36,186
the amount of time you spend


127
00:03:36,326 --> 00:03:37,196
building and running and


128
00:03:37,196 --> 00:03:39,316
configuring your views to verify


129
00:03:39,316 --> 00:03:40,336
the changes that you are making.


130
00:03:40,716 --> 00:03:42,896
And to - and lets you focus on


131
00:03:42,896 --> 00:03:44,586
the things that you love doing


132
00:03:44,586 --> 00:03:46,566
best, which is building great


133
00:03:47,306 --> 00:03:47,566
apps.


134
00:03:48,636 --> 00:03:50,306
But the question is, how?


135
00:03:50,306 --> 00:03:51,506
How does this work?


136
00:03:51,506 --> 00:03:52,136
How does it do it?


137
00:03:53,026 --> 00:03:54,616
Well when you enable Previews in


138
00:03:54,616 --> 00:03:56,706
your application, Xcode actually


139
00:03:56,786 --> 00:03:58,556
builds your app in a special


140
00:03:59,456 --> 00:03:59,523
way.


141
00:04:00,226 --> 00:04:03,166
Since Xcode knows what view and


142
00:04:03,166 --> 00:04:04,356
what file you are currently


143
00:04:04,356 --> 00:04:05,936
working on at all times, it can


144
00:04:05,936 --> 00:04:08,466
compile just that file, just


145
00:04:08,496 --> 00:04:09,906
that view, separate from the


146
00:04:09,906 --> 00:04:12,336
rest of your application -- and


147
00:04:12,336 --> 00:04:14,516
then inject that implementation


148
00:04:15,096 --> 00:04:16,826
back into your application using


149
00:04:16,826 --> 00:04:18,486
Swift's dynamic replacement


150
00:04:18,486 --> 00:04:18,805
feature.


151
00:04:20,255 --> 00:04:21,446
And because the amount of code


152
00:04:21,446 --> 00:04:22,726
that needs to be recompiled for


153
00:04:22,726 --> 00:04:24,126
every change is significantly


154
00:04:24,126 --> 00:04:26,486
smaller than the entirety of the


155
00:04:26,486 --> 00:04:27,936
rest of your application, Xcode


156
00:04:27,936 --> 00:04:29,486
can continuously and repeatedly


157
00:04:29,486 --> 00:04:31,236
do this for every change that


158
00:04:31,236 --> 00:04:31,556
you make.


159
00:04:32,576 --> 00:04:34,886
And that means the feedback on


160
00:04:34,886 --> 00:04:37,056
your changes is much, much


161
00:04:37,056 --> 00:04:37,416
quicker.


162
00:04:38,306 --> 00:04:39,856
But there is a whole class of


163
00:04:39,896 --> 00:04:42,026
changes that Xcode can optimize


164
00:04:42,056 --> 00:04:42,596
even further.


165
00:04:42,966 --> 00:04:45,686
So for changes that involve only


166
00:04:45,686 --> 00:04:47,296
the literal values, like strings


167
00:04:47,296 --> 00:04:49,296
or numbers, no recompilation is


168
00:04:49,296 --> 00:04:49,976
required at all.


169
00:04:51,216 --> 00:04:53,486
That - Xcode just injects the


170
00:04:53,486 --> 00:04:54,526
new value into the running


171
00:04:54,526 --> 00:04:56,896
application, and you get instant


172
00:04:56,896 --> 00:04:58,646
feedback much like you get from


173
00:04:58,646 --> 00:04:59,966
a visual editing tool.


174
00:05:00,596 --> 00:05:04,066
And it's important to note here


175
00:05:04,416 --> 00:05:08,456
that the Xcode Previews is not a


176
00:05:08,456 --> 00:05:09,936
representation of what Xcode


177
00:05:09,936 --> 00:05:12,196
thinks your view will look like


178
00:05:12,266 --> 00:05:13,516
when you run the application.


179
00:05:14,116 --> 00:05:16,256
It is actually building and


180
00:05:16,256 --> 00:05:17,036
running your code.


181
00:05:18,606 --> 00:05:20,446
So all the context that is


182
00:05:20,446 --> 00:05:22,156
normally available within your


183
00:05:22,156 --> 00:05:23,906
running application is available


184
00:05:23,986 --> 00:05:25,616
to the view under Previews.


185
00:05:25,616 --> 00:05:27,506
If you have custom assets, you


186
00:05:27,506 --> 00:05:28,466
can use those within your


187
00:05:28,466 --> 00:05:29,336
preview and they will render.


188
00:05:29,606 --> 00:05:32,046
If you have custom logic in your


189
00:05:32,046 --> 00:05:32,766
app that you want to use --


190
00:05:32,766 --> 00:05:34,006
which of course, you know, every


191
00:05:34,006 --> 00:05:35,836
app would have custom logic --


192
00:05:36,236 --> 00:05:37,216
you could use that as well.


193
00:05:37,216 --> 00:05:39,726
And even runtime configuration,


194
00:05:39,726 --> 00:05:41,116
something like "Set user


195
00:05:41,116 --> 00:05:42,696
default," is available to your


196
00:05:42,696 --> 00:05:43,796
views on your Previews as well.


197
00:05:45,756 --> 00:05:48,626
So now the question is, how does


198
00:05:48,626 --> 00:05:49,976
Xcode know what to show you?


199
00:05:52,826 --> 00:05:55,136
Well it turns out all you need


200
00:05:55,136 --> 00:05:57,016
to tell Xcode what view to


201
00:05:57,016 --> 00:05:58,446
preview and how to configure the


202
00:05:58,446 --> 00:06:01,676
data is a little bit of code.


203
00:06:01,676 --> 00:06:03,036
And all you do is you implement


204
00:06:03,036 --> 00:06:05,496
a small type that conforms to a


205
00:06:05,556 --> 00:06:07,716
PreviewProvider protocol, which


206
00:06:07,966 --> 00:06:08,996
is a part of a SwiftUI


207
00:06:08,996 --> 00:06:09,436
framework.


208
00:06:10,016 --> 00:06:11,046
And that particle has one


209
00:06:11,046 --> 00:06:12,926
requirement, just a Previews


210
00:06:12,976 --> 00:06:14,026
property that you implement.


211
00:06:14,396 --> 00:06:15,426
And then you return some


212
00:06:15,426 --> 00:06:15,896
content.


213
00:06:15,936 --> 00:06:17,796
And really, what your return out


214
00:06:17,796 --> 00:06:20,616
of here is completely up to you.


215
00:06:21,226 --> 00:06:24,956
And because this code lives as a


216
00:06:25,036 --> 00:06:26,456
part of your application as


217
00:06:26,456 --> 00:06:28,126
well, it's compiled alongside


218
00:06:28,126 --> 00:06:29,086
the rest of your application


219
00:06:29,086 --> 00:06:29,326
code.


220
00:06:29,836 --> 00:06:33,076
The same story applies for the


221
00:06:33,226 --> 00:06:34,786
configuration code as it does


222
00:06:34,786 --> 00:06:35,166
for the view.


223
00:06:35,166 --> 00:06:37,736
So you also can use custom logic


224
00:06:37,736 --> 00:06:40,946
in here and custom resources and


225
00:06:40,946 --> 00:06:42,256
even runtime configuration.


226
00:06:42,646 --> 00:06:44,336
There are several advantages


227
00:06:44,336 --> 00:06:46,616
beyond that to using code to


228
00:06:46,616 --> 00:06:48,216
configure your previews.


229
00:06:48,776 --> 00:06:50,626
For instance, since this is just


230
00:06:50,626 --> 00:06:52,256
SwiftUI code, this configuration


231
00:06:52,256 --> 00:06:53,436
code is just SwiftUI.


232
00:06:53,436 --> 00:06:54,616
If you know how to create


233
00:06:55,006 --> 00:06:56,366
SwiftUIView, you already


234
00:06:56,366 --> 00:06:58,006
automatically know how to


235
00:06:58,006 --> 00:07:00,816
configure a preview for it.


236
00:07:01,416 --> 00:07:03,136
Also, you can write a preview


237
00:07:03,136 --> 00:07:04,716
once, put it in your source


238
00:07:04,716 --> 00:07:05,806
control, and share it with your


239
00:07:05,806 --> 00:07:06,076
team.


240
00:07:06,076 --> 00:07:07,446
So that means you write a


241
00:07:07,446 --> 00:07:08,876
preview, and the rest of your


242
00:07:08,876 --> 00:07:09,736
team can benefit.


243
00:07:10,576 --> 00:07:12,386
And then finally, as you make


244
00:07:12,386 --> 00:07:13,516
changes, the - our views are


245
00:07:13,516 --> 00:07:14,296
always evolving.


246
00:07:14,386 --> 00:07:15,626
Our apps are always evolving.


247
00:07:15,876 --> 00:07:18,346
As the view changes, and its API


248
00:07:18,346 --> 00:07:20,356
changes, the compiler can help


249
00:07:20,356 --> 00:07:21,426
you make sure that your preview


250
00:07:21,426 --> 00:07:23,496
stays in sync with the view so


251
00:07:23,496 --> 00:07:25,476
that you always know that you


252
00:07:25,476 --> 00:07:28,606
are previewing the right thing.


253
00:07:28,946 --> 00:07:31,006
So that's a brief introduction


254
00:07:31,036 --> 00:07:32,556
into how previews work.


255
00:07:33,196 --> 00:07:34,596
To tell you more about how to


256
00:07:34,596 --> 00:07:36,506
configure them to take advantage


257
00:07:36,506 --> 00:07:37,476
of them to the fullest, please


258
00:07:37,476 --> 00:07:37,976
welcome Nate.


259
00:07:38,516 --> 00:07:45,500
[ Applause ]


260
00:07:48,506 --> 00:07:50,016
>> Anton told you that previews


261
00:07:50,016 --> 00:07:50,516
are code.


262
00:07:51,156 --> 00:07:52,066
I would like to show you how to


263
00:07:52,066 --> 00:07:52,556
write one.


264
00:07:53,116 --> 00:07:56,296
The Xcode Previews team has


265
00:07:56,296 --> 00:07:57,906
decided to take a trip to the


266
00:07:58,456 --> 00:07:58,526
zoo.


267
00:08:00,116 --> 00:08:01,316
There are a lot of animals at


268
00:08:01,316 --> 00:08:02,616
the zoo, and we want to make


269
00:08:02,616 --> 00:08:04,376
sure not to miss even one.


270
00:08:05,616 --> 00:08:06,526
Naturally, being the app


271
00:08:06,526 --> 00:08:07,736
developers that we are, we


272
00:08:07,736 --> 00:08:08,996
couldn't help ourselves but had


273
00:08:08,996 --> 00:08:11,056
to build an application to track


274
00:08:11,136 --> 00:08:12,066
the animals at the zoo.


275
00:08:12,636 --> 00:08:14,886
I have been working on that


276
00:08:14,886 --> 00:08:15,606
application.


277
00:08:16,116 --> 00:08:17,846
In particular, the main user


278
00:08:17,846 --> 00:08:20,136
interface for it is a list of


279
00:08:20,136 --> 00:08:20,986
animals at the zoo.


280
00:08:21,776 --> 00:08:24,276
In that list is displayed a


281
00:08:24,276 --> 00:08:25,336
number of animal cells.


282
00:08:26,006 --> 00:08:28,556
Let me show you what I have got


283
00:08:28,556 --> 00:08:28,956
so far.


284
00:08:32,456 --> 00:08:35,246
In the canvas, you see a preview


285
00:08:35,246 --> 00:08:36,166
of the animal cell.


286
00:08:36,645 --> 00:08:39,515
Because the run destination of


287
00:08:39,515 --> 00:08:41,416
iPhone 10S is selected, that's


288
00:08:41,416 --> 00:08:42,696
the chrome we see around our


289
00:08:42,696 --> 00:08:43,476
animal cell view.


290
00:08:43,816 --> 00:08:45,796
But we want to make sure that


291
00:08:45,796 --> 00:08:47,196
our app - that our view looks


292
00:08:47,196 --> 00:08:48,976
great on all devices.


293
00:08:49,216 --> 00:08:51,046
In particular, my daily carry is


294
00:08:51,046 --> 00:08:51,926
an iPhone SE.


295
00:08:52,816 --> 00:08:54,776
Now I could change the run


296
00:08:54,776 --> 00:08:56,686
destination to iPhone SE, but


297
00:08:56,686 --> 00:08:57,706
there is another mechanism


298
00:08:57,706 --> 00:08:59,026
provided by the Previews API --


299
00:08:59,796 --> 00:09:02,026
specifically the preview device.


300
00:09:02,766 --> 00:09:05,746
You pass to that method the name


301
00:09:05,746 --> 00:09:06,806
of the device you want to see a


302
00:09:06,806 --> 00:09:07,416
preview on.


303
00:09:08,206 --> 00:09:09,666
And almost immediately in the


304
00:09:09,666 --> 00:09:11,966
canvas, you see the device


305
00:09:11,966 --> 00:09:13,026
displaying your view.


306
00:09:13,446 --> 00:09:15,826
Now as I am looking at the


307
00:09:15,826 --> 00:09:17,716
device, this iPhone SE showing


308
00:09:17,716 --> 00:09:18,756
the animal cell, I am seeing a


309
00:09:18,756 --> 00:09:19,256
problem.


310
00:09:19,816 --> 00:09:21,796
The rightmost text is truncated.


311
00:09:22,116 --> 00:09:23,986
Let's go ahead and fix that.


312
00:09:24,646 --> 00:09:26,106
To do so, I'll change this


313
00:09:26,106 --> 00:09:28,246
HStack into a VStack.


314
00:09:29,186 --> 00:09:31,196
Immediately, the canvas updates,


315
00:09:31,346 --> 00:09:33,406
showing us exactly what we want.


316
00:09:34,916 --> 00:09:36,386
Now Anton's daily carry is an


317
00:09:36,386 --> 00:09:37,196
iPhone 10r.


318
00:09:37,536 --> 00:09:38,926
To make sure that his device


319
00:09:38,926 --> 00:09:40,966
shows this cell well, we could


320
00:09:41,196 --> 00:09:42,326
change the argument that we are


321
00:09:42,326 --> 00:09:43,626
passing to previewDevice.


322
00:09:44,126 --> 00:09:45,116
But there is an easier way.


323
00:09:45,686 --> 00:09:47,856
Specifically, we can embed this


324
00:09:47,856 --> 00:09:48,876
view in a group.


325
00:09:49,436 --> 00:09:51,056
To do so, Command-click on the


326
00:09:51,056 --> 00:09:53,096
AnimalCell and scroll down to


327
00:09:53,296 --> 00:09:53,986
Embed in Group.


328
00:09:54,936 --> 00:09:57,486
Then add a second instance of


329
00:09:57,486 --> 00:09:59,256
the animal cells to it, this


330
00:09:59,256 --> 00:10:01,936
time calling previewDevice with


331
00:10:01,936 --> 00:10:02,926
iPhone 10r.


332
00:10:04,666 --> 00:10:06,666
Now we see, in the canvas, a


333
00:10:06,666 --> 00:10:08,216
preview for our cell running on


334
00:10:08,256 --> 00:10:09,016
two devices.


335
00:10:10,436 --> 00:10:11,966
Scientific names of animals are


336
00:10:11,966 --> 00:10:13,386
often written in italics.


337
00:10:13,716 --> 00:10:14,596
Let's go ahead and make that


338
00:10:14,596 --> 00:10:14,976
change right now.


339
00:10:19,896 --> 00:10:21,186
Now in the canvas we can


340
00:10:21,186 --> 00:10:22,936
validate that our change looks


341
00:10:22,966 --> 00:10:25,086
correct on both devices.


342
00:10:25,256 --> 00:10:25,976
This is so easy.


343
00:10:26,516 --> 00:10:33,256
[ Applause ]


344
00:10:33,756 --> 00:10:35,226
It's great to be able to see our


345
00:10:35,226 --> 00:10:37,056
views previewed on the devices


346
00:10:37,056 --> 00:10:38,096
that our users are actually


347
00:10:38,096 --> 00:10:38,806
using.


348
00:10:39,066 --> 00:10:40,256
But for smaller views like a


349
00:10:40,256 --> 00:10:42,526
cell, it's also great to be able


350
00:10:42,526 --> 00:10:43,906
to focus in on the details we


351
00:10:43,906 --> 00:10:45,706
really care about and to strip


352
00:10:45,706 --> 00:10:47,266
away that extraneous chrome.


353
00:10:48,136 --> 00:10:49,716
To do so, the Previews API


354
00:10:49,716 --> 00:10:51,056
provides the method "Preview


355
00:10:51,056 --> 00:10:51,456
Layout."


356
00:10:51,456 --> 00:10:53,986
Now the Preview Layout method


357
00:10:55,226 --> 00:10:56,376
can be passed three different


358
00:10:56,376 --> 00:10:56,986
arguments.


359
00:10:57,196 --> 00:10:59,106
First, you can specify the


360
00:10:59,106 --> 00:10:59,796
device.


361
00:11:00,036 --> 00:11:00,896
That's actually what's being


362
00:11:00,896 --> 00:11:02,316
used by default and what's


363
00:11:02,316 --> 00:11:03,676
displayed in the canvas right


364
00:11:03,676 --> 00:11:03,916
now.


365
00:11:04,256 --> 00:11:07,646
Secondly, you can use a specific


366
00:11:07,646 --> 00:11:09,076
size that you want your preview


367
00:11:09,076 --> 00:11:09,776
to be displayed as.


368
00:11:10,006 --> 00:11:11,636
This is super useful if you know


369
00:11:11,636 --> 00:11:12,496
that your view is going to be


370
00:11:12,496 --> 00:11:14,436
embedded in some larger view at


371
00:11:14,436 --> 00:11:15,466
a particular size.


372
00:11:15,976 --> 00:11:17,856
And finally, you can use Size


373
00:11:17,856 --> 00:11:18,546
That Fits.


374
00:11:18,926 --> 00:11:20,936
This is useful if you want your


375
00:11:20,936 --> 00:11:23,016
view to be able to determine the


376
00:11:23,016 --> 00:11:25,056
size of the preview based on its


377
00:11:25,056 --> 00:11:25,586
content.


378
00:11:26,226 --> 00:11:27,486
Since an animal cell is going to


379
00:11:27,486 --> 00:11:29,366
be embedded in a list, and a


380
00:11:29,366 --> 00:11:32,666
list allows its entities -- the


381
00:11:32,666 --> 00:11:34,596
cells displayed within it -- to


382
00:11:34,596 --> 00:11:36,536
be resized vertically according


383
00:11:36,536 --> 00:11:37,546
to their contents, we are going


384
00:11:37,546 --> 00:11:38,796
to go ahead and use "Size That


385
00:11:39,486 --> 00:11:39,606
Fits."


386
00:11:41,196 --> 00:11:42,776
And immediately, the canvas


387
00:11:42,776 --> 00:11:44,596
update, showing us just what we


388
00:11:44,596 --> 00:11:44,886
want.


389
00:11:44,916 --> 00:11:47,556
I am going to go ahead and zoom


390
00:11:47,556 --> 00:11:48,996
in by clicking on the plus sign


391
00:11:48,996 --> 00:11:49,806
in the bottom right of the


392
00:11:49,806 --> 00:11:50,386
canvas.


393
00:11:51,936 --> 00:11:55,056
You know, the two texts, the red


394
00:11:55,056 --> 00:11:56,706
fox and the family name below


395
00:11:56,706 --> 00:12:00,236
it, Canidae, are a little too


396
00:12:00,236 --> 00:12:00,986
indistinct.


397
00:12:01,386 --> 00:12:02,866
I want them to be visually


398
00:12:02,866 --> 00:12:04,116
distinctive, one from the next.


399
00:12:04,116 --> 00:12:05,186
So I am going to go ahead and


400
00:12:05,186 --> 00:12:06,656
make the red fox be bold.


401
00:12:07,416 --> 00:12:09,016
To do that, I'll Command-click


402
00:12:09,016 --> 00:12:11,056
on the Text and scroll down to


403
00:12:11,056 --> 00:12:13,266
the Inspect action, then change


404
00:12:13,306 --> 00:12:14,886
the weight to Bold.


405
00:12:16,816 --> 00:12:18,796
The source editor gets new code


406
00:12:18,796 --> 00:12:20,826
added to it, and the previews


407
00:12:20,906 --> 00:12:22,186
refresh in response.


408
00:12:23,096 --> 00:12:23,676
This looks great.


409
00:12:24,366 --> 00:12:27,376
A lot of users like to take


410
00:12:27,376 --> 00:12:29,116
advantage of dynamic font sizes.


411
00:12:29,616 --> 00:12:31,196
Let's take a look at what our


412
00:12:31,196 --> 00:12:32,956
view will look like when the


413
00:12:32,956 --> 00:12:35,226
user changes dynamic font size


414
00:12:35,286 --> 00:12:36,466
to extra-large.


415
00:12:37,466 --> 00:12:39,596
Because the preview of API is


416
00:12:39,596 --> 00:12:41,616
part of SwiftUI, we can take


417
00:12:41,616 --> 00:12:43,626
advantage of all of SwiftUI when


418
00:12:43,626 --> 00:12:44,776
we are writing our previews.


419
00:12:45,186 --> 00:12:47,076
In particular, in this case we


420
00:12:47,076 --> 00:12:48,586
can use the environment modifier


421
00:12:48,586 --> 00:12:51,596
and specify the value for the


422
00:12:51,596 --> 00:12:53,506
Size category keypath to be


423
00:12:53,506 --> 00:12:54,246
extra-large.


424
00:12:56,136 --> 00:12:57,726
Now it's great to be able to so


425
00:12:57,726 --> 00:13:00,066
easily change the size category


426
00:13:00,066 --> 00:13:01,186
that we are seeing our view at.


427
00:13:01,186 --> 00:13:03,086
But what would be even better


428
00:13:03,356 --> 00:13:05,326
would be to be able to see our


429
00:13:05,326 --> 00:13:07,146
view displayed at every single


430
00:13:07,146 --> 00:13:08,866
content size category at once.


431
00:13:08,866 --> 00:13:11,996
What we could do is embed this


432
00:13:11,996 --> 00:13:13,296
view in a group and, and for


433
00:13:13,296 --> 00:13:15,336
each different one, create a


434
00:13:15,336 --> 00:13:16,456
different animal cell.


435
00:13:16,676 --> 00:13:18,166
But that's very repetitive, and


436
00:13:18,366 --> 00:13:19,226
there is a better way.


437
00:13:20,436 --> 00:13:22,736
SwiftUI has the for each


438
00:13:22,736 --> 00:13:23,106
feature.


439
00:13:23,386 --> 00:13:24,296
To use it, I am going to


440
00:13:24,296 --> 00:13:25,596
Command-click on the animal


441
00:13:25,666 --> 00:13:27,876
cell, scroll down to Repeat.


442
00:13:29,016 --> 00:13:30,466
And now, for each of the


443
00:13:30,466 --> 00:13:32,566
integers from 0 to 5, we get a


444
00:13:32,566 --> 00:13:33,186
preview.


445
00:13:33,486 --> 00:13:35,936
But what I actually want is for


446
00:13:35,936 --> 00:13:37,186
each of the Content Size


447
00:13:37,186 --> 00:13:38,676
category cases to have a


448
00:13:38,716 --> 00:13:41,056
preview, and for each of those


449
00:13:41,056 --> 00:13:43,266
cases to specify into the


450
00:13:43,266 --> 00:13:45,086
environment the value for the


451
00:13:45,086 --> 00:13:47,176
size category keypath to be that


452
00:13:47,176 --> 00:13:47,466
case.


453
00:13:49,026 --> 00:13:51,426
Just like that, you can see in


454
00:13:51,426 --> 00:13:53,256
the canvas your view displayed


455
00:13:53,256 --> 00:13:54,976
at every Content Size category.


456
00:13:55,516 --> 00:14:02,216
[ Applause ]


457
00:14:02,716 --> 00:14:05,066
Now that we have done this, one


458
00:14:05,096 --> 00:14:06,176
problem I am noticing with the


459
00:14:06,176 --> 00:14:07,506
extra-small content size


460
00:14:07,506 --> 00:14:09,666
category is that the title --


461
00:14:09,736 --> 00:14:11,076
the common name -- really isn't


462
00:14:11,076 --> 00:14:12,376
popping out as much as I'd like.


463
00:14:12,896 --> 00:14:14,176
Let's go ahead and bump that up


464
00:14:14,176 --> 00:14:14,686
a notch.


465
00:14:15,236 --> 00:14:16,456
I am going to Command-click on


466
00:14:16,456 --> 00:14:17,516
the view, this time in the


467
00:14:17,676 --> 00:14:21,136
canvas; again select the Inspect


468
00:14:21,136 --> 00:14:23,416
action; and change the font to


469
00:14:23,416 --> 00:14:23,716
Title.


470
00:14:24,446 --> 00:14:27,566
Code is inserted in the source


471
00:14:27,596 --> 00:14:29,256
editor, and we get an update in


472
00:14:29,256 --> 00:14:29,846
the canvas.


473
00:14:30,296 --> 00:14:31,196
This looks great.


474
00:14:32,086 --> 00:14:33,876
One problem you may encounter


475
00:14:33,946 --> 00:14:35,036
when you have a number of


476
00:14:35,036 --> 00:14:36,676
previews in the canvas like this


477
00:14:37,066 --> 00:14:38,326
is that it's difficult to


478
00:14:38,326 --> 00:14:39,556
distinguish between the


479
00:14:39,556 --> 00:14:40,456
different previews.


480
00:14:40,746 --> 00:14:42,416
You need to know which


481
00:14:42,416 --> 00:14:44,216
configuration in your code, in


482
00:14:44,216 --> 00:14:45,376
your implementation of the


483
00:14:45,376 --> 00:14:46,656
Previews static property


484
00:14:46,936 --> 00:14:49,436
correspond to which preview in


485
00:14:49,436 --> 00:14:49,896
the canvas.


486
00:14:51,336 --> 00:14:52,666
To help out with that problem,


487
00:14:53,376 --> 00:14:54,876
the Previews API provides the


488
00:14:54,876 --> 00:14:56,586
method "Preview Display Name."


489
00:14:57,266 --> 00:14:58,536
In this case we want to use the


490
00:14:58,536 --> 00:15:00,046
name of the content size


491
00:15:00,046 --> 00:15:01,236
category we are displaying.


492
00:15:01,926 --> 00:15:03,706
And right below each preview, we


493
00:15:03,706 --> 00:15:04,976
see the content size category.


494
00:15:05,516 --> 00:15:10,456
[ Applause ]


495
00:15:10,956 --> 00:15:12,016
Yeah. This is really great.


496
00:15:14,116 --> 00:15:16,746
The Previews API is concise and


497
00:15:16,746 --> 00:15:17,836
extremely powerful.


498
00:15:18,576 --> 00:15:19,826
To tell you about how to use


499
00:15:19,866 --> 00:15:21,936
Xcode features to make the most


500
00:15:21,936 --> 00:15:22,956
of your previews, here's Anton.


501
00:15:23,516 --> 00:15:31,106
[ Applause ]


502
00:15:31,606 --> 00:15:33,426
>> So I am going to jump in into


503
00:15:33,426 --> 00:15:35,426
this demo and finish building


504
00:15:35,586 --> 00:15:37,966
the animal cell that Nate was


505
00:15:37,966 --> 00:15:38,416
working on.


506
00:15:38,416 --> 00:15:39,656
And the first thing I am going


507
00:15:39,656 --> 00:15:41,296
to do is I am going to focus on


508
00:15:41,296 --> 00:15:43,596
this Red fox image placeholder.


509
00:15:43,986 --> 00:15:45,236
Now when we shipped this


510
00:15:45,236 --> 00:15:47,696
application, we expected data to


511
00:15:47,696 --> 00:15:49,186
come from a network service that


512
00:15:49,186 --> 00:15:49,926
we are going to provide.


513
00:15:50,436 --> 00:15:51,656
But we haven't built the


514
00:15:51,656 --> 00:15:53,236
networking code yet, and so I


515
00:15:53,236 --> 00:15:54,786
don't have the data to populate


516
00:15:54,816 --> 00:15:55,246
my view.


517
00:15:55,456 --> 00:15:57,256
And so I am using placeholder


518
00:15:57,256 --> 00:15:58,956
data here, and it's easy enough


519
00:15:58,956 --> 00:16:00,866
for strings like we do for fox


520
00:16:00,866 --> 00:16:01,036
here.


521
00:16:01,336 --> 00:16:02,426
But for images the story is a


522
00:16:02,426 --> 00:16:03,486
little bit more complicated.


523
00:16:03,896 --> 00:16:05,396
That's because I could add an


524
00:16:05,396 --> 00:16:06,976
asset that's a placeholder asset


525
00:16:06,976 --> 00:16:08,356
for use in my previews.


526
00:16:09,156 --> 00:16:11,276
But that would mean that I would


527
00:16:11,276 --> 00:16:12,536
have to then ship this asset


528
00:16:12,576 --> 00:16:13,816
with my application to my


529
00:16:13,816 --> 00:16:14,706
customers, and that's not


530
00:16:14,706 --> 00:16:15,876
something I really want to do.


531
00:16:16,246 --> 00:16:17,706
And I don't want to pollute my


532
00:16:17,706 --> 00:16:18,036
buyer [phonetic].


533
00:16:18,556 --> 00:16:21,406
And so this year Xcode has a new


534
00:16:21,406 --> 00:16:23,536
feature that's going to help us


535
00:16:23,536 --> 00:16:23,986
with this.


536
00:16:24,516 --> 00:16:25,826
And it's called "Development


537
00:16:25,826 --> 00:16:26,406
Assets."


538
00:16:26,786 --> 00:16:28,006
And I'll show you this feature


539
00:16:28,006 --> 00:16:28,226
now.


540
00:16:28,316 --> 00:16:30,386
So I will open the Project


541
00:16:32,126 --> 00:16:32,286
Editor.


542
00:16:32,476 --> 00:16:34,266
And under Targets in general I


543
00:16:34,266 --> 00:16:35,506
will scroll down to Development


544
00:16:35,506 --> 00:16:35,976
Assets.


545
00:16:36,306 --> 00:16:37,266
You will notice that I already


546
00:16:37,266 --> 00:16:39,636
preconfigured Preview Assets as


547
00:16:39,636 --> 00:16:41,186
a catalog here which will hold


548
00:16:41,186 --> 00:16:42,046
all my images.


549
00:16:42,356 --> 00:16:43,596
If you are starting from scratch


550
00:16:43,636 --> 00:16:45,666
and you are using one of our new


551
00:16:45,666 --> 00:16:46,986
templates, this will come


552
00:16:46,986 --> 00:16:47,956
preconfigured for you.


553
00:16:48,326 --> 00:16:49,206
But if you are working on an


554
00:16:49,206 --> 00:16:50,386
existing applications, you can


555
00:16:50,386 --> 00:16:52,096
easily add this here.


556
00:16:52,716 --> 00:16:54,256
So now that we know that I have


557
00:16:54,316 --> 00:16:55,896
these preview assets in an asset


558
00:16:55,896 --> 00:16:57,386
catalog, I can show you that


559
00:16:57,796 --> 00:16:58,776
under my Preview Data.


560
00:16:58,776 --> 00:16:59,846
Here's my asset catalog.


561
00:16:59,906 --> 00:17:01,336
And in it I already have an


562
00:17:01,336 --> 00:17:03,256
image for the red fox that I was


563
00:17:03,256 --> 00:17:04,646
going to use as a placeholder.


564
00:17:05,465 --> 00:17:09,705
So I will open my animal cell


565
00:17:10,526 --> 00:17:13,796
and - for us to preview.


566
00:17:14,326 --> 00:17:17,046
And since the placeholder here


567
00:17:17,046 --> 00:17:19,955
was using an image name already,


568
00:17:20,046 --> 00:17:21,826
all I need to do is change this


569
00:17:21,826 --> 00:17:23,146
text to Image.


570
00:17:23,685 --> 00:17:27,306
And the image immediately shows


571
00:17:27,306 --> 00:17:28,425
up in all my previews.


572
00:17:28,956 --> 00:17:29,756
This is looking good.


573
00:17:30,296 --> 00:17:32,116
But I would like to give it some


574
00:17:32,526 --> 00:17:33,866
visual treatment to make it


575
00:17:33,956 --> 00:17:34,846
stand out a little bit.


576
00:17:35,306 --> 00:17:36,786
And I can do that with a little


577
00:17:36,786 --> 00:17:38,256
bit of SwiftUI code.


578
00:17:38,966 --> 00:17:39,906
OK, so this looks good.


579
00:17:39,906 --> 00:17:41,916
There is some shadows and some


580
00:17:42,216 --> 00:17:42,786
overlays.


581
00:17:43,116 --> 00:17:44,076
This looks nice, but look what


582
00:17:44,076 --> 00:17:45,076
happened to my code now.


583
00:17:45,396 --> 00:17:47,706
Most of this view for the cell


584
00:17:47,706 --> 00:17:49,766
is now sort of dominated by this


585
00:17:49,806 --> 00:17:50,806
image treatment code.


586
00:17:51,406 --> 00:17:53,456
I am probably done with this


587
00:17:53,456 --> 00:17:54,546
treatment, and I don't really


588
00:17:54,546 --> 00:17:56,436
want to lose the details here.


589
00:17:56,726 --> 00:17:59,046
So I am going to extract this by


590
00:17:59,156 --> 00:18:00,436
Command-clicking on the image.


591
00:18:01,356 --> 00:18:03,056
I am clicking on the image and


592
00:18:03,056 --> 00:18:04,306
picking Extracted View.


593
00:18:04,966 --> 00:18:07,366
And Xcode locates a new SwiftUI


594
00:18:07,366 --> 00:18:08,526
view in the same file down


595
00:18:08,526 --> 00:18:09,866
below, so let me rename it.


596
00:18:09,866 --> 00:18:12,016
I will call it "Animal Image."


597
00:18:12,656 --> 00:18:14,546
And I will give it some


598
00:18:14,546 --> 00:18:16,206
argument, which is my image


599
00:18:16,206 --> 00:18:16,476
name.


600
00:18:16,546 --> 00:18:17,636
And if I scroll down here,


601
00:18:17,636 --> 00:18:18,666
here's my animal image.


602
00:18:19,826 --> 00:18:20,336
Easy enough.


603
00:18:20,336 --> 00:18:22,166
I will wire in [phonetic] my


604
00:18:22,406 --> 00:18:22,726
input.


605
00:18:23,236 --> 00:18:26,976
And I have refreshed my preview.


606
00:18:27,516 --> 00:18:30,756
[ Applause ]


607
00:18:31,256 --> 00:18:31,706
Yes, thanks.


608
00:18:31,706 --> 00:18:32,916
I think this looks pretty cool,


609
00:18:32,916 --> 00:18:32,983
too.


610
00:18:33,576 --> 00:18:34,746
So notice the preview really


611
00:18:34,746 --> 00:18:35,226
didn't change.


612
00:18:35,226 --> 00:18:37,006
But if I scroll back up and look


613
00:18:37,006 --> 00:18:38,176
at my - what my animal cell


614
00:18:38,176 --> 00:18:39,776
looks like, it's much clearer


615
00:18:39,776 --> 00:18:40,786
now what's going on here and I


616
00:18:40,786 --> 00:18:42,886
can focus on the details other


617
00:18:42,886 --> 00:18:44,926
than the image treatment.


618
00:18:44,966 --> 00:18:46,296
So now that this looks good,


619
00:18:46,566 --> 00:18:47,566
notice that we have so far


620
00:18:47,566 --> 00:18:49,706
focused on this view just by


621
00:18:49,706 --> 00:18:50,076
itself.


622
00:18:50,076 --> 00:18:51,626
But it never actually appears


623
00:18:52,126 --> 00:18:53,316
this way to our customers.


624
00:18:53,646 --> 00:18:55,196
The only way our customers will


625
00:18:55,196 --> 00:18:56,726
ever see this is in the context


626
00:18:57,106 --> 00:18:58,746
of the list that this will


627
00:18:58,746 --> 00:18:59,136
appear in.


628
00:18:59,376 --> 00:19:00,516
And so I would like to work on


629
00:19:00,516 --> 00:19:01,036
that now.


630
00:19:01,846 --> 00:19:03,476
So I already started working on


631
00:19:04,076 --> 00:19:05,586
that in this animal list file.


632
00:19:05,756 --> 00:19:06,796
And we didn't have the animal


633
00:19:06,796 --> 00:19:07,426
cell before.


634
00:19:07,696 --> 00:19:09,946
So I just created a simple list


635
00:19:10,326 --> 00:19:12,736
that accepts a - some animals --


636
00:19:12,736 --> 00:19:15,676
and for each one displays a cell


637
00:19:15,676 --> 00:19:15,896
here.


638
00:19:15,896 --> 00:19:16,966
So I am just going to replace


639
00:19:17,006 --> 00:19:18,706
this code with a new animal cell


640
00:19:18,706 --> 00:19:19,296
that I just built.


641
00:19:19,296 --> 00:19:20,596
And here it is; that shows up.


642
00:19:21,476 --> 00:19:22,636
That's closer to what our


643
00:19:22,636 --> 00:19:23,546
customers will see.


644
00:19:24,086 --> 00:19:26,756
But there is really not a lot of


645
00:19:26,836 --> 00:19:28,036
zoos around with one animal.


646
00:19:28,406 --> 00:19:31,326
So I'd really like to populate


647
00:19:31,466 --> 00:19:34,766
this list with some data that's


648
00:19:35,086 --> 00:19:37,106
actually closer to what my


649
00:19:37,106 --> 00:19:37,886
customers will see.


650
00:19:37,886 --> 00:19:39,596
So how do I do that?


651
00:19:40,206 --> 00:19:42,146
Well if I scroll down to my


652
00:19:42,146 --> 00:19:44,746
Previews configuration code, you


653
00:19:44,746 --> 00:19:46,226
will see that I am populating my


654
00:19:46,226 --> 00:19:47,876
animal list with just an array


655
00:19:47,876 --> 00:19:48,786
of the one element.


656
00:19:48,986 --> 00:19:50,326
So, you know, one thing I have


657
00:19:50,326 --> 00:19:51,456
to do is simply - you know, I


658
00:19:51,456 --> 00:19:52,226
have this hard-coded [phonetic]


659
00:19:52,226 --> 00:19:52,606
thing here.


660
00:19:52,606 --> 00:19:53,906
I can just add a couple of


661
00:19:53,906 --> 00:19:54,156
these.


662
00:19:54,626 --> 00:19:56,166
And now three cells will show


663
00:19:56,166 --> 00:19:56,286
up.


664
00:19:56,866 --> 00:19:57,496
That's closer.


665
00:19:57,806 --> 00:19:59,406
But then I can keep doing this


666
00:19:59,406 --> 00:19:59,976
to fill it up.


667
00:20:00,216 --> 00:20:02,626
But it's very uniform, and


668
00:20:02,626 --> 00:20:04,046
that's still not exactly what it


669
00:20:04,046 --> 00:20:05,436
will look like to my customers.


670
00:20:05,466 --> 00:20:07,306
Some of the animals' names are


671
00:20:07,306 --> 00:20:08,496
going to be longer and shorter,


672
00:20:08,496 --> 00:20:09,326
and the colors are going to be


673
00:20:09,326 --> 00:20:09,676
different.


674
00:20:09,676 --> 00:20:12,076
I really want to get a good idea


675
00:20:12,076 --> 00:20:13,106
of what it - it's going to look


676
00:20:13,106 --> 00:20:13,326
like.


677
00:20:14,026 --> 00:20:15,236
So what are my other options?


678
00:20:15,936 --> 00:20:17,156
Well one thing I could do is I


679
00:20:17,156 --> 00:20:19,376
could - since this preview code


680
00:20:19,766 --> 00:20:20,606
runs as a part of my


681
00:20:20,606 --> 00:20:22,666
application, I could actually


682
00:20:22,666 --> 00:20:24,236
spin off my networking code, hit


683
00:20:24,286 --> 00:20:26,036
my network, and get some data


684
00:20:26,036 --> 00:20:27,256
and populate my preview.


685
00:20:27,256 --> 00:20:27,826
I could do that.


686
00:20:28,286 --> 00:20:29,556
There is a couple of problems


687
00:20:29,556 --> 00:20:30,216
with that approach.


688
00:20:30,536 --> 00:20:32,766
First, I didn't build the


689
00:20:32,766 --> 00:20:33,616
networking code yet.


690
00:20:33,616 --> 00:20:34,616
So I can't really do that.


691
00:20:35,106 --> 00:20:37,946
Second, if I did, that - still


692
00:20:37,946 --> 00:20:39,016
be a problem because that would


693
00:20:39,016 --> 00:20:40,656
mean every time I work on this


694
00:20:40,656 --> 00:20:43,066
view, I would have to be online


695
00:20:43,066 --> 00:20:44,236
and my service would have to be


696
00:20:44,236 --> 00:20:44,956
available to me.


697
00:20:45,706 --> 00:20:47,786
And that's just not a good way


698
00:20:47,786 --> 00:20:48,246
to work.


699
00:20:48,246 --> 00:20:49,676
What, instead, I want to do is I


700
00:20:49,676 --> 00:20:53,506
want to get some data and cache


701
00:20:53,506 --> 00:20:55,626
it so I can visualize this


702
00:20:55,656 --> 00:20:57,076
without requiring all the rest


703
00:20:57,076 --> 00:20:57,816
of the components in my


704
00:20:57,816 --> 00:20:58,346
application.


705
00:20:58,446 --> 00:20:59,696
So I did this a little bit


706
00:20:59,696 --> 00:21:00,116
earlier.


707
00:21:00,546 --> 00:21:03,156
And I created a cache which is


708
00:21:03,156 --> 00:21:04,136
just a JSON file.


709
00:21:04,136 --> 00:21:04,676
Let me show you.


710
00:21:05,146 --> 00:21:06,926
Under Preview Data here is a


711
00:21:06,926 --> 00:21:08,356
simple JSON file that just lists


712
00:21:08,456 --> 00:21:10,846
some animals to populate this


713
00:21:10,846 --> 00:21:11,176
data.


714
00:21:11,386 --> 00:21:13,096
And so what I can do now - what


715
00:21:13,156 --> 00:21:14,406
do I - I don't really want to


716
00:21:14,406 --> 00:21:15,506
ship to the customers either.


717
00:21:15,506 --> 00:21:16,726
So a little bit later I'll go


718
00:21:16,726 --> 00:21:19,386
and add it to my development


719
00:21:19,386 --> 00:21:19,866
assets.


720
00:21:20,156 --> 00:21:21,226
But I'm going to skip that for


721
00:21:21,226 --> 00:21:21,406
now.


722
00:21:21,406 --> 00:21:22,696
So now that I can - that we know


723
00:21:22,696 --> 00:21:24,456
that we - this is here, all I


724
00:21:24,456 --> 00:21:26,156
need to do is just load this.


725
00:21:26,156 --> 00:21:27,416
I am going to add a little bit


726
00:21:27,416 --> 00:21:28,476
of code in my previewing


727
00:21:28,476 --> 00:21:29,626
[phonetic] code to load this


728
00:21:29,626 --> 00:21:31,946
JSON out of my main bundle, and


729
00:21:31,946 --> 00:21:34,696
use a JSON decoder to parse out


730
00:21:34,696 --> 00:21:35,056
my data.


731
00:21:35,226 --> 00:21:37,256
So now I have an array of data


732
00:21:37,256 --> 00:21:38,596
which I can -- let me close this


733
00:21:38,596 --> 00:21:40,386
so you can see -- I can replace


734
00:21:41,716 --> 00:21:44,706
with Self.sampleAnimals.


735
00:21:45,486 --> 00:21:48,056
And when the previews refresh,


736
00:21:49,096 --> 00:21:50,586
here's my UI populated with my


737
00:21:50,586 --> 00:21:50,976
sample animals.


738
00:21:51,516 --> 00:21:54,946
[ Applause ]


739
00:21:55,446 --> 00:21:58,756
Thanks. So this is a lot closer


740
00:21:58,756 --> 00:21:59,986
to what my customers will


741
00:21:59,986 --> 00:22:01,696
actually see, and I immediately


742
00:22:01,696 --> 00:22:02,966
see a couple of issues with this


743
00:22:02,966 --> 00:22:03,466
layout here.


744
00:22:03,466 --> 00:22:04,716
For instance, the "Snow Leopard"


745
00:22:04,716 --> 00:22:05,876
here is very long, and it's


746
00:22:05,926 --> 00:22:07,476
clear now that I probably should


747
00:22:07,476 --> 00:22:08,366
realign this.


748
00:22:08,856 --> 00:22:11,316
The other thing is, because


749
00:22:11,316 --> 00:22:12,626
these titles are kind of large


750
00:22:12,626 --> 00:22:13,456
-so you look now [inaudible] but


751
00:22:13,606 --> 00:22:15,226
there - it could be a little bit


752
00:22:15,226 --> 00:22:15,636
airier area here.


753
00:22:15,636 --> 00:22:16,806
I want to add some padding on


754
00:22:16,806 --> 00:22:17,536
the top and the bottom.


755
00:22:17,956 --> 00:22:19,746
So all of those changes belong


756
00:22:19,746 --> 00:22:21,006
in the animal cell.


757
00:22:21,006 --> 00:22:22,246
So I am going to navigate there


758
00:22:22,246 --> 00:22:23,006
to make those edits.


759
00:22:23,546 --> 00:22:25,636
And look what happens.


760
00:22:26,766 --> 00:22:27,696
My preview that I was just


761
00:22:27,696 --> 00:22:28,776
looking at disappears.


762
00:22:29,106 --> 00:22:31,216
I am back to the context of the


763
00:22:31,216 --> 00:22:31,606
cell.


764
00:22:32,126 --> 00:22:34,126
And so my list went away.


765
00:22:34,526 --> 00:22:35,896
What I really want to do is I


766
00:22:35,896 --> 00:22:37,336
want to make my edits to the


767
00:22:37,336 --> 00:22:39,226
cell while looking at it in the


768
00:22:39,226 --> 00:22:40,176
context in which it will


769
00:22:40,176 --> 00:22:41,026
actually appear, which is the


770
00:22:41,026 --> 00:22:41,416
list.


771
00:22:41,976 --> 00:22:43,006
One thing I could do is I could


772
00:22:43,006 --> 00:22:44,546
just add another preview here


773
00:22:44,546 --> 00:22:45,736
that just previews the list.


774
00:22:45,736 --> 00:22:46,946
Like I told you before, you


775
00:22:46,946 --> 00:22:48,976
could really provide any content


776
00:22:48,976 --> 00:22:49,896
as a part of your preview.


777
00:22:50,616 --> 00:22:52,106
But that would mean anytime I am


778
00:22:52,106 --> 00:22:53,786
looking at the - at anything


779
00:22:53,786 --> 00:22:54,576
that has to do with this, I


780
00:22:54,576 --> 00:22:55,696
would have to duplicate the same


781
00:22:55,696 --> 00:22:56,646
code over and over again.


782
00:22:56,646 --> 00:22:57,476
So there is a better way.


783
00:22:58,706 --> 00:23:00,596
And let me show you what you can


784
00:23:00,596 --> 00:23:00,666
do.


785
00:23:00,666 --> 00:23:02,176
I will navigate back to Animal


786
00:23:02,176 --> 00:23:03,346
List, and I will see the preview


787
00:23:03,346 --> 00:23:04,576
for my list like I saw before.


788
00:23:04,616 --> 00:23:06,636
And it'll use this little Pin


789
00:23:06,636 --> 00:23:07,636
button in the bottom left


790
00:23:07,636 --> 00:23:07,966
corner.


791
00:23:08,366 --> 00:23:08,996
And I'll click it.


792
00:23:09,046 --> 00:23:10,946
And what this will do is it will


793
00:23:11,016 --> 00:23:14,896
pin the current preview to this


794
00:23:14,896 --> 00:23:16,506
preview; and as I navigate in a


795
00:23:16,506 --> 00:23:18,086
different files, notice what


796
00:23:18,086 --> 00:23:18,446
happens.


797
00:23:19,046 --> 00:23:20,966
This preview stays up.


798
00:23:21,141 --> 00:23:23,141
[ Applause ]


799
00:23:23,266 --> 00:23:23,586
Thank you.


800
00:23:24,516 --> 00:23:26,736
[ Applause ]


801
00:23:27,236 --> 00:23:28,376
There is a little header here


802
00:23:28,376 --> 00:23:29,986
that tells me "Hey, you are not


803
00:23:29,986 --> 00:23:31,536
looking at exactly the preview


804
00:23:31,536 --> 00:23:32,446
that you have from this file


805
00:23:32,446 --> 00:23:32,706
before.


806
00:23:32,706 --> 00:23:33,906
This comes from Animal List."


807
00:23:33,906 --> 00:23:35,256
So just so you know.


808
00:23:35,466 --> 00:23:36,646
And if I wanted to get to my


809
00:23:36,646 --> 00:23:37,706
original previews from this


810
00:23:37,706 --> 00:23:39,626
file, I can just scroll down and


811
00:23:39,626 --> 00:23:40,606
all of them are still here.


812
00:23:40,606 --> 00:23:41,976
So I didn't any context at all.


813
00:23:42,516 --> 00:23:46,506
[ Applause ]


814
00:23:47,006 --> 00:23:48,456
So now that I know what I need


815
00:23:48,456 --> 00:23:50,006
to do, I can Command-click on my


816
00:23:50,006 --> 00:23:51,756
VStack and call Inspect.


817
00:23:52,126 --> 00:23:54,016
And it can inspect and change my


818
00:23:54,016 --> 00:23:56,106
alignment here, give it some


819
00:23:56,106 --> 00:23:56,546
padding.


820
00:23:57,766 --> 00:23:58,616
Let's see what happens.


821
00:23:59,266 --> 00:24:03,926
This - this is a little bit too


822
00:24:04,426 --> 00:24:04,896
much.


823
00:24:04,926 --> 00:24:06,986
So I am going to get back to


824
00:24:06,986 --> 00:24:08,466
this and give it a little bit


825
00:24:08,466 --> 00:24:09,346
less padding, maybe.


826
00:24:09,936 --> 00:24:11,906
And it looks great.


827
00:24:11,906 --> 00:24:12,646
I like how this looks.


828
00:24:12,646 --> 00:24:13,426
So I am going to keep it this


829
00:24:13,426 --> 00:24:13,576
way.


830
00:24:13,946 --> 00:24:15,776
The next thing I want to work on


831
00:24:16,056 --> 00:24:17,856
is a list of actions that you


832
00:24:17,856 --> 00:24:19,476
can do - that you can use on


833
00:24:19,506 --> 00:24:21,496
each cell when it's selected.


834
00:24:21,496 --> 00:24:23,596
Now I already started working on


835
00:24:23,596 --> 00:24:25,096
the selected cell implementation


836
00:24:25,096 --> 00:24:27,056
in another file called


837
00:24:27,056 --> 00:24:28,246
"SelectableAnimalCell."


838
00:24:29,146 --> 00:24:30,886
Because I don't want to pollute


839
00:24:30,926 --> 00:24:32,386
my data -- my animal cell model


840
00:24:32,386 --> 00:24:34,006
data -- with something that


841
00:24:34,006 --> 00:24:35,056
comes from the - something


842
00:24:35,056 --> 00:24:36,886
that's transient from the UI, I


843
00:24:36,886 --> 00:24:39,146
added a little wrapper that just


844
00:24:39,146 --> 00:24:41,536
wraps any data and gets us - and


845
00:24:41,536 --> 00:24:42,766
adds a selected fit to it.


846
00:24:42,996 --> 00:24:44,076
And I am using this, and it's


847
00:24:44,076 --> 00:24:45,886
another view called "Selected" -


848
00:24:45,886 --> 00:24:47,136
"SelectableAnimalCell."


849
00:24:47,466 --> 00:24:48,656
And all it does is it accepts a


850
00:24:48,656 --> 00:24:50,596
model, displays my animal cell,


851
00:24:50,596 --> 00:24:51,686
and then checks the selected


852
00:24:51,726 --> 00:24:54,076
bits and shows my actions.


853
00:24:54,406 --> 00:24:55,336
And those are, you know, little


854
00:24:55,336 --> 00:24:56,826
icons that will let me get more


855
00:24:56,826 --> 00:24:58,796
information and take a picture.


856
00:24:59,126 --> 00:25:00,796
And if I unpin this preview, you


857
00:25:01,216 --> 00:25:02,306
will see I have already built


858
00:25:02,396 --> 00:25:04,546
two previews for this cell: one


859
00:25:04,546 --> 00:25:06,146
for the selected state and one


860
00:25:06,146 --> 00:25:07,836
for the unselected state - flip:


861
00:25:07,836 --> 00:25:09,396
one for unselected, one for


862
00:25:09,396 --> 00:25:09,976
selected.


863
00:25:10,886 --> 00:25:13,366
So this is a great way to work.


864
00:25:13,466 --> 00:25:14,676
But again, I want to see these


865
00:25:15,016 --> 00:25:16,066
in the context of my list.


866
00:25:16,066 --> 00:25:18,406
So I am going to add Selection


867
00:25:18,406 --> 00:25:19,826
to my list now with - so I am


868
00:25:19,826 --> 00:25:20,826
going to navigate to Animal


869
00:25:20,826 --> 00:25:21,046
List.


870
00:25:22,806 --> 00:25:25,386
And the way SwiftUI handles data


871
00:25:25,386 --> 00:25:27,756
like this is with this - with a


872
00:25:27,756 --> 00:25:28,386
State variable.


873
00:25:28,386 --> 00:25:29,686
So I am just going to add a


874
00:25:29,686 --> 00:25:32,326
space here that stores some data


875
00:25:32,326 --> 00:25:33,806
about what's currently selected


876
00:25:33,806 --> 00:25:36,216
in my table -- and then another


877
00:25:36,216 --> 00:25:39,406
little bit of code to translate,


878
00:25:39,436 --> 00:25:42,006
because this data is specifying


879
00:25:42,006 --> 00:25:43,626
the selected model but each cell


880
00:25:43,626 --> 00:25:45,056
takes a boolean whether that


881
00:25:45,056 --> 00:25:46,036
cell is selected or not.


882
00:25:46,036 --> 00:25:47,636
I am going to add that here as


883
00:25:47,666 --> 00:25:47,936
well.


884
00:25:49,156 --> 00:25:51,186
Now that I did these two things,


885
00:25:51,626 --> 00:25:52,956
I am going to replace my animal


886
00:25:52,956 --> 00:25:55,656
cell with this selectable animal


887
00:25:55,656 --> 00:25:55,906
cell.


888
00:25:55,906 --> 00:25:58,836
And that's really all I need.


889
00:25:58,836 --> 00:26:01,516
I can refresh my previews, and


890
00:26:01,896 --> 00:26:04,366
you can see nothing really


891
00:26:04,366 --> 00:26:04,796
changed.


892
00:26:05,356 --> 00:26:06,476
Well why is that?


893
00:26:06,746 --> 00:26:09,356
It's because the selection here


894
00:26:09,356 --> 00:26:10,116
is optional.


895
00:26:10,366 --> 00:26:12,106
By default nothing is selected


896
00:26:12,106 --> 00:26:14,296
in my list, and I can't see the


897
00:26:14,296 --> 00:26:15,836
things that I just did what I


898
00:26:15,836 --> 00:26:16,016
did.


899
00:26:16,256 --> 00:26:17,396
Now of course I can click the


900
00:26:17,726 --> 00:26:18,676
Live Vote [phonetic] button,


901
00:26:20,076 --> 00:26:20,946
take this UI.


902
00:26:21,556 --> 00:26:24,246
And if I click around, the


903
00:26:24,246 --> 00:26:26,296
selection will appear -- just


904
00:26:26,296 --> 00:26:27,146
like I expect.


905
00:26:28,206 --> 00:26:29,386
But what if I wanted to build a


906
00:26:29,456 --> 00:26:30,656
static - thank you.


907
00:26:30,936 --> 00:26:32,816
But what if I wanted to build


908
00:26:32,816 --> 00:26:35,286
some static previews here that -


909
00:26:35,286 --> 00:26:36,336
to remind me that there is such


910
00:26:36,336 --> 00:26:38,206
a thing as a selected state for


911
00:26:38,206 --> 00:26:39,356
the cell, so that when I make


912
00:26:39,356 --> 00:26:40,726
changes to all of this I don't


913
00:26:40,726 --> 00:26:42,166
forget to verify what my


914
00:26:42,166 --> 00:26:43,316
selection looks like with my


915
00:26:43,316 --> 00:26:43,696
changes?


916
00:26:43,966 --> 00:26:45,606
So I could make a static preview


917
00:26:45,606 --> 00:26:46,856
here, but this would require


918
00:26:46,856 --> 00:26:48,026
some changes to my code.


919
00:26:48,026 --> 00:26:49,766
And the reason is because this


920
00:26:49,766 --> 00:26:50,986
bit of data is private.


921
00:26:51,316 --> 00:26:53,676
I can't really modify it from my


922
00:26:53,676 --> 00:26:54,136
preview.


923
00:26:54,446 --> 00:26:55,436
So what can I do here to


924
00:26:55,436 --> 00:26:56,616
actually display this preview?


925
00:26:56,616 --> 00:26:57,786
Well what I am going to do is I


926
00:26:57,786 --> 00:26:58,796
am going to promote this to a


927
00:26:58,796 --> 00:27:00,096
binding that I can then set.


928
00:27:00,096 --> 00:27:02,056
And I am going to do this by


929
00:27:02,056 --> 00:27:03,316
introducing a new view.


930
00:27:03,316 --> 00:27:04,336
I am going to create a private


931
00:27:04,336 --> 00:27:05,966
view inside this animal list.


932
00:27:05,966 --> 00:27:07,186
It's just going to house all of


933
00:27:07,186 --> 00:27:07,966
my implementations.


934
00:27:07,966 --> 00:27:09,156
I am going to call it "Content"


935
00:27:09,596 --> 00:27:11,176
because it's private and it's a


936
00:27:11,356 --> 00:27:12,746
- only available inside this


937
00:27:12,776 --> 00:27:13,076
file.


938
00:27:13,556 --> 00:27:16,156
And then I am going to take all


939
00:27:16,156 --> 00:27:17,166
of this implementation that I


940
00:27:17,166 --> 00:27:18,936
just built, and I am going to


941
00:27:19,376 --> 00:27:21,416
move it inside the view that I


942
00:27:21,416 --> 00:27:22,026
just declared.


943
00:27:22,186 --> 00:27:23,986
And then the final bit is I am


944
00:27:23,986 --> 00:27:25,766
going to add the implementation


945
00:27:25,766 --> 00:27:27,636
of body for my animal list in


946
00:27:27,636 --> 00:27:28,496
terms of the content.


947
00:27:28,546 --> 00:27:29,436
And what this does is just


948
00:27:29,436 --> 00:27:31,046
substantiate the content view


949
00:27:31,046 --> 00:27:32,596
that I just declared - that's


950
00:27:32,596 --> 00:27:34,136
just the animal -- and creates a


951
00:27:34,136 --> 00:27:35,516
binding to the selected state.


952
00:27:36,346 --> 00:27:37,546
Now what I can do is I can


953
00:27:37,546 --> 00:27:39,236
change my previews to instead of


954
00:27:39,326 --> 00:27:40,456
previewing Animal List,


955
00:27:41,156 --> 00:27:42,836
previewing Animal List content.


956
00:27:43,696 --> 00:27:47,956
And when I refresh, you will see


957
00:27:47,956 --> 00:27:49,036
that the selection actually


958
00:27:49,066 --> 00:27:50,066
appears; and I get a static


959
00:27:50,136 --> 00:27:51,176
preview with my selection.


960
00:27:51,466 --> 00:27:53,306
Now I tapped Animal List


961
00:27:53,306 --> 00:27:54,776
Selection - or Animal List


962
00:27:54,846 --> 00:27:57,126
Preview here just so I can also


963
00:27:57,126 --> 00:27:58,336
verify what my list looks like


964
00:27:58,536 --> 00:27:59,366
without the selection.


965
00:27:59,656 --> 00:28:01,136
And also I can still use Live


966
00:28:01,136 --> 00:28:02,426
Vote here to verify my


967
00:28:02,426 --> 00:28:04,236
transitions and animations and


968
00:28:04,236 --> 00:28:04,976
work with my previews that way.


969
00:28:05,266 --> 00:28:07,266
[ Applause ]


970
00:28:07,516 --> 00:28:07,746
Thank you.


971
00:28:08,516 --> 00:28:11,136
[ Applause ]


972
00:28:11,636 --> 00:28:13,036
So, so far we have been looking


973
00:28:13,036 --> 00:28:14,936
at Xcode Previews and how they


974
00:28:14,936 --> 00:28:15,826
work with SwiftUI.


975
00:28:15,826 --> 00:28:17,826
But they can do a lot more for


976
00:28:17,826 --> 00:28:18,876
you for your application.


977
00:28:19,316 --> 00:28:21,166
And to tell you more about that,


978
00:28:21,166 --> 00:28:21,976
please welcome Nate.


979
00:28:22,516 --> 00:28:27,076
[ Applause ]


980
00:28:27,576 --> 00:28:27,976
>> Thank you Anton.


981
00:28:33,326 --> 00:28:34,396
Not all of you are going to be


982
00:28:34,396 --> 00:28:35,946
writing brand new applications


983
00:28:35,946 --> 00:28:37,076
starting this week using


984
00:28:37,076 --> 00:28:37,676
SwiftUI.


985
00:28:38,496 --> 00:28:39,866
Many of you have apps in the App


986
00:28:39,866 --> 00:28:40,906
Store and apps you have been


987
00:28:40,906 --> 00:28:41,916
working on for years.


988
00:28:42,926 --> 00:28:44,816
Because SwiftUI has rich


989
00:28:44,816 --> 00:28:46,936
integration with UIKit, AppKit,


990
00:28:46,936 --> 00:28:49,016
and WatchKit, and because the


991
00:28:49,016 --> 00:28:50,956
Previews API is part of SwiftUI,


992
00:28:52,036 --> 00:28:54,306
Xcode Previews works great with


993
00:28:54,306 --> 00:28:55,566
all of those frameworks as well.


994
00:28:56,206 --> 00:29:00,186
In our zoo application, when you


995
00:29:00,186 --> 00:29:02,716
tap on the Info button that


996
00:29:02,716 --> 00:29:04,096
Anton added to the bottom of a


997
00:29:04,096 --> 00:29:06,206
cell, we are going to display a


998
00:29:06,206 --> 00:29:07,506
detail screen for the animal


999
00:29:07,506 --> 00:29:08,096
that's selected.


1000
00:29:08,576 --> 00:29:11,226
It turns out that that screen is


1001
00:29:11,226 --> 00:29:13,106
written as a UIViewController


1002
00:29:14,766 --> 00:29:16,176
called "Animal View Controller."


1003
00:29:16,176 --> 00:29:19,146
Let me show you the code for it.


1004
00:29:19,396 --> 00:29:20,566
First, I am going to go ahead


1005
00:29:20,566 --> 00:29:22,126
and close the canvas by pressing


1006
00:29:22,126 --> 00:29:24,186
Command-Return and then switch


1007
00:29:24,186 --> 00:29:25,116
over to the Animal View


1008
00:29:25,116 --> 00:29:25,596
Controller.


1009
00:29:26,176 --> 00:29:28,846
I'd like to show you what this


1010
00:29:28,846 --> 00:29:29,886
view controller looks like.


1011
00:29:30,276 --> 00:29:31,786
But rather than building and


1012
00:29:31,786 --> 00:29:33,246
running, I am going to go ahead


1013
00:29:33,246 --> 00:29:34,476
and create a preview instead.


1014
00:29:35,496 --> 00:29:37,576
Now previews are just code, so


1015
00:29:37,576 --> 00:29:39,516
we absolutely could go ahead and


1016
00:29:39,516 --> 00:29:40,596
create the preview right


1017
00:29:40,596 --> 00:29:42,346
alongside this UIViewController


1018
00:29:42,346 --> 00:29:42,956
in this file.


1019
00:29:43,686 --> 00:29:45,426
In this case, though, I do want


1020
00:29:45,426 --> 00:29:46,296
to create a new file.


1021
00:29:46,436 --> 00:29:48,186
I am going to open the project


1022
00:29:48,186 --> 00:29:50,746
navigator pressing Command-0 and


1023
00:29:50,746 --> 00:29:53,156
then create a new file in the


1024
00:29:53,156 --> 00:29:53,876
group that I want,


1025
00:29:54,666 --> 00:29:55,926
right-clicking Selecting New


1026
00:29:55,926 --> 00:29:58,396
File -- SwiftFile -- and


1027
00:29:58,396 --> 00:29:59,206
entering the name I want:


1028
00:29:59,306 --> 00:30:00,856
"AnimalViewControllerPreviews."


1029
00:30:06,336 --> 00:30:08,206
The Previews API is part of


1030
00:30:08,206 --> 00:30:08,806
SwiftUI.


1031
00:30:08,976 --> 00:30:10,576
So to write a preview, you will


1032
00:30:10,576 --> 00:30:11,836
need to import that framework.


1033
00:30:12,386 --> 00:30:14,296
To create a preview that's


1034
00:30:14,296 --> 00:30:15,826
displayed in the canvas, you


1035
00:30:15,826 --> 00:30:17,186
need to add a conformant to the


1036
00:30:17,186 --> 00:30:18,446
preview provider protocol.


1037
00:30:19,176 --> 00:30:20,216
In this case, I am going to


1038
00:30:20,246 --> 00:30:21,566
create a brand new type to


1039
00:30:21,566 --> 00:30:22,676
conform to that protocol,


1040
00:30:23,146 --> 00:30:23,746
namely,


1041
00:30:23,846 --> 00:30:25,156
"AnimalViewControllerPreview."


1042
00:30:25,956 --> 00:30:27,466
Now the preview provider


1043
00:30:27,466 --> 00:30:28,956
protocol has a single


1044
00:30:28,956 --> 00:30:30,146
requirement that you must


1045
00:30:30,146 --> 00:30:32,046
implement, namely, the Static


1046
00:30:32,156 --> 00:30:33,086
Previews Property.


1047
00:30:33,646 --> 00:30:35,276
From this property, we need to


1048
00:30:35,276 --> 00:30:36,476
return some view.


1049
00:30:36,776 --> 00:30:37,986
And in our case we want some


1050
00:30:37,986 --> 00:30:39,676
view that embeds a - our


1051
00:30:39,676 --> 00:30:40,666
AnimalViewController.


1052
00:30:42,006 --> 00:30:44,366
SwiftUI has rich support for


1053
00:30:44,366 --> 00:30:47,596
embedding UIViewControllers into


1054
00:30:48,216 --> 00:30:49,646
SwiftViews in the form of


1055
00:30:49,646 --> 00:30:50,306
Representables.


1056
00:30:50,746 --> 00:30:52,336
To learn more about that, check


1057
00:30:52,336 --> 00:30:53,586
out the session "Integrating


1058
00:30:53,586 --> 00:30:54,186
SwiftUI."


1059
00:30:55,026 --> 00:30:56,906
In our case, because we want to


1060
00:30:56,906 --> 00:30:59,406
represent a UIViewController, we


1061
00:30:59,406 --> 00:31:01,176
want to add a conformant to


1062
00:31:01,176 --> 00:31:02,786
UIViewController representable.


1063
00:31:03,566 --> 00:31:05,106
And for expediency, I am just


1064
00:31:05,106 --> 00:31:06,366
going to go ahead and add that


1065
00:31:06,366 --> 00:31:08,516
right alongside PreviewProvider


1066
00:31:08,616 --> 00:31:08,826
to the


1067
00:31:08,826 --> 00:31:10,156
AnimalViewControllerPreviews


1068
00:31:10,156 --> 00:31:10,386
type.


1069
00:31:10,946 --> 00:31:13,976
Now for our purposes, the


1070
00:31:13,976 --> 00:31:15,626
UIViewController representable


1071
00:31:15,656 --> 00:31:17,386
protocol has three requirements


1072
00:31:17,386 --> 00:31:18,976
that we need to implement.


1073
00:31:19,376 --> 00:31:22,066
The first is to specify the type


1074
00:31:22,116 --> 00:31:23,816
of UIViewController that's being


1075
00:31:23,816 --> 00:31:24,466
represented.


1076
00:31:25,026 --> 00:31:26,356
In our case, that's the


1077
00:31:26,356 --> 00:31:27,316
AnimalViewController.


1078
00:31:28,076 --> 00:31:29,976
Secondly, we need to describe


1079
00:31:30,176 --> 00:31:31,986
how to create one of these


1080
00:31:31,986 --> 00:31:33,336
AnimalViewControllers from the


1081
00:31:33,336 --> 00:31:35,096
context it exists inside.


1082
00:31:35,586 --> 00:31:37,056
That context includes things


1083
00:31:37,336 --> 00:31:38,576
like whether the user is running


1084
00:31:38,576 --> 00:31:40,106
in light or dark mode and what


1085
00:31:40,106 --> 00:31:41,376
the dynamic font size is.


1086
00:31:42,076 --> 00:31:44,996
In this case, I have already


1087
00:31:44,996 --> 00:31:46,376
added a little wrapper class


1088
00:31:46,376 --> 00:31:47,486
[phonetic] around UIStoryBoard;


1089
00:31:47,676 --> 00:31:48,396
and I am loading an


1090
00:31:48,396 --> 00:31:50,306
AnimalViewController from it.


1091
00:31:51,086 --> 00:31:52,526
The third requirement that we


1092
00:31:52,526 --> 00:31:53,916
need to implement is


1093
00:31:53,916 --> 00:31:55,296
updateUIViewController.


1094
00:31:55,886 --> 00:31:57,996
This allows us to change the


1095
00:31:57,996 --> 00:31:58,756
appearance of our view


1096
00:31:58,756 --> 00:32:00,796
controller based on changes in


1097
00:32:00,796 --> 00:32:02,186
the environment, among other


1098
00:32:02,186 --> 00:32:02,486
things.


1099
00:32:03,406 --> 00:32:04,876
In our case, we just want to


1100
00:32:04,876 --> 00:32:05,546
create a preview.


1101
00:32:06,146 --> 00:32:07,736
So I am going to go ahead and


1102
00:32:07,736 --> 00:32:09,376
leave this implementation blank.


1103
00:32:09,926 --> 00:32:12,766
Now that we have a conformants


1104
00:32:12,966 --> 00:32:14,366
to the UIViewController


1105
00:32:14,366 --> 00:32:15,736
representable protocol, we are


1106
00:32:15,976 --> 00:32:18,096
ready to implement that Previews


1107
00:32:18,096 --> 00:32:18,466
method.


1108
00:32:19,916 --> 00:32:21,666
Specifically, we'll return an


1109
00:32:21,666 --> 00:32:23,486
instance of the type that


1110
00:32:23,486 --> 00:32:24,886
conforms to UIViewController


1111
00:32:24,886 --> 00:32:26,166
representable, namely,


1112
00:32:26,556 --> 00:32:28,086
AnimalViewController Previews.


1113
00:32:28,986 --> 00:32:30,486
With just those few lines of


1114
00:32:30,486 --> 00:32:33,066
code, you can see a preview for


1115
00:32:33,066 --> 00:32:34,936
your UIViewController in Xcode.


1116
00:32:35,226 --> 00:32:36,076
Let's take a look at it.


1117
00:32:36,076 --> 00:32:38,546
I am going to close the project


1118
00:32:38,546 --> 00:32:40,506
navigator and open the canvas by


1119
00:32:40,506 --> 00:32:42,146
pressing Command-Option-Return.


1120
00:32:43,376 --> 00:32:45,976
Because we added new methods in


1121
00:32:45,976 --> 00:32:47,696
the source editor, we will need


1122
00:32:47,696 --> 00:32:48,246
to rebuild.


1123
00:32:48,866 --> 00:32:50,726
And there, in the canvas, is a


1124
00:32:50,726 --> 00:32:52,746
preview for our UIViewController


1125
00:32:52,826 --> 00:32:53,486
written in Swift.


1126
00:32:53,486 --> 00:32:53,856
Thank you.


1127
00:32:54,016 --> 00:32:55,096
[ Applause ]


1128
00:32:55,096 --> 00:32:57,036
Yes. This is really fantastic --


1129
00:32:57,926 --> 00:32:59,046
a preview for our


1130
00:32:59,046 --> 00:33:00,506
UIViewController written in


1131
00:33:00,506 --> 00:33:02,496
Swift against UIKit.


1132
00:33:03,046 --> 00:33:07,046
But as I am looking at this


1133
00:33:07,046 --> 00:33:08,546
ViewController, I am noticing a


1134
00:33:08,546 --> 00:33:09,086
problem.


1135
00:33:09,486 --> 00:33:11,416
This text is awfully difficult


1136
00:33:11,416 --> 00:33:11,866
to read.


1137
00:33:13,046 --> 00:33:14,486
There is an underlay view


1138
00:33:14,486 --> 00:33:16,246
beneath the text above the


1139
00:33:16,246 --> 00:33:16,926
image.


1140
00:33:17,206 --> 00:33:18,866
It's semi-opaque, so that the


1141
00:33:18,866 --> 00:33:19,906
text should be readable.


1142
00:33:20,376 --> 00:33:22,216
But clearly it's not opaque


1143
00:33:22,216 --> 00:33:22,566
enough.


1144
00:33:23,106 --> 00:33:25,316
So let's go ahead and crank that


1145
00:33:25,316 --> 00:33:26,506
opacity up enough.


1146
00:33:26,636 --> 00:33:28,336
I am going to pin this preview


1147
00:33:28,726 --> 00:33:29,996
so that we can keep looking at


1148
00:33:29,996 --> 00:33:32,126
it as we make the change, and


1149
00:33:32,126 --> 00:33:32,876
switch over to the


1150
00:33:32,876 --> 00:33:34,056
AnimalViewController file.


1151
00:33:37,426 --> 00:33:39,026
And in this file I'll change the


1152
00:33:39,026 --> 00:33:40,906
alpha of that underlay view to


1153
00:33:40,906 --> 00:33:41,786
0.5.


1154
00:33:42,646 --> 00:33:44,556
Immediately, the canvas updates,


1155
00:33:44,936 --> 00:33:47,286
showing us our preview for our


1156
00:33:47,286 --> 00:33:48,746
ViewController with that change.


1157
00:33:49,766 --> 00:33:52,106
Previews in Xcode work not just


1158
00:33:52,106 --> 00:33:54,776
with SwiftUI but with all Swift


1159
00:33:54,776 --> 00:33:55,136
code.


1160
00:33:55,306 --> 00:33:57,576
And moreover, we get all of the


1161
00:33:57,576 --> 00:33:59,356
hot swapping and incremental


1162
00:33:59,356 --> 00:34:00,916
updates without recompilation


1163
00:34:00,916 --> 00:34:02,406
for literal values that Anton


1164
00:34:02,406 --> 00:34:03,756
told you about -- whether you


1165
00:34:03,756 --> 00:34:04,796
are working with SwiftUI or


1166
00:34:04,796 --> 00:34:05,976
UIAppKit, or WatchKit.


1167
00:34:06,516 --> 00:34:11,005
[ Applause ]


1168
00:34:11,505 --> 00:34:11,846
Thank you.


1169
00:34:15,116 --> 00:34:15,976
Anton showed you the


1170
00:34:15,976 --> 00:34:17,436
AnimalActionViewController.


1171
00:34:17,616 --> 00:34:19,576
I have been working on that, so


1172
00:34:19,576 --> 00:34:20,936
I already added a preview for


1173
00:34:20,936 --> 00:34:21,003
it.


1174
00:34:21,545 --> 00:34:22,346
Let me show it to you.


1175
00:34:22,446 --> 00:34:24,686
I am going to go ahead and unpin


1176
00:34:24,686 --> 00:34:26,076
this AnimalViewController


1177
00:34:26,295 --> 00:34:28,056
preview, clicking the Pin button


1178
00:34:28,056 --> 00:34:28,866
in the bottom left of the


1179
00:34:28,866 --> 00:34:31,216
canvas, and then switch over to


1180
00:34:31,216 --> 00:34:32,716
the AnimalActionsViewController


1181
00:34:32,716 --> 00:34:33,286
representable.


1182
00:34:34,266 --> 00:34:36,146
And there is a preview for this


1183
00:34:36,146 --> 00:34:37,416
AnimalActionViewController.


1184
00:34:38,295 --> 00:34:39,876
The team is discussing the


1185
00:34:39,876 --> 00:34:41,146
button on the far right there,


1186
00:34:41,565 --> 00:34:43,896
and we feel that IImage is not


1187
00:34:43,985 --> 00:34:45,076
quite appropriate.


1188
00:34:45,386 --> 00:34:46,886
It's not quite consistent with


1189
00:34:46,886 --> 00:34:47,485
the platform.


1190
00:34:47,856 --> 00:34:49,856
Let's go ahead and fix that now.


1191
00:34:49,856 --> 00:34:51,686
I am going to open the


1192
00:34:51,686 --> 00:34:53,456
AnimalActionViewController file.


1193
00:34:54,216 --> 00:34:55,755
And, you know, I was taking a


1194
00:34:55,755 --> 00:34:57,286
trip down Memory Lane when wrote


1195
00:34:57,286 --> 00:34:58,476
this, so I went ahead and did it


1196
00:34:58,476 --> 00:34:58,976
in Objective-C.


1197
00:34:59,516 --> 00:35:02,446
[ Laughter ]


1198
00:35:02,946 --> 00:35:03,456
Thank you.


1199
00:35:03,546 --> 00:35:03,986
Thank you.


1200
00:35:03,986 --> 00:35:06,026
It's a great language.


1201
00:35:07,106 --> 00:35:09,286
And I'll change the system image


1202
00:35:09,286 --> 00:35:10,946
that we are populating the Info


1203
00:35:10,946 --> 00:35:12,796
button with to info.circle.


1204
00:35:13,416 --> 00:35:16,966
And I'll switch back to our


1205
00:35:16,966 --> 00:35:19,326
preview and refresh the preview.


1206
00:35:19,796 --> 00:35:20,946
Because this is written in


1207
00:35:20,946 --> 00:35:23,426
Objective-C and not Swift, we


1208
00:35:23,426 --> 00:35:25,966
will have to - Xcode will tell


1209
00:35:25,966 --> 00:35:27,596
the build system to kick off a


1210
00:35:27,596 --> 00:35:29,306
normal rebuild rather than using


1211
00:35:29,756 --> 00:35:31,166
incremental updates or hot


1212
00:35:31,166 --> 00:35:31,616
swapping.


1213
00:35:31,896 --> 00:35:33,456
But still, that's usually very


1214
00:35:33,456 --> 00:35:33,976
fast.


1215
00:35:34,206 --> 00:35:35,796
And specifically, it's much


1216
00:35:35,796 --> 00:35:37,796
faster than rebuilding and


1217
00:35:37,796 --> 00:35:39,426
running and navigating into your


1218
00:35:39,426 --> 00:35:40,076
application.


1219
00:35:41,186 --> 00:35:43,176
Xcode Previews works not just


1220
00:35:43,176 --> 00:35:44,666
with SwiftUI and not just with


1221
00:35:44,666 --> 00:35:46,696
Swift files, but even with your


1222
00:35:46,696 --> 00:35:48,706
Objective-C code written in


1223
00:35:48,706 --> 00:35:50,156
UIKit, AppKit, and WatchKit.


1224
00:35:50,156 --> 00:35:51,786
And moreover, it works with all


1225
00:35:51,786 --> 00:35:53,196
of the source files that Xcode


1226
00:35:53,196 --> 00:35:53,856
understands.


1227
00:35:54,516 --> 00:36:00,500
[ Applause ]


1228
00:36:04,636 --> 00:36:07,326
You have seen how Xcode Previews


1229
00:36:07,326 --> 00:36:09,046
can really accelerate your


1230
00:36:09,046 --> 00:36:09,466
workflow.


1231
00:36:10,246 --> 00:36:11,116
But I would like to talk to you


1232
00:36:11,116 --> 00:36:13,356
now about how you could tweak


1233
00:36:13,716 --> 00:36:14,976
the application - the


1234
00:36:14,976 --> 00:36:16,496
architecture of your application


1235
00:36:17,426 --> 00:36:19,296
to make Xcode Previews work even


1236
00:36:19,296 --> 00:36:20,026
harder for you.


1237
00:36:20,636 --> 00:36:22,676
Specifically, I would like to


1238
00:36:22,676 --> 00:36:24,106
talk about one of the types that


1239
00:36:24,106 --> 00:36:25,446
appeared in the zoo application,


1240
00:36:25,896 --> 00:36:27,886
namely, AnimalCellModel.


1241
00:36:28,416 --> 00:36:30,046
What were we doing with that


1242
00:36:30,046 --> 00:36:30,356
thing?


1243
00:36:31,666 --> 00:36:33,696
Well we were populating our


1244
00:36:33,696 --> 00:36:35,966
AnimalView -- our AnimalCell.


1245
00:36:36,846 --> 00:36:39,156
Because of SwiftUI's fluent API


1246
00:36:40,306 --> 00:36:44,266
and - we are able to implement


1247
00:36:44,266 --> 00:36:46,316
this body method very concisely.


1248
00:36:47,506 --> 00:36:49,786
And thanks to using a cell


1249
00:36:50,306 --> 00:36:52,946
model, it's extremely explicit


1250
00:36:53,216 --> 00:36:55,676
what data is going into what


1251
00:36:55,886 --> 00:36:57,766
field on the view.


1252
00:36:58,366 --> 00:37:02,576
With that said, we could have


1253
00:37:02,576 --> 00:37:04,346
actually used an animal model


1254
00:37:04,346 --> 00:37:06,106
object and passed that directly


1255
00:37:06,106 --> 00:37:06,696
into the view.


1256
00:37:07,716 --> 00:37:09,536
We didn't, for two big reasons.


1257
00:37:10,236 --> 00:37:14,376
The first is that using a view


1258
00:37:14,376 --> 00:37:17,606
model makes it way easier to add


1259
00:37:17,606 --> 00:37:18,556
new previews.


1260
00:37:19,166 --> 00:37:21,396
A good pattern to consider for


1261
00:37:21,396 --> 00:37:22,386
your PreviewProvider


1262
00:37:22,386 --> 00:37:25,136
implementation is to add a


1263
00:37:25,136 --> 00:37:26,806
static array of view model.


1264
00:37:27,356 --> 00:37:29,686
And in your implementation of


1265
00:37:29,686 --> 00:37:32,136
the Static Previews property, to


1266
00:37:32,136 --> 00:37:33,966
iterate over that array of view


1267
00:37:33,966 --> 00:37:35,816
model and populate your view.


1268
00:37:36,546 --> 00:37:38,176
This is useful when you


1269
00:37:38,176 --> 00:37:39,586
encounter a new data


1270
00:37:39,586 --> 00:37:41,546
configuration that will result


1271
00:37:41,546 --> 00:37:42,936
in a different view layout.


1272
00:37:43,796 --> 00:37:45,496
All you need to do is create a


1273
00:37:45,496 --> 00:37:47,556
view model and add it to that


1274
00:37:47,556 --> 00:37:48,016
array.


1275
00:37:49,196 --> 00:37:50,626
Then you'll get a new preview in


1276
00:37:50,626 --> 00:37:52,696
the canvas showing your new view


1277
00:37:52,696 --> 00:37:53,036
layout.


1278
00:37:54,556 --> 00:37:56,506
Before getting to the second big


1279
00:37:56,506 --> 00:37:58,586
reason that we decided to use


1280
00:37:58,586 --> 00:37:59,496
view models in the zoo


1281
00:37:59,496 --> 00:38:01,716
application, I want to wax a


1282
00:38:01,746 --> 00:38:03,226
little philosophical for a


1283
00:38:03,226 --> 00:38:06,356
moment if you'll bear with me.


1284
00:38:07,876 --> 00:38:09,396
The model layer of your


1285
00:38:09,396 --> 00:38:11,436
application includes a rich


1286
00:38:11,556 --> 00:38:12,396
object draft.


1287
00:38:13,456 --> 00:38:15,456
Even in our zoo application, we


1288
00:38:15,456 --> 00:38:16,806
have a zoo model object.


1289
00:38:17,556 --> 00:38:19,366
And that zoo model object is


1290
00:38:19,366 --> 00:38:21,736
only one among many of the


1291
00:38:21,736 --> 00:38:23,086
animals in a clade.


1292
00:38:23,086 --> 00:38:26,256
On the other side, that animal


1293
00:38:26,256 --> 00:38:28,486
model object has within a


1294
00:38:28,486 --> 00:38:28,896
genome.


1295
00:38:29,066 --> 00:38:32,006
How are you going to display


1296
00:38:32,006 --> 00:38:33,616
that information to your users?


1297
00:38:34,926 --> 00:38:40,296
Well, not all at once.


1298
00:38:40,436 --> 00:38:41,586
For example, you don't want to


1299
00:38:41,586 --> 00:38:44,226
add a genome to your animal


1300
00:38:44,226 --> 00:38:44,506
cell.


1301
00:38:44,776 --> 00:38:46,046
That's too much information.


1302
00:38:47,016 --> 00:38:48,736
Instead, you are going to


1303
00:38:48,736 --> 00:38:50,906
extract just the most important


1304
00:38:50,906 --> 00:38:53,186
pieces of information from your


1305
00:38:53,186 --> 00:38:55,916
model object and create your


1306
00:38:55,916 --> 00:38:57,066
view using them.


1307
00:38:57,786 --> 00:38:59,356
And you won't just extract them


1308
00:38:59,356 --> 00:39:00,696
in a one-to-one manner.


1309
00:39:01,346 --> 00:39:02,816
Often, you'll perform some


1310
00:39:02,816 --> 00:39:04,416
transformations on the data.


1311
00:39:05,266 --> 00:39:07,576
Here we took two of the fields


1312
00:39:07,576 --> 00:39:09,566
from the animal model object and


1313
00:39:09,566 --> 00:39:11,956
combined them to create a single


1314
00:39:11,956 --> 00:39:13,646
text containing the genus and


1315
00:39:13,646 --> 00:39:14,116
species.


1316
00:39:15,226 --> 00:39:18,356
That transformation and


1317
00:39:18,356 --> 00:39:20,496
extraction process is error


1318
00:39:20,496 --> 00:39:20,806
prone.


1319
00:39:21,656 --> 00:39:23,376
But using a view model makes it


1320
00:39:23,376 --> 00:39:23,916
explicit.


1321
00:39:25,516 --> 00:39:28,226
Here is a view model -- our


1322
00:39:28,226 --> 00:39:29,796
AnimalCellModel in particular --


1323
00:39:30,226 --> 00:39:32,046
being constructed from a model


1324
00:39:32,046 --> 00:39:32,416
object.


1325
00:39:33,156 --> 00:39:35,866
We can clearly see the data


1326
00:39:35,866 --> 00:39:37,376
being pulled out of the model


1327
00:39:37,376 --> 00:39:39,306
object and combined so that we


1328
00:39:39,306 --> 00:39:40,896
can show exactly what we want


1329
00:39:40,896 --> 00:39:42,276
to, to our users.


1330
00:39:43,666 --> 00:39:45,716
And having this be explicit is


1331
00:39:45,856 --> 00:39:48,396
invaluable because it makes it


1332
00:39:48,396 --> 00:39:50,456
so easy to test.


1333
00:39:50,946 --> 00:39:52,616
Whenever we encounter a new


1334
00:39:52,706 --> 00:39:54,986
flavor of model object that


1335
00:39:54,986 --> 00:39:56,606
needs to be represented to our


1336
00:39:56,606 --> 00:39:58,856
users in a different manner, all


1337
00:39:58,856 --> 00:39:59,716
we need to do is leverage


1338
00:39:59,716 --> 00:39:59,976
XCTest.


1339
00:40:00,066 --> 00:40:03,036
Add a new test case, and in that


1340
00:40:03,226 --> 00:40:05,856
test case create one of our


1341
00:40:05,856 --> 00:40:07,866
model objects; create from it a


1342
00:40:07,866 --> 00:40:09,796
view model; and validate that


1343
00:40:09,796 --> 00:40:11,756
our view model has exactly the


1344
00:40:11,756 --> 00:40:13,176
data that we want to show to our


1345
00:40:13,176 --> 00:40:15,196
users to represent that model


1346
00:40:15,246 --> 00:40:15,666
object.


1347
00:40:16,926 --> 00:40:18,596
This is the second major reason


1348
00:40:18,886 --> 00:40:20,636
we decided to use view models in


1349
00:40:20,636 --> 00:40:21,586
our zoo application.


1350
00:40:23,696 --> 00:40:24,866
What does this mean for your


1351
00:40:24,866 --> 00:40:26,226
overarching application


1352
00:40:26,226 --> 00:40:26,816
architecture?


1353
00:40:30,046 --> 00:40:31,836
Well a big part of building


1354
00:40:31,836 --> 00:40:35,066
great apps is to take this rich


1355
00:40:35,066 --> 00:40:38,876
model object graph that exists


1356
00:40:38,876 --> 00:40:41,266
in your model layer and to


1357
00:40:41,266 --> 00:40:43,116
represent it to your users,


1358
00:40:43,336 --> 00:40:44,596
pulling out just the most


1359
00:40:44,596 --> 00:40:46,196
important pieces of information


1360
00:40:46,626 --> 00:40:47,786
and showing it to them in a


1361
00:40:47,786 --> 00:40:48,836
beautiful fashion.


1362
00:40:50,396 --> 00:40:52,526
Using a view model can make this


1363
00:40:52,526 --> 00:40:53,906
so much easier.


1364
00:40:55,036 --> 00:40:57,896
The reason is that you can use


1365
00:40:57,896 --> 00:41:02,156
the following flow: First, for


1366
00:41:02,156 --> 00:41:04,016
your model objects construct


1367
00:41:04,196 --> 00:41:04,806
view models.


1368
00:41:06,226 --> 00:41:09,116
That process is error prone.


1369
00:41:09,326 --> 00:41:11,126
So you test, and you test, and


1370
00:41:11,126 --> 00:41:13,456
you test, and you make sure that


1371
00:41:13,456 --> 00:41:14,896
your view models contain exactly


1372
00:41:14,896 --> 00:41:15,836
the data you want to show to


1373
00:41:15,836 --> 00:41:16,576
your users.


1374
00:41:16,986 --> 00:41:19,306
Second, for each flavor of view


1375
00:41:19,306 --> 00:41:22,396
model representing - resulting


1376
00:41:22,686 --> 00:41:24,716
in a different view layout, you


1377
00:41:24,716 --> 00:41:25,526
add a preview.


1378
00:41:25,966 --> 00:41:27,396
And you can verify, just in a


1379
00:41:27,396 --> 00:41:29,306
canvas, that your views are


1380
00:41:29,306 --> 00:41:31,146
displaying exactly the data your


1381
00:41:31,146 --> 00:41:32,216
users want to see.


1382
00:41:32,886 --> 00:41:35,146
Finally, you can use XCUI


1383
00:41:35,146 --> 00:41:37,796
testing to validate the way that


1384
00:41:37,796 --> 00:41:39,646
your application works in


1385
00:41:39,646 --> 00:41:40,156
production.


1386
00:41:40,156 --> 00:41:42,976
I'd like to take a moment to


1387
00:41:42,976 --> 00:41:44,386
talk about performance.


1388
00:41:44,896 --> 00:41:49,986
We have told you that previews


1389
00:41:49,986 --> 00:41:50,706
are just code.


1390
00:41:51,806 --> 00:41:53,516
One consequence of this is that


1391
00:41:53,516 --> 00:41:55,146
you don't want to run arbitrary


1392
00:41:55,146 --> 00:41:57,876
operations when your previews


1393
00:41:57,876 --> 00:41:58,596
are being rendered.


1394
00:41:59,076 --> 00:41:59,916
You know, you don't want to


1395
00:41:59,916 --> 00:42:01,386
calculate the millionth prime.


1396
00:42:02,396 --> 00:42:05,086
Similarly, Xcode Previews will


1397
00:42:05,126 --> 00:42:06,496
call Applicationdid


1398
00:42:06,496 --> 00:42:07,916
/FinishLaunching /WithOptions.


1399
00:42:08,736 --> 00:42:10,276
Consequently, you don't want to


1400
00:42:10,276 --> 00:42:11,746
do a bunch of extraneous work


1401
00:42:11,786 --> 00:42:12,026
there.


1402
00:42:12,516 --> 00:42:14,556
And specifically, you don't want


1403
00:42:14,556 --> 00:42:16,816
to set up your UI hierarchy when


1404
00:42:16,906 --> 00:42:19,386
all you want is to see your - a


1405
00:42:19,386 --> 00:42:21,106
preview of your view rendered in


1406
00:42:21,106 --> 00:42:21,606
the canvas.


1407
00:42:22,436 --> 00:42:24,586
Instead, make your application


1408
00:42:24,586 --> 00:42:26,526
scene aware, conform to the


1409
00:42:26,526 --> 00:42:28,496
UIWindowSceneDelegate, and


1410
00:42:28,496 --> 00:42:29,516
implement the scene


1411
00:42:29,516 --> 00:42:32,216
willConnectToOptions method and


1412
00:42:32,416 --> 00:42:34,326
set up your UI hierarchy there.


1413
00:42:35,276 --> 00:42:36,676
And look: This isn't just


1414
00:42:36,676 --> 00:42:37,676
beneficial for you, the


1415
00:42:37,676 --> 00:42:39,386
developer, OK, it's faster


1416
00:42:39,386 --> 00:42:40,376
previews as a result.


1417
00:42:40,776 --> 00:42:42,256
This is also a boon for your


1418
00:42:42,256 --> 00:42:42,876
users.


1419
00:42:43,776 --> 00:42:45,006
When your application launches


1420
00:42:45,006 --> 00:42:46,836
into the background, it won't be


1421
00:42:46,836 --> 00:42:48,036
doing a bunch of extra work.


1422
00:42:48,646 --> 00:42:49,956
It'll just do exactly what it


1423
00:42:49,956 --> 00:42:51,566
needs to and go back to sleep,


1424
00:42:52,136 --> 00:42:53,446
avoiding wasting your user's


1425
00:42:53,446 --> 00:42:53,976
battery life.


1426
00:42:54,516 --> 00:43:01,986
[ Applause ]


1427
00:43:02,486 --> 00:43:03,386
Let's recap here.


1428
00:43:04,126 --> 00:43:05,456
You have seen how to write a


1429
00:43:05,456 --> 00:43:05,936
preview.


1430
00:43:06,076 --> 00:43:07,776
The preview's API is part of


1431
00:43:07,776 --> 00:43:08,456
SwiftUI.


1432
00:43:08,876 --> 00:43:09,976
It's really powerful.


1433
00:43:10,546 --> 00:43:12,496
And you can use all of SwiftUI


1434
00:43:12,496 --> 00:43:13,246
when you are writing your


1435
00:43:13,246 --> 00:43:13,706
previews.


1436
00:43:14,396 --> 00:43:16,506
You have seen how to use


1437
00:43:16,596 --> 00:43:18,496
advanced Xcode workflows, like


1438
00:43:18,566 --> 00:43:19,986
preview pinning, to keep your


1439
00:43:19,986 --> 00:43:21,546
state when you are switching


1440
00:43:21,546 --> 00:43:22,826
between different files.


1441
00:43:23,526 --> 00:43:25,266
And you have seen how to use


1442
00:43:25,336 --> 00:43:27,286
development assets, allowing you


1443
00:43:27,286 --> 00:43:28,876
to have rich and interesting


1444
00:43:28,876 --> 00:43:31,106
previews without shipping them -


1445
00:43:31,616 --> 00:43:33,616
without shipping test data to


1446
00:43:33,616 --> 00:43:34,386
your users.


1447
00:43:35,066 --> 00:43:36,926
Finally, you have seen how to


1448
00:43:36,926 --> 00:43:39,566
use previews not just with


1449
00:43:39,566 --> 00:43:41,366
SwiftUI and not just with Swift,


1450
00:43:41,886 --> 00:43:43,406
but with all of the source files


1451
00:43:43,406 --> 00:43:45,026
that Xcode understands written


1452
00:43:45,026 --> 00:43:46,706
against UIKit, AppKit, and


1453
00:43:46,706 --> 00:43:46,976
WatchKit.


1454
00:43:47,516 --> 00:43:54,546
[ Applause ]


1455
00:43:55,046 --> 00:43:56,366
Well that's Mastering Xcode


1456
00:43:56,366 --> 00:43:56,786
Previews.


1457
00:43:57,116 --> 00:43:57,976
Thank you all for coming.


1458
00:43:58,516 --> 00:44:01,716
[ Applause ]


1459
00:44:02,216 --> 00:44:02,976
Come see us in the lab.

