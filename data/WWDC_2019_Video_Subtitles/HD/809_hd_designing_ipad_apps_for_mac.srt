1
00:00:00,506 --> 00:00:05,626
[ Music ]


2
00:00:06,126 --> 00:00:06,446
>> Hello.


3
00:00:07,516 --> 00:00:14,536
[ Applause ]


4
00:00:15,036 --> 00:00:16,706
It's great to be back on stage


5
00:00:16,766 --> 00:00:17,586
at WWDC.


6
00:00:20,686 --> 00:00:22,096
I'm really happy to talk to you


7
00:00:22,096 --> 00:00:24,046
guys about designing iPad apps


8
00:00:24,046 --> 00:00:24,466
for Mac.


9
00:00:25,456 --> 00:00:27,426
Now, many of you here today have


10
00:00:27,476 --> 00:00:29,506
created awesome apps for iPad


11
00:00:29,506 --> 00:00:31,326
already, apps that help people


12
00:00:31,326 --> 00:00:32,906
be more productive, more


13
00:00:32,906 --> 00:00:35,126
creative, apps that entertain,


14
00:00:35,346 --> 00:00:36,976
that educate, that help people


15
00:00:37,256 --> 00:00:39,146
connect and communicate with


16
00:00:39,146 --> 00:00:39,606
each other.


17
00:00:40,666 --> 00:00:42,306
We want to make it easy for you


18
00:00:42,306 --> 00:00:44,416
to bring those great experiences


19
00:00:44,826 --> 00:00:45,146
to Mac.


20
00:00:46,396 --> 00:00:48,056
With keyboard and mouse or


21
00:00:48,056 --> 00:00:50,406
trackpad input, people can work


22
00:00:50,406 --> 00:00:51,926
with greater precision and


23
00:00:51,926 --> 00:00:52,436
speed.


24
00:00:53,296 --> 00:00:54,786
Flexible windows allow for


25
00:00:54,866 --> 00:00:57,256
efficient and fluid multitasking


26
00:00:57,256 --> 00:00:57,886
workflows.


27
00:00:58,646 --> 00:01:00,836
And larger display sizes allow


28
00:01:00,836 --> 00:01:02,906
your app to present more


29
00:01:03,086 --> 00:01:05,376
information and actions at once.


30
00:01:06,526 --> 00:01:09,216
Of course, some iPad apps just


31
00:01:09,216 --> 00:01:10,886
won't make sense on Mac.


32
00:01:11,996 --> 00:01:13,676
Some used cases like navigation


33
00:01:13,856 --> 00:01:15,626
or augmented reality aren't


34
00:01:15,626 --> 00:01:16,836
suitable for a stationary


35
00:01:16,836 --> 00:01:17,356
computer.


36
00:01:18,286 --> 00:01:19,976
And apps that rely on iPad


37
00:01:19,976 --> 00:01:21,326
hardware features like the


38
00:01:21,326 --> 00:01:23,616
gyroscope or rear-facing camera


39
00:01:23,946 --> 00:01:25,496
won't really make sense on Mac


40
00:01:25,716 --> 00:01:26,036
either.


41
00:01:26,946 --> 00:01:29,206
But, for the rest of you, coming


42
00:01:29,276 --> 00:01:31,216
to Mac is a great way to offer


43
00:01:31,216 --> 00:01:33,396
the people who use your app with


44
00:01:33,396 --> 00:01:35,546
a more efficient and immersive


45
00:01:35,546 --> 00:01:36,316
experience.


46
00:01:36,996 --> 00:01:40,276
The first step in bringing your


47
00:01:40,276 --> 00:01:42,966
iPad app to Mac is to start with


48
00:01:42,966 --> 00:01:44,356
a solid foundation.


49
00:01:45,176 --> 00:01:47,776
Your iPad app should support


50
00:01:47,916 --> 00:01:50,166
features like multitasking and


51
00:01:50,166 --> 00:01:52,726
drag and drop as well as Auto


52
00:01:52,726 --> 00:01:53,076
Layout.


53
00:01:54,506 --> 00:01:56,216
As we all know, Mac windows can


54
00:01:56,216 --> 00:01:57,836
be arbitrarily resized.


55
00:01:59,116 --> 00:02:00,676
By fully supporting Auto Layout


56
00:02:01,116 --> 00:02:03,716
in your iPad app, your interface


57
00:02:03,716 --> 00:02:05,866
will be resizable on Mac.


58
00:02:07,476 --> 00:02:10,626
Similarly, if your app supports


59
00:02:10,626 --> 00:02:12,556
drag and drop, you're one step


60
00:02:12,626 --> 00:02:14,046
closer to having a great Mac


61
00:02:14,046 --> 00:02:14,256
app.


62
00:02:15,156 --> 00:02:16,916
We expect just about everything


63
00:02:16,916 --> 00:02:19,056
on Mac to be draggable and


64
00:02:19,056 --> 00:02:19,456
droppable.


65
00:02:20,576 --> 00:02:22,246
Now yesterday, we introduced the


66
00:02:22,246 --> 00:02:23,906
ability for iPad apps to have


67
00:02:23,906 --> 00:02:26,186
multiple windows, like drag and


68
00:02:26,186 --> 00:02:27,856
drop, opening documents into


69
00:02:27,856 --> 00:02:29,316
their own windows is something


70
00:02:29,316 --> 00:02:30,616
that we all expect on Mac.


71
00:02:31,646 --> 00:02:33,216
If your app supports this


72
00:02:33,216 --> 00:02:34,816
feature, you'll automatically


73
00:02:34,816 --> 00:02:36,386
get multiple windows support on


74
00:02:36,386 --> 00:02:38,646
Mac as well, which brings me to


75
00:02:38,646 --> 00:02:39,206
the next topic.


76
00:02:39,206 --> 00:02:41,126
What do you get for free?


77
00:02:41,986 --> 00:02:42,726
Free is good, right?


78
00:02:43,606 --> 00:02:45,276
To make the task of coming to


79
00:02:45,276 --> 00:02:48,366
Mac easier, many iOS interfaces


80
00:02:48,366 --> 00:02:49,596
and interactions will


81
00:02:49,596 --> 00:02:51,526
automatically be adjusted to


82
00:02:51,606 --> 00:02:53,066
macOS equivalents.


83
00:02:54,416 --> 00:02:56,256
iOS split views will be drawn as


84
00:02:56,256 --> 00:02:57,166
split views on Mac,


85
00:02:58,046 --> 00:02:59,416
system-provided UIs like the


86
00:02:59,626 --> 00:03:01,736
file browser and activity view


87
00:03:01,976 --> 00:03:03,806
will be remapped to platform


88
00:03:03,806 --> 00:03:04,976
appropriate equivalents.


89
00:03:05,736 --> 00:03:07,926
Edit menus and iOS contextual


90
00:03:07,926 --> 00:03:09,866
menus will automatically be


91
00:03:09,916 --> 00:03:11,796
presented as contextual menus on


92
00:03:12,106 --> 00:03:12,466
Mac.


93
00:03:12,936 --> 00:03:14,896
Copy and paste, rich text


94
00:03:14,926 --> 00:03:17,316
editing, and key focus all come


95
00:03:17,316 --> 00:03:18,406
for free as well.


96
00:03:19,026 --> 00:03:22,586
Now in all of these cases, the


97
00:03:22,586 --> 00:03:25,996
mapping between iOS and macOS is


98
00:03:26,086 --> 00:03:27,456
relatively straightforward.


99
00:03:28,726 --> 00:03:30,996
However, there are some key


100
00:03:30,996 --> 00:03:34,606
differences between macOS and


101
00:03:34,606 --> 00:03:34,706
iOS.


102
00:03:34,706 --> 00:03:35,996
Designing an app that feels


103
00:03:35,996 --> 00:03:37,856
appropriate for each platform


104
00:03:38,216 --> 00:03:39,876
involves understanding and


105
00:03:39,876 --> 00:03:41,676
accounting for those differences


106
00:03:42,046 --> 00:03:43,546
in your app.


107
00:03:44,176 --> 00:03:46,226
The biggest and most critical


108
00:03:46,226 --> 00:03:48,476
difference is that iOS was


109
00:03:48,476 --> 00:03:50,836
designed for touch, whereas mac


110
00:03:51,216 --> 00:03:53,096
was designed for keyboard and


111
00:03:53,096 --> 00:03:54,546
mouse input.


112
00:03:55,196 --> 00:03:57,226
Designing for touch involves


113
00:03:57,266 --> 00:03:58,816
offering touch targets that are


114
00:03:58,816 --> 00:04:00,916
larger and easier to access,


115
00:04:01,296 --> 00:04:02,736
especially when you're walking


116
00:04:02,736 --> 00:04:04,026
or moving around.


117
00:04:05,206 --> 00:04:07,366
On Mac, using a trackpad or


118
00:04:07,366 --> 00:04:09,316
mouse provides physical


119
00:04:09,316 --> 00:04:11,606
stability and greater control.


120
00:04:12,456 --> 00:04:13,986
And because pointers are small,


121
00:04:13,986 --> 00:04:15,716
people can target and manipulate


122
00:04:15,716 --> 00:04:17,505
interface objects with greater


123
00:04:17,505 --> 00:04:18,096
precision.


124
00:04:19,356 --> 00:04:21,166
Smaller controls also allow Mac


125
00:04:21,206 --> 00:04:23,736
UIs to have greater information


126
00:04:23,736 --> 00:04:25,246
density or greater control


127
00:04:25,246 --> 00:04:25,666
density.


128
00:04:26,956 --> 00:04:28,446
All iOS devices support


129
00:04:28,446 --> 00:04:30,036
Multi-Touch gestures like pan,


130
00:04:30,316 --> 00:04:31,686
rotate, and pinch.


131
00:04:32,386 --> 00:04:34,056
Some Mac setups don't have


132
00:04:34,126 --> 00:04:35,096
Multi-Touch input.


133
00:04:35,566 --> 00:04:37,276
So, if there's any interactions


134
00:04:37,276 --> 00:04:39,526
in your app or any actions that


135
00:04:39,806 --> 00:04:41,326
rely on gestural input to be


136
00:04:41,326 --> 00:04:43,086
performed, you have to find


137
00:04:43,086 --> 00:04:44,546
alternatives for the Mac.


138
00:04:46,006 --> 00:04:47,936
When an iPhone is held with one


139
00:04:47,936 --> 00:04:49,646
hand in portrait orientation,


140
00:04:49,946 --> 00:04:51,616
placing controls in the middle


141
00:04:51,616 --> 00:04:52,766
or the bottom of the screen


142
00:04:53,026 --> 00:04:54,766
might make them easier to reach.


143
00:04:55,246 --> 00:04:57,586
So -- and the same is true for


144
00:04:57,586 --> 00:04:59,356
iPad in landscape orientation.


145
00:04:59,356 --> 00:05:00,506
People tend to grip on the


146
00:05:00,506 --> 00:05:03,016
sides, so placing controls on


147
00:05:03,016 --> 00:05:04,716
the left or right side may make


148
00:05:04,716 --> 00:05:05,786
them easier to reach there.


149
00:05:07,126 --> 00:05:09,196
Obviously, on Mac, people do not


150
00:05:09,196 --> 00:05:10,626
hold or displace when they use


151
00:05:10,626 --> 00:05:10,936
them.


152
00:05:11,866 --> 00:05:13,706
Placing controls along the


153
00:05:13,706 --> 00:05:15,416
bottom, the left or the right


154
00:05:15,416 --> 00:05:17,826
edges provides no ergonomic


155
00:05:17,886 --> 00:05:19,096
benefit whatsoever.


156
00:05:20,146 --> 00:05:22,666
Every area of the screen is just


157
00:05:22,666 --> 00:05:25,206
as easy to reach as every other


158
00:05:25,206 --> 00:05:25,476
area.


159
00:05:26,536 --> 00:05:28,156
And, speaking of displays,


160
00:05:28,516 --> 00:05:30,086
you'll need to consider how your


161
00:05:30,086 --> 00:05:32,466
Apple look on 1x non-Retina


162
00:05:32,686 --> 00:05:33,226
displays.


163
00:05:33,926 --> 00:05:35,486
Special care must be given to


164
00:05:35,486 --> 00:05:37,376
assure that glyphs in text look


165
00:05:37,596 --> 00:05:38,826
crisp and legible.


166
00:05:39,466 --> 00:05:43,046
Look, I know, we all basically


167
00:05:43,046 --> 00:05:44,656
understand that touch devices


168
00:05:44,956 --> 00:05:46,496
are different from desktop


169
00:05:46,576 --> 00:05:47,206
computers.


170
00:05:48,216 --> 00:05:49,536
But what's less obvious is how


171
00:05:49,536 --> 00:05:51,106
interaction models and design


172
00:05:51,106 --> 00:05:53,266
patterns vary between iOS and


173
00:05:53,396 --> 00:05:54,086
macOS.


174
00:05:54,846 --> 00:05:57,346
These differences are the key to


175
00:05:57,346 --> 00:05:59,196
successfully translating your


176
00:05:59,196 --> 00:06:01,576
iPad app's design to macOS.


177
00:06:02,616 --> 00:06:05,756
So, with that in mind, let's get


178
00:06:05,756 --> 00:06:07,496
into the details about how to


179
00:06:07,496 --> 00:06:08,766
design iPad apps for Mac.


180
00:06:09,616 --> 00:06:11,326
As you can see, we have a lot to


181
00:06:11,326 --> 00:06:11,706
cover.


182
00:06:12,286 --> 00:06:13,686
You really may want to take some


183
00:06:13,686 --> 00:06:14,086
notes.


184
00:06:14,956 --> 00:06:16,406
OK. Let's keep going.


185
00:06:17,296 --> 00:06:19,026
Nothing is more critical to an


186
00:06:19,026 --> 00:06:20,696
app's design than how it's


187
00:06:20,696 --> 00:06:21,446
architected.


188
00:06:22,396 --> 00:06:24,076
A logical and intuitive app


189
00:06:24,076 --> 00:06:25,916
structure helps people to find


190
00:06:25,916 --> 00:06:27,706
what they're looking for and it


191
00:06:27,706 --> 00:06:29,616
streamlines navigation.


192
00:06:30,466 --> 00:06:32,446
iOS apps tend to be structured


193
00:06:32,706 --> 00:06:34,106
in one of three ways.


194
00:06:35,136 --> 00:06:36,616
Some apps use tabs for


195
00:06:36,616 --> 00:06:38,306
organizing information into a


196
00:06:38,306 --> 00:06:40,086
small number of top-level


197
00:06:40,086 --> 00:06:40,576
sections.


198
00:06:41,596 --> 00:06:44,126
Some present a top-level list of


199
00:06:44,126 --> 00:06:45,566
sections in a table view.


200
00:06:46,576 --> 00:06:48,736
And some document-focused apps


201
00:06:49,156 --> 00:06:50,486
use -- they use a file/folder


202
00:06:50,486 --> 00:06:52,266
metaphor, might have a document


203
00:06:52,266 --> 00:06:53,676
browser UI at the top level.


204
00:06:54,426 --> 00:06:55,996
The chances are that your app


205
00:06:56,136 --> 00:06:58,216
matches one of these three


206
00:06:58,216 --> 00:06:58,876
archetypes.


207
00:06:59,826 --> 00:07:01,886
The simple path is to find the


208
00:07:01,886 --> 00:07:04,276
closest macOS equivalent and


209
00:07:04,276 --> 00:07:05,076
just use that.


210
00:07:06,296 --> 00:07:07,936
For tabbed apps, you could use a


211
00:07:07,936 --> 00:07:09,516
segmented control in the


212
00:07:09,516 --> 00:07:10,046
toolbar.


213
00:07:10,906 --> 00:07:12,956
If your top-level navigation is


214
00:07:12,956 --> 00:07:14,606
a master list, you can do


215
00:07:14,606 --> 00:07:16,816
nothing and it'll show up as is


216
00:07:16,946 --> 00:07:19,226
on Mac, same thing with a


217
00:07:19,226 --> 00:07:20,246
document browser UI.


218
00:07:21,366 --> 00:07:23,976
A direct translation of your app


219
00:07:23,976 --> 00:07:26,116
structure from iOS to macOS


220
00:07:26,576 --> 00:07:27,666
might be the right way to go.


221
00:07:28,506 --> 00:07:30,406
It provides one key benefit.


222
00:07:31,346 --> 00:07:33,326
It'll make the Mac version of


223
00:07:33,326 --> 00:07:35,406
your app instantly familiar to


224
00:07:35,406 --> 00:07:36,726
the people who are familiar with


225
00:07:36,726 --> 00:07:38,006
your iOS app already.


226
00:07:39,506 --> 00:07:41,186
On the other hand, you might be


227
00:07:41,186 --> 00:07:42,556
missing out on an important


228
00:07:42,556 --> 00:07:44,336
opportunity to streamline


229
00:07:44,336 --> 00:07:45,066
navigation.


230
00:07:46,436 --> 00:07:49,266
On Mac, sidebars are a powerful


231
00:07:49,266 --> 00:07:50,326
navigation tool.


232
00:07:50,896 --> 00:07:52,756
They easily accommodate a large


233
00:07:52,756 --> 00:07:54,666
number of options that can be


234
00:07:54,666 --> 00:07:56,806
grouped and labeled to help


235
00:07:56,976 --> 00:07:59,136
provide additional context and


236
00:07:59,136 --> 00:08:00,736
make them easier to scan.


237
00:08:01,586 --> 00:08:03,026
So, if you currently have a


238
00:08:03,026 --> 00:08:04,916
tabbed app, you could present


239
00:08:04,916 --> 00:08:06,136
those tabs in a segmented


240
00:08:06,136 --> 00:08:08,866
control or you could put them


241
00:08:08,896 --> 00:08:09,756
into a sidebar.


242
00:08:10,946 --> 00:08:12,526
Now, this obviously does not


243
00:08:12,866 --> 00:08:13,516
look great.


244
00:08:13,736 --> 00:08:15,246
It's not a very effective use of


245
00:08:15,246 --> 00:08:16,076
screen space.


246
00:08:16,686 --> 00:08:18,736
But if those four tabs have


247
00:08:18,876 --> 00:08:21,006
subsections, you can display


248
00:08:21,006 --> 00:08:22,616
those subsections in line.


249
00:08:23,446 --> 00:08:25,356
This greatly flattens an app's


250
00:08:25,406 --> 00:08:27,346
hierarchy and allows people to


251
00:08:27,476 --> 00:08:29,366
move directly between


252
00:08:29,366 --> 00:08:30,136
subsections.


253
00:08:30,736 --> 00:08:32,126
It can even allow people to


254
00:08:32,126 --> 00:08:34,306
customize these items to their


255
00:08:34,306 --> 00:08:34,726
needs.


256
00:08:35,885 --> 00:08:37,696
As we saw before, if your app


257
00:08:37,696 --> 00:08:39,936
has top-level list or table view


258
00:08:39,936 --> 00:08:42,126
for navigating between sections,


259
00:08:42,736 --> 00:08:44,126
that translates directly.


260
00:08:44,546 --> 00:08:45,986
Split views are the way to get a


261
00:08:45,986 --> 00:08:46,996
sidebar on Mac.


262
00:08:47,756 --> 00:08:49,176
You just enable the translucent


263
00:08:49,176 --> 00:08:50,446
background and you're good to


264
00:08:50,446 --> 00:08:50,666
go.


265
00:08:51,846 --> 00:08:53,876
And lastly, if your iOS app


266
00:08:53,876 --> 00:08:55,406
shows a document browser at the


267
00:08:55,406 --> 00:08:57,386
top level, you can use a sidebar


268
00:08:57,386 --> 00:08:59,766
for providing persistent access


269
00:09:00,086 --> 00:09:02,066
to folders or for displaying


270
00:09:02,286 --> 00:09:03,336
saved searches.


271
00:09:04,376 --> 00:09:06,276
If you use a sidebar, there are


272
00:09:06,276 --> 00:09:07,566
two things to keep in mind.


273
00:09:08,876 --> 00:09:10,946
First, sidebars are providing


274
00:09:10,946 --> 00:09:12,656
access to locations within your


275
00:09:12,656 --> 00:09:15,366
app or collections of documents.


276
00:09:16,276 --> 00:09:17,666
They're not really meant for


277
00:09:17,666 --> 00:09:19,146
showing the documents or other


278
00:09:19,146 --> 00:09:20,996
kinds of content directly.


279
00:09:22,246 --> 00:09:24,106
Second, the sidebar plays an


280
00:09:24,106 --> 00:09:26,136
important role in helping people


281
00:09:26,136 --> 00:09:27,926
understand which window or app


282
00:09:28,256 --> 00:09:29,646
has key focus.


283
00:09:30,486 --> 00:09:32,616
Glyphs, selection highlights and


284
00:09:32,686 --> 00:09:34,036
the sidebar background itself


285
00:09:34,306 --> 00:09:35,726
are stylized to appear


286
00:09:35,726 --> 00:09:37,456
translucent when the current


287
00:09:37,456 --> 00:09:38,676
window is active.


288
00:09:39,416 --> 00:09:40,856
This effect goes away when the


289
00:09:40,856 --> 00:09:42,286
window becomes inactive.


290
00:09:43,076 --> 00:09:44,806
Knowing which window is going to


291
00:09:44,806 --> 00:09:46,816
respond to keyboard input is


292
00:09:46,816 --> 00:09:47,896
super important.


293
00:09:48,816 --> 00:09:50,716
To support this effect, use a


294
00:09:50,716 --> 00:09:51,896
translucent background.


295
00:09:52,256 --> 00:09:53,826
Don't fill the sidebar in with a


296
00:09:53,826 --> 00:09:55,886
solid color or an image or


297
00:09:55,886 --> 00:09:57,346
pattern or anything like that.


298
00:09:58,036 --> 00:09:59,806
For selection highlights, use


299
00:09:59,806 --> 00:10:01,266
the system selection color


300
00:10:01,566 --> 00:10:02,856
rather than a custom color or


301
00:10:02,856 --> 00:10:04,286
like an app tint color.


302
00:10:05,176 --> 00:10:07,146
And in general, you should use


303
00:10:07,146 --> 00:10:08,466
template images that have a


304
00:10:08,466 --> 00:10:10,666
vibrancy effect applied rather


305
00:10:10,666 --> 00:10:12,646
than full color images unless


306
00:10:12,646 --> 00:10:13,416
it's necessary.


307
00:10:14,626 --> 00:10:17,386
OK. Next, let's talk about


308
00:10:17,386 --> 00:10:17,906
toolbars.


309
00:10:18,806 --> 00:10:20,256
Toolbars are commonplace on the


310
00:10:20,256 --> 00:10:20,556
Mac.


311
00:10:20,556 --> 00:10:22,546
And chances are, you'll want to


312
00:10:22,546 --> 00:10:24,066
use one for your app.


313
00:10:24,466 --> 00:10:26,296
Placing controls into a toolbar


314
00:10:26,556 --> 00:10:28,026
makes them more discoverable.


315
00:10:28,026 --> 00:10:29,896
And it leads to a more stable


316
00:10:29,896 --> 00:10:31,086
user experience.


317
00:10:31,946 --> 00:10:33,726
Toolbars create a top-down


318
00:10:33,756 --> 00:10:35,246
information flow which is the


319
00:10:35,246 --> 00:10:36,736
norm for Mac apps.


320
00:10:37,596 --> 00:10:39,796
If your iPad app has any actions


321
00:10:39,796 --> 00:10:41,036
that are located along the


322
00:10:41,086 --> 00:10:44,446
bottom edge of the screen, doing


323
00:10:44,446 --> 00:10:46,126
the same thing in a Mac window


324
00:10:46,126 --> 00:10:47,476
can be very problematic.


325
00:10:48,176 --> 00:10:49,686
Mac windows are draggable.


326
00:10:50,296 --> 00:10:51,806
The bottom edge of Mac windows


327
00:10:51,806 --> 00:10:54,846
might be dragged out of you, or


328
00:10:54,846 --> 00:10:55,626
below the dock.


329
00:10:56,656 --> 00:10:58,056
Clearly this leads to some


330
00:10:58,196 --> 00:10:59,336
usability issues.


331
00:11:00,536 --> 00:11:01,926
When putting actions into the


332
00:11:01,926 --> 00:11:03,806
toolbar, keep in mind that a


333
00:11:03,806 --> 00:11:05,696
toolbar's contents don't change


334
00:11:06,006 --> 00:11:07,786
based on what area of an app


335
00:11:07,986 --> 00:11:08,996
someone is in.


336
00:11:09,626 --> 00:11:10,886
If they can't be used in a


337
00:11:10,886 --> 00:11:12,976
certain area of the app, they'll


338
00:11:12,976 --> 00:11:13,826
be disabled.


339
00:11:14,976 --> 00:11:16,666
But toolbar action should only


340
00:11:16,666 --> 00:11:18,586
really get disabled if nothing


341
00:11:18,586 --> 00:11:20,096
is selected for them to act


342
00:11:20,096 --> 00:11:20,566
upon.


343
00:11:21,166 --> 00:11:23,266
So, if actions are only relevant


344
00:11:23,266 --> 00:11:25,186
in specific areas of your app,


345
00:11:25,656 --> 00:11:27,236
they probably should not be in


346
00:11:27,236 --> 00:11:27,766
the toolbar.


347
00:11:28,996 --> 00:11:30,626
That said, you can provide


348
00:11:30,626 --> 00:11:32,806
contextually relevant actions in


349
00:11:32,806 --> 00:11:33,766
an action menu.


350
00:11:34,286 --> 00:11:35,826
Action menus can dynamically


351
00:11:35,826 --> 00:11:37,656
change based on the current view


352
00:11:37,926 --> 00:11:38,816
or selection.


353
00:11:39,706 --> 00:11:41,086
For example, with a file


354
00:11:41,086 --> 00:11:42,796
selected in a Finder window, the


355
00:11:43,066 --> 00:11:44,766
action menu includes actions


356
00:11:44,766 --> 00:11:45,996
that can be performed on the


357
00:11:45,996 --> 00:11:46,516
file.


358
00:11:46,556 --> 00:11:48,806
And with nothing selected, the


359
00:11:48,806 --> 00:11:50,526
action menu contains commands


360
00:11:50,776 --> 00:11:52,196
that can be performed on the


361
00:11:52,196 --> 00:11:53,726
current folder that we're


362
00:11:53,726 --> 00:11:54,176
viewing.


363
00:11:54,466 --> 00:11:57,236
Now, action menus are not meant


364
00:11:57,236 --> 00:11:58,076
to be a catchall.


365
00:11:58,396 --> 00:12:00,146
So be selective about what you


366
00:12:00,146 --> 00:12:01,076
put into them.


367
00:12:02,126 --> 00:12:04,286
OK. Next, let's talk about


368
00:12:04,286 --> 00:12:04,706
layout.


369
00:12:05,706 --> 00:12:07,446
Mac windows are much, much,


370
00:12:07,446 --> 00:12:09,416
much, much larger than iPads.


371
00:12:10,126 --> 00:12:11,476
You'll have much more space to


372
00:12:11,476 --> 00:12:13,336
play with, especially in full


373
00:12:13,336 --> 00:12:13,866
screen.


374
00:12:14,506 --> 00:12:16,106
But taking advantage of all of


375
00:12:16,106 --> 00:12:17,986
that space requires a layout


376
00:12:17,986 --> 00:12:20,176
that's optimized for iPad.


377
00:12:21,066 --> 00:12:23,056
Now, some iPad layouts are just


378
00:12:23,216 --> 00:12:25,116
blown-up iPhone interfaces,


379
00:12:25,656 --> 00:12:27,986
which looks really bad on an


380
00:12:27,986 --> 00:12:28,606
iPad.


381
00:12:28,606 --> 00:12:31,626
And it looks even worse on a Mac


382
00:12:31,626 --> 00:12:33,476
especially in full screen.


383
00:12:34,606 --> 00:12:36,646
Optimizing your layouts for iPad


384
00:12:36,646 --> 00:12:38,856
and Mac requires special


385
00:12:38,856 --> 00:12:39,826
consideration.


386
00:12:40,736 --> 00:12:42,576
For both devices, readable


387
00:12:42,576 --> 00:12:44,476
content margins keep text lines


388
00:12:44,476 --> 00:12:46,296
from getting too long so that


389
00:12:46,296 --> 00:12:47,616
they remain readable.


390
00:12:48,586 --> 00:12:50,196
Breaking content into multiple


391
00:12:50,196 --> 00:12:51,886
columns can be a great way to


392
00:12:51,886 --> 00:12:54,766
maximize information density and


393
00:12:55,066 --> 00:12:56,216
using split views or


394
00:12:56,216 --> 00:12:58,306
master-detail views is a great


395
00:12:58,306 --> 00:13:00,826
way to utilize a wider display.


396
00:13:01,916 --> 00:13:03,156
Split views streamline


397
00:13:03,156 --> 00:13:05,566
navigation by simultaneously


398
00:13:05,566 --> 00:13:07,556
displaying a list of objects and


399
00:13:07,556 --> 00:13:09,546
details about that object which


400
00:13:09,546 --> 00:13:11,516
reduces the need to navigate


401
00:13:11,516 --> 00:13:13,416
into and back out of an app


402
00:13:13,486 --> 00:13:13,976
hierarchy.


403
00:13:14,886 --> 00:13:16,756
If you have a Split View in your


404
00:13:16,756 --> 00:13:18,776
app, it'll work great on Mac


405
00:13:18,876 --> 00:13:20,086
without modification.


406
00:13:21,126 --> 00:13:22,546
Now, this may sound a little bit


407
00:13:22,546 --> 00:13:24,526
strange but making your layout


408
00:13:24,526 --> 00:13:26,886
work great on a Mac is probably


409
00:13:26,886 --> 00:13:28,706
the best way to identify and


410
00:13:28,706 --> 00:13:30,926
address layout issues for Mac --


411
00:13:31,606 --> 00:13:32,116
for iPad.


412
00:13:32,886 --> 00:13:36,526
OK. Moving on to type.


413
00:13:37,936 --> 00:13:40,676
On macOS, the baseline font size


414
00:13:40,676 --> 00:13:41,516
is 13 points.


415
00:13:42,116 --> 00:13:44,916
Most controls and labels use


416
00:13:44,986 --> 00:13:45,766
that font size.


417
00:13:46,816 --> 00:13:48,956
On iOS, the baseline font size


418
00:13:48,956 --> 00:13:49,906
is 17 points.


419
00:13:50,546 --> 00:13:53,466
Showing an iOS app with 17-point


420
00:13:53,466 --> 00:13:55,096
type on a Mac would look totally


421
00:13:55,096 --> 00:13:55,746
out of place.


422
00:13:56,246 --> 00:13:57,796
Text would be way too large.


423
00:13:58,486 --> 00:14:00,786
So, to maintain consistency


424
00:14:01,096 --> 00:14:03,546
between Mac apps, the system


425
00:14:03,546 --> 00:14:06,196
will scale content areas down by


426
00:14:06,196 --> 00:14:07,586
77 percent.


427
00:14:08,456 --> 00:14:09,556
Seventy-seven percent, of


428
00:14:09,556 --> 00:14:10,796
course, as we all know, I don't


429
00:14:10,796 --> 00:14:12,266
even know if I'm pointing this


430
00:14:12,266 --> 00:14:14,006
out, is 13 divided by 17.


431
00:14:15,126 --> 00:14:17,166
Everything in the main interface


432
00:14:17,166 --> 00:14:18,856
will be scaled uniformly.


433
00:14:19,596 --> 00:14:20,796
This approach means that you


434
00:14:20,896 --> 00:14:23,676
don't have to redesign or recode


435
00:14:23,756 --> 00:14:26,116
every screen for macOS.


436
00:14:27,206 --> 00:14:29,416
But it does introduce a bit of


437
00:14:29,456 --> 00:14:31,686
complexity on the design side.


438
00:14:32,236 --> 00:14:34,076
When creating mock-ups of your


439
00:14:34,076 --> 00:14:36,116
iPad app, you'll want to


440
00:14:36,116 --> 00:14:38,586
recreate that 77 percent scale.


441
00:14:39,326 --> 00:14:41,066
So in Photoshop, for example,


442
00:14:41,066 --> 00:14:42,666
you can put your entire content


443
00:14:42,666 --> 00:14:44,616
area into a smart object and


444
00:14:44,616 --> 00:14:46,536
scale it down to 77 percent.


445
00:14:46,536 --> 00:14:48,696
And you can do similar things in


446
00:14:48,926 --> 00:14:50,966
Sketch, XD and other design


447
00:14:50,966 --> 00:14:51,356
tools.


448
00:14:52,666 --> 00:14:54,966
On macOS, apps tend to only use


449
00:14:55,256 --> 00:14:56,916
a few different font sizes.


450
00:14:57,876 --> 00:15:01,116
On iOS, text styles very much


451
00:15:01,116 --> 00:15:01,996
more dramatically.


452
00:15:02,626 --> 00:15:04,516
Text styles, the typographic


453
00:15:04,516 --> 00:15:06,796
system for iOS and they offer a


454
00:15:06,866 --> 00:15:08,896
wide range of size options.


455
00:15:09,906 --> 00:15:11,846
Using some of the smallest size


456
00:15:11,846 --> 00:15:13,856
like footnote, caption one,


457
00:15:13,856 --> 00:15:15,726
caption two, can make text


458
00:15:15,726 --> 00:15:17,296
that's difficult to read on Mac.


459
00:15:18,346 --> 00:15:20,056
Even the Mac size mini is often


460
00:15:20,056 --> 00:15:20,606
too small.


461
00:15:21,706 --> 00:15:23,396
So, just -- you may find that


462
00:15:23,396 --> 00:15:24,466
you need to bump up text a


463
00:15:24,466 --> 00:15:26,086
little bit to keep it legible on


464
00:15:26,086 --> 00:15:26,216
Mac.


465
00:15:27,256 --> 00:15:29,426
And, one final note about type,


466
00:15:29,996 --> 00:15:31,616
macOS doesn't support dynamic


467
00:15:31,616 --> 00:15:31,856
type.


468
00:15:32,396 --> 00:15:34,356
We'll always use the large size


469
00:15:34,356 --> 00:15:36,166
setting, it's just scaled down


470
00:15:36,386 --> 00:15:37,296
77 percent.


471
00:15:38,436 --> 00:15:41,236
OK. Now with iOS, every app has


472
00:15:41,236 --> 00:15:43,146
it in color which is used to


473
00:15:43,146 --> 00:15:44,446
show when elements are


474
00:15:44,446 --> 00:15:45,966
interactive or to highlight


475
00:15:46,026 --> 00:15:46,846
selected items.


476
00:15:47,766 --> 00:15:49,116
Some apps go further by


477
00:15:49,116 --> 00:15:51,436
colorizing content area or bar


478
00:15:51,436 --> 00:15:52,056
backgrounds.


479
00:15:52,896 --> 00:15:54,636
On Mac, things are a little bit


480
00:15:54,676 --> 00:15:55,146
different.


481
00:15:55,846 --> 00:15:57,716
It's common for people to have


482
00:15:57,716 --> 00:16:00,146
lots of open windows with lots


483
00:16:00,146 --> 00:16:02,016
of content in those windows and


484
00:16:02,016 --> 00:16:03,486
lots of files and folders on


485
00:16:03,486 --> 00:16:04,146
their desktop.


486
00:16:05,016 --> 00:16:07,346
If macOS used color like iOS


487
00:16:07,466 --> 00:16:09,486
apps, the user experience would


488
00:16:09,486 --> 00:16:11,076
be really fragmented and


489
00:16:11,076 --> 00:16:11,666
overwhelming.


490
00:16:12,786 --> 00:16:14,706
Mac interfaces should be more


491
00:16:14,706 --> 00:16:15,226
neutral.


492
00:16:15,716 --> 00:16:16,826
They shouldn't compete with a


493
00:16:16,826 --> 00:16:18,286
content that they present to


494
00:16:18,286 --> 00:16:18,546
people.


495
00:16:19,636 --> 00:16:20,756
What people are -- that's what


496
00:16:20,756 --> 00:16:22,556
people are really interested in.


497
00:16:23,786 --> 00:16:25,856
At the same time, translucency


498
00:16:25,856 --> 00:16:27,826
integrates your app into the Mac


499
00:16:27,826 --> 00:16:28,556
ecosystem.


500
00:16:29,146 --> 00:16:30,606
We all like to customize our


501
00:16:30,606 --> 00:16:32,026
desktop pictures and


502
00:16:32,026 --> 00:16:34,456
translucency lets those desktops


503
00:16:34,546 --> 00:16:36,856
influence how apps look and it


504
00:16:36,896 --> 00:16:38,966
brings them altogether into one


505
00:16:38,966 --> 00:16:40,466
cohesive experience.


506
00:16:41,586 --> 00:16:43,676
Similarly, on Mac, highlight


507
00:16:43,676 --> 00:16:44,896
colors are a personal


508
00:16:44,896 --> 00:16:45,616
preference.


509
00:16:46,146 --> 00:16:47,566
If your app uses a different


510
00:16:47,566 --> 00:16:49,336
color to highlight selected


511
00:16:49,336 --> 00:16:51,926
items, it'll feel really out of


512
00:16:52,026 --> 00:16:53,726
place and it'll be downright


513
00:16:53,726 --> 00:16:55,306
confusing for the people who use


514
00:16:55,306 --> 00:16:56,306
your app.


515
00:16:57,186 --> 00:16:59,096
It's worth pointing out actually


516
00:16:59,396 --> 00:17:00,966
that iOS is becoming a little


517
00:17:00,966 --> 00:17:03,476
bit more like macOS with respect


518
00:17:03,746 --> 00:17:04,136
to color.


519
00:17:05,156 --> 00:17:07,396
With multitasking, apps are seen


520
00:17:07,396 --> 00:17:09,346
alongside each other far more


521
00:17:09,346 --> 00:17:09,866
often.


522
00:17:10,346 --> 00:17:11,826
A consistent visual look


523
00:17:12,185 --> 00:17:14,076
provides a unified user


524
00:17:14,076 --> 00:17:14,766
experience.


525
00:17:15,516 --> 00:17:17,586
With Dark Mode, people expect


526
00:17:17,586 --> 00:17:19,566
more control over how apps will


527
00:17:19,566 --> 00:17:20,876
look on their device.


528
00:17:21,626 --> 00:17:23,016
Apps that don't respond to their


529
00:17:23,016 --> 00:17:24,536
personal preference will feel


530
00:17:24,616 --> 00:17:25,266
out of place.


531
00:17:26,276 --> 00:17:28,606
And, tint colors play a smaller


532
00:17:28,606 --> 00:17:29,426
part as well.


533
00:17:30,266 --> 00:17:32,216
Steppers and segmented controls


534
00:17:32,216 --> 00:17:34,796
that used to be tinted are now


535
00:17:35,156 --> 00:17:36,956
neutral with iOS 13.


536
00:17:38,116 --> 00:17:40,326
OK. And one last comment about


537
00:17:40,326 --> 00:17:40,716
color.


538
00:17:41,516 --> 00:17:43,396
As some of you may have heard


539
00:17:43,396 --> 00:17:45,776
already, the system colors on


540
00:17:45,776 --> 00:17:47,046
iOS have been completely


541
00:17:47,046 --> 00:17:47,666
overhauled.


542
00:17:48,356 --> 00:17:50,346
If you use these colors for your


543
00:17:50,346 --> 00:17:52,586
iOS app, they'll get remapped to


544
00:17:52,586 --> 00:17:55,266
macOS equivalents for both light


545
00:17:55,266 --> 00:17:56,126
and dark modes.


546
00:17:57,236 --> 00:17:59,886
OK. Moving on to gestures.


547
00:18:00,746 --> 00:18:02,256
UIKit gestures will


548
00:18:02,256 --> 00:18:04,686
automatically remap to trackpad


549
00:18:04,686 --> 00:18:05,676
or mouse events.


550
00:18:06,636 --> 00:18:08,726
Single tap will be the same as a


551
00:18:08,726 --> 00:18:09,736
mouse-down event.


552
00:18:11,316 --> 00:18:13,466
Long press will be mouse down


553
00:18:13,706 --> 00:18:14,286
and hold.


554
00:18:14,906 --> 00:18:18,416
Pan will be the same as a mouse


555
00:18:18,416 --> 00:18:18,766
drag.


556
00:18:18,766 --> 00:18:20,946
And the swipe gesture will be


557
00:18:21,056 --> 00:18:23,056
remapped to a drag in the proper


558
00:18:23,056 --> 00:18:23,586
direction.


559
00:18:24,646 --> 00:18:26,596
On trackpads, pinching and


560
00:18:26,596 --> 00:18:28,336
rotating will work but they'll


561
00:18:28,336 --> 00:18:29,806
behave a little bit differently.


562
00:18:30,856 --> 00:18:32,926
On the iPad, pinch and rotate


563
00:18:32,926 --> 00:18:34,696
use the middle point between


564
00:18:34,696 --> 00:18:37,056
touches to target objects or


565
00:18:37,056 --> 00:18:39,276
center the rotation and scale


566
00:18:39,276 --> 00:18:39,956
operation.


567
00:18:40,826 --> 00:18:42,986
On Mac, the cursor's location


568
00:18:42,986 --> 00:18:46,576
will be used for these purposes.


569
00:18:46,676 --> 00:18:48,456
Screen edge swipes won't be


570
00:18:48,456 --> 00:18:50,176
remapped for obvious reasons.


571
00:18:50,866 --> 00:18:53,456
And depending on how you've used


572
00:18:53,456 --> 00:18:55,246
gestures, you may have some work


573
00:18:55,316 --> 00:18:55,626
to do.


574
00:18:56,376 --> 00:18:57,606
Some gestures just won't


575
00:18:57,606 --> 00:18:58,836
translate very well to Mac.


576
00:18:59,786 --> 00:19:01,386
For example, pulling a scroll


577
00:19:01,386 --> 00:19:03,136
view to refresh its contents


578
00:19:03,556 --> 00:19:05,196
doesn't translate that well on


579
00:19:05,196 --> 00:19:05,416
the Mac.


580
00:19:06,346 --> 00:19:07,446
For any actions that are


581
00:19:07,626 --> 00:19:09,186
triggered by gestural input,


582
00:19:09,706 --> 00:19:10,546
you'll want to find an


583
00:19:10,546 --> 00:19:12,466
alternative way to perform that


584
00:19:12,466 --> 00:19:12,926
action.


585
00:19:13,506 --> 00:19:14,836
You can use many bar menus,


586
00:19:14,836 --> 00:19:16,596
contextual menus or buttons in


587
00:19:16,596 --> 00:19:18,556
the toolbar or all of the above.


588
00:19:19,716 --> 00:19:21,756
And one last note on Mac, you'll


589
00:19:21,756 --> 00:19:23,496
be able to receive mouse hover


590
00:19:23,496 --> 00:19:23,946
events.


591
00:19:24,776 --> 00:19:26,216
You can use this to display


592
00:19:26,216 --> 00:19:27,676
additional information about


593
00:19:27,676 --> 00:19:29,256
whatever the pointer is over.


594
00:19:30,296 --> 00:19:31,876
So for example, pressing the


595
00:19:31,876 --> 00:19:34,936
stock chart in the Stocks app on


596
00:19:35,076 --> 00:19:36,746
iOS reveals the price of a


597
00:19:36,746 --> 00:19:38,036
specific point in time.


598
00:19:38,766 --> 00:19:40,656
On macOS, rolling over the stock


599
00:19:40,656 --> 00:19:42,046
chart reveals the same


600
00:19:42,046 --> 00:19:42,726
information.


601
00:19:42,726 --> 00:19:44,456
You should definitely take


602
00:19:44,456 --> 00:19:45,816
advantage of hover states.


603
00:19:46,486 --> 00:19:47,616
There're a powerful way for


604
00:19:47,616 --> 00:19:49,076
people to get information


605
00:19:49,076 --> 00:19:50,446
without needing to change their


606
00:19:50,446 --> 00:19:51,056
selection.


607
00:19:52,126 --> 00:19:53,466
You'll also be able to create


608
00:19:53,466 --> 00:19:56,286
touch bars for your iPad apps on


609
00:19:56,286 --> 00:19:56,446
Mac.


610
00:19:57,426 --> 00:19:58,796
Touch bars are a great way for


611
00:19:58,796 --> 00:20:00,376
displaying contextually relevant


612
00:20:00,376 --> 00:20:01,926
information and you can show


613
00:20:01,926 --> 00:20:03,376
different touch bars based on


614
00:20:03,376 --> 00:20:04,676
what area the app people are in


615
00:20:04,676 --> 00:20:05,696
or even what's selected.


616
00:20:06,306 --> 00:20:07,676
Most touch bar components and


617
00:20:07,676 --> 00:20:09,156
controls are available for you


618
00:20:09,156 --> 00:20:09,816
to use.


619
00:20:10,586 --> 00:20:12,276
Now, touch bars deserve an


620
00:20:12,276 --> 00:20:13,486
entire talk of their own.


621
00:20:13,486 --> 00:20:14,936
It's way too much to get into


622
00:20:14,936 --> 00:20:15,196
here.


623
00:20:15,746 --> 00:20:16,936
But you can learn more about


624
00:20:16,936 --> 00:20:19,166
touch bars in the macOS HIG.


625
00:20:20,116 --> 00:20:22,276
OK. Next up, app icons.


626
00:20:23,066 --> 00:20:24,986
Mac app icons are the face of


627
00:20:24,986 --> 00:20:25,546
your app.


628
00:20:26,426 --> 00:20:27,966
They help differentiate your app


629
00:20:28,356 --> 00:20:30,516
from dozens or hundreds of other


630
00:20:30,516 --> 00:20:31,716
apps that people may have


631
00:20:31,716 --> 00:20:32,246
installed.


632
00:20:33,136 --> 00:20:34,246
And they show up all over the


633
00:20:34,246 --> 00:20:35,766
place, in the dock, app


634
00:20:35,766 --> 00:20:37,666
switcher, Launchpad, application


635
00:20:37,666 --> 00:20:39,016
folder and more.


636
00:20:40,356 --> 00:20:42,956
By default, your iOS app icon


637
00:20:43,176 --> 00:20:45,436
will show up more or less as is,


638
00:20:45,946 --> 00:20:47,926
a square image that's masked by


639
00:20:47,926 --> 00:20:49,256
a continuous curve shape.


640
00:20:50,266 --> 00:20:51,696
A subtle drop shadow will be


641
00:20:51,696 --> 00:20:53,936
applied so that it fits in a bit


642
00:20:53,936 --> 00:20:56,956
better with the other Mac app


643
00:20:56,956 --> 00:20:57,456
icons.


644
00:20:58,396 --> 00:21:01,506
You can choose to stop here, or


645
00:21:01,626 --> 00:21:03,116
you can go the extra mile.


646
00:21:03,166 --> 00:21:05,016
And I encourage you to do so.


647
00:21:05,816 --> 00:21:07,906
Because of Mac app icon so much


648
00:21:07,906 --> 00:21:09,836
more visible, it really pays to


649
00:21:09,836 --> 00:21:11,426
have a great icon.


650
00:21:12,446 --> 00:21:14,256
Mac icons have different design


651
00:21:14,256 --> 00:21:16,336
characteristics than iOS icons.


652
00:21:17,056 --> 00:21:19,026
They're not simply squares with


653
00:21:19,026 --> 00:21:20,156
rounded off corners.


654
00:21:20,896 --> 00:21:22,866
Mac app icons have unique


655
00:21:22,916 --> 00:21:25,116
silhouettes to stand apart from


656
00:21:25,116 --> 00:21:26,256
other app icons.


657
00:21:27,046 --> 00:21:28,806
At smaller sizes, those


658
00:21:28,806 --> 00:21:30,716
silhouettes can help keep icons


659
00:21:30,796 --> 00:21:33,096
easily distinguishable from each


660
00:21:33,096 --> 00:21:33,406
other.


661
00:21:34,216 --> 00:21:37,106
And, speaking of size, on a 1x


662
00:21:37,106 --> 00:21:39,266
display, app icons in the Finder


663
00:21:39,266 --> 00:21:42,116
are only 16 pixels tall by wide.


664
00:21:42,896 --> 00:21:44,586
At this size, every pixel


665
00:21:44,586 --> 00:21:45,106
counts.


666
00:21:45,646 --> 00:21:47,696
So it's a good idea to create


667
00:21:47,696 --> 00:21:49,506
pixel hinted icons at the


668
00:21:49,506 --> 00:21:51,296
smallest app icon sizes.


669
00:21:52,866 --> 00:21:54,776
Mac app icons are, of course,


670
00:21:55,156 --> 00:21:56,866
crafted to accurately depict


671
00:21:57,306 --> 00:21:59,046
physical real-world objects.


672
00:21:59,616 --> 00:22:01,676
Many icons are rendered in 3D


673
00:22:01,676 --> 00:22:03,256
software so they have realistic


674
00:22:03,256 --> 00:22:04,856
lighting and material effects.


675
00:22:05,786 --> 00:22:07,106
We have lots of information for


676
00:22:07,106 --> 00:22:08,726
you to reference about camera


677
00:22:08,726 --> 00:22:10,776
perspective and light source in


678
00:22:10,776 --> 00:22:12,326
the HIG if you choose to go this


679
00:22:12,326 --> 00:22:12,446
route.


680
00:22:12,446 --> 00:22:14,006
All right.


681
00:22:14,556 --> 00:22:15,216
We're almost there.


682
00:22:15,576 --> 00:22:16,176
I know it's a lot.


683
00:22:16,926 --> 00:22:18,366
Second to last is contextual


684
00:22:18,366 --> 00:22:18,796
menus.


685
00:22:19,286 --> 00:22:21,216
Contextual menus are the unsung


686
00:22:21,216 --> 00:22:23,706
heroes of Mac app interfaces.


687
00:22:24,476 --> 00:22:25,656
They let people know what


688
00:22:25,656 --> 00:22:27,376
actions can be performed on an


689
00:22:27,376 --> 00:22:29,516
object and they bring actions


690
00:22:29,686 --> 00:22:31,116
right to the pointer which


691
00:22:31,116 --> 00:22:32,576
completely removes mouse


692
00:22:32,576 --> 00:22:32,946
trouble.


693
00:22:34,216 --> 00:22:36,516
On Mac, people basically expect


694
00:22:36,566 --> 00:22:38,476
contextual menus everywhere.


695
00:22:39,006 --> 00:22:40,656
So, it logically follows that


696
00:22:40,656 --> 00:22:42,396
you should add contextual menus


697
00:22:42,456 --> 00:22:43,226
to everything.


698
00:22:43,926 --> 00:22:45,246
Any object in your app should


699
00:22:45,246 --> 00:22:46,776
have an associated contextual


700
00:22:46,776 --> 00:22:48,536
menu that contains the most


701
00:22:48,536 --> 00:22:50,136
commonly performed actions.


702
00:22:51,256 --> 00:22:53,366
If you've added contextual menus


703
00:22:53,366 --> 00:22:54,896
for your iOS app, they'll


704
00:22:54,896 --> 00:22:56,596
automatically be brought to


705
00:22:56,596 --> 00:22:58,106
macOS contextual menus.


706
00:22:58,656 --> 00:22:59,946
And the same is true for edit


707
00:22:59,996 --> 00:23:00,316
menus.


708
00:23:01,486 --> 00:23:02,376
Whether you're designing


709
00:23:02,376 --> 00:23:04,386
contextual menus from macOS or


710
00:23:04,386 --> 00:23:06,796
iOS, the same basic rules apply.


711
00:23:07,496 --> 00:23:09,156
Here are six quick tips to keep


712
00:23:09,156 --> 00:23:09,526
in mind.


713
00:23:10,176 --> 00:23:12,176
First, avoid overwhelming people


714
00:23:12,176 --> 00:23:13,246
with too many options.


715
00:23:13,856 --> 00:23:15,176
Too many options makes it harder


716
00:23:15,176 --> 00:23:16,076
for people to find what they're


717
00:23:16,076 --> 00:23:18,086
looking for and it leads to


718
00:23:18,086 --> 00:23:19,616
menus that take a long time to


719
00:23:19,616 --> 00:23:20,026
scan.


720
00:23:20,806 --> 00:23:22,556
Focus on the most contextually


721
00:23:22,556 --> 00:23:23,996
-- most relevant functionality


722
00:23:23,996 --> 00:23:24,436
only.


723
00:23:25,286 --> 00:23:26,676
Next, be succinct.


724
00:23:27,316 --> 00:23:29,306
One-word labels are typically


725
00:23:29,426 --> 00:23:29,966
sufficient.


726
00:23:30,776 --> 00:23:32,396
When writing labels, convey


727
00:23:32,396 --> 00:23:34,556
action, use verbs or verb


728
00:23:34,556 --> 00:23:36,636
phrases that suggest what the


729
00:23:36,636 --> 00:23:38,086
results of the action will be


730
00:23:38,146 --> 00:23:39,036
when it's performed.


731
00:23:39,926 --> 00:23:41,596
Also, the order of commands is


732
00:23:41,646 --> 00:23:42,566
very meaningful.


733
00:23:43,206 --> 00:23:44,566
Put the most important stuff at


734
00:23:44,566 --> 00:23:46,356
the top and then group related


735
00:23:46,356 --> 00:23:47,206
items together.


736
00:23:47,716 --> 00:23:49,536
Going one step further, use


737
00:23:49,536 --> 00:23:50,826
separators to make the


738
00:23:50,826 --> 00:23:52,526
relationships between commands


739
00:23:52,636 --> 00:23:53,356
explicit.


740
00:23:54,446 --> 00:23:56,246
Grouping commands together can


741
00:23:56,246 --> 00:23:58,296
be very meaningful and it helps


742
00:23:58,296 --> 00:24:00,286
people skip past entire sets of


743
00:24:00,316 --> 00:24:02,026
commands when they conceive from


744
00:24:02,026 --> 00:24:03,606
the first one or two that it's


745
00:24:03,606 --> 00:24:04,556
not going to be relevant to


746
00:24:04,556 --> 00:24:05,296
their current needs.


747
00:24:06,466 --> 00:24:08,446
And lastly, use submenus to


748
00:24:08,566 --> 00:24:10,746
control menu length and hide


749
00:24:10,746 --> 00:24:12,476
away actions that aren't


750
00:24:12,626 --> 00:24:13,006
relevant.


751
00:24:13,846 --> 00:24:15,766
Submenus are a classic example


752
00:24:15,766 --> 00:24:17,046
of progressive disclosure.


753
00:24:17,676 --> 00:24:19,896
They simplify decision making by


754
00:24:19,896 --> 00:24:21,326
reducing complexity.


755
00:24:22,556 --> 00:24:24,896
OK. Now the last major


756
00:24:24,896 --> 00:24:26,616
consideration that I'd like to


757
00:24:26,616 --> 00:24:28,696
discuss today are menu bars.


758
00:24:29,986 --> 00:24:31,956
Every app has a menu bar.


759
00:24:32,876 --> 00:24:34,696
Menu bars are core to the Mac


760
00:24:34,696 --> 00:24:36,996
experience, go back all the way


761
00:24:36,996 --> 00:24:37,986
to 1984.


762
00:24:38,866 --> 00:24:41,136
Menu bars were key to what made


763
00:24:41,136 --> 00:24:43,216
computers easy to use.


764
00:24:44,296 --> 00:24:45,866
Designing your app's menu bar


765
00:24:46,166 --> 00:24:48,046
begins with this super fun


766
00:24:48,046 --> 00:24:48,806
exercise.


767
00:24:49,866 --> 00:24:51,216
You write down all of the


768
00:24:51,216 --> 00:24:52,576
actions that a person can


769
00:24:52,576 --> 00:24:54,866
perform in your app and I do


770
00:24:54,866 --> 00:24:56,736
mean all of them and then you


771
00:24:56,736 --> 00:24:58,496
take note of what object or


772
00:24:58,496 --> 00:25:00,366
objects those actions affect.


773
00:25:01,446 --> 00:25:03,036
Not only is this exercise


774
00:25:03,216 --> 00:25:06,106
excruciatingly fun, but it's


775
00:25:06,246 --> 00:25:07,666
also necessary.


776
00:25:08,816 --> 00:25:10,246
Every action that someone can


777
00:25:10,246 --> 00:25:12,126
perform in your app should be


778
00:25:12,126 --> 00:25:13,576
available from the menu bar.


779
00:25:14,206 --> 00:25:15,526
This makes them easier to


780
00:25:15,566 --> 00:25:17,926
discover and lets people assign


781
00:25:17,926 --> 00:25:19,236
keyboard shortcuts to them.


782
00:25:20,166 --> 00:25:21,346
It also makes them more


783
00:25:21,346 --> 00:25:22,516
accessible to people who are


784
00:25:22,516 --> 00:25:25,306
using full keyboard access.


785
00:25:25,346 --> 00:25:26,736
Once you've cataloged all of


786
00:25:26,736 --> 00:25:28,286
those actions, you'll need to


787
00:25:28,286 --> 00:25:29,516
find a place for them to go.


788
00:25:30,256 --> 00:25:32,556
macOS includes a standard set of


789
00:25:32,556 --> 00:25:35,366
menu items -- menu options like


790
00:25:35,776 --> 00:25:37,486
the app menu for commands that


791
00:25:37,536 --> 00:25:39,666
work -- operate on the app, file


792
00:25:39,666 --> 00:25:40,876
menu for commands that operate


793
00:25:40,876 --> 00:25:42,706
on files, edit menu for commands


794
00:25:42,706 --> 00:25:44,016
that operate on the content or


795
00:25:44,016 --> 00:25:45,716
objects within those files,


796
00:25:46,396 --> 00:25:47,946
format menu for formatting text,


797
00:25:48,686 --> 00:25:50,376
view menu for customizing the


798
00:25:50,376 --> 00:25:52,496
appearance of a window, window


799
00:25:52,496 --> 00:25:54,336
menu for commands that operate


800
00:25:54,336 --> 00:25:55,066
on windows.


801
00:25:55,836 --> 00:25:57,896
And help menus are for getting


802
00:25:57,896 --> 00:25:59,576
help and finding commands in


803
00:25:59,576 --> 00:26:00,306
those other menus.


804
00:26:01,466 --> 00:26:03,486
Now, for many of your apps,


805
00:26:03,896 --> 00:26:05,386
these standard menus are going


806
00:26:05,386 --> 00:26:06,646
to be all that you actually


807
00:26:06,646 --> 00:26:06,996
need.


808
00:26:07,796 --> 00:26:09,936
However, it's often necessary to


809
00:26:09,936 --> 00:26:12,006
provide additional custom menus.


810
00:26:12,816 --> 00:26:14,386
If you have a couple of key


811
00:26:14,386 --> 00:26:17,486
object types in your app, with


812
00:26:17,486 --> 00:26:19,636
object specific actions, you


813
00:26:19,636 --> 00:26:20,736
should consider adding a


814
00:26:20,796 --> 00:26:22,676
top-level menu or two for them.


815
00:26:23,576 --> 00:26:25,076
So, for example, in the mail


816
00:26:25,286 --> 00:26:27,166
app, there are two main object


817
00:26:27,606 --> 00:26:30,386
types, mailboxes and messages.


818
00:26:31,326 --> 00:26:32,556
There are a number of actions


819
00:26:32,556 --> 00:26:33,986
that can be performed on those


820
00:26:33,986 --> 00:26:35,456
objects and none of those


821
00:26:35,456 --> 00:26:36,986
actions can be performed on the


822
00:26:36,986 --> 00:26:38,046
other type of object.


823
00:26:38,746 --> 00:26:40,526
So it makes sense to have one


824
00:26:40,526 --> 00:26:42,776
menu button for each of those


825
00:26:42,776 --> 00:26:43,386
objects.


826
00:26:44,836 --> 00:26:46,586
At other times, it's helpful to


827
00:26:46,586 --> 00:26:48,156
organize actions by a larger


828
00:26:48,156 --> 00:26:49,376
workflow that they serve.


829
00:26:50,126 --> 00:26:51,946
In keynote, there are a variety


830
00:26:51,946 --> 00:26:52,966
of different object types that


831
00:26:52,966 --> 00:26:54,846
can be added to a slide and


832
00:26:54,846 --> 00:26:56,106
there's a whole set of actions


833
00:26:56,106 --> 00:26:57,756
for aligning and distributing,


834
00:26:58,006 --> 00:26:59,416
locking them, grouping them,


835
00:26:59,416 --> 00:27:00,936
moving them forward or backward.


836
00:27:01,666 --> 00:27:02,986
And because all of those actions


837
00:27:02,986 --> 00:27:05,246
affect all of those objects in a


838
00:27:05,246 --> 00:27:07,046
similar way, it makes sense to


839
00:27:07,046 --> 00:27:09,026
put them into a single menu


840
00:27:09,326 --> 00:27:10,366
based on the workflow they


841
00:27:10,366 --> 00:27:10,726
serve.


842
00:27:12,176 --> 00:27:13,336
And once you've determined what


843
00:27:13,376 --> 00:27:15,106
custom menus to include in the


844
00:27:15,106 --> 00:27:16,996
menu bar, you'll need to create


845
00:27:16,996 --> 00:27:18,046
the menus themselves.


846
00:27:18,956 --> 00:27:20,386
All of the tips that I just


847
00:27:20,386 --> 00:27:21,666
shared with you for contextual


848
00:27:21,666 --> 00:27:24,096
menus apply here with one


849
00:27:24,096 --> 00:27:25,156
important addition.


850
00:27:25,856 --> 00:27:27,646
The structure of menu bar menus


851
00:27:27,646 --> 00:27:28,436
is stable.


852
00:27:28,986 --> 00:27:30,956
Commands aren't added or removed


853
00:27:30,956 --> 00:27:32,716
after an app has been launched.


854
00:27:33,426 --> 00:27:35,276
Like toolbar actions, they


855
00:27:35,276 --> 00:27:36,816
disable when they can't be


856
00:27:36,816 --> 00:27:37,456
performed.


857
00:27:38,556 --> 00:27:40,236
A stable menu system helps


858
00:27:40,236 --> 00:27:42,106
people to learn where commands


859
00:27:42,186 --> 00:27:44,056
are, even if those commands


860
00:27:44,176 --> 00:27:45,656
aren't currently available.


861
00:27:46,516 --> 00:27:48,136
And, when someone sees a


862
00:27:48,136 --> 00:27:49,766
disabled command, they learn


863
00:27:49,766 --> 00:27:51,296
that the action that it performs


864
00:27:52,126 --> 00:27:54,116
is not currently possible, which


865
00:27:54,116 --> 00:27:55,326
is actually really useful


866
00:27:55,326 --> 00:27:55,826
information.


867
00:27:56,666 --> 00:27:59,156
And, one more thing about menu


868
00:27:59,156 --> 00:27:59,566
bars.


869
00:28:00,226 --> 00:28:02,206
Assign keyboard shortcuts for


870
00:28:02,206 --> 00:28:03,706
the most common commands.


871
00:28:04,226 --> 00:28:06,016
Heavy keyboard users will thank


872
00:28:06,016 --> 00:28:08,816
you on both Mac and iPad.


873
00:28:09,386 --> 00:28:11,036
Your keyboard shortcuts will


874
00:28:11,036 --> 00:28:11,946
work on both.


875
00:28:12,956 --> 00:28:14,446
When picking keyboard shortcuts,


876
00:28:14,836 --> 00:28:16,466
always follow precedent.


877
00:28:17,086 --> 00:28:18,436
You could find a long list of


878
00:28:18,436 --> 00:28:19,966
standard keyboard shortcuts in


879
00:28:19,966 --> 00:28:21,836
the macOS HIG on the keyboard


880
00:28:21,836 --> 00:28:22,286
page.


881
00:28:23,336 --> 00:28:25,116
Look, we all appreciate it when


882
00:28:25,116 --> 00:28:26,106
we come to an app that we've


883
00:28:26,106 --> 00:28:28,086
never used, use a keyboard


884
00:28:28,086 --> 00:28:29,566
shortcut that we already know


885
00:28:29,826 --> 00:28:32,316
and get the intended result that


886
00:28:32,316 --> 00:28:33,176
we expected.


887
00:28:33,736 --> 00:28:34,976
Am I right or am I right?


888
00:28:35,516 --> 00:28:39,326
[ Applause ]


889
00:28:39,826 --> 00:28:40,466
I think I'm right.


890
00:28:42,336 --> 00:28:44,346
So you have to do the work to


891
00:28:44,436 --> 00:28:45,606
make that happen.


892
00:28:45,606 --> 00:28:47,296
So, that was a lot about menu


893
00:28:47,296 --> 00:28:48,826
bars but I wanted to focus on


894
00:28:48,826 --> 00:28:49,976
them because they're core to the


895
00:28:49,976 --> 00:28:52,346
macOS experience and require


896
00:28:52,446 --> 00:28:53,526
real consideration.


897
00:28:54,496 --> 00:28:58,336
OK. Now, getting your iPad app


898
00:28:58,426 --> 00:29:00,096
running on a Mac should be


899
00:29:00,136 --> 00:29:01,096
pretty easy.


900
00:29:01,836 --> 00:29:03,626
But that's just the first step.


901
00:29:04,376 --> 00:29:06,366
Mac offers you an opportunity to


902
00:29:06,366 --> 00:29:09,136
increase the power, utility and


903
00:29:09,186 --> 00:29:11,226
efficiency of your app but


904
00:29:11,286 --> 00:29:12,766
realizing that opportunity


905
00:29:13,036 --> 00:29:14,536
involves some thoughtful design


906
00:29:14,536 --> 00:29:16,406
choices and a bit of effort.


907
00:29:17,456 --> 00:29:19,156
Now, I know we've covered a lot


908
00:29:19,156 --> 00:29:19,836
of ground today.


909
00:29:20,386 --> 00:29:21,376
For those of you who weren't


910
00:29:21,376 --> 00:29:23,076
taking notes, shame on you.


911
00:29:23,816 --> 00:29:26,016
But, don't worry, I'm just


912
00:29:26,016 --> 00:29:28,006
kidding, don't feel bad, we have


913
00:29:28,006 --> 00:29:29,786
a dedicated page for you in the


914
00:29:29,786 --> 00:29:31,186
Human Interface Guidelines.


915
00:29:31,676 --> 00:29:33,746
It includes lots of useful tips


916
00:29:33,746 --> 00:29:35,056
and information about everything


917
00:29:35,056 --> 00:29:36,926
I covered today and much more.


918
00:29:37,816 --> 00:29:38,886
And I highly recommend


919
00:29:38,886 --> 00:29:40,076
downloading the macOS Apple


920
00:29:40,566 --> 00:29:41,686
Design Resources.


921
00:29:42,156 --> 00:29:43,506
They're available for Sketch,


922
00:29:43,766 --> 00:29:45,806
Adobe Photoshop and Adobe XD.


923
00:29:45,936 --> 00:29:48,426
You can find all of that at


924
00:29:48,426 --> 00:29:51,116
developer.apple.com/design.


925
00:29:52,296 --> 00:29:54,036
And you should also check out


926
00:29:54,136 --> 00:29:55,956
these great sessions about


927
00:29:55,956 --> 00:29:57,806
taking your iPad app to the next


928
00:29:57,806 --> 00:30:01,046
level and font management, all


929
00:30:01,136 --> 00:30:02,386
sorts of good stuff about font


930
00:30:02,466 --> 00:30:03,046
management.


931
00:30:04,086 --> 00:30:05,686
Thank you so much for your time.


932
00:30:05,686 --> 00:30:06,966
I'm really looking forward to


933
00:30:06,966 --> 00:30:07,826
what you create.


934
00:30:08,508 --> 00:30:10,508
[ Applause ]

