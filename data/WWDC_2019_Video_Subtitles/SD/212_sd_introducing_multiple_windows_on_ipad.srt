1
00:00:00,506 --> 00:00:05,516
[ Music ]


2
00:00:06,516 --> 00:00:13,356
[ Applause and Cheering ]


3
00:00:13,856 --> 00:00:14,116
>> Thank you.


4
00:00:14,906 --> 00:00:15,426
Good afternoon.


5
00:00:15,426 --> 00:00:17,516
My name is Ken Ferry from iOS


6
00:00:17,516 --> 00:00:19,556
System UI, or Springboard if you


7
00:00:19,556 --> 00:00:19,966
know that name.


8
00:00:20,536 --> 00:00:23,056
And today, myself, and Steve


9
00:00:23,056 --> 00:00:24,866
Holt, and James Savage are going


10
00:00:24,866 --> 00:00:26,076
to talk to you about multiple


11
00:00:26,076 --> 00:00:27,196
windows on iPad.


12
00:00:28,626 --> 00:00:29,536
So what are we talking about?


13
00:00:30,106 --> 00:00:32,665
Well, on iOS 12 and before, if


14
00:00:32,665 --> 00:00:33,936
you swipe up in the switcher,


15
00:00:34,066 --> 00:00:35,916
you got this nice little grid,


16
00:00:35,916 --> 00:00:37,406
you can tap on things, gets you


17
00:00:37,406 --> 00:00:38,496
to applications, it's great.


18
00:00:39,556 --> 00:00:42,216
On iOS 13, it looks pretty much


19
00:00:42,216 --> 00:00:43,516
the same, but those are no


20
00:00:43,516 --> 00:00:44,696
longer applications.


21
00:00:44,996 --> 00:00:47,836
Those are Windows, or as you'll


22
00:00:47,836 --> 00:00:48,926
see it's called the in API


23
00:00:48,926 --> 00:00:49,376
scenes.


24
00:00:50,586 --> 00:00:51,896
So that's what we're going to


25
00:00:51,896 --> 00:00:52,516
talk about today.


26
00:00:53,006 --> 00:00:53,766
We're going to talk about what


27
00:00:53,766 --> 00:00:54,916
does this mean for your app.


28
00:00:55,296 --> 00:00:56,486
And it's an introductory talk so


29
00:00:56,486 --> 00:00:57,586
we're going to do it really from


30
00:00:57,586 --> 00:00:58,236
top to bottom.


31
00:00:58,376 --> 00:00:59,716
We're going to start out with


32
00:00:59,716 --> 00:01:00,646
design issues.


33
00:01:01,226 --> 00:01:02,966
So, just what are you going to


34
00:01:02,966 --> 00:01:04,196
want to be thinking about doing


35
00:01:04,196 --> 00:01:05,756
at all in your app for multiple


36
00:01:05,756 --> 00:01:06,176
windows?


37
00:01:07,006 --> 00:01:08,426
We'll go on from there to the


38
00:01:08,426 --> 00:01:10,166
how of multiple windows,


39
00:01:10,516 --> 00:01:11,996
starting out with application


40
00:01:11,996 --> 00:01:13,516
lifecycle, which is the biggest


41
00:01:13,516 --> 00:01:15,286
change to the application


42
00:01:15,286 --> 00:01:15,946
programming model.


43
00:01:16,096 --> 00:01:16,856
That's like foreground,


44
00:01:16,856 --> 00:01:17,606
background and active.


45
00:01:18,626 --> 00:01:19,606
Go on from there to drag and


46
00:01:19,606 --> 00:01:21,156
drop, which is how you mostly


47
00:01:21,156 --> 00:01:21,886
make windows.


48
00:01:22,396 --> 00:01:24,516
And then, James will walk you


49
00:01:24,516 --> 00:01:27,406
through next steps of further


50
00:01:27,406 --> 00:01:29,156
adoption that you might want or


51
00:01:29,156 --> 00:01:30,936
need to do in your app in order


52
00:01:30,936 --> 00:01:32,686
to be a good multiple window


53
00:01:32,816 --> 00:01:33,036
app.


54
00:01:33,276 --> 00:01:35,646
So let's get started.


55
00:01:35,646 --> 00:01:37,296
We're going to talk about these


56
00:01:37,296 --> 00:01:38,416
design issues.


57
00:01:38,856 --> 00:01:41,086
And, first, we just want to talk


58
00:01:41,086 --> 00:01:43,256
about what these windows or


59
00:01:43,386 --> 00:01:44,696
again scenes are.


60
00:01:45,946 --> 00:01:46,926
It is -- there's really kind of


61
00:01:46,926 --> 00:01:48,046
two questions we want to try to


62
00:01:48,046 --> 00:01:50,446
answer here, is first, does it


63
00:01:50,446 --> 00:01:52,086
make sense for my application to


64
00:01:52,086 --> 00:01:54,046
support windows at all, multiple


65
00:01:54,046 --> 00:01:54,486
windows?


66
00:01:54,976 --> 00:01:57,906
And then, if it does, what would


67
00:01:57,906 --> 00:01:58,806
those windows be?


68
00:01:59,036 --> 00:02:01,476
Like how do they act, what are


69
00:02:01,476 --> 00:02:02,516
they, you know, how does the


70
00:02:02,516 --> 00:02:03,186
user think of them?


71
00:02:04,276 --> 00:02:05,746
We'll answer those questions by


72
00:02:05,746 --> 00:02:07,496
looking at examples from Apple's


73
00:02:07,496 --> 00:02:09,985
own apps and generalizing to how


74
00:02:09,985 --> 00:02:10,886
it might apply to yours.


75
00:02:10,886 --> 00:02:11,956
So that's what you're going to


76
00:02:11,956 --> 00:02:12,516
be thinking about.


77
00:02:13,656 --> 00:02:16,216
So we'll start out with Safari.


78
00:02:16,216 --> 00:02:18,116
Safari is a poster child for


79
00:02:18,116 --> 00:02:20,096
this kind of multitasking, that


80
00:02:20,096 --> 00:02:21,546
it was kind of already there.


81
00:02:21,546 --> 00:02:23,676
This is actually a screenshot


82
00:02:23,676 --> 00:02:26,216
from iOS 12 where Safari already


83
00:02:26,216 --> 00:02:27,806
supported the split-screen view.


84
00:02:28,716 --> 00:02:30,306
In iOS 13, it looks like this,


85
00:02:30,306 --> 00:02:32,496
or iPadOS, it looks like this,


86
00:02:33,136 --> 00:02:34,486
which is not really that


87
00:02:34,556 --> 00:02:34,966
different.


88
00:02:34,966 --> 00:02:36,666
That's because it was just so


89
00:02:36,666 --> 00:02:37,826
important that we did it in


90
00:02:37,826 --> 00:02:39,476
Safari even before we could --


91
00:02:39,556 --> 00:02:40,876
we brought it to a whole rest of


92
00:02:40,876 --> 00:02:41,676
the operating system.


93
00:02:42,176 --> 00:02:46,146
For generalization purposes,


94
00:02:46,586 --> 00:02:48,006
though, what is it that we want


95
00:02:48,006 --> 00:02:50,786
to be thinking about here?


96
00:02:50,986 --> 00:02:52,276
The first thing to be realizing


97
00:02:52,276 --> 00:02:53,736
is that every -- there's only


98
00:02:53,736 --> 00:02:55,916
one kind of window in Safari.


99
00:02:56,036 --> 00:02:58,046
They're all the same as each


100
00:02:58,046 --> 00:02:58,306
other.


101
00:02:58,306 --> 00:02:59,266
They're just kind of clones of


102
00:02:59,266 --> 00:02:59,906
the interface.


103
00:03:00,086 --> 00:03:01,576
And each one can do everything


104
00:03:01,576 --> 00:03:02,376
in the application.


105
00:03:03,116 --> 00:03:05,266
That's important because for --


106
00:03:05,266 --> 00:03:07,556
on the iPad, the user should be


107
00:03:07,556 --> 00:03:09,406
able to do everything from just


108
00:03:09,406 --> 00:03:10,886
one window if they want to.


109
00:03:11,516 --> 00:03:12,316
They should be able to create


110
00:03:12,316 --> 00:03:14,276
more windows f they think that's


111
00:03:14,276 --> 00:03:15,006
useful.


112
00:03:15,486 --> 00:03:17,426
But if your application requires


113
00:03:17,426 --> 00:03:18,626
multiple windows to you -- to


114
00:03:18,626 --> 00:03:20,486
work, then something has gone


115
00:03:20,486 --> 00:03:20,806
wrong.


116
00:03:21,506 --> 00:03:22,816
So, it's not important that it


117
00:03:22,816 --> 00:03:24,286
always be quite like this where


118
00:03:24,286 --> 00:03:25,496
they're all just clones of each


119
00:03:25,496 --> 00:03:27,336
other, but it is important that


120
00:03:27,336 --> 00:03:29,036
the first window that the user


121
00:03:29,036 --> 00:03:30,596
create be able to do everything.


122
00:03:31,136 --> 00:03:34,336
Now, that said, in this case,


123
00:03:35,016 --> 00:03:36,026
they are all the same.


124
00:03:36,026 --> 00:03:36,976
And you'll actually see that in


125
00:03:36,976 --> 00:03:38,046
most of Apple's apps, that's


126
00:03:38,046 --> 00:03:38,676
what we've done.


127
00:03:39,066 --> 00:03:40,906
So, and that's -- so that's not


128
00:03:40,906 --> 00:03:41,486
a bad thing.


129
00:03:41,486 --> 00:03:42,546
That's the easiest thing for you


130
00:03:42,546 --> 00:03:43,826
to do and it very well might be


131
00:03:43,826 --> 00:03:44,316
the right thing.


132
00:03:44,476 --> 00:03:45,546
We'll look at the examples.


133
00:03:45,936 --> 00:03:47,456
Though before I go on, I just


134
00:03:47,456 --> 00:03:48,616
want to note that like because


135
00:03:48,616 --> 00:03:51,126
we did adopt, you know, the


136
00:03:51,126 --> 00:03:52,346
system-wide support for this, it


137
00:03:52,346 --> 00:03:53,416
did get better in Safari.


138
00:03:53,786 --> 00:03:55,086
Now, you can like tear off one


139
00:03:55,086 --> 00:03:56,806
of these things and throw it off


140
00:03:56,806 --> 00:03:58,306
to the side and concentrate on


141
00:03:58,306 --> 00:03:59,016
something else for a little


142
00:03:59,016 --> 00:03:59,406
while.


143
00:03:59,556 --> 00:04:00,466
You know, it's fancy.


144
00:04:01,756 --> 00:04:07,696
Going on, document-based apps.


145
00:04:09,406 --> 00:04:11,036
Here, we're looking at pages.


146
00:04:11,376 --> 00:04:13,546
And in any document-based app


147
00:04:13,546 --> 00:04:15,076
really, the user would have the


148
00:04:15,076 --> 00:04:17,486
expectation that they're able to


149
00:04:17,696 --> 00:04:19,466
view documents in different


150
00:04:19,466 --> 00:04:20,505
windows at the same time.


151
00:04:20,716 --> 00:04:21,856
So you're definitely going to


152
00:04:21,856 --> 00:04:23,336
want to support that.


153
00:04:23,336 --> 00:04:24,266
But there's something you might


154
00:04:24,446 --> 00:04:25,576
or might not be a little bit


155
00:04:25,576 --> 00:04:26,376
surprised by here.


156
00:04:26,376 --> 00:04:27,516
If you look at the top left,


157
00:04:28,206 --> 00:04:29,586
there's a button there that says


158
00:04:29,586 --> 00:04:30,676
documents on both of those


159
00:04:30,676 --> 00:04:31,136
windows.


160
00:04:31,966 --> 00:04:32,906
Each of these windows is


161
00:04:32,906 --> 00:04:34,086
actually a full browser.


162
00:04:34,326 --> 00:04:35,506
You can go back from the


163
00:04:35,506 --> 00:04:36,506
document you're looking at and


164
00:04:36,506 --> 00:04:37,316
look at a different one.


165
00:04:37,696 --> 00:04:38,836
So it's actually the same case


166
00:04:38,836 --> 00:04:39,456
as Safari.


167
00:04:39,796 --> 00:04:41,146
There's only one kind of window


168
00:04:41,146 --> 00:04:41,706
and pages.


169
00:04:42,626 --> 00:04:45,886
That's not necessarily going to


170
00:04:45,886 --> 00:04:47,216
be the case in every document,


171
00:04:47,216 --> 00:04:48,276
not even necessarily in every


172
00:04:48,276 --> 00:04:49,446
document-based app I think.


173
00:04:49,836 --> 00:04:52,496
But in here, it does make sense.


174
00:04:52,496 --> 00:04:53,616
And we'll look at cases where it


175
00:04:53,616 --> 00:04:57,276
doesn't going on.


176
00:04:57,486 --> 00:05:00,706
Maps also is -- there's only one


177
00:05:00,706 --> 00:05:01,326
kind of window.


178
00:05:01,606 --> 00:05:02,566
But the reason I still want to


179
00:05:02,606 --> 00:05:03,726
-- we still want to talk about


180
00:05:03,726 --> 00:05:05,186
it is because it illustrates


181
00:05:05,346 --> 00:05:07,176
something to that other point of


182
00:05:07,176 --> 00:05:08,726
should my application even


183
00:05:08,726 --> 00:05:09,816
support multiple windows.


184
00:05:10,166 --> 00:05:12,686
That's because at first, this


185
00:05:12,686 --> 00:05:14,346
didn't necessarily seem like


186
00:05:14,396 --> 00:05:15,906
that attractive of a case


187
00:05:16,166 --> 00:05:17,246
because it seems like you just,


188
00:05:17,246 --> 00:05:18,646
you know, you open maps, you go


189
00:05:18,646 --> 00:05:19,726
somewhere and then you close it.


190
00:05:20,086 --> 00:05:21,076
And that's how it works.


191
00:05:21,076 --> 00:05:23,636
That's actually not the case.


192
00:05:23,716 --> 00:05:26,276
If you're planning an evening


193
00:05:26,276 --> 00:05:27,556
here, you might be going to


194
00:05:27,556 --> 00:05:28,676
dinner and then after dinner,


195
00:05:28,676 --> 00:05:29,586
you're going to a show.


196
00:05:30,216 --> 00:05:32,516
It's really useful to be able to


197
00:05:32,516 --> 00:05:34,476
do each of those two legs in a


198
00:05:34,476 --> 00:05:35,256
different window.


199
00:05:35,586 --> 00:05:36,966
So you can think about them or


200
00:05:36,966 --> 00:05:38,976
change them without losing all


201
00:05:38,976 --> 00:05:40,096
your state in between.


202
00:05:41,506 --> 00:05:43,806
And that seems specific to maps,


203
00:05:43,846 --> 00:05:45,386
but the reason to bring that up


204
00:05:45,386 --> 00:05:47,126
is that we've pretty much always


205
00:05:47,126 --> 00:05:47,656
found that.


206
00:05:48,026 --> 00:05:49,916
So, for all the cases where we


207
00:05:50,166 --> 00:05:51,826
weren't sure if multiple windows


208
00:05:51,826 --> 00:05:53,546
would be useful or not, we


209
00:05:53,546 --> 00:05:54,586
pretty much came around to that


210
00:05:54,586 --> 00:05:54,986
it is.


211
00:05:55,276 --> 00:05:56,916
So, I'll go through more


212
00:05:56,916 --> 00:05:59,216
examples of cases where it is,


213
00:05:59,216 --> 00:06:00,576
but be thinking about that when


214
00:06:00,576 --> 00:06:01,686
you're when you're doing yours.


215
00:06:03,076 --> 00:06:06,096
Oh, and, you know, because it is


216
00:06:06,536 --> 00:06:07,826
using the system multi-window,


217
00:06:08,246 --> 00:06:09,596
that does mean that once you


218
00:06:09,596 --> 00:06:10,666
want to focus on one of them,


219
00:06:10,666 --> 00:06:11,596
say where I'm going to dinner,


220
00:06:11,596 --> 00:06:12,696
you know, I can rearrange my


221
00:06:12,696 --> 00:06:15,196
spaces and pull out notes and do


222
00:06:15,196 --> 00:06:16,426
things that you otherwise


223
00:06:16,426 --> 00:06:18,496
wouldn't be able to do if it was


224
00:06:18,496 --> 00:06:19,756
just inside of one application.


225
00:06:21,286 --> 00:06:23,536
So, Mail is the first case where


226
00:06:23,536 --> 00:06:24,586
there are different kinds of


227
00:06:24,586 --> 00:06:26,546
windows that we've looked at.


228
00:06:27,266 --> 00:06:28,276
Craig showed this in the


229
00:06:28,276 --> 00:06:29,716
keynote, but when you reply to a


230
00:06:29,716 --> 00:06:31,376
message, that brings up this


231
00:06:31,376 --> 00:06:32,456
modal interface same as it


232
00:06:32,456 --> 00:06:34,276
always has, but you can tear it


233
00:06:34,276 --> 00:06:34,596
off.


234
00:06:35,426 --> 00:06:36,966
And then you might even want to


235
00:06:36,966 --> 00:06:39,386
use your slide over stack as


236
00:06:39,386 --> 00:06:41,396
almost like a to-do list of


237
00:06:41,526 --> 00:06:44,336
actions that you are pended and


238
00:06:44,336 --> 00:06:45,116
still need to perform.


239
00:06:46,256 --> 00:06:48,926
So in this case, if you look at


240
00:06:48,926 --> 00:06:49,816
the window again, look at the


241
00:06:49,816 --> 00:06:50,126
top.


242
00:06:50,216 --> 00:06:51,546
There's a Send button, that's


243
00:06:51,546 --> 00:06:52,746
the blue arrow, and there's a


244
00:06:52,746 --> 00:06:53,506
Cancel button.


245
00:06:53,506 --> 00:06:55,386
But there's no way to get back


246
00:06:55,386 --> 00:06:57,816
from here to see the rest of


247
00:06:58,006 --> 00:06:59,306
your mailboxes or anything like


248
00:06:59,306 --> 00:06:59,546
that.


249
00:06:59,806 --> 00:07:01,126
These windows are dedicated.


250
00:07:01,656 --> 00:07:04,116
And then, when you and -- so


251
00:07:04,776 --> 00:07:07,276
when you hit one of those


252
00:07:07,276 --> 00:07:09,196
buttons, it will close the


253
00:07:09,196 --> 00:07:09,516
window.


254
00:07:09,786 --> 00:07:12,006
So I think Craig showed sending


255
00:07:12,006 --> 00:07:12,956
in the keynote, so I'm just


256
00:07:12,956 --> 00:07:13,886
going to show dismissing.


257
00:07:14,266 --> 00:07:15,986
If you first click to get out of


258
00:07:15,986 --> 00:07:17,836
the slide overview to just view


259
00:07:17,836 --> 00:07:18,926
one of them and then click


260
00:07:18,926 --> 00:07:20,006
Cancel, it looks like that.


261
00:07:20,296 --> 00:07:22,206
And all those animations are


262
00:07:22,206 --> 00:07:23,896
available in your app too.


263
00:07:24,066 --> 00:07:25,826
They're talked about in some of


264
00:07:25,826 --> 00:07:27,266
the later talks.


265
00:07:29,996 --> 00:07:32,756
Messages also has different


266
00:07:32,756 --> 00:07:34,346
kinds of windows, but it's not


267
00:07:34,346 --> 00:07:35,716
just like a to-do list.


268
00:07:35,716 --> 00:07:37,436
It's not just like a transaction


269
00:07:37,436 --> 00:07:38,776
or an action like in the other


270
00:07:38,776 --> 00:07:39,116
case.


271
00:07:39,686 --> 00:07:41,416
Here, when you pull off a thread


272
00:07:41,636 --> 00:07:43,296
into its own window, that's just


273
00:07:43,296 --> 00:07:44,866
a dedicated window that pertain


274
00:07:44,866 --> 00:07:46,246
-- that is only for that one


275
00:07:46,246 --> 00:07:46,566
thread.


276
00:07:46,566 --> 00:07:47,806
And you can see it as a Done


277
00:07:47,806 --> 00:07:48,766
button at the top from when


278
00:07:48,766 --> 00:07:49,886
you're finished with it.


279
00:07:50,856 --> 00:07:52,836
That's more of an organizational


280
00:07:52,836 --> 00:07:55,226
tool, but it's a very handy


281
00:07:55,226 --> 00:07:57,856
organizational tool.


282
00:07:57,856 --> 00:07:59,506
And then going back for a minute


283
00:07:59,506 --> 00:08:00,476
to that question of should my


284
00:08:00,476 --> 00:08:01,566
applications support multiple


285
00:08:01,566 --> 00:08:04,956
windows, here in Messages, using


286
00:08:04,956 --> 00:08:06,366
this, I found it incredibly


287
00:08:06,366 --> 00:08:08,876
useful to be able to look at one


288
00:08:08,876 --> 00:08:10,456
conversation and scroll up and


289
00:08:10,456 --> 00:08:11,506
find some information and


290
00:08:11,506 --> 00:08:13,426
reference it while I talk to


291
00:08:13,426 --> 00:08:14,476
someone in the other window.


292
00:08:14,646 --> 00:08:15,806
And I can tell them, and if they


293
00:08:15,806 --> 00:08:16,966
have more questions, I don't


294
00:08:16,966 --> 00:08:18,626
have to somehow go back and


295
00:08:18,626 --> 00:08:18,976
forth.


296
00:08:18,976 --> 00:08:20,006
I've still got it there.


297
00:08:20,406 --> 00:08:22,406
So, in general, I think the


298
00:08:22,406 --> 00:08:24,286
generalizable principle there is


299
00:08:24,286 --> 00:08:25,226
being able to refer to


300
00:08:25,226 --> 00:08:26,966
something, being able to see one


301
00:08:26,966 --> 00:08:27,976
thing while you're acting in a


302
00:08:27,976 --> 00:08:29,106
different window.


303
00:08:31,356 --> 00:08:33,716
The last example of an Apple app


304
00:08:33,716 --> 00:08:35,316
I want to talk about today is


305
00:08:35,426 --> 00:08:35,905
Calendar.


306
00:08:37,155 --> 00:08:38,446
What's interesting here is that


307
00:08:38,446 --> 00:08:40,176
Calendar supported drag and drop


308
00:08:40,176 --> 00:08:41,696
for events already.


309
00:08:41,696 --> 00:08:44,996
But by adopting multi-window,


310
00:08:44,996 --> 00:08:46,876
now, if you view say two


311
00:08:46,876 --> 00:08:48,486
different weeks at the same time


312
00:08:48,486 --> 00:08:50,116
in Calendar, you can drag and


313
00:08:50,116 --> 00:08:51,846
drop from one of those weeks to


314
00:08:51,846 --> 00:08:52,276
the other.


315
00:08:53,066 --> 00:08:55,486
And that didn't require any


316
00:08:55,486 --> 00:08:56,686
additional changes in Calendar


317
00:08:56,686 --> 00:08:57,356
to support that.


318
00:08:57,596 --> 00:08:58,836
That's just the drag and drop


319
00:08:58,836 --> 00:08:59,456
they already had.


320
00:09:00,106 --> 00:09:01,586
So if your app supports drag and


321
00:09:01,586 --> 00:09:04,136
drop by supporting multiple


322
00:09:04,136 --> 00:09:05,596
windows, also you can kind of


323
00:09:05,596 --> 00:09:07,526
magnify the power of both of


324
00:09:07,526 --> 00:09:08,736
those features working together.


325
00:09:09,206 --> 00:09:12,086
So, yeah. And so like I said,


326
00:09:12,206 --> 00:09:13,966
pretty much what we found when


327
00:09:13,966 --> 00:09:16,046
we looked at this is that any


328
00:09:16,046 --> 00:09:17,846
app of sort of reasonable


329
00:09:18,396 --> 00:09:20,476
robustness pretty much benefits


330
00:09:20,476 --> 00:09:20,756
from it.


331
00:09:20,756 --> 00:09:22,536
So, you know, I can't completely


332
00:09:22,536 --> 00:09:23,446
answer the question for your


333
00:09:23,446 --> 00:09:23,626
apps.


334
00:09:23,626 --> 00:09:24,406
You'll have to think about it.


335
00:09:24,406 --> 00:09:25,196
But hopefully some of these


336
00:09:25,196 --> 00:09:28,486
examples will help you think of


337
00:09:28,486 --> 00:09:29,516
those cases where it would be


338
00:09:29,516 --> 00:09:30,586
useful for your users.


339
00:09:31,036 --> 00:09:34,126
Last thing I wanted to note here


340
00:09:34,126 --> 00:09:35,126
before we go on to the next


341
00:09:35,126 --> 00:09:36,966
topic is, you know, we talked


342
00:09:36,966 --> 00:09:38,626
about iPad apps on the Mac this


343
00:09:38,626 --> 00:09:38,836
year.


344
00:09:39,166 --> 00:09:41,856
And Mac apps have windows and


345
00:09:42,026 --> 00:09:43,216
without all this API, you


346
00:09:43,216 --> 00:09:44,456
couldn't make new ones, so it's


347
00:09:44,456 --> 00:09:45,336
going to be kind of a weird Mac


348
00:09:45,336 --> 00:09:45,476
app.


349
00:09:45,526 --> 00:09:46,116
But now you can.


350
00:09:46,566 --> 00:09:46,976
So do that.


351
00:09:50,186 --> 00:09:52,286
Alright. So that's everything


352
00:09:52,286 --> 00:09:54,036
about what are these windows at


353
00:09:54,036 --> 00:09:54,326
all.


354
00:09:54,726 --> 00:09:56,376
But now, still from a design


355
00:09:56,376 --> 00:09:58,236
perspective, what interactions


356
00:09:58,236 --> 00:10:00,026
do you want to enable in your


357
00:10:00,026 --> 00:10:01,546
app so that the user can create


358
00:10:01,546 --> 00:10:02,176
new windows?


359
00:10:04,176 --> 00:10:05,656
We're going to explore that by


360
00:10:05,656 --> 00:10:07,156
first showing what the system


361
00:10:07,156 --> 00:10:08,686
can do for you for free, and


362
00:10:08,686 --> 00:10:10,786
then extrapolating to what users


363
00:10:10,786 --> 00:10:12,256
would expect to be able to do


364
00:10:12,256 --> 00:10:13,556
based on what is already there.


365
00:10:14,346 --> 00:10:16,386
So for starters, Craig showed


366
00:10:16,386 --> 00:10:17,446
App Expose already.


367
00:10:17,446 --> 00:10:19,746
And in App Expose, there's


368
00:10:19,906 --> 00:10:21,976
always this little button in the


369
00:10:21,976 --> 00:10:23,816
top right, and that that little


370
00:10:23,816 --> 00:10:24,876
button is make new window.


371
00:10:25,546 --> 00:10:26,336
So that's something that's


372
00:10:26,336 --> 00:10:27,236
completely for free.


373
00:10:27,636 --> 00:10:28,256
If your app supports


374
00:10:28,256 --> 00:10:30,216
multi-window, that will make new


375
00:10:30,216 --> 00:10:30,636
windows.


376
00:10:31,096 --> 00:10:33,766
There's only one other thing


377
00:10:33,766 --> 00:10:35,966
that we can really do for all


378
00:10:35,966 --> 00:10:37,666
applications, but this is the


379
00:10:37,666 --> 00:10:38,836
one that kind of becomes the


380
00:10:38,836 --> 00:10:39,816
foundation for everything.


381
00:10:40,646 --> 00:10:41,766
If you're already looking at


382
00:10:41,766 --> 00:10:43,756
your application and you grab


383
00:10:43,756 --> 00:10:45,476
the application icon and drag it


384
00:10:45,476 --> 00:10:48,226
over to the edge, that seems


385
00:10:48,226 --> 00:10:49,466
like it's really explicitly


386
00:10:49,466 --> 00:10:50,886
saying, I want to make another


387
00:10:50,886 --> 00:10:51,816
window right here.


388
00:10:52,336 --> 00:10:53,576
Just what else could that mean?


389
00:10:54,516 --> 00:10:56,146
And we have all the contexts


390
00:10:56,146 --> 00:10:57,096
that we need to make that work,


391
00:10:57,096 --> 00:10:58,426
so it does.


392
00:10:58,966 --> 00:11:02,106
But given that, now if the user


393
00:11:02,106 --> 00:11:03,726
picks up something else, say a


394
00:11:03,726 --> 00:11:06,376
tab in Safari and they do that


395
00:11:06,376 --> 00:11:07,926
drag, they're also going to


396
00:11:07,926 --> 00:11:10,186
expect that to work, and that


397
00:11:10,186 --> 00:11:11,826
the system can't just do it for


398
00:11:11,826 --> 00:11:11,996
you.


399
00:11:12,546 --> 00:11:15,506
It's not a lot of work to adopt


400
00:11:15,506 --> 00:11:16,646
the API to do that, but you do


401
00:11:16,646 --> 00:11:18,046
have to actually adopt something


402
00:11:18,046 --> 00:11:18,726
to make that work.


403
00:11:19,216 --> 00:11:20,316
And that really extrapolate --


404
00:11:20,316 --> 00:11:22,126
that extends to all drag and


405
00:11:22,126 --> 00:11:22,376
drop.


406
00:11:22,866 --> 00:11:24,526
Pretty much if the user can pick


407
00:11:24,526 --> 00:11:26,446
something up and it makes any


408
00:11:26,446 --> 00:11:28,546
kind of sense for that to result


409
00:11:28,546 --> 00:11:30,736
in a new window, they're going


410
00:11:30,736 --> 00:11:31,736
to expect that it can.


411
00:11:31,956 --> 00:11:33,386
And you should enable that.


412
00:11:34,016 --> 00:11:35,936
A really common case for that is


413
00:11:35,936 --> 00:11:37,676
any kind of master detail view.


414
00:11:38,346 --> 00:11:40,256
So here in message -- in Mail,


415
00:11:40,806 --> 00:11:43,006
you know, there's this left-hand


416
00:11:43,006 --> 00:11:44,976
table view that represents --


417
00:11:44,976 --> 00:11:46,456
each cell represents a message.


418
00:11:46,546 --> 00:11:47,766
And if you tap on the cell, then


419
00:11:47,766 --> 00:11:48,826
you see the whole thing, right?


420
00:11:49,366 --> 00:11:50,476
So the user is going to expect


421
00:11:50,476 --> 00:11:51,476
that if you drag out of the


422
00:11:51,476 --> 00:11:53,566
table view that that's going to


423
00:11:53,566 --> 00:11:55,376
pull out a window for a message.


424
00:11:57,696 --> 00:12:01,416
OK. So mostly drag and drop.


425
00:12:01,536 --> 00:12:02,996
You can also create windows


426
00:12:02,996 --> 00:12:04,106
through explicit action.


427
00:12:04,806 --> 00:12:07,026
So in an application like Safari


428
00:12:07,026 --> 00:12:08,016
or really anything that has


429
00:12:08,016 --> 00:12:09,766
links at all, you might want to


430
00:12:09,766 --> 00:12:11,256
support that if you press and


431
00:12:11,256 --> 00:12:13,416
hold on a link that that might


432
00:12:13,416 --> 00:12:14,976
pull up a popover and the


433
00:12:14,976 --> 00:12:16,956
popover might have a button that


434
00:12:16,956 --> 00:12:18,086
says Open in New Window.


435
00:12:18,766 --> 00:12:20,016
And that is the case in Safari.


436
00:12:20,106 --> 00:12:20,616
You can do that.


437
00:12:20,946 --> 00:12:22,316
And that's how it reads, it says


438
00:12:22,316 --> 00:12:23,096
Open in New Window.


439
00:12:24,196 --> 00:12:26,116
So that pretty much implies that


440
00:12:26,116 --> 00:12:27,536
there must be -- we are, there


441
00:12:27,536 --> 00:12:29,576
is an API in UIKit that just


442
00:12:29,576 --> 00:12:30,886
whenever you call it, it will


443
00:12:30,886 --> 00:12:31,556
open a new window.


444
00:12:32,786 --> 00:12:34,346
So, you could do a lot with


445
00:12:34,346 --> 00:12:34,736
that, you know.


446
00:12:34,736 --> 00:12:36,196
You could set up like a voice


447
00:12:36,196 --> 00:12:37,546
recognition thing so that like


448
00:12:37,546 --> 00:12:40,026
whenever I sneeze, it like


449
00:12:40,026 --> 00:12:42,096
creates like a new sneeze window


450
00:12:42,516 --> 00:12:43,936
like for analyzing my sneeze


451
00:12:43,936 --> 00:12:46,346
like kind of like Shazam or


452
00:12:47,046 --> 00:12:47,656
something like that.


453
00:12:47,656 --> 00:12:49,006
But -- you could do that, but it


454
00:12:49,006 --> 00:12:49,626
would be weird.


455
00:12:50,206 --> 00:12:52,196
So you shouldn't.


456
00:12:52,196 --> 00:12:54,386
The -- though it actually sounds


457
00:12:54,386 --> 00:12:56,456
kind of fun, but you know.


458
00:12:56,876 --> 00:12:58,466
As we were saying before, the


459
00:12:58,466 --> 00:13:01,696
user should not be forced into


460
00:13:01,966 --> 00:13:02,916
using multiple windows.


461
00:13:02,916 --> 00:13:04,026
That should always be an action


462
00:13:04,026 --> 00:13:05,096
they take for themselves.


463
00:13:05,486 --> 00:13:06,366
So it always needs to be


464
00:13:06,366 --> 00:13:08,096
something that they recognize as


465
00:13:08,096 --> 00:13:09,456
very explicitly creating a new


466
00:13:09,456 --> 00:13:11,316
window like this Open in New


467
00:13:11,316 --> 00:13:11,696
Window.


468
00:13:12,186 --> 00:13:13,916
So -- but that's just -- that's


469
00:13:13,916 --> 00:13:14,616
design level.


470
00:13:14,616 --> 00:13:15,746
So that's something you have to


471
00:13:15,746 --> 00:13:16,836
do for yourselves in your own


472
00:13:16,836 --> 00:13:17,476
applications.


473
00:13:18,556 --> 00:13:21,246
Anyway, that is everything we


474
00:13:21,246 --> 00:13:22,606
have to say about design and the


475
00:13:22,606 --> 00:13:23,466
what.


476
00:13:23,466 --> 00:13:25,906
So to talk about how you can go


477
00:13:25,906 --> 00:13:28,036
adopting this, I'm going to turn


478
00:13:28,036 --> 00:13:29,356
it over to Steve Holt.


479
00:13:30,516 --> 00:13:34,736
[ Applause ]


480
00:13:35,236 --> 00:13:38,396
>> Thank you.


481
00:13:38,576 --> 00:13:39,236
Thank you, Ken.


482
00:13:39,496 --> 00:13:41,296
My name is Steve Holt and I'm an


483
00:13:41,296 --> 00:13:42,826
engineer in the UIKit Team.


484
00:13:43,216 --> 00:13:44,986
And hopefully, you've seen some


485
00:13:44,986 --> 00:13:47,216
great examples of how to adopt


486
00:13:47,216 --> 00:13:48,086
this new feature in your


487
00:13:48,086 --> 00:13:48,886
applications.


488
00:13:49,456 --> 00:13:50,696
And you're probably wondering,


489
00:13:51,356 --> 00:13:52,996
how do you actually adopt it in


490
00:13:52,996 --> 00:13:53,796
your applications?


491
00:13:54,686 --> 00:13:56,146
That's great because we're going


492
00:13:56,146 --> 00:13:57,116
to talk about that right now.


493
00:13:57,756 --> 00:13:59,976
So there are two classes you


494
00:13:59,976 --> 00:14:01,636
need to know about in general to


495
00:14:01,636 --> 00:14:03,226
work with this new feature on


496
00:14:03,226 --> 00:14:05,756
iOS and iPadOS, which is


497
00:14:05,756 --> 00:14:08,006
UIWindowScene and SceneSession.


498
00:14:08,656 --> 00:14:11,886
You might be familiar with how


499
00:14:11,886 --> 00:14:13,616
UIs in UIKit are structured


500
00:14:13,666 --> 00:14:14,026
today.


501
00:14:14,026 --> 00:14:15,926
You have a screen, you have all


502
00:14:15,926 --> 00:14:17,216
window or maybe multiple windows


503
00:14:17,216 --> 00:14:18,246
depending on your application.


504
00:14:18,246 --> 00:14:19,946
And then you have your views


505
00:14:19,946 --> 00:14:21,256
contained inside that window


506
00:14:21,256 --> 00:14:22,626
alongside your view controllers.


507
00:14:23,746 --> 00:14:25,306
UIWindowScene inserts itself


508
00:14:25,526 --> 00:14:27,696
right in between the screen and


509
00:14:27,696 --> 00:14:28,376
your windows.


510
00:14:29,496 --> 00:14:30,666
This lets you contain your


511
00:14:30,666 --> 00:14:32,246
windows to a single instance of


512
00:14:32,246 --> 00:14:34,986
user interface without forcing


513
00:14:34,986 --> 00:14:36,216
you to change your application


514
00:14:36,216 --> 00:14:37,496
or user interface structure too


515
00:14:37,496 --> 00:14:38,756
much from what you already


516
00:14:38,756 --> 00:14:43,246
should have today.


517
00:14:43,346 --> 00:14:45,776
So basically, a scene, it


518
00:14:45,776 --> 00:14:47,296
contains your user interface,


519
00:14:47,896 --> 00:14:49,596
and the system will create an on


520
00:14:49,596 --> 00:14:50,556
demand for you.


521
00:14:51,276 --> 00:14:53,256
Whenever the user performs a


522
00:14:53,256 --> 00:14:54,726
drag and drop interaction,


523
00:14:55,126 --> 00:14:56,956
requests a new window opened up


524
00:14:57,026 --> 00:14:58,676
through your own interfaces or


525
00:14:58,886 --> 00:15:00,846
however that's achieved, the


526
00:15:00,846 --> 00:15:03,546
system will ask you to put UI


527
00:15:03,546 --> 00:15:04,236
onto the screen.


528
00:15:05,466 --> 00:15:07,806
And then, if that scene should


529
00:15:07,806 --> 00:15:10,206
go background and it's not being


530
00:15:10,206 --> 00:15:12,786
interacted with anymore, the


531
00:15:12,786 --> 00:15:15,976
system can decide that it's just


532
00:15:16,256 --> 00:15:17,306
kind of hanging out there, we


533
00:15:17,306 --> 00:15:18,766
don't need it anymore, and we


534
00:15:18,766 --> 00:15:19,906
may destroy that scene.


535
00:15:21,026 --> 00:15:23,896
So, if we're going to take that


536
00:15:23,896 --> 00:15:28,036
scene away, but clearly the user


537
00:15:28,036 --> 00:15:29,246
thinks something is there.


538
00:15:29,246 --> 00:15:30,466
I mean your application is still


539
00:15:30,466 --> 00:15:31,416
in the switcher right where it


540
00:15:31,416 --> 00:15:32,096
was before.


541
00:15:33,686 --> 00:15:36,586
You need a way to understand


542
00:15:36,586 --> 00:15:38,086
what is actually in the switcher


543
00:15:39,116 --> 00:15:42,056
without having to rely on the


544
00:15:42,056 --> 00:15:44,066
actual concrete interfaces being


545
00:15:44,066 --> 00:15:44,976
suspended out of your


546
00:15:44,976 --> 00:15:45,586
application.


547
00:15:46,096 --> 00:15:48,066
And that's where SceneSession


548
00:15:48,066 --> 00:15:49,726
comes in.


549
00:15:50,486 --> 00:15:52,096
The SceneSession represents the


550
00:15:52,096 --> 00:15:53,856
persisted interface state that


551
00:15:53,856 --> 00:15:56,006
the user of your applications


552
00:15:56,416 --> 00:15:58,836
were doing last.


553
00:15:59,166 --> 00:16:00,316
Now, they have a defined system


554
00:16:00,316 --> 00:16:00,566
role.


555
00:16:00,866 --> 00:16:02,416
This could be a standard


556
00:16:02,416 --> 00:16:04,056
application interface that you


557
00:16:04,056 --> 00:16:06,216
interact with on the display of


558
00:16:06,216 --> 00:16:08,236
the actual device, or could be


559
00:16:08,236 --> 00:16:09,246
for an external display.


560
00:16:09,246 --> 00:16:14,676
And every time a new window gets


561
00:16:14,676 --> 00:16:16,216
created on the system, your


562
00:16:16,216 --> 00:16:17,536
application is informed through


563
00:16:17,536 --> 00:16:19,436
the application delegate that a


564
00:16:19,436 --> 00:16:20,896
new session has been made.


565
00:16:21,766 --> 00:16:23,406
And every time one has been


566
00:16:23,406 --> 00:16:25,006
destroyed by the user, either


567
00:16:25,006 --> 00:16:26,546
through interactions with our


568
00:16:26,716 --> 00:16:29,786
APIs, or because they swiped up


569
00:16:29,786 --> 00:16:30,896
in the switcher and destroyed


570
00:16:30,896 --> 00:16:32,636
that space, you get informed


571
00:16:32,636 --> 00:16:34,546
that that session has been


572
00:16:34,546 --> 00:16:35,516
destroyed.


573
00:16:36,276 --> 00:16:37,826
And your UI scenes from the


574
00:16:37,826 --> 00:16:40,736
previous slide connect and


575
00:16:40,736 --> 00:16:42,706
disconnect from these sessions


576
00:16:42,906 --> 00:16:43,916
over the lifetime of your


577
00:16:43,916 --> 00:16:44,506
application.


578
00:16:45,306 --> 00:16:47,396
Now, this has some interesting


579
00:16:47,396 --> 00:16:48,506
effects with your application


580
00:16:48,506 --> 00:16:50,146
lifecycle as you might expect.


581
00:16:51,136 --> 00:16:54,526
To represent that, there is a


582
00:16:54,526 --> 00:16:57,156
handy chart we made up.


583
00:16:57,786 --> 00:16:58,766
We have three sessions in our


584
00:16:58,766 --> 00:17:00,566
application, which represents


585
00:17:00,786 --> 00:17:02,036
three different spaces in the


586
00:17:02,036 --> 00:17:03,946
system that my application is


587
00:17:03,946 --> 00:17:04,945
showing its interface.


588
00:17:05,986 --> 00:17:07,556
And right now, they're


589
00:17:07,556 --> 00:17:08,266
disconnected.


590
00:17:08,266 --> 00:17:09,396
They're below that background


591
00:17:09,396 --> 00:17:09,606
line.


592
00:17:10,156 --> 00:17:12,536
So, my application just reports


593
00:17:12,536 --> 00:17:13,756
that its application state is


594
00:17:14,175 --> 00:17:15,195
background.


595
00:17:15,746 --> 00:17:17,536
Now, if I should activate one of


596
00:17:17,536 --> 00:17:19,116
the spaces that my session is


597
00:17:19,116 --> 00:17:23,826
on, the application state will


598
00:17:23,826 --> 00:17:25,836
go up and go all the way up to


599
00:17:25,836 --> 00:17:27,326
foreground active along with


600
00:17:27,326 --> 00:17:28,226
that connected scene.


601
00:17:29,596 --> 00:17:30,776
When I send that scene back to


602
00:17:30,776 --> 00:17:33,386
the background, the application


603
00:17:33,386 --> 00:17:35,466
state descends down with that


604
00:17:35,466 --> 00:17:35,706
scene.


605
00:17:37,006 --> 00:17:38,966
If I were to switch to any of


606
00:17:38,966 --> 00:17:40,916
the other two sessions, then my


607
00:17:40,916 --> 00:17:42,586
application state would remain


608
00:17:43,016 --> 00:17:44,666
at the foreground active state


609
00:17:44,896 --> 00:17:45,966
to represent the fact that the


610
00:17:45,966 --> 00:17:47,506
overall state of the application


611
00:17:47,506 --> 00:17:47,946
hasn't changed.


612
00:17:52,416 --> 00:17:53,546
When it comes to your


613
00:17:53,546 --> 00:17:54,896
application class and your


614
00:17:54,896 --> 00:17:56,936
application delegate class, we


615
00:17:57,306 --> 00:17:59,626
used to put the combination of


616
00:17:59,716 --> 00:18:00,976
the interface with the rest of


617
00:18:00,976 --> 00:18:03,646
the system, and the lifecycle in


618
00:18:03,646 --> 00:18:04,906
that ApplicationDelegate and


619
00:18:04,906 --> 00:18:05,906
Application object.


620
00:18:06,426 --> 00:18:07,506
This doesn't really work too


621
00:18:07,506 --> 00:18:08,176
well anymore.


622
00:18:09,336 --> 00:18:10,916
So, we split it up.


623
00:18:10,916 --> 00:18:13,736
We have your application which


624
00:18:13,736 --> 00:18:15,256
still represents the state of


625
00:18:15,316 --> 00:18:17,646
the system as a system process,


626
00:18:17,646 --> 00:18:19,756
and the ApplicationDelegate


627
00:18:19,756 --> 00:18:21,896
which gets events and delegate


628
00:18:21,896 --> 00:18:24,016
notifications about processes,


629
00:18:24,356 --> 00:18:27,196
things, and launching and


630
00:18:27,196 --> 00:18:28,896
terminating the app as a


631
00:18:29,406 --> 00:18:29,946
process.


632
00:18:30,476 --> 00:18:32,126
But now your scene actually


633
00:18:32,126 --> 00:18:33,486
encapsulates the UI state and


634
00:18:33,486 --> 00:18:34,096
full.


635
00:18:34,576 --> 00:18:35,766
Any questions you have about the


636
00:18:35,766 --> 00:18:37,816
status bar, you ask those to the


637
00:18:37,816 --> 00:18:38,326
scene now.


638
00:18:39,446 --> 00:18:41,616
And your SceneDelegate gets


639
00:18:41,616 --> 00:18:44,416
informed about opening up URLs


640
00:18:44,416 --> 00:18:46,706
in a particular context,


641
00:18:47,616 --> 00:18:49,236
returning from the background,


642
00:18:49,366 --> 00:18:50,716
going to foreground, et cetera.


643
00:18:50,796 --> 00:18:51,996
And of course, you have


644
00:18:51,996 --> 00:18:53,256
SceneSession which represents


645
00:18:53,256 --> 00:18:54,546
that persisted UI state.


646
00:18:55,926 --> 00:18:57,846
Now, you might think that this


647
00:18:57,846 --> 00:18:59,436
is a lot of complicated API.


648
00:19:00,816 --> 00:19:02,816
So, if you have code like this


649
00:19:02,816 --> 00:19:04,126
in your application right now,


650
00:19:04,706 --> 00:19:05,416
you're going have to make a


651
00:19:05,416 --> 00:19:07,446
really big change and move your


652
00:19:07,446 --> 00:19:08,866
implementation of these methods


653
00:19:10,026 --> 00:19:10,986
into these methods.


654
00:19:12,386 --> 00:19:15,336
For the most part, we've kept it


655
00:19:15,336 --> 00:19:16,486
as similar as we could.


656
00:19:16,806 --> 00:19:18,716
Application didn't finish


657
00:19:18,716 --> 00:19:21,236
launching, becomes willConnectTo


658
00:19:21,236 --> 00:19:21,616
session.


659
00:19:22,926 --> 00:19:24,816
EnterForeground is enter


660
00:19:24,816 --> 00:19:25,286
foreground.


661
00:19:25,286 --> 00:19:26,646
It's just on the scene now


662
00:19:26,646 --> 00:19:28,846
instead of the application, and


663
00:19:28,846 --> 00:19:30,206
so on.


664
00:19:31,826 --> 00:19:34,736
Now, there is a hitch here with


665
00:19:34,736 --> 00:19:35,446
state restoration.


666
00:19:35,856 --> 00:19:36,836
It's going to be really


667
00:19:36,836 --> 00:19:37,296
important.


668
00:19:37,916 --> 00:19:41,066
So, your users can look at the


669
00:19:41,066 --> 00:19:42,826
state of the switcher, go to a


670
00:19:42,826 --> 00:19:45,636
particular space, and then have


671
00:19:45,636 --> 00:19:46,876
their information come back


672
00:19:47,006 --> 00:19:48,306
exactly as they left it.


673
00:19:49,726 --> 00:19:52,096
So to help you with that, we've


674
00:19:52,096 --> 00:19:54,856
borrowed a little bit of API


675
00:19:55,116 --> 00:19:56,076
from the Handoff.


676
00:19:57,096 --> 00:19:58,636
And we represent


677
00:19:58,636 --> 00:19:59,856
stateRestoration as an


678
00:19:59,856 --> 00:20:00,876
NSUserActivity now.


679
00:20:01,866 --> 00:20:02,996
You can put whatever information


680
00:20:02,996 --> 00:20:03,436
you wanted.


681
00:20:04,546 --> 00:20:06,376
And at various points in the


682
00:20:06,376 --> 00:20:08,356
lifecycle, you like, it will


683
00:20:08,356 --> 00:20:11,316
request that user activity from


684
00:20:11,316 --> 00:20:12,386
the SceneDelegate.


685
00:20:12,616 --> 00:20:15,186
And then, when you're seeing


686
00:20:15,186 --> 00:20:16,796
restores, will pass it right


687
00:20:16,796 --> 00:20:19,236
back in as the connection


688
00:20:19,936 --> 00:20:22,246
delegate callback.


689
00:20:22,246 --> 00:20:24,596
And should no scene actually


690
00:20:24,596 --> 00:20:26,626
exist for that particular


691
00:20:26,626 --> 00:20:28,616
session, you can access the


692
00:20:28,616 --> 00:20:29,806
stateRestorationActivity


693
00:20:29,806 --> 00:20:32,586
directly on the session so that


694
00:20:32,586 --> 00:20:33,876
should you do a background fetch


695
00:20:33,876 --> 00:20:35,456
and need to update a particular


696
00:20:35,456 --> 00:20:37,366
one, you can go and find which


697
00:20:37,366 --> 00:20:38,596
one you'd change data for.


698
00:20:38,836 --> 00:20:43,076
So, I'm going to give you a


699
00:20:43,076 --> 00:20:46,126
quick demo to show you what it's


700
00:20:46,126 --> 00:20:47,836
like to adopt this new API in


701
00:20:48,396 --> 00:20:49,296
your application.


702
00:20:56,326 --> 00:21:00,356
So, I have an application here


703
00:21:00,356 --> 00:21:02,486
and it was authored by a good


704
00:21:02,486 --> 00:21:03,526
friend of mine and colleague on


705
00:21:03,526 --> 00:21:05,386
my team, John Ham.


706
00:21:05,386 --> 00:21:09,186
And he wrote what is, to me, one


707
00:21:09,186 --> 00:21:10,566
of my favorite apps ever.


708
00:21:11,236 --> 00:21:12,326
You'll see it in just a second


709
00:21:12,326 --> 00:21:13,706
when the simulator comes up, but


710
00:21:14,066 --> 00:21:16,916
it's fantastic.


711
00:21:16,916 --> 00:21:19,586
What you'll see when this boots


712
00:21:19,626 --> 00:21:22,816
is a fantastic gallery app that


713
00:21:22,816 --> 00:21:25,506
exercises all of collection view


714
00:21:25,506 --> 00:21:26,036
flow layout.


715
00:21:27,866 --> 00:21:29,596
But it's going to show a really


716
00:21:29,596 --> 00:21:30,286
important point.


717
00:21:30,286 --> 00:21:32,386
It's a nice charming


718
00:21:32,386 --> 00:21:33,036
application.


719
00:21:33,646 --> 00:21:36,346
And we're going to go from


720
00:21:36,346 --> 00:21:39,586
having just a single instance of


721
00:21:39,586 --> 00:21:42,056
it and bring multiple windows.


722
00:21:43,976 --> 00:21:45,716
Because when I use this


723
00:21:45,716 --> 00:21:49,266
application, I really want to be


724
00:21:49,266 --> 00:21:51,256
able to see more than one photo


725
00:21:51,256 --> 00:21:51,706
at a time.


726
00:21:51,826 --> 00:21:55,146
So we're just going to wait a


727
00:21:55,146 --> 00:21:55,836
little bit more for the


728
00:21:55,836 --> 00:21:56,766
simulator to boot up here.


729
00:21:56,766 --> 00:21:58,286
And here we go.


730
00:21:58,976 --> 00:22:03,936
[Applause] We can launch apps.


731
00:22:05,096 --> 00:22:06,486
As you can see, it is a


732
00:22:06,486 --> 00:22:07,816
marvelous application.


733
00:22:08,316 --> 00:22:10,476
And I can step in and view any


734
00:22:10,476 --> 00:22:13,836
of these photos and pop back


735
00:22:13,836 --> 00:22:13,916
out.


736
00:22:14,326 --> 00:22:17,296
Now, I can bring it up, and if I


737
00:22:17,296 --> 00:22:18,536
try to go into App Expose, I


738
00:22:18,536 --> 00:22:19,346
can't right here.


739
00:22:19,796 --> 00:22:20,696
And that's because this


740
00:22:20,696 --> 00:22:21,556
application doesn't have


741
00:22:21,556 --> 00:22:22,256
multi-window.


742
00:22:23,776 --> 00:22:25,736
So, the first step to


743
00:22:25,736 --> 00:22:29,876
implementing this is to go into


744
00:22:29,876 --> 00:22:30,356
Xcode.


745
00:22:30,786 --> 00:22:33,686
Right here in the General tab,


746
00:22:33,686 --> 00:22:36,546
we have this nice new checkbox


747
00:22:36,546 --> 00:22:37,496
labeled Supports multiple


748
00:22:37,496 --> 00:22:38,036
windows.


749
00:22:38,036 --> 00:22:40,176
You can take a guess what


750
00:22:40,176 --> 00:22:41,286
happens when I check this.


751
00:22:42,126 --> 00:22:45,216
We make a little edit in our


752
00:22:45,216 --> 00:22:48,036
info.plist, and if we jump to


753
00:22:48,036 --> 00:22:50,976
it, we can see that we have this


754
00:22:50,976 --> 00:22:52,696
new entry here called the


755
00:22:52,696 --> 00:22:55,066
Application Scene Manifest.


756
00:22:55,066 --> 00:22:57,506
This tells the system that the


757
00:22:57,506 --> 00:23:00,256
application supports the new


758
00:23:00,256 --> 00:23:03,296
lifecycle interfaces, and we can


759
00:23:03,296 --> 00:23:06,596
declare statically what


760
00:23:06,596 --> 00:23:07,886
interfaces for which type of


761
00:23:07,886 --> 00:23:09,326
roles we want to use.


762
00:23:10,096 --> 00:23:12,906
Now in this case, I've prebaked


763
00:23:12,906 --> 00:23:14,986
a info.plist entry for you.


764
00:23:15,046 --> 00:23:15,846
So we're going to get rid of


765
00:23:15,846 --> 00:23:17,006
that.


766
00:23:17,376 --> 00:23:23,986
And now we have this right here.


767
00:23:24,316 --> 00:23:26,716
So, we've made this and this has


768
00:23:26,716 --> 00:23:28,136
already moved over our existing


769
00:23:28,136 --> 00:23:28,766
storyboard.


770
00:23:29,196 --> 00:23:32,496
And we've had a very, very basic


771
00:23:32,496 --> 00:23:34,456
SceneDelegate class that we have


772
00:23:34,456 --> 00:23:34,946
right here.


773
00:23:34,946 --> 00:23:36,866
And all this does is declare


774
00:23:36,956 --> 00:23:38,856
just a window, a really, really


775
00:23:38,856 --> 00:23:40,846
basic template class.


776
00:23:41,456 --> 00:23:42,496
We build and run.


777
00:23:49,036 --> 00:23:50,456
And we're right back where we


778
00:23:50,456 --> 00:23:52,786
started, which is good.


779
00:23:52,786 --> 00:23:55,506
But now --


780
00:24:02,616 --> 00:24:04,226
So if I could access the icon in


781
00:24:04,226 --> 00:24:05,316
the dock, I will be able to drag


782
00:24:05,316 --> 00:24:06,846
it up and move it over to the


783
00:24:06,846 --> 00:24:08,886
side of the iPad interface and


784
00:24:08,886 --> 00:24:10,436
create a new window, which is


785
00:24:10,436 --> 00:24:11,676
what that info.plist allows us


786
00:24:11,816 --> 00:24:12,286
to do.


787
00:24:13,216 --> 00:24:16,256
But unfortunately, if I were to


788
00:24:16,256 --> 00:24:18,366
go back to the home screen, let


789
00:24:19,436 --> 00:24:21,966
the application terminate, and


790
00:24:21,966 --> 00:24:26,866
then launch it again, we don't


791
00:24:26,866 --> 00:24:28,316
quite get the same level of


792
00:24:28,316 --> 00:24:29,736
state restoration we did do


793
00:24:29,736 --> 00:24:31,406
before as you can see right


794
00:24:31,436 --> 00:24:31,976
here.


795
00:24:37,236 --> 00:24:40,556
So to get that back, we need to


796
00:24:40,556 --> 00:24:42,826
implement a few things, which is


797
00:24:42,826 --> 00:24:42,996
OK.


798
00:24:42,996 --> 00:24:46,146
Now, like I said, to implement


799
00:24:46,146 --> 00:24:48,776
stateRestoration here, we need


800
00:24:48,856 --> 00:24:50,566
to take our existing


801
00:24:51,076 --> 00:24:52,996
stateRestorationActivity that we


802
00:24:52,996 --> 00:24:53,426
have.


803
00:24:53,616 --> 00:24:56,336
Windows return it from the new


804
00:24:56,526 --> 00:24:58,746
stateRestorationActivity for


805
00:24:58,746 --> 00:25:00,576
scene, delegate call.


806
00:25:00,746 --> 00:25:03,936
And way deep in the


807
00:25:03,936 --> 00:25:06,306
implementation here, we've been


808
00:25:06,306 --> 00:25:07,546
setting it on the application


809
00:25:07,546 --> 00:25:09,336
instance, which is not really


810
00:25:09,336 --> 00:25:10,186
what we want anymore.


811
00:25:13,996 --> 00:25:16,866
We want to set it on to local


812
00:25:17,106 --> 00:25:19,206
windows scene like so.


813
00:25:19,206 --> 00:25:24,086
And then clear it out where we


814
00:25:24,086 --> 00:25:25,256
cleared it out before.


815
00:25:26,516 --> 00:25:29,306
So now, we're returning our user


816
00:25:29,306 --> 00:25:30,206
activity so we can do


817
00:25:30,206 --> 00:25:30,926
stateRestoration.


818
00:25:32,136 --> 00:25:33,686
Let's try it.


819
00:25:36,256 --> 00:25:38,146
So what you'll notice here is


820
00:25:38,146 --> 00:25:39,596
that we're not quite done


821
00:25:39,646 --> 00:25:40,586
implementing the


822
00:25:40,586 --> 00:25:42,346
stateRestoration just yet.


823
00:25:42,536 --> 00:25:44,426
We need to do one more thing


824
00:25:44,426 --> 00:25:45,366
when our scene connects.


825
00:25:51,196 --> 00:25:52,526
When the scene connects to the


826
00:25:52,526 --> 00:25:54,946
SceneSession, we get options and


827
00:25:54,946 --> 00:25:56,076
we get the session reference.


828
00:25:56,546 --> 00:25:58,106
Now, in this template that I


829
00:25:58,106 --> 00:25:59,526
pulled out, we're already


830
00:25:59,526 --> 00:26:01,596
looking for any user activities


831
00:26:01,596 --> 00:26:03,246
that we have gotten through


832
00:26:03,246 --> 00:26:04,696
Handoff or any other system


833
00:26:04,696 --> 00:26:05,946
facilities that vend us user


834
00:26:05,946 --> 00:26:06,446
activities.


835
00:26:06,806 --> 00:26:10,056
We want to prefer those user


836
00:26:10,056 --> 00:26:11,536
activities because that's what


837
00:26:11,536 --> 00:26:13,096
the user actually did.


838
00:26:13,966 --> 00:26:21,166
But the stateRestorationActivity


839
00:26:21,476 --> 00:26:22,496
is special and it's on the


840
00:26:22,496 --> 00:26:22,896
session.


841
00:26:23,296 --> 00:26:24,246
So if you don't have one of


842
00:26:24,246 --> 00:26:26,036
those activities, we want to use


843
00:26:26,036 --> 00:26:27,206
our stateRestorationActivity.


844
00:26:28,146 --> 00:26:31,196
So now, when we build and run,


845
00:26:32,436 --> 00:26:34,096
we restore back when the


846
00:26:34,096 --> 00:26:35,446
application is relaunched.


847
00:26:37,906 --> 00:26:40,626
So that's how you adopt multiple


848
00:26:40,626 --> 00:26:42,476
windows in your application.


849
00:26:42,756 --> 00:26:43,796
It's pretty straightforward.


850
00:26:43,796 --> 00:26:44,836
You can use most of your


851
00:26:44,836 --> 00:26:46,156
existing application delegate


852
00:26:46,156 --> 00:26:47,596
logic and just move it to the


853
00:26:47,596 --> 00:26:50,706
scene, and it will run there.


854
00:26:51,446 --> 00:26:54,406
Now, as Ken mentioned, the


855
00:26:54,736 --> 00:26:57,106
preferred way of interfacing


856
00:26:57,106 --> 00:26:58,586
with these drag and drop items


857
00:26:59,266 --> 00:27:02,046
is with drag and drop.


858
00:27:02,226 --> 00:27:05,036
And there are a couple of ways


859
00:27:05,036 --> 00:27:06,886
we can achieve this if you use


860
00:27:06,886 --> 00:27:09,896
existing universal links or


861
00:27:09,896 --> 00:27:12,046
references to file URLs that


862
00:27:12,046 --> 00:27:13,236
your application declares its


863
00:27:13,236 --> 00:27:15,126
own in info.plist, those will


864
00:27:15,126 --> 00:27:15,536
just work.


865
00:27:15,536 --> 00:27:17,436
But if you want to do something


866
00:27:17,436 --> 00:27:20,476
more custom, once again, you can


867
00:27:20,476 --> 00:27:21,726
use NSUserActivity.


868
00:27:22,396 --> 00:27:23,756
You can include that in your


869
00:27:23,756 --> 00:27:25,026
existing DragItem's


870
00:27:25,026 --> 00:27:26,986
NSItemProvider as a different


871
00:27:26,986 --> 00:27:28,066
object representation.


872
00:27:29,176 --> 00:27:30,456
When you drag it off to the rest


873
00:27:30,456 --> 00:27:32,306
of the system, you'll get hit


874
00:27:32,306 --> 00:27:34,256
targets and drop points at


875
00:27:34,406 --> 00:27:36,006
system defined locations just


876
00:27:36,006 --> 00:27:38,276
like any other app icon drag.


877
00:27:39,856 --> 00:27:42,506
And now to talk about the next


878
00:27:42,506 --> 00:27:44,046
steps is my colleague James.


879
00:27:45,976 --> 00:27:46,596
Thank you.


880
00:27:47,516 --> 00:27:51,996
[ Applause ]


881
00:27:52,496 --> 00:27:52,936
>> Thanks, Steve.


882
00:27:53,396 --> 00:27:57,516
So to wrap up this talk, I have


883
00:27:57,516 --> 00:27:58,996
just three more things to talk


884
00:27:58,996 --> 00:27:59,336
about.


885
00:27:59,966 --> 00:28:01,366
The first is going to be a


886
00:28:01,366 --> 00:28:02,166
deeper look at the


887
00:28:02,166 --> 00:28:03,846
UISceneSession API.


888
00:28:04,946 --> 00:28:06,306
Next, we're going to cover some


889
00:28:06,306 --> 00:28:08,356
case studies about common issues


890
00:28:08,356 --> 00:28:09,836
that we think you might see when


891
00:28:09,836 --> 00:28:11,016
you start duplicating your


892
00:28:11,016 --> 00:28:12,266
application's interface.


893
00:28:13,096 --> 00:28:14,726
And lastly, I just want to talk


894
00:28:14,726 --> 00:28:15,776
briefly about some of the


895
00:28:15,776 --> 00:28:17,526
deprecations that we've added to


896
00:28:17,526 --> 00:28:19,416
UI application to support this


897
00:28:19,416 --> 00:28:20,226
new lifecycle.


898
00:28:20,896 --> 00:28:22,846
So let's get started by going


899
00:28:22,846 --> 00:28:24,426
over what a scene session is.


900
00:28:26,286 --> 00:28:27,706
Going back to this diagram from


901
00:28:27,706 --> 00:28:29,686
earlier, you can see in the App


902
00:28:29,686 --> 00:28:31,806
Switcher, we have four windows


903
00:28:31,996 --> 00:28:32,856
of our application.


904
00:28:33,096 --> 00:28:34,226
And that is how the user will


905
00:28:34,226 --> 00:28:35,396
think about this, as four


906
00:28:35,396 --> 00:28:35,886
windows.


907
00:28:36,146 --> 00:28:37,806
But I want to encourage you as


908
00:28:37,806 --> 00:28:39,486
developers to think about these


909
00:28:39,586 --> 00:28:41,456
as scenes and scene sessions.


910
00:28:41,846 --> 00:28:43,426
And that distinction is


911
00:28:43,426 --> 00:28:45,506
important because while the


912
00:28:45,506 --> 00:28:47,016
windows that the user sees in


913
00:28:47,016 --> 00:28:48,826
the App Switchers will always be


914
00:28:48,826 --> 00:28:50,736
there as snapshots, the scenes


915
00:28:50,736 --> 00:28:52,716
themselves may not be loaded in


916
00:28:52,716 --> 00:28:53,556
your application.


917
00:28:54,536 --> 00:28:58,166
They can come and go as needed,


918
00:28:58,656 --> 00:29:00,036
but the sessions will always be


919
00:29:00,036 --> 00:29:00,796
available to you.


920
00:29:01,156 --> 00:29:02,946
And because of this, we use the


921
00:29:02,946 --> 00:29:05,116
session for programmatic control


922
00:29:05,116 --> 00:29:06,196
over the windows.


923
00:29:06,576 --> 00:29:09,156
So I think these are some of the


924
00:29:09,156 --> 00:29:10,516
most exciting API that we're


925
00:29:10,516 --> 00:29:11,996
adding to multitasking this year


926
00:29:12,376 --> 00:29:14,136
because they allow you to create


927
00:29:14,136 --> 00:29:15,536
new windows programmatically,


928
00:29:16,126 --> 00:29:18,136
update the snapshots in the App


929
00:29:18,136 --> 00:29:20,356
Switcher, and close them on


930
00:29:20,356 --> 00:29:21,616
response to things like a user


931
00:29:21,616 --> 00:29:23,436
gesture, or if the document that


932
00:29:23,436 --> 00:29:24,616
they represent has expired in


933
00:29:24,616 --> 00:29:25,056
some way.


934
00:29:25,556 --> 00:29:27,676
So to go over when and how you


935
00:29:27,676 --> 00:29:29,336
would use these, let's look at


936
00:29:29,336 --> 00:29:30,016
some sample code.


937
00:29:30,016 --> 00:29:32,486
The first of these is the


938
00:29:32,546 --> 00:29:34,616
requestSceneSessionActivation


939
00:29:34,616 --> 00:29:34,926
API.


940
00:29:35,756 --> 00:29:37,296
And what this lets you do is


941
00:29:37,396 --> 00:29:39,416
bring forward either an existing


942
00:29:39,416 --> 00:29:40,306
or a new scene of your


943
00:29:40,306 --> 00:29:40,936
application.


944
00:29:41,836 --> 00:29:43,116
In this example, I'm trying to


945
00:29:43,116 --> 00:29:43,946
open a document.


946
00:29:44,416 --> 00:29:45,536
And I first check if the


947
00:29:45,536 --> 00:29:47,436
document has an existing scene


948
00:29:47,576 --> 00:29:48,716
somewhere in my application.


949
00:29:48,866 --> 00:29:50,616
And if it does, I pass it to


950
00:29:50,616 --> 00:29:52,116
this API and it will be brought


951
00:29:52,116 --> 00:29:52,586
forward.


952
00:29:52,826 --> 00:29:54,556
But if this document isn't open


953
00:29:54,556 --> 00:29:56,216
yet, I can create an


954
00:29:56,216 --> 00:29:58,116
NSUserActivity that references


955
00:29:58,116 --> 00:29:59,646
the context I need to open it


956
00:29:59,646 --> 00:30:01,726
later and pass nil to create a


957
00:30:01,726 --> 00:30:01,976
new scene.


958
00:30:06,196 --> 00:30:06,766
Next is the


959
00:30:06,766 --> 00:30:08,716
requestSceneSessionRefresh API.


960
00:30:08,716 --> 00:30:10,706
You'd want to use this in the


961
00:30:10,706 --> 00:30:12,486
context where you may be


962
00:30:12,486 --> 00:30:14,006
received a push notification


963
00:30:14,006 --> 00:30:16,616
about a new message or in an app


964
00:30:16,616 --> 00:30:18,326
like Calendar when an event has


965
00:30:18,326 --> 00:30:18,836
changed.


966
00:30:19,476 --> 00:30:21,226
When you call this method, UIKit


967
00:30:21,226 --> 00:30:22,796
will schedule an update at some


968
00:30:22,796 --> 00:30:24,216
point in the future where it


969
00:30:24,216 --> 00:30:25,436
will connect your scene in the


970
00:30:25,436 --> 00:30:26,086
background.


971
00:30:26,556 --> 00:30:27,546
You'll have a chance to update


972
00:30:27,546 --> 00:30:29,366
the UI, a new snapshot will be


973
00:30:29,366 --> 00:30:31,416
taken, and then that will be


974
00:30:31,416 --> 00:30:32,996
saved into the App Switcher for


975
00:30:32,996 --> 00:30:33,326
later.


976
00:30:33,966 --> 00:30:35,256
You can also use this to update


977
00:30:35,256 --> 00:30:36,436
the stateRestoration user


978
00:30:36,436 --> 00:30:38,346
activity that Steve talked


979
00:30:40,036 --> 00:30:40,366
about.


980
00:30:40,576 --> 00:30:41,586
Lastly, is the


981
00:30:41,586 --> 00:30:43,226
requestSceneSessionDestruction


982
00:30:43,226 --> 00:30:45,276
API, which you can use to close


983
00:30:45,276 --> 00:30:45,686
a scene.


984
00:30:46,606 --> 00:30:47,786
What's really cool about this is


985
00:30:47,786 --> 00:30:48,846
that it also comes with the


986
00:30:48,846 --> 00:30:50,656
scene -- this options object


987
00:30:50,876 --> 00:30:52,336
that lets you pick a semantic


988
00:30:52,336 --> 00:30:54,286
animation for how the scene


989
00:30:54,286 --> 00:30:55,076
should be closed.


990
00:30:55,966 --> 00:30:57,026
You can see this in Mail with


991
00:30:57,026 --> 00:30:57,976
the Compose window.


992
00:30:58,396 --> 00:30:59,796
When the user sends a message,


993
00:31:00,096 --> 00:31:01,426
the sheet animates up off


994
00:31:01,426 --> 00:31:01,856
screen.


995
00:31:02,156 --> 00:31:03,366
And if the user saves it as a


996
00:31:03,366 --> 00:31:05,256
draft, it'll slide down to


997
00:31:05,256 --> 00:31:06,336
remind them that it's been saved


998
00:31:06,336 --> 00:31:06,796
for later.


999
00:31:07,916 --> 00:31:08,746
You can use these same


1000
00:31:08,746 --> 00:31:10,056
animations with your scenes and


1001
00:31:10,056 --> 00:31:12,416
your apps.


1002
00:31:12,776 --> 00:31:14,896
Now, window management isn't all


1003
00:31:14,896 --> 00:31:16,116
that the session can do.


1004
00:31:16,716 --> 00:31:17,736
We've also added state


1005
00:31:17,736 --> 00:31:19,516
restoration to it, as shown with


1006
00:31:19,516 --> 00:31:20,626
the NSUserActivity for


1007
00:31:20,626 --> 00:31:21,496
stateRestoration.


1008
00:31:22,266 --> 00:31:23,636
We think for lots of apps, this


1009
00:31:23,636 --> 00:31:24,936
is going to be a really simple


1010
00:31:24,936 --> 00:31:26,406
and easy way to start saving


1011
00:31:26,406 --> 00:31:27,906
your state, especially if you've


1012
00:31:27,906 --> 00:31:29,636
already invested in technologies


1013
00:31:29,716 --> 00:31:30,466
like Handoff.


1014
00:31:31,486 --> 00:31:33,306
But we also realize that many of


1015
00:31:33,306 --> 00:31:34,566
you have apps with existing


1016
00:31:34,566 --> 00:31:35,946
state restoration logic and


1017
00:31:35,946 --> 00:31:37,476
maybe you don't want to work to


1018
00:31:37,476 --> 00:31:38,096
integrate it with


1019
00:31:38,126 --> 00:31:39,026
NSUserActivity.


1020
00:31:39,246 --> 00:31:40,776
And for that, we have a


1021
00:31:40,776 --> 00:31:42,446
persistentIdentifier property.


1022
00:31:42,896 --> 00:31:45,416
Now, all this is is a string


1023
00:31:45,416 --> 00:31:46,756
that is generated by the system.


1024
00:31:47,406 --> 00:31:48,416
You can feel free to write it


1025
00:31:48,416 --> 00:31:50,706
down into any databases or any


1026
00:31:50,706 --> 00:31:52,096
files in your apps container


1027
00:31:52,096 --> 00:31:53,306
that you use for state


1028
00:31:53,306 --> 00:31:53,916
restoration.


1029
00:31:54,536 --> 00:31:55,726
And it will be the same


1030
00:31:55,726 --> 00:31:57,546
identifier for the same scene


1031
00:31:57,846 --> 00:31:59,236
every time your app is launched,


1032
00:31:59,376 --> 00:32:01,046
even across backups and restores


1033
00:32:01,046 --> 00:32:01,776
of devices.


1034
00:32:04,026 --> 00:32:05,736
Lastly, there's a userInfo


1035
00:32:05,736 --> 00:32:07,136
dictionary, which is great for


1036
00:32:07,136 --> 00:32:08,646
storing small amounts of data,


1037
00:32:08,916 --> 00:32:10,536
such as per scene


1038
00:32:10,596 --> 00:32:11,526
customizations.


1039
00:32:12,156 --> 00:32:13,356
You might use this for something


1040
00:32:13,356 --> 00:32:14,786
like whether a sidebar is being


1041
00:32:14,786 --> 00:32:17,046
shown, or the last used color at


1042
00:32:17,046 --> 00:32:17,696
an ink picker.


1043
00:32:18,366 --> 00:32:19,496
Really a great way to find


1044
00:32:19,496 --> 00:32:20,666
things to put in this might be


1045
00:32:20,666 --> 00:32:21,926
to go over data that you're


1046
00:32:21,956 --> 00:32:23,436
already storing in your user


1047
00:32:23,436 --> 00:32:25,146
defaults, because some of those


1048
00:32:25,146 --> 00:32:26,446
things you might not actually


1049
00:32:26,446 --> 00:32:27,536
want to be global to your whole


1050
00:32:27,536 --> 00:32:27,746
app.


1051
00:32:30,226 --> 00:32:32,256
So, that's the new API for


1052
00:32:32,456 --> 00:32:33,446
UISceneSession.


1053
00:32:34,026 --> 00:32:35,186
But next I want to talk about


1054
00:32:35,186 --> 00:32:36,426
what your next step should be


1055
00:32:36,426 --> 00:32:37,986
after you built and ran your app


1056
00:32:38,206 --> 00:32:39,746
with Xcode supporting multiple


1057
00:32:39,746 --> 00:32:40,196
scenes.


1058
00:32:40,606 --> 00:32:41,676
And that's of course debugging


1059
00:32:41,886 --> 00:32:41,976
it.


1060
00:32:43,806 --> 00:32:46,146
Now, there's lots of code in


1061
00:32:46,146 --> 00:32:47,936
your app that is very custom,


1062
00:32:47,936 --> 00:32:49,776
and we've done our best to make


1063
00:32:49,776 --> 00:32:50,866
the framework help you along the


1064
00:32:50,866 --> 00:32:51,136
way.


1065
00:32:51,836 --> 00:32:53,676
But we can't really predict if


1066
00:32:53,676 --> 00:32:54,636
there's any changes you'll need


1067
00:32:54,636 --> 00:32:55,926
to make or what they might be.


1068
00:32:57,156 --> 00:32:58,846
But we think that there probably


1069
00:32:58,846 --> 00:32:59,176
are.


1070
00:32:59,176 --> 00:33:00,096
And we do want you to think


1071
00:33:00,096 --> 00:33:00,896
about the code that you've


1072
00:33:00,896 --> 00:33:02,786
written in the past.


1073
00:33:02,786 --> 00:33:04,716
Adopting this new lifecycle and


1074
00:33:04,716 --> 00:33:06,166
especially adopting multiple


1075
00:33:06,166 --> 00:33:07,766
scenes might have changed


1076
00:33:07,766 --> 00:33:09,166
assumptions that you made about


1077
00:33:09,166 --> 00:33:10,706
how your application functioned.


1078
00:33:11,886 --> 00:33:13,146
There's no longer just one


1079
00:33:13,146 --> 00:33:14,516
interface, and there might no


1080
00:33:14,516 --> 00:33:16,136
longer be just one instance of a


1081
00:33:16,136 --> 00:33:16,836
view controller.


1082
00:33:17,416 --> 00:33:20,886
Of course, if you have automated


1083
00:33:20,886 --> 00:33:22,036
test, that's great.


1084
00:33:22,756 --> 00:33:23,956
Those tests might continue to


1085
00:33:23,956 --> 00:33:25,326
pass though, even when your


1086
00:33:25,326 --> 00:33:26,886
users might see real bugs.


1087
00:33:27,386 --> 00:33:28,496
And that's again because of


1088
00:33:28,496 --> 00:33:29,956
these changes to the assumptions


1089
00:33:29,956 --> 00:33:30,796
that you might have made.


1090
00:33:31,266 --> 00:33:32,336
So the best way that you can


1091
00:33:32,336 --> 00:33:33,856
find these problems before your


1092
00:33:33,856 --> 00:33:35,426
customers do is just to play


1093
00:33:35,426 --> 00:33:36,886
with your app, play with it,


1094
00:33:36,986 --> 00:33:38,546
you're having two copies of it


1095
00:33:38,546 --> 00:33:39,226
out at once.


1096
00:33:39,586 --> 00:33:40,786
And it's a really great way to


1097
00:33:40,916 --> 00:33:42,216
very quickly see when something


1098
00:33:42,216 --> 00:33:43,406
doesn't quite line up like you


1099
00:33:43,406 --> 00:33:45,126
meant it to.


1100
00:33:45,856 --> 00:33:47,146
Now, I've prepared a couple of


1101
00:33:47,146 --> 00:33:48,476
case studies to highlight


1102
00:33:49,126 --> 00:33:50,606
prototypical bugs that you might


1103
00:33:50,686 --> 00:33:50,966
see.


1104
00:33:51,756 --> 00:33:52,996
But there's this common theme to


1105
00:33:52,996 --> 00:33:55,056
both of them, and the theme is


1106
00:33:55,056 --> 00:33:57,066
state, specifically, shared


1107
00:33:57,066 --> 00:33:57,346
state.


1108
00:33:58,616 --> 00:33:59,736
Now, I'm willing to bet that


1109
00:33:59,736 --> 00:34:01,156
almost all of you have used one


1110
00:34:01,156 --> 00:34:02,036
of these classes in an


1111
00:34:02,036 --> 00:34:03,436
application before because


1112
00:34:03,796 --> 00:34:05,036
they're really common and really


1113
00:34:05,036 --> 00:34:06,336
useful Cocoa classes.


1114
00:34:06,586 --> 00:34:08,126
And they're also really


1115
00:34:08,126 --> 00:34:09,266
convenient because of that


1116
00:34:09,266 --> 00:34:10,166
singleton property.


1117
00:34:10,815 --> 00:34:13,196
You can go be in a model object


1118
00:34:13,196 --> 00:34:14,686
deep in your app and reach up to


1119
00:34:14,686 --> 00:34:16,666
the UI device singleton and read


1120
00:34:16,666 --> 00:34:17,946
off some configuration about


1121
00:34:17,946 --> 00:34:18,835
what kind of device you're


1122
00:34:18,835 --> 00:34:19,826
running on, and that's really


1123
00:34:19,826 --> 00:34:20,376
powerful.


1124
00:34:21,216 --> 00:34:22,936
But this pattern also can have


1125
00:34:22,936 --> 00:34:23,505
problems.


1126
00:34:23,896 --> 00:34:25,326
Because of that loose coupling


1127
00:34:25,326 --> 00:34:27,315
between layers and data, you can


1128
00:34:27,315 --> 00:34:28,866
kind of lose track of where data


1129
00:34:28,866 --> 00:34:30,446
is flowing in your application,


1130
00:34:30,636 --> 00:34:32,005
who is reading it and how.


1131
00:34:32,606 --> 00:34:34,476
But like I said, these are very,


1132
00:34:34,476 --> 00:34:35,755
very powerful patterns because


1133
00:34:35,755 --> 00:34:36,626
they're so convenient.


1134
00:34:36,976 --> 00:34:38,536
And in fact, I expect most of


1135
00:34:38,536 --> 00:34:39,536
you have written your own


1136
00:34:39,536 --> 00:34:40,706
singletons at some point.


1137
00:34:41,606 --> 00:34:43,076
You might be using something


1138
00:34:43,076 --> 00:34:44,576
that isn't quite a singleton


1139
00:34:44,576 --> 00:34:47,235
like a global variable, or maybe


1140
00:34:47,235 --> 00:34:48,306
you're piggybacking on an


1141
00:34:48,306 --> 00:34:50,096
existing singleton in the kit.


1142
00:34:51,005 --> 00:34:52,966
Or maybe you're using the file


1143
00:34:52,966 --> 00:34:54,525
system, which is itself just one


1144
00:34:54,525 --> 00:34:56,416
big vault of data that's shared


1145
00:34:56,525 --> 00:34:58,116
by your app.


1146
00:34:58,116 --> 00:34:59,156
Now, I'm not here to tell you


1147
00:34:59,156 --> 00:35:00,226
that you need to get rid of all


1148
00:35:00,226 --> 00:35:01,466
your singletons or that shared


1149
00:35:01,466 --> 00:35:03,366
state is bad, but I do want to


1150
00:35:03,366 --> 00:35:05,006
encourage you to think about how


1151
00:35:05,006 --> 00:35:06,346
you're sharing it, and whether


1152
00:35:06,346 --> 00:35:07,436
you should be sharing that.


1153
00:35:08,106 --> 00:35:09,366
There's lots of other advantages


1154
00:35:09,366 --> 00:35:11,036
to factoring your data out, such


1155
00:35:11,036 --> 00:35:12,496
as an easier time with unit


1156
00:35:12,496 --> 00:35:12,856
tests.


1157
00:35:13,886 --> 00:35:16,136
So let's get into those case


1158
00:35:16,136 --> 00:35:16,456
studies.


1159
00:35:16,886 --> 00:35:18,696
The first one rolls around a


1160
00:35:18,786 --> 00:35:19,556
state restoration.


1161
00:35:20,726 --> 00:35:23,246
And to work on it, I came up


1162
00:35:23,246 --> 00:35:24,326
with this sample app before the


1163
00:35:24,326 --> 00:35:24,736
talk.


1164
00:35:25,416 --> 00:35:26,596
Now, it's just a nice little


1165
00:35:26,596 --> 00:35:27,656
sketch pad editor.


1166
00:35:27,656 --> 00:35:29,056
You can type some texts into it,


1167
00:35:29,296 --> 00:35:30,286
you quit and relaunch it, and


1168
00:35:30,286 --> 00:35:30,956
you see it again.


1169
00:35:31,376 --> 00:35:32,936
And I follow the steps from the


1170
00:35:32,936 --> 00:35:35,046
demo and I enabled support from


1171
00:35:35,046 --> 00:35:36,176
multiple screens, and it's


1172
00:35:36,176 --> 00:35:36,906
looking pretty good.


1173
00:35:37,716 --> 00:35:39,396
But when I quit and relaunch the


1174
00:35:39,396 --> 00:35:40,956
app, this happens.


1175
00:35:41,526 --> 00:35:43,026
I now I have the same content in


1176
00:35:43,026 --> 00:35:44,626
both sides of my application and


1177
00:35:44,626 --> 00:35:46,026
that's not really what I wanted.


1178
00:35:46,376 --> 00:35:48,616
So I took a look at my database


1179
00:35:49,086 --> 00:35:50,326
and the problem was pretty


1180
00:35:50,326 --> 00:35:51,096
straightforward really.


1181
00:35:51,646 --> 00:35:53,496
I was saving out this text file


1182
00:35:53,566 --> 00:35:55,586
as a file in my apps container,


1183
00:35:55,886 --> 00:35:57,406
but I was only saving it to one


1184
00:35:57,406 --> 00:35:57,966
location.


1185
00:35:58,406 --> 00:36:00,006
So every time either side of my


1186
00:36:00,006 --> 00:36:01,846
application saved data, it


1187
00:36:01,846 --> 00:36:03,036
overwrite whatever the other one


1188
00:36:03,036 --> 00:36:03,546
had saved.


1189
00:36:04,586 --> 00:36:05,826
Now, there's nothing that you


1190
00:36:05,826 --> 00:36:07,076
UIKit can really do for free


1191
00:36:07,076 --> 00:36:08,376
here because this is code in my


1192
00:36:08,376 --> 00:36:08,666
app.


1193
00:36:09,226 --> 00:36:10,876
So I had to go and do two


1194
00:36:10,876 --> 00:36:11,346
things.


1195
00:36:11,776 --> 00:36:12,936
I had to correlate that


1196
00:36:13,056 --> 00:36:14,496
persistent identifier for the


1197
00:36:14,496 --> 00:36:16,086
scene session with the note for


1198
00:36:16,086 --> 00:36:16,766
the right scene.


1199
00:36:16,986 --> 00:36:18,546
And then I had to update my


1200
00:36:18,546 --> 00:36:19,646
logic so that I could save


1201
00:36:19,646 --> 00:36:21,186
multiple files instead of just


1202
00:36:21,186 --> 00:36:21,536
one.


1203
00:36:22,326 --> 00:36:24,196
Now if you're going this route


1204
00:36:24,456 --> 00:36:25,636
and doing manual state


1205
00:36:25,636 --> 00:36:27,006
restoration, there's just one


1206
00:36:27,006 --> 00:36:28,056
more thing I want you to think


1207
00:36:28,056 --> 00:36:29,806
about and that's cleaning up the


1208
00:36:29,806 --> 00:36:30,136
data.


1209
00:36:31,496 --> 00:36:33,036
When UIKit manages that


1210
00:36:33,036 --> 00:36:35,086
NSUserActivity for you, it will


1211
00:36:35,086 --> 00:36:36,476
take care of where to write it


1212
00:36:37,016 --> 00:36:38,366
in once you remove it for you.


1213
00:36:38,866 --> 00:36:40,286
But if you're receiving other


1214
00:36:40,286 --> 00:36:42,676
large files tied to the lifetime


1215
00:36:42,676 --> 00:36:44,156
of a scene in your app, then


1216
00:36:44,156 --> 00:36:45,226
you'll want to clean them up


1217
00:36:45,226 --> 00:36:46,946
using the new UI application


1218
00:36:47,006 --> 00:36:48,506
diDiscardSceneSessions API.


1219
00:36:49,296 --> 00:36:51,386
This gets called with a set of


1220
00:36:51,436 --> 00:36:52,166
sceneSessions.


1221
00:36:52,916 --> 00:36:55,116
And it's a great time to remove


1222
00:36:55,116 --> 00:36:56,786
any data that really doesn't


1223
00:36:56,786 --> 00:36:57,786
need to exist anymore.


1224
00:36:58,636 --> 00:37:00,216
And a document-based app like


1225
00:37:00,216 --> 00:37:01,276
pages, you wouldn't want to


1226
00:37:01,276 --> 00:37:02,126
delete the document.


1227
00:37:02,176 --> 00:37:03,946
That stays in the file system.


1228
00:37:04,536 --> 00:37:06,806
But configuration or preferences


1229
00:37:07,416 --> 00:37:08,346
aren't needed anymore.


1230
00:37:09,326 --> 00:37:10,396
This method will be called


1231
00:37:10,396 --> 00:37:11,796
immediately when the user swipes


1232
00:37:11,796 --> 00:37:13,976
up on -- in scene of your app in


1233
00:37:14,046 --> 00:37:15,146
the App Switcher if your


1234
00:37:15,146 --> 00:37:16,206
application is running.


1235
00:37:16,556 --> 00:37:18,176
Otherwise, you might receive a


1236
00:37:18,246 --> 00:37:19,846
set of multiple sessions


1237
00:37:20,116 --> 00:37:21,616
sometime after your next launch.


1238
00:37:24,606 --> 00:37:26,086
For our next case study, I want


1239
00:37:26,086 --> 00:37:27,826
to look at UserDefaults, which


1240
00:37:27,826 --> 00:37:29,086
is another really common and


1241
00:37:29,086 --> 00:37:30,316
super useful class for


1242
00:37:30,316 --> 00:37:31,056
applications.


1243
00:37:32,276 --> 00:37:33,156
UserDefaults are great for


1244
00:37:33,156 --> 00:37:33,846
storing settings.


1245
00:37:34,116 --> 00:37:35,206
And that's exactly what I'm


1246
00:37:35,206 --> 00:37:36,116
using them for here.


1247
00:37:36,876 --> 00:37:38,676
I have this toggle for a word


1248
00:37:38,676 --> 00:37:40,186
count bar in my app.


1249
00:37:40,256 --> 00:37:41,926
And when I switch it on, a word


1250
00:37:41,926 --> 00:37:43,116
count bar appears at the bottom


1251
00:37:43,116 --> 00:37:43,676
of the screen.


1252
00:37:43,986 --> 00:37:46,126
But unfortunately, it only


1253
00:37:46,126 --> 00:37:47,746
appeared on the screen where I


1254
00:37:47,746 --> 00:37:48,996
had the settings view controller


1255
00:37:48,996 --> 00:37:49,446
is showing.


1256
00:37:49,526 --> 00:37:51,986
It didn't appear in both windows


1257
00:37:51,986 --> 00:37:52,856
and that's not what I wanted.


1258
00:37:52,856 --> 00:37:54,276
I want this to be an application


1259
00:37:54,276 --> 00:37:55,196
global preference.


1260
00:37:55,796 --> 00:37:57,746
And when I looked at why this


1261
00:37:57,746 --> 00:37:58,786
was happening, it was again


1262
00:37:58,786 --> 00:37:59,706
pretty straightforward.


1263
00:37:59,706 --> 00:38:01,316
I had a settings view controller


1264
00:38:01,316 --> 00:38:02,586
and a settings view controller


1265
00:38:02,586 --> 00:38:03,076
delegate.


1266
00:38:04,466 --> 00:38:05,886
Whenever the setting changed, I


1267
00:38:05,886 --> 00:38:07,726
told the delegate, which was the


1268
00:38:07,726 --> 00:38:08,796
text editor view controller


1269
00:38:08,796 --> 00:38:10,396
behind, which then updated its


1270
00:38:10,396 --> 00:38:10,546
UI.


1271
00:38:11,116 --> 00:38:12,906
That's a very self-contained


1272
00:38:12,906 --> 00:38:13,516
process.


1273
00:38:13,516 --> 00:38:15,456
And at no point is the second


1274
00:38:15,536 --> 00:38:16,916
scene in my application ever


1275
00:38:16,916 --> 00:38:17,906
informed that anything is


1276
00:38:17,906 --> 00:38:18,376
updated.


1277
00:38:19,406 --> 00:38:20,766
There's a couple of ways that we


1278
00:38:20,766 --> 00:38:21,936
can solve this, but a really


1279
00:38:21,936 --> 00:38:23,796
elegant way is using key value


1280
00:38:23,796 --> 00:38:24,346
observing.


1281
00:38:25,596 --> 00:38:27,226
And I can do this in two steps.


1282
00:38:27,886 --> 00:38:30,056
The first is to define a


1283
00:38:30,056 --> 00:38:31,956
property on UserDefaults via an


1284
00:38:31,956 --> 00:38:32,496
extension.


1285
00:38:32,936 --> 00:38:34,246
This will give me a key path


1286
00:38:34,316 --> 00:38:35,556
that I can use for key value


1287
00:38:35,556 --> 00:38:36,106
observing.


1288
00:38:36,716 --> 00:38:38,426
Here, I have my isInfoButton --


1289
00:38:38,756 --> 00:38:40,346
or, sorry, isInforBarHidden


1290
00:38:40,346 --> 00:38:41,556
Boolean property, and I


1291
00:38:41,556 --> 00:38:43,136
implement it in terms of the


1292
00:38:43,136 --> 00:38:44,466
existing get and set methods on


1293
00:38:44,466 --> 00:38:45,186
UserDefaults.


1294
00:38:46,086 --> 00:38:48,136
Next, I go over to my view


1295
00:38:48,136 --> 00:38:49,626
controller where I register an


1296
00:38:49,626 --> 00:38:51,076
observation on the standard


1297
00:38:51,076 --> 00:38:51,786
UserDefaults.


1298
00:38:52,306 --> 00:38:53,616
It takes that key path that I


1299
00:38:53,696 --> 00:38:55,316
just defined in my extension and


1300
00:38:55,316 --> 00:38:56,726
the change handler which


1301
00:38:56,726 --> 00:38:58,046
encapsulates for the work that I


1302
00:38:58,046 --> 00:38:59,666
want done anytime that value


1303
00:38:59,666 --> 00:39:00,216
changes.


1304
00:39:01,946 --> 00:39:03,596
Importantly, I've also passed


1305
00:39:03,596 --> 00:39:05,996
the option initial to this


1306
00:39:05,996 --> 00:39:06,956
registration.


1307
00:39:07,476 --> 00:39:08,706
What this does is really cool.


1308
00:39:08,836 --> 00:39:10,486
It calls my change handler once


1309
00:39:10,536 --> 00:39:12,406
for free when I set it up, which


1310
00:39:12,406 --> 00:39:13,396
means that I don't have to have


1311
00:39:13,396 --> 00:39:14,946
this code duplicated anywhere


1312
00:39:14,946 --> 00:39:15,356
else.


1313
00:39:15,696 --> 00:39:17,126
I don't have to remember to call


1314
00:39:17,126 --> 00:39:18,276
one method when my view is


1315
00:39:18,276 --> 00:39:19,876
loaded and another when I


1316
00:39:19,876 --> 00:39:20,856
receive this update.


1317
00:39:21,146 --> 00:39:22,456
There's just one source of truth


1318
00:39:22,456 --> 00:39:23,536
for whether or not that's being


1319
00:39:23,536 --> 00:39:24,166
shown right now.


1320
00:39:24,836 --> 00:39:26,036
It's a really great way to make


1321
00:39:26,036 --> 00:39:27,256
sure that your app's interface


1322
00:39:27,256 --> 00:39:27,926
is consistent.


1323
00:39:30,286 --> 00:39:31,636
Now, everything looks great.


1324
00:39:32,376 --> 00:39:36,136
So we hope that those give you


1325
00:39:36,136 --> 00:39:37,536
some ideas about things to look


1326
00:39:37,536 --> 00:39:38,606
for in your applications.


1327
00:39:39,906 --> 00:39:41,546
If your application is already


1328
00:39:41,546 --> 00:39:43,466
using best practices, you might


1329
00:39:43,466 --> 00:39:44,626
already be doing some of these


1330
00:39:44,626 --> 00:39:45,906
and have nothing to change.


1331
00:39:47,246 --> 00:39:48,686
But speaking of best practices,


1332
00:39:48,886 --> 00:39:50,316
I want to talk about these new


1333
00:39:50,316 --> 00:39:52,046
deprecations on UIApplication.


1334
00:39:52,736 --> 00:39:55,236
As Steve mentioned, we've split


1335
00:39:55,236 --> 00:39:56,556
out the responsibilities for


1336
00:39:56,556 --> 00:39:58,746
user interface state and process


1337
00:39:58,746 --> 00:39:59,606
lifecycle from the


1338
00:39:59,606 --> 00:40:00,866
UIApplicationDelegate.


1339
00:40:01,496 --> 00:40:02,876
And to go along with that we've


1340
00:40:02,876 --> 00:40:04,426
also split them out of


1341
00:40:04,426 --> 00:40:05,276
UIApplication.


1342
00:40:05,926 --> 00:40:07,916
Now that you can have multiple


1343
00:40:07,916 --> 00:40:09,236
scenes of your application


1344
00:40:09,236 --> 00:40:10,886
visible at the same time, you


1345
00:40:10,886 --> 00:40:11,996
could have a one with a light


1346
00:40:11,996 --> 00:40:13,906
status bar content and one with


1347
00:40:13,906 --> 00:40:15,096
a dark status bar content.


1348
00:40:15,456 --> 00:40:16,856
And it doesn't make sense for us


1349
00:40:16,856 --> 00:40:18,116
to be able to return just one


1350
00:40:18,116 --> 00:40:19,906
value to you for this.


1351
00:40:20,146 --> 00:40:21,476
So because of that, we are


1352
00:40:21,476 --> 00:40:22,746
deprecating these properties on


1353
00:40:22,746 --> 00:40:24,256
UIApplication and giving you new


1354
00:40:24,256 --> 00:40:25,636
ones on the window scene.


1355
00:40:27,056 --> 00:40:28,376
We encourage you to adopt these


1356
00:40:28,416 --> 00:40:29,916
new properties even if you're


1357
00:40:29,916 --> 00:40:31,356
not planning to adopt support


1358
00:40:31,356 --> 00:40:32,536
for multiple windows this year


1359
00:40:32,536 --> 00:40:33,556
because it will put you in a


1360
00:40:33,556 --> 00:40:34,576
great place if you consider


1361
00:40:34,576 --> 00:40:34,976
doing it later.


1362
00:40:38,426 --> 00:40:39,336
We've covered a lot today.


1363
00:40:39,546 --> 00:40:40,606
So I just want to go over a


1364
00:40:40,606 --> 00:40:41,186
brief summary.


1365
00:40:42,086 --> 00:40:44,076
Earlier, Ken helped you envision


1366
00:40:44,076 --> 00:40:46,026
your applications using many of


1367
00:40:46,026 --> 00:40:47,176
the new powerful features that


1368
00:40:47,176 --> 00:40:48,556
we've added to multitasking this


1369
00:40:48,556 --> 00:40:48,766
year.


1370
00:40:49,556 --> 00:40:51,226
We think that users are really


1371
00:40:51,226 --> 00:40:52,456
going to come to expect these


1372
00:40:52,456 --> 00:40:53,556
out of apps because they're so


1373
00:40:53,556 --> 00:40:54,566
useful and convenient.


1374
00:40:54,896 --> 00:40:56,426
So we really want to encourage


1375
00:40:56,426 --> 00:40:58,426
you to adopt them.


1376
00:40:59,106 --> 00:41:00,706
We've made this API easy to


1377
00:41:00,706 --> 00:41:02,526
adapt for existing applications.


1378
00:41:02,746 --> 00:41:04,346
And we're also pushing it as the


1379
00:41:04,346 --> 00:41:05,776
best practice for new


1380
00:41:05,776 --> 00:41:06,476
applications.


1381
00:41:06,646 --> 00:41:07,796
In fact, this is going to be the


1382
00:41:07,796 --> 00:41:09,326
default template for new Xcode


1383
00:41:09,326 --> 00:41:10,766
projects using this UI scene


1384
00:41:10,766 --> 00:41:11,266
lifecycle.


1385
00:41:11,766 --> 00:41:14,956
I also want to encourage you,


1386
00:41:15,136 --> 00:41:16,836
because while there might be


1387
00:41:16,836 --> 00:41:18,506
some issues when you adopt these


1388
00:41:18,506 --> 00:41:19,826
new lifecycle changes, they


1389
00:41:19,826 --> 00:41:21,056
usually have fairly simple


1390
00:41:21,056 --> 00:41:22,826
solutions, including just the


1391
00:41:22,826 --> 00:41:24,096
best practices that we've talked


1392
00:41:24,096 --> 00:41:28,076
about in previous WWDCs.


1393
00:41:28,076 --> 00:41:29,646
And lastly, I want to encourage


1394
00:41:29,646 --> 00:41:30,886
you to move off of the


1395
00:41:30,886 --> 00:41:32,216
deprecated UIApplication


1396
00:41:32,216 --> 00:41:33,176
properties and onto


1397
00:41:33,176 --> 00:41:34,046
UIWindowScene.


1398
00:41:34,496 --> 00:41:35,656
These are available to you


1399
00:41:35,656 --> 00:41:37,556
anytime you're running on iOS 13


1400
00:41:37,556 --> 00:41:40,136
or iPadOS, and you don't need to


1401
00:41:40,136 --> 00:41:41,266
adopt multiple windows to take


1402
00:41:41,266 --> 00:41:41,926
advantage of them.


1403
00:41:42,616 --> 00:41:44,746
We have a couple more talks


1404
00:41:44,846 --> 00:41:46,326
later in the week about advanced


1405
00:41:46,326 --> 00:41:49,256
topics in multitasking, and also


1406
00:41:49,256 --> 00:41:51,466
some labs this week, including


1407
00:41:51,466 --> 00:41:52,686
ones focused specifically on


1408
00:41:52,686 --> 00:41:53,906
multitasking on Thursday.


1409
00:41:54,286 --> 00:41:56,816
I want to thank everyone for


1410
00:41:56,816 --> 00:41:57,946
coming out today and hope you


1411
00:41:57,946 --> 00:41:58,576
have a great week.


1412
00:41:59,508 --> 00:42:01,508
[ Applause ]

