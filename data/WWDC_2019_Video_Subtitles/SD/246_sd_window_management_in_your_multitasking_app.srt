1
00:00:00,506 --> 00:00:04,500
[ Music ]


2
00:00:08,496 --> 00:00:09,406
>> Hi, everybody.


3
00:00:09,466 --> 00:00:10,886
I'm Giovanni Tarducci, from the


4
00:00:10,886 --> 00:00:12,316
System UI SpringBoard team.


5
00:00:12,546 --> 00:00:13,966
And today, I'm happy to tell you


6
00:00:14,046 --> 00:00:15,246
everything about managing your


7
00:00:15,246 --> 00:00:16,746
windows on iPadOS.


8
00:00:17,696 --> 00:00:19,406
We are introducing three new


9
00:00:19,406 --> 00:00:21,006
API's, to do just that.


10
00:00:21,196 --> 00:00:22,596
To respectively activate,


11
00:00:22,716 --> 00:00:24,926
refresh, or destroy any of your


12
00:00:24,926 --> 00:00:25,646
scene sessions.


13
00:00:26,406 --> 00:00:28,216
But let's jump right into a demo


14
00:00:28,506 --> 00:00:29,846
of these API's at work, in an


15
00:00:29,846 --> 00:00:30,956
app we've been prototyping.


16
00:00:38,886 --> 00:00:42,086
Okay. We call it Clown Town.


17
00:00:42,246 --> 00:00:43,876
And it's a great new way to get


18
00:00:43,876 --> 00:00:45,056
a clown for your party.


19
00:00:45,706 --> 00:00:47,456
It opens to a full-screen map,


20
00:00:47,766 --> 00:00:48,946
showing all the clowns in my


21
00:00:48,946 --> 00:00:49,456
network.


22
00:00:49,846 --> 00:00:51,346
I can tap on any of their


23
00:00:51,346 --> 00:00:53,206
markers, to see more about them.


24
00:00:54,376 --> 00:00:56,336
The implementation is straight


25
00:00:56,336 --> 00:00:57,386
forward, as well.


26
00:00:57,586 --> 00:00:59,146
The detail view controller just


27
00:00:59,146 --> 00:01:00,606
knows how to show a clown with a


28
00:01:00,606 --> 00:01:01,336
given ID.


29
00:01:01,696 --> 00:01:03,206
While the map view controller,


30
00:01:03,326 --> 00:01:04,506
delegates everything,


31
00:01:04,656 --> 00:01:06,426
presentation, animation and


32
00:01:06,426 --> 00:01:07,706
gestures to UIKit.


33
00:01:08,056 --> 00:01:09,186
Through the presentviewcontroller


34
00:01:09,186 --> 00:01:10,636
animated API.


35
00:01:11,616 --> 00:01:12,426
Well, with the enhancement to


36
00:01:12,426 --> 00:01:14,876
multitasking, we can push this


37
00:01:14,876 --> 00:01:16,316
delegation model to the next


38
00:01:16,316 --> 00:01:16,586
level.


39
00:01:16,876 --> 00:01:18,656
And gain powerful new features


40
00:01:18,656 --> 00:01:19,106
for free.


41
00:01:19,686 --> 00:01:20,936
Taxes may apply at checkout.


42
00:01:22,246 --> 00:01:23,886
So, we did start by adding an


43
00:01:23,886 --> 00:01:25,556
"open in new window" button in


44
00:01:25,556 --> 00:01:26,216
the data view.


45
00:01:27,156 --> 00:01:29,126
So, that all our users are going


46
00:01:29,126 --> 00:01:30,446
to be able to discover this


47
00:01:30,446 --> 00:01:31,106
great new feature.


48
00:01:31,846 --> 00:01:33,976
When tapped, we call new request


49
00:01:33,976 --> 00:01:36,716
scene session activation API, to


50
00:01:36,716 --> 00:01:38,666
open this clown in an auxiliary


51
00:01:38,776 --> 00:01:39,616
dedicated window.


52
00:01:40,156 --> 00:01:41,686
Let's do that.


53
00:01:41,886 --> 00:01:43,546
Already, I can keep browsing my


54
00:01:43,546 --> 00:01:44,926
map and checking out and


55
00:01:44,926 --> 00:01:46,146
comparing other clowns.


56
00:01:46,836 --> 00:01:48,606
But not only that, we can now


57
00:01:48,606 --> 00:01:50,466
have the whole system working


58
00:01:50,466 --> 00:01:51,026
for us.


59
00:01:51,576 --> 00:01:54,156
We can resize the windows, move


60
00:01:54,156 --> 00:01:54,776
them around.


61
00:01:55,816 --> 00:01:57,646
Keep opening new windows.


62
00:01:58,056 --> 00:01:59,416
And the one I had on my side, is


63
00:01:59,416 --> 00:02:00,546
now in its own space in the


64
00:02:00,546 --> 00:02:00,906
switcher.


65
00:02:01,806 --> 00:02:03,396
Now, I can make this one a slide


66
00:02:03,396 --> 00:02:06,216
over, move it around, stash it.


67
00:02:06,866 --> 00:02:09,306
And maybe opening another couple


68
00:02:09,306 --> 00:02:13,876
details, Crusty and a last one,


69
00:02:15,416 --> 00:02:17,536
Mr. Happy here.


70
00:02:18,356 --> 00:02:20,816
Okay, so, with the swipe app, I


71
00:02:20,816 --> 00:02:22,526
can check out my whole stack of


72
00:02:22,526 --> 00:02:23,276
slide overs.


73
00:02:23,716 --> 00:02:25,466
And I can even quickly swipe


74
00:02:25,466 --> 00:02:26,676
through them all, just like


75
00:02:26,676 --> 00:02:26,896
that.


76
00:02:26,956 --> 00:02:28,886
I can even go back from being a


77
00:02:28,886 --> 00:02:30,216
slide over, to being next to the


78
00:02:30,216 --> 00:02:30,766
map again.


79
00:02:31,366 --> 00:02:32,486
Now, let's pause for a second.


80
00:02:32,816 --> 00:02:34,346
We did achieve all of these,


81
00:02:34,406 --> 00:02:35,606
again, by delegating,


82
00:02:35,606 --> 00:02:37,296
presentation, animation and


83
00:02:37,296 --> 00:02:38,816
more, to the system.


84
00:02:39,166 --> 00:02:40,756
So far, through the single


85
00:02:40,826 --> 00:02:42,546
request scene session activation


86
00:02:43,686 --> 00:02:43,786
API.


87
00:02:44,166 --> 00:02:45,856
Now, I only now noticed that Mr.


88
00:02:45,856 --> 00:02:47,396
Happy here has got a one-star


89
00:02:47,396 --> 00:02:47,706
rating.


90
00:02:48,196 --> 00:02:49,716
Probably not a good clown.


91
00:02:50,116 --> 00:02:51,506
So, let's get rid of him and his


92
00:02:51,506 --> 00:02:53,516
window, through new request


93
00:02:53,576 --> 00:02:55,326
scene session destruction API,


94
00:02:55,816 --> 00:02:56,896
which I'm calling for the upper


95
00:02:56,896 --> 00:02:58,116
right down button here.


96
00:02:58,496 --> 00:02:58,976
Let's do that.


97
00:02:58,976 --> 00:03:00,896
And he's gone for good.


98
00:03:01,126 --> 00:03:02,506
Now, I remembered the one I had


99
00:03:02,506 --> 00:03:03,896
in my switcher, had a five-star


100
00:03:03,896 --> 00:03:04,176
rating.


101
00:03:04,336 --> 00:03:06,236
So, let me open her again.


102
00:03:07,606 --> 00:03:09,136
Notice how she wasn't


103
00:03:09,296 --> 00:03:09,856
duplicated.


104
00:03:10,286 --> 00:03:11,496
This is Clown Town policy.


105
00:03:11,496 --> 00:03:13,406
And it's easily enforced, just


106
00:03:13,406 --> 00:03:15,056
by asking the request session


107
00:03:15,056 --> 00:03:16,836
activation API to activate and


108
00:03:16,836 --> 00:03:18,166
existing session instead of a


109
00:03:18,166 --> 00:03:18,526
new one.


110
00:03:19,656 --> 00:03:21,516
I can even track her


111
00:03:21,516 --> 00:03:22,156
availability.


112
00:03:22,446 --> 00:03:23,726
She was checked and found


113
00:03:23,726 --> 00:03:25,056
available, as I can tell from


114
00:03:25,056 --> 00:03:26,456
the green navigation bar.


115
00:03:26,746 --> 00:03:29,136
Also, an instant book button did


116
00:03:29,136 --> 00:03:31,556
appear on the left side.


117
00:03:31,896 --> 00:03:33,336
If her availability were to


118
00:03:33,336 --> 00:03:34,586
change, I will get a


119
00:03:34,586 --> 00:03:35,446
notification.


120
00:03:35,446 --> 00:03:36,956
I will update this UI to have


121
00:03:36,956 --> 00:03:38,656
the navigation bar now in red.


122
00:03:39,116 --> 00:03:41,216
And I will call the new request


123
00:03:41,216 --> 00:03:43,706
scene session refresh API, to


124
00:03:43,706 --> 00:03:46,056
update, beside other things, the


125
00:03:46,056 --> 00:03:48,166
snapshot of this UI, for it to


126
00:03:48,166 --> 00:03:49,656
be represented in the switchers.


127
00:03:50,526 --> 00:03:52,336
But I did not decide yet.


128
00:03:52,336 --> 00:03:54,996
So, let us instead start


129
00:03:55,066 --> 00:03:57,266
tracking them all, just like


130
00:03:57,266 --> 00:03:57,586
this.


131
00:03:58,736 --> 00:04:00,626
Say now that I do background the


132
00:04:00,626 --> 00:04:01,986
app, to do something else.


133
00:04:02,036 --> 00:04:03,486
Maybe recommend this app to my


134
00:04:03,486 --> 00:04:03,946
friends.


135
00:04:04,326 --> 00:04:06,016
And show the current collection


136
00:04:06,016 --> 00:04:06,636
I have right now.


137
00:04:07,556 --> 00:04:09,276
But I'm getting notifications


138
00:04:09,276 --> 00:04:09,586
already.


139
00:04:09,856 --> 00:04:11,196
A bunch of them are no longer


140
00:04:11,196 --> 00:04:11,606
available.


141
00:04:12,176 --> 00:04:13,286
I cannot recall their names.


142
00:04:13,286 --> 00:04:15,356
So, let me instead use app


143
00:04:15,356 --> 00:04:17,216
expose, to glance at all my


144
00:04:17,216 --> 00:04:18,106
windows at once.


145
00:04:18,676 --> 00:04:19,476
And there we go.


146
00:04:19,856 --> 00:04:21,346
Their snapshots were updated,


147
00:04:21,495 --> 00:04:22,186
which is great.


148
00:04:22,376 --> 00:04:23,696
Because I can manage my window


149
00:04:23,696 --> 00:04:24,786
right here and there.


150
00:04:25,006 --> 00:04:26,586
A couple of swipe ups and I'm


151
00:04:27,606 --> 00:04:27,696
done.


152
00:04:27,936 --> 00:04:28,956
Looks like these clowns are


153
00:04:28,956 --> 00:04:29,776
running out fast.


154
00:04:29,846 --> 00:04:31,606
So, let me go ahead and book the


155
00:04:31,606 --> 00:04:33,366
great BuBu LuBu, so we can go


156
00:04:33,366 --> 00:04:34,466
back to our party.


157
00:04:35,916 --> 00:04:38,816
Oops, see you later Clown Town.


158
00:04:39,686 --> 00:04:40,456
Okay, so...


159
00:04:41,016 --> 00:04:42,506
[ Applause ]


160
00:04:42,506 --> 00:04:42,746
Thank you.


161
00:04:43,111 --> 00:04:45,111
[ Applause ]


162
00:04:45,206 --> 00:04:46,296
So, let's check out the API's,


163
00:04:46,986 --> 00:04:47,996
activating a session.


164
00:04:48,526 --> 00:04:50,736
First of all, you activate a


165
00:04:50,736 --> 00:04:52,336
session only in response to


166
00:04:52,336 --> 00:04:53,756
direct and local user


167
00:04:53,756 --> 00:04:54,336
interaction.


168
00:04:55,006 --> 00:04:56,876
The user has to touch the screen


169
00:04:57,306 --> 00:04:59,976
for it to happen.


170
00:04:59,976 --> 00:05:01,106
And you do so by calling the new


171
00:05:01,106 --> 00:05:02,656
request scene session activation


172
00:05:02,656 --> 00:05:04,466
API on UI application.


173
00:05:04,756 --> 00:05:06,216
To either activate an existing


174
00:05:06,216 --> 00:05:07,326
session or a new one.


175
00:05:08,736 --> 00:05:10,336
Now, in Clown Town, when we


176
00:05:10,336 --> 00:05:12,026
first launched, UIApplication


177
00:05:12,026 --> 00:05:14,186
had just one open session.


178
00:05:14,676 --> 00:05:15,666
The one with our map


179
00:05:15,666 --> 00:05:16,336
configuration.


180
00:05:17,966 --> 00:05:19,916
All in just window, displaying


181
00:05:19,916 --> 00:05:21,006
our whole view hierarchy.


182
00:05:21,586 --> 00:05:23,656
When the open a new window


183
00:05:23,656 --> 00:05:25,286
button was pressed, through


184
00:05:25,286 --> 00:05:26,706
delegation, the detail view


185
00:05:26,706 --> 00:05:28,246
controller gets to the map view


186
00:05:28,246 --> 00:05:29,526
controller, which is presenting


187
00:05:29,526 --> 00:05:29,646
it.


188
00:05:30,336 --> 00:05:31,776
And the map view controller


189
00:05:31,826 --> 00:05:33,716
calls this method that we added


190
00:05:33,906 --> 00:05:35,186
on our application delegate.


191
00:05:36,136 --> 00:05:38,406
Here, since we have the no


192
00:05:38,406 --> 00:05:40,036
duplicate policy, we check for


193
00:05:40,096 --> 00:05:41,906
any existing session for this


194
00:05:41,906 --> 00:05:42,486
given clown.


195
00:05:43,076 --> 00:05:44,376
Now, on first launch, we won't


196
00:05:44,376 --> 00:05:44,886
find any.


197
00:05:45,016 --> 00:05:45,946
So, we're going to end up


198
00:05:46,016 --> 00:05:47,616
passing nil here, at runtime.


199
00:05:48,196 --> 00:05:49,386
Pass nil here, to this


200
00:05:49,386 --> 00:05:51,506
parameter, requests a brand-new


201
00:05:51,506 --> 00:05:53,126
scene session to be created.


202
00:05:53,756 --> 00:05:55,856
We then create a userActivity


203
00:05:55,856 --> 00:05:56,576
for this clown.


204
00:05:56,696 --> 00:05:58,336
And the userActivity is going to


205
00:05:58,336 --> 00:06:00,866
be given back to us by UIKit,


206
00:06:01,566 --> 00:06:03,666
later on along the delegate


207
00:06:03,666 --> 00:06:04,656
chain, as we'll see.


208
00:06:05,876 --> 00:06:07,356
The options objects, let's me


209
00:06:07,356 --> 00:06:08,776
specify a requesting scene,


210
00:06:09,176 --> 00:06:10,936
which is meant to be the one


211
00:06:10,936 --> 00:06:12,526
where this request was user


212
00:06:12,596 --> 00:06:13,256
initiated.


213
00:06:13,816 --> 00:06:15,596
The system uses this information


214
00:06:15,596 --> 00:06:17,276
to avoid replacing the


215
00:06:17,466 --> 00:06:18,856
requestingScene with the


216
00:06:18,856 --> 00:06:19,686
activated one.


217
00:06:20,306 --> 00:06:21,416
And for other navigation


218
00:06:21,416 --> 00:06:21,896
purposes.


219
00:06:22,876 --> 00:06:23,906
We can now call the API.


220
00:06:25,206 --> 00:06:26,276
The new window is shown.


221
00:06:26,476 --> 00:06:28,046
And alongside, a new session


222
00:06:28,046 --> 00:06:29,336
hierarchy has been created.


223
00:06:30,556 --> 00:06:32,616
As I mentioned, there are two


224
00:06:32,726 --> 00:06:34,116
key delicate methods you


225
00:06:34,206 --> 00:06:35,636
definitely want to implement, in


226
00:06:35,636 --> 00:06:37,516
order for your app to have a say


227
00:06:37,516 --> 00:06:39,286
in what actually gets created.


228
00:06:39,366 --> 00:06:40,596
And how it gets configured.


229
00:06:41,776 --> 00:06:43,826
So, let's step back and go back


230
00:06:43,826 --> 00:06:45,376
to when we called the API.


231
00:06:45,376 --> 00:06:49,536
As soon as we do so, UIKit


232
00:06:49,756 --> 00:06:51,026
creates a brand-new scene


233
00:06:51,026 --> 00:06:51,386
session.


234
00:06:51,586 --> 00:06:53,126
And let's you specify a


235
00:06:53,126 --> 00:06:54,846
configuration for it, by calling


236
00:06:55,116 --> 00:06:56,466
configuration for connecting


237
00:06:56,466 --> 00:06:57,896
scene session on your app


238
00:06:58,066 --> 00:06:58,456
delegate.


239
00:06:58,766 --> 00:06:59,836
You definitely want to implement


240
00:06:59,836 --> 00:07:00,196
this one.


241
00:07:00,506 --> 00:07:02,296
And here, you can inspect the


242
00:07:02,296 --> 00:07:03,156
user activity.


243
00:07:03,516 --> 00:07:05,136
Which is given back to you now


244
00:07:05,136 --> 00:07:06,486
through the UI scene connecting


245
00:07:06,486 --> 00:07:08,756
options, to pick a session.


246
00:07:09,146 --> 00:07:12,586
In my case, it's the detail


247
00:07:12,726 --> 00:07:13,376
configuration.


248
00:07:14,216 --> 00:07:15,706
Now, if your configuration


249
00:07:15,706 --> 00:07:17,556
specifies a storyboard, as I do


250
00:07:17,556 --> 00:07:18,036
recommend.


251
00:07:18,266 --> 00:07:19,916
At this point, UIKit is able to


252
00:07:19,916 --> 00:07:21,086
go ahead and create the whole


253
00:07:21,086 --> 00:07:21,646
view hierarchy.


254
00:07:21,646 --> 00:07:23,386
And you just need to configure


255
00:07:23,386 --> 00:07:23,976
that.


256
00:07:24,226 --> 00:07:25,556
You do so by implementing


257
00:07:25,556 --> 00:07:27,186
scenewillConnectToSession on


258
00:07:27,186 --> 00:07:28,026
your scene delegate.


259
00:07:28,886 --> 00:07:30,006
In there again, you'll be able


260
00:07:30,006 --> 00:07:31,476
to find your user activity and


261
00:07:31,476 --> 00:07:32,416
the connecting options.


262
00:07:32,886 --> 00:07:34,416
And you configure your window


263
00:07:34,416 --> 00:07:35,646
and view controller hierarchy


264
00:07:35,746 --> 00:07:36,726
for it.


265
00:07:38,316 --> 00:07:39,996
Now, that was a new session.


266
00:07:40,126 --> 00:07:41,606
What about an existing session?


267
00:07:42,676 --> 00:07:44,516
If the session is still is


268
00:07:44,516 --> 00:07:46,306
existing, we go straight to the


269
00:07:46,306 --> 00:07:47,046
scene delegate.


270
00:07:47,236 --> 00:07:49,016
And if the session had been


271
00:07:49,016 --> 00:07:50,866
disconnected in the meantime, we


272
00:07:50,866 --> 00:07:52,506
call sceneWillConnectToSession.


273
00:07:53,576 --> 00:07:54,946
But if the scene is still


274
00:07:54,946 --> 00:07:56,616
connected, we'll just go to the


275
00:07:56,616 --> 00:07:58,286
continueUserActivity one.


276
00:07:58,416 --> 00:08:00,436
You definitely want to implement


277
00:08:00,436 --> 00:08:00,636
those.


278
00:08:01,456 --> 00:08:03,456
To recap, you activate a


279
00:08:03,456 --> 00:08:04,886
session, only in response to


280
00:08:04,886 --> 00:08:06,286
direct user request.


281
00:08:06,416 --> 00:08:08,726
To either activate a new or


282
00:08:08,726 --> 00:08:09,616
existing session.


283
00:08:10,146 --> 00:08:12,516
And you want to implement your


284
00:08:12,516 --> 00:08:14,156
app and scene delegates methods,


285
00:08:14,326 --> 00:08:16,116
to be able to configure both


286
00:08:16,246 --> 00:08:18,296
session and the window for the


287
00:08:18,296 --> 00:08:20,856
activity at hand.


288
00:08:20,966 --> 00:08:22,676
Now, onto refreshing a session.


289
00:08:23,586 --> 00:08:25,266
You refresh for user-relevant


290
00:08:25,266 --> 00:08:26,436
updates from your app.


291
00:08:26,436 --> 00:08:28,306
A couple of examples.


292
00:08:28,516 --> 00:08:29,966
It could be that you have


293
00:08:30,076 --> 00:08:32,256
multiple windows showing and


294
00:08:32,256 --> 00:08:34,346
working on the same assets.


295
00:08:34,506 --> 00:08:36,106
And the user may have modified


296
00:08:36,106 --> 00:08:38,436
them from a window or even


297
00:08:38,496 --> 00:08:39,306
another device.


298
00:08:39,306 --> 00:08:40,446
And now you want to keep them in


299
00:08:40,446 --> 00:08:40,826
sync.


300
00:08:40,926 --> 00:08:41,916
You want to have their


301
00:08:41,916 --> 00:08:43,525
presentation being updated in


302
00:08:43,525 --> 00:08:45,116
these features and more.


303
00:08:45,876 --> 00:08:47,906
Or you just fetched new data and


304
00:08:47,906 --> 00:08:49,646
it is available for the user to


305
00:08:49,646 --> 00:08:50,126
be seen.


306
00:08:50,556 --> 00:08:52,286
Or you want to update some scene


307
00:08:52,286 --> 00:08:53,746
and session metadata, as we'll


308
00:08:53,746 --> 00:08:53,976
see.


309
00:08:55,376 --> 00:08:57,016
You do so by calling at any


310
00:08:57,016 --> 00:08:57,706
time, the


311
00:08:57,706 --> 00:08:59,856
requestSceneSessionRefresh API


312
00:09:00,226 --> 00:09:01,196
on UIApplication.


313
00:09:02,296 --> 00:09:04,576
By just passing in the session you


314
00:09:04,576 --> 00:09:05,866
wish to be refreshed.


315
00:09:07,716 --> 00:09:10,126
Now, what is it actually that


316
00:09:10,126 --> 00:09:12,056
this API affords you to update?


317
00:09:12,646 --> 00:09:14,776
You can update the state


318
00:09:14,776 --> 00:09:16,436
restoration user activity for


319
00:09:16,436 --> 00:09:16,996
the session.


320
00:09:17,416 --> 00:09:18,676
You can update the scene


321
00:09:18,786 --> 00:09:20,046
activation conditions.


322
00:09:20,536 --> 00:09:23,116
And your UI, which is eventually


323
00:09:23,186 --> 00:09:24,396
going to be captured in a


324
00:09:24,396 --> 00:09:25,256
snapshot, again.


325
00:09:26,106 --> 00:09:28,416
As we saw in Clown Town, thanks


326
00:09:28,466 --> 00:09:30,256
to those updated snapshots, the


327
00:09:30,256 --> 00:09:31,866
app felt alive in the switcher.


328
00:09:32,216 --> 00:09:33,956
And we were able to confidently


329
00:09:33,956 --> 00:09:35,166
act on the incoming data.


330
00:09:35,706 --> 00:09:37,396
Without having to navigate to


331
00:09:37,506 --> 00:09:39,016
each and every session, just to


332
00:09:39,016 --> 00:09:40,796
find out, once connected and


333
00:09:40,796 --> 00:09:42,206
updated, that we didn't even


334
00:09:42,206 --> 00:09:42,886
want them anymore.


335
00:09:43,496 --> 00:09:47,426
On an architectural note, you


336
00:09:47,426 --> 00:09:48,996
want to listen for rare model


337
00:09:48,996 --> 00:09:50,226
changes for which you want to


338
00:09:50,226 --> 00:09:50,956
call the API.


339
00:09:51,446 --> 00:09:52,886
Both in the interested view


340
00:09:52,886 --> 00:09:54,676
controller, as well as in a


341
00:09:54,676 --> 00:09:55,576
long-lived object.


342
00:09:56,656 --> 00:09:58,296
Because if the scene is still


343
00:09:58,296 --> 00:10:00,676
connected, either in the


344
00:10:00,676 --> 00:10:01,856
foreground or the background, it


345
00:10:01,856 --> 00:10:03,666
can listen to the notification


346
00:10:03,666 --> 00:10:03,976
itself.


347
00:10:04,046 --> 00:10:05,736
And call the API, which is going


348
00:10:05,846 --> 00:10:07,306
to do the right thing


349
00:10:07,396 --> 00:10:07,936
internally.


350
00:10:08,966 --> 00:10:10,946
If the scene has been


351
00:10:10,946 --> 00:10:12,246
disconnected though, the view


352
00:10:12,246 --> 00:10:13,336
controller won't be there


353
00:10:13,336 --> 00:10:13,646
anymore.


354
00:10:14,196 --> 00:10:15,666
And so, the long-lived object


355
00:10:15,786 --> 00:10:17,946
can step in, figure that out and


356
00:10:17,946 --> 00:10:19,956
call to refresh API in its


357
00:10:19,956 --> 00:10:20,396
place.


358
00:10:21,056 --> 00:10:22,646
The scene is going then to be


359
00:10:22,726 --> 00:10:23,636
background connected.


360
00:10:23,976 --> 00:10:25,336
And the view controller will


361
00:10:25,336 --> 00:10:27,016
have a chance to update itself.


362
00:10:27,516 --> 00:10:29,076
And the snapshot will be


363
00:10:29,076 --> 00:10:29,476
captured.


364
00:10:30,036 --> 00:10:33,196
As a summary, you want to


365
00:10:33,196 --> 00:10:34,896
refresh for user relevant


366
00:10:34,896 --> 00:10:36,006
updates from your app.


367
00:10:36,946 --> 00:10:39,346
Make your layout time fast, so


368
00:10:39,346 --> 00:10:40,716
that we can quickly capture the


369
00:10:40,716 --> 00:10:41,216
snapshot.


370
00:10:41,846 --> 00:10:43,956
And do not rely on it being


371
00:10:43,956 --> 00:10:45,136
executed immediately.


372
00:10:45,446 --> 00:10:46,736
The system reserves the ability


373
00:10:46,886 --> 00:10:48,296
to fulfill this request at a


374
00:10:48,296 --> 00:10:49,376
later point in time, if


375
00:10:49,376 --> 00:10:49,906
necessary.


376
00:10:51,116 --> 00:10:53,526
Now, destroying a session, also


377
00:10:53,526 --> 00:10:55,456
known as going away with style.


378
00:10:56,556 --> 00:10:59,886
You destroy a session for direct


379
00:11:00,106 --> 00:11:00,856
user request.


380
00:11:01,086 --> 00:11:02,646
Or if you have a window, which


381
00:11:02,646 --> 00:11:04,606
is an auxiliary window dedicated


382
00:11:04,606 --> 00:11:05,916
to show a piece of data, an


383
00:11:05,916 --> 00:11:07,696
item, that the user already


384
00:11:07,696 --> 00:11:09,146
deleted from somewhere else.


385
00:11:09,146 --> 00:11:10,876
Another window or even another


386
00:11:10,876 --> 00:11:11,386
device.


387
00:11:11,896 --> 00:11:14,476
You do so by calling, at any


388
00:11:14,476 --> 00:11:15,386
time, the


389
00:11:15,386 --> 00:11:17,036
requestSceneSessionDestruction


390
00:11:17,036 --> 00:11:18,476
API, on UIApplication.


391
00:11:18,826 --> 00:11:20,216
Which takes in the session you


392
00:11:20,216 --> 00:11:21,106
wish to be destroyed.


393
00:11:21,106 --> 00:11:23,646
As well as an options object.


394
00:11:24,256 --> 00:11:26,516
This option lets you specify a


395
00:11:26,516 --> 00:11:27,606
DismissalAnimation.


396
00:11:28,416 --> 00:11:29,776
Which the system is going to


397
00:11:29,776 --> 00:11:32,086
take into account, if the scene


398
00:11:32,146 --> 00:11:33,756
happens to be foreground at that


399
00:11:33,756 --> 00:11:34,086
moment.


400
00:11:35,156 --> 00:11:36,626
Now, let me be clear, the


401
00:11:36,626 --> 00:11:38,726
session is going to go away and


402
00:11:38,726 --> 00:11:39,556
won't come back.


403
00:11:40,056 --> 00:11:41,946
But the animation lets you


404
00:11:41,946 --> 00:11:44,006
acknowledge the user's intent in


405
00:11:44,006 --> 00:11:44,666
getting rid of it.


406
00:11:45,576 --> 00:11:46,776
So, which one to pick, then?


407
00:11:47,376 --> 00:11:49,026
The main draft is a great


408
00:11:49,096 --> 00:11:49,536
paradigm.


409
00:11:50,266 --> 00:11:51,826
When the main draft is


410
00:11:51,876 --> 00:11:53,356
cancelled, without saving, the


411
00:11:53,626 --> 00:11:55,556
user is explicitly asking for


412
00:11:55,556 --> 00:11:56,706
its content to be destroyed.


413
00:11:57,166 --> 00:11:58,336
Which is the common case, when


414
00:11:58,386 --> 00:11:59,626
getting rid of a window, as we


415
00:11:59,626 --> 00:12:00,356
saw in Clown Town.


416
00:12:01,086 --> 00:12:02,626
You pick the standard animation,


417
00:12:02,626 --> 00:12:05,236
in these cases, to acknowledge


418
00:12:05,426 --> 00:12:05,966
this intent.


419
00:12:06,566 --> 00:12:09,796
When to draft the assent, the


420
00:12:09,796 --> 00:12:11,646
user is not asking for his


421
00:12:11,646 --> 00:12:12,576
content to be destroyed.


422
00:12:13,276 --> 00:12:14,416
The session though, will be


423
00:12:14,416 --> 00:12:15,866
destroyed as a side effect of


424
00:12:15,946 --> 00:12:17,716
the user accepting the final


425
00:12:17,716 --> 00:12:19,096
purpose of the session.


426
00:12:19,506 --> 00:12:21,256
Which, in the mail case, is


427
00:12:21,316 --> 00:12:22,126
sending the e-mail.


428
00:12:22,506 --> 00:12:23,816
In the Clown Town case, was


429
00:12:23,906 --> 00:12:25,296
booking the clown, if you are in


430
00:12:25,296 --> 00:12:25,866
tracking mode.


431
00:12:26,846 --> 00:12:28,426
You pick commit to acknowledge


432
00:12:28,726 --> 00:12:29,886
that the final purpose of the


433
00:12:29,886 --> 00:12:32,316
session has been approved by the


434
00:12:32,316 --> 00:12:32,686
user.


435
00:12:34,126 --> 00:12:36,996
Now, when the draft is cancelled


436
00:12:37,736 --> 00:12:39,866
and saved, the user again, is


437
00:12:39,976 --> 00:12:41,396
not asking for his content to be


438
00:12:41,396 --> 00:12:41,806
destroyed.


439
00:12:42,356 --> 00:12:43,466
The session though, will be


440
00:12:43,466 --> 00:12:45,036
destroyed as a side effect of


441
00:12:45,036 --> 00:12:47,096
the user declining from taking


442
00:12:47,096 --> 00:12:48,206
action right now.


443
00:12:49,136 --> 00:12:50,086
You pick decline, in these


444
00:12:50,086 --> 00:12:51,506
cases, to acknowledge that the


445
00:12:51,506 --> 00:12:53,516
final purpose of the session has


446
00:12:53,516 --> 00:12:55,106
not been fulfilled yet.


447
00:12:58,436 --> 00:13:01,166
To recap, you destroy a session


448
00:13:01,256 --> 00:13:02,736
in response to user request.


449
00:13:02,846 --> 00:13:04,476
Either locally or remotely.


450
00:13:04,726 --> 00:13:06,136
And you pick the animation style


451
00:13:06,536 --> 00:13:07,986
to best acknowledge the user's


452
00:13:07,986 --> 00:13:10,166
intent in getting rid of it.


453
00:13:10,736 --> 00:13:12,846
To recap, we've seen how through


454
00:13:12,846 --> 00:13:14,846
these new API's, you can empower


455
00:13:14,936 --> 00:13:16,096
your user's actions.


456
00:13:16,596 --> 00:13:18,966
And you can delegate complexity


457
00:13:19,016 --> 00:13:20,396
to the system, while gaining


458
00:13:20,476 --> 00:13:22,616
powerful new features, easily


459
00:13:22,616 --> 00:13:24,586
discoverable by all your users.


460
00:13:24,666 --> 00:13:24,976
Thank you.


461
00:13:25,508 --> 00:13:27,508
[ Applause ]

