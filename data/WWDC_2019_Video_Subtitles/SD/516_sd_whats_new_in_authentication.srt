1
00:00:00,506 --> 00:00:05,500
[ Music ]


2
00:00:09,516 --> 00:00:13,500
[ Applause ]


3
00:00:15,666 --> 00:00:16,796
>> Hello, everyone.


4
00:00:17,466 --> 00:00:20,176
My name is Ricky Mondello, and I


5
00:00:20,246 --> 00:00:22,016
am so excited to be here to


6
00:00:22,016 --> 00:00:24,126
today to tell you about What's


7
00:00:24,126 --> 00:00:25,926
New in Authentication on Apple


8
00:00:25,926 --> 00:00:28,626
platforms, including some very


9
00:00:28,626 --> 00:00:30,856
exciting and new APIs in the


10
00:00:30,856 --> 00:00:32,156
Authentication Services


11
00:00:32,156 --> 00:00:32,606
framework.


12
00:00:33,596 --> 00:00:36,136
My goal is to help you get your


13
00:00:36,136 --> 00:00:38,526
users signed into your apps as


14
00:00:38,526 --> 00:00:40,706
quickly and securely as


15
00:00:40,706 --> 00:00:41,196
possible.


16
00:00:44,736 --> 00:00:47,086
We're going to talk about five


17
00:00:47,126 --> 00:00:50,426
topics today starting with Sign


18
00:00:50,426 --> 00:00:52,000
In with Apple.


19
00:00:54,606 --> 00:00:56,736
Sign In with Apple is an easy


20
00:00:56,736 --> 00:00:59,146
and secure way for users to sign


21
00:00:59,146 --> 00:00:59,936
into your apps.


22
00:01:00,936 --> 00:01:03,926
Signing in is as quick as a few


23
00:01:03,926 --> 00:01:10,616
taps and a face ID check.


24
00:01:10,836 --> 00:01:12,736
Sign In with Apple is a private


25
00:01:12,736 --> 00:01:14,626
alternative to other single


26
00:01:14,626 --> 00:01:16,466
sign-on providers that you might


27
00:01:16,466 --> 00:01:16,986
be aware of.


28
00:01:18,326 --> 00:01:19,746
And you probably already get the


29
00:01:19,746 --> 00:01:21,266
gist of what this capability is


30
00:01:21,266 --> 00:01:21,776
about.


31
00:01:22,276 --> 00:01:23,716
But what I want to do is


32
00:01:23,716 --> 00:01:25,616
emphasize a few key points


33
00:01:25,616 --> 00:01:27,656
related to how Authentication


34
00:01:27,656 --> 00:01:29,136
works already in your apps.


35
00:01:30,366 --> 00:01:32,396
And the first is that for your


36
00:01:32,396 --> 00:01:35,196
users, Sign In with Apple is


37
00:01:35,196 --> 00:01:36,776
easier to use than passwords.


38
00:01:37,986 --> 00:01:40,356
People generally don't love


39
00:01:40,606 --> 00:01:41,626
managing passwords.


40
00:01:42,516 --> 00:01:44,166
And when users don't have a


41
00:01:44,166 --> 00:01:46,386
password, that password can't be


42
00:01:46,386 --> 00:01:48,286
a bad password, and it can't get


43
00:01:48,286 --> 00:01:50,136
phished, which is good for your


44
00:01:50,136 --> 00:01:52,136
users, but it's also good for


45
00:01:52,136 --> 00:01:52,446
you.


46
00:01:53,786 --> 00:01:56,306
And for you specifically, these


47
00:01:56,306 --> 00:01:58,526
accounts are great accounts.


48
00:01:59,276 --> 00:02:00,776
Every single one of the accounts


49
00:02:00,776 --> 00:02:01,926
that can be used with Sign In


50
00:02:01,926 --> 00:02:04,616
with Apple has strong two-factor


51
00:02:04,616 --> 00:02:06,466
authentication that's already


52
00:02:06,466 --> 00:02:08,126
used to protect their Apple ID.


53
00:02:09,006 --> 00:02:10,696
This two-factor authentication


54
00:02:10,925 --> 00:02:12,286
involves the user's circle of


55
00:02:12,286 --> 00:02:14,186
trusted devices and strong


56
00:02:14,186 --> 00:02:14,946
biometrics.


57
00:02:16,026 --> 00:02:17,796
Having a user start off with


58
00:02:17,796 --> 00:02:19,706
this much security is a lot


59
00:02:19,706 --> 00:02:21,266
easier than trying to bolt it on


60
00:02:21,266 --> 00:02:22,496
after the fact to a


61
00:02:22,496 --> 00:02:23,516
password-based account.


62
00:02:24,026 --> 00:02:26,336
And to help you with fraud,


63
00:02:26,666 --> 00:02:28,126
there's information included in


64
00:02:28,126 --> 00:02:31,596
the API about how Apple is


65
00:02:31,596 --> 00:02:32,836
confident about the account


66
00:02:32,836 --> 00:02:34,416
being from a real user, which


67
00:02:34,416 --> 00:02:34,986
you're going to really


68
00:02:34,986 --> 00:02:36,106
appreciate.


69
00:02:36,726 --> 00:02:38,286
And the third point that I want


70
00:02:38,286 --> 00:02:39,696
to emphasize about Sign In with


71
00:02:39,696 --> 00:02:42,636
Apple is that it is across


72
00:02:42,836 --> 00:02:45,976
platform experience, across all


73
00:02:45,976 --> 00:02:47,126
of the user's devices.


74
00:02:47,476 --> 00:02:48,456
If they're signed into their


75
00:02:48,456 --> 00:02:50,966
Apple ID, signing into your app


76
00:02:51,206 --> 00:02:53,466
is as easy as a quick face ID or


77
00:02:53,466 --> 00:02:54,266
touch ID check.


78
00:02:54,746 --> 00:02:56,996
And thanks to the web and web


79
00:02:56,996 --> 00:02:59,036
technologies, Sign In with Apple


80
00:02:59,036 --> 00:02:59,926
is available elsewhere.


81
00:03:01,956 --> 00:03:03,016
And don't worry.


82
00:03:03,756 --> 00:03:05,246
We're going to help your users


83
00:03:05,246 --> 00:03:07,776
not create a second account for


84
00:03:07,776 --> 00:03:09,646
your app if the user already has


85
00:03:09,646 --> 00:03:10,516
one that works for them.


86
00:03:11,736 --> 00:03:13,636
On app launch, your app can


87
00:03:13,636 --> 00:03:15,316
check for an existing


88
00:03:15,316 --> 00:03:17,036
password-based account saved to


89
00:03:17,036 --> 00:03:19,396
the iCloud Keychain even before


90
00:03:19,396 --> 00:03:20,656
you show your standard login


91
00:03:20,656 --> 00:03:22,636
interface so that users do the


92
00:03:22,636 --> 00:03:24,000
right thing.


93
00:03:26,296 --> 00:03:28,136
If you have a service with user


94
00:03:28,136 --> 00:03:30,576
accounts, you and your users can


95
00:03:30,576 --> 00:03:32,086
benefit from Sign In with Apple.


96
00:03:33,266 --> 00:03:34,196
To learn more about it,


97
00:03:34,616 --> 00:03:36,276
including how to adopt it on the


98
00:03:36,276 --> 00:03:39,216
web, watchOS, tvOS, the Mac,


99
00:03:40,326 --> 00:03:43,826
iPadOS, and iOS, check out


100
00:03:43,956 --> 00:03:46,266
Introducing Sign In with Apple


101
00:03:46,556 --> 00:03:47,846
in the WWDC app.


102
00:03:52,156 --> 00:03:55,006
And that's Sign In with Apple, a


103
00:03:55,006 --> 00:03:56,646
convenient and private


104
00:03:56,646 --> 00:03:58,876
alternative to password-based


105
00:03:58,876 --> 00:03:59,556
authentication.


106
00:04:00,836 --> 00:04:01,576
And password-based


107
00:04:01,576 --> 00:04:03,516
authentication is actually my


108
00:04:03,516 --> 00:04:06,116
next topic because even in a


109
00:04:06,116 --> 00:04:08,386
world with a great, private


110
00:04:08,386 --> 00:04:10,816
single sign-on option, passwords


111
00:04:10,816 --> 00:04:11,856
are still going to be a part of


112
00:04:11,856 --> 00:04:12,196
our lives.


113
00:04:13,296 --> 00:04:15,256
And that's why iPhone has


114
00:04:15,346 --> 00:04:17,926
Password AutoFill, which makes


115
00:04:17,926 --> 00:04:19,946
it quick and easy for users to


116
00:04:19,946 --> 00:04:22,406
sign in to your apps on the


117
00:04:22,406 --> 00:04:23,916
existing login screens that you


118
00:04:23,916 --> 00:04:24,486
already have.


119
00:04:25,946 --> 00:04:28,166
Today, I am very excited to tell


120
00:04:28,166 --> 00:04:29,976
you that Password AutoFill is


121
00:04:29,976 --> 00:04:32,106
available for iPad apps for Mac


122
00:04:32,506 --> 00:04:33,926
with an interface that is


123
00:04:33,926 --> 00:04:36,076
specifically tailored to the


124
00:04:37,366 --> 00:04:37,476
Mac.


125
00:04:37,686 --> 00:04:39,346
Thanks. For users to get this


126
00:04:39,346 --> 00:04:40,706
deluxe experience that you see


127
00:04:40,706 --> 00:04:42,496
right here, where the exact


128
00:04:42,496 --> 00:04:43,886
right credential that the user


129
00:04:43,886 --> 00:04:45,116
wants to sign in with is in the


130
00:04:45,116 --> 00:04:47,146
list, there's just one thing


131
00:04:47,386 --> 00:04:48,956
that you have to do.


132
00:04:49,196 --> 00:04:50,286
Once you've brought your app to


133
00:04:50,286 --> 00:04:52,166
the Mac, it'll have a new app


134
00:04:52,166 --> 00:04:54,606
ID, and that app ID has to be


135
00:04:54,606 --> 00:04:56,416
listed on your server in order


136
00:04:56,416 --> 00:04:58,236
to tie your app and your website


137
00:04:58,236 --> 00:04:59,216
together.


138
00:05:00,936 --> 00:05:02,736
If you're using webcredentials


139
00:05:02,736 --> 00:05:04,716
to do this, your Apple app site


140
00:05:04,716 --> 00:05:06,556
association file might look


141
00:05:06,556 --> 00:05:07,346
something like this.


142
00:05:08,396 --> 00:05:10,016
And all you're going to do is


143
00:05:10,016 --> 00:05:11,826
add the app ID to this app's


144
00:05:11,826 --> 00:05:12,036
array.


145
00:05:12,946 --> 00:05:13,576
Super easy.


146
00:05:16,596 --> 00:05:18,346
But if you're using universal


147
00:05:18,346 --> 00:05:21,066
links, you'll add the new app ID


148
00:05:21,066 --> 00:05:24,526
here as part of the new app ID's


149
00:05:24,526 --> 00:05:26,126
key that can take a list.


150
00:05:27,106 --> 00:05:30,066
This key is new to iOS 13 and


151
00:05:30,066 --> 00:05:31,116
macOS Catalina.


152
00:05:32,756 --> 00:05:35,086
To maintain compatibility with


153
00:05:35,086 --> 00:05:37,926
iOS versions before 13, you'll


154
00:05:37,926 --> 00:05:40,086
want to keep this apps key with


155
00:05:40,086 --> 00:05:42,896
the value of an array and the


156
00:05:42,896 --> 00:05:44,636
app ID key that lists your


157
00:05:44,636 --> 00:05:45,886
existing iOS app.


158
00:05:46,836 --> 00:05:48,326
You really want to do this in


159
00:05:48,326 --> 00:05:50,066
order to ensure that universal


160
00:05:50,066 --> 00:05:51,356
links keep working for your


161
00:05:51,356 --> 00:05:53,276
users who are running iOS 12.


162
00:05:54,576 --> 00:05:56,306
There are a bunch of new


163
00:05:56,306 --> 00:05:57,756
features and universal links


164
00:05:57,756 --> 00:05:59,796
this year, including more


165
00:05:59,796 --> 00:06:01,276
powerful URL matching.


166
00:06:01,676 --> 00:06:03,776
And to learn more about those, I


167
00:06:03,776 --> 00:06:05,036
encourage you to check out the


168
00:06:05,036 --> 00:06:06,856
What's New in Universal Links


169
00:06:06,856 --> 00:06:09,946
video in the WWDC app.


170
00:06:14,636 --> 00:06:18,416
Whether on the Mac, iPad, Apple


171
00:06:18,416 --> 00:06:21,476
TV, or iPhone, Password AutoFill


172
00:06:21,666 --> 00:06:23,296
makes it easy for users to get


173
00:06:23,296 --> 00:06:24,946
signed in to apps on your


174
00:06:24,946 --> 00:06:26,116
existing login screens.


175
00:06:27,286 --> 00:06:30,176
But let's take a closer look at


176
00:06:30,176 --> 00:06:31,346
this screen right here.


177
00:06:32,246 --> 00:06:33,516
The user's current task of


178
00:06:33,516 --> 00:06:34,656
getting signed into your app?


179
00:06:35,336 --> 00:06:36,896
The answer to the problem is


180
00:06:36,896 --> 00:06:37,096
here.


181
00:06:37,746 --> 00:06:38,576
It's a small part of the


182
00:06:38,576 --> 00:06:39,026
keyboard.


183
00:06:39,026 --> 00:06:42,076
And this is great, because


184
00:06:42,076 --> 00:06:43,896
AutoFill is accommodating the


185
00:06:43,896 --> 00:06:45,996
username and password field


186
00:06:45,996 --> 00:06:47,876
combination pattern that we've


187
00:06:47,876 --> 00:06:50,036
seen for even before when iPhone


188
00:06:50,246 --> 00:06:50,736
existed.


189
00:06:52,046 --> 00:06:53,796
But your app can have an even


190
00:06:53,796 --> 00:06:55,786
more streamlined and intentional


191
00:06:55,786 --> 00:06:58,526
experience, and with iOS 13,


192
00:06:58,996 --> 00:07:00,646
it's easier to do this than ever


193
00:07:00,646 --> 00:07:01,106
before.


194
00:07:02,156 --> 00:07:03,956
The same sign-in experience I


195
00:07:03,956 --> 00:07:05,476
showed you earlier in the


196
00:07:05,476 --> 00:07:06,976
context of Sign In with Apple,


197
00:07:07,646 --> 00:07:09,226
is available to all apps that


198
00:07:09,226 --> 00:07:10,186
use passwords.


199
00:07:10,596 --> 00:07:11,886
And it's available through the


200
00:07:11,886 --> 00:07:13,086
authentication services


201
00:07:13,086 --> 00:07:13,526
framework.


202
00:07:14,776 --> 00:07:16,916
The same API and functionality


203
00:07:17,466 --> 00:07:19,526
is also available on macOS


204
00:07:19,526 --> 00:07:20,016
Catalina.


205
00:07:23,516 --> 00:07:29,176
[ Applause ]


206
00:07:29,676 --> 00:07:31,306
Let's talk about how to add this


207
00:07:31,306 --> 00:07:33,286
functionality to your apps.


208
00:07:34,336 --> 00:07:36,376
The first step is to write some


209
00:07:36,376 --> 00:07:37,586
code using the


210
00:07:37,586 --> 00:07:38,756
AuthenticationServices


211
00:07:38,756 --> 00:07:39,156
framework.


212
00:07:39,606 --> 00:07:41,786
You'll create an


213
00:07:41,786 --> 00:07:44,296
AuthorizationController using a


214
00:07:44,296 --> 00:07:45,406
password request.


215
00:07:46,416 --> 00:07:48,006
The AuthorizationController is


216
00:07:48,006 --> 00:07:49,486
the same object that you'll use


217
00:07:49,486 --> 00:07:50,526
for Sign In with Apple.


218
00:07:51,016 --> 00:07:52,466
But here we're just using a


219
00:07:52,466 --> 00:07:54,186
different kind of request.


220
00:07:55,456 --> 00:07:58,286
Then you'll set up a delegate as


221
00:07:58,286 --> 00:07:59,886
well as an object that will help


222
00:07:59,886 --> 00:08:01,366
coordinate presentation of the


223
00:08:01,366 --> 00:08:01,976
interface.


224
00:08:02,526 --> 00:08:04,796
And then it'll tell the


225
00:08:04,796 --> 00:08:05,896
controller to perform the


226
00:08:06,576 --> 00:08:06,826
request.


227
00:08:08,296 --> 00:08:10,166
When the user has selected the


228
00:08:10,166 --> 00:08:11,516
account that they want to use,


229
00:08:12,586 --> 00:08:15,026
the API will call the delegate,


230
00:08:15,476 --> 00:08:16,986
and you can take it from there


231
00:08:16,986 --> 00:08:18,536
to complete the sign-in.


232
00:08:19,576 --> 00:08:21,716
If didCompleteWithError is


233
00:08:21,716 --> 00:08:23,626
immediately called for you, it


234
00:08:23,626 --> 00:08:24,846
might mean that your user


235
00:08:24,846 --> 00:08:26,406
doesn't have any passwords saved


236
00:08:26,406 --> 00:08:28,016
in their iCloud Keychain for


237
00:08:28,016 --> 00:08:28,926
your app and website.


238
00:08:28,926 --> 00:08:31,256
And then you should just


239
00:08:31,256 --> 00:08:32,446
fallback to showing your normal


240
00:08:32,446 --> 00:08:33,166
sign-in screen.


241
00:08:33,356 --> 00:08:34,395
The user can take it from there.


242
00:08:35,846 --> 00:08:37,106
But if you're sure that you have


243
00:08:37,106 --> 00:08:38,976
credentials on a test device and


244
00:08:38,976 --> 00:08:40,366
you're seeing the error handler


245
00:08:40,366 --> 00:08:42,196
get called, you're going to want


246
00:08:42,196 --> 00:08:43,275
to back to checking your


247
00:08:43,275 --> 00:08:44,326
associated domains.


248
00:08:45,506 --> 00:08:46,746
If you've never tied your app


249
00:08:46,746 --> 00:08:48,056
and website together before


250
00:08:48,056 --> 00:08:49,366
through associated domains,


251
00:08:50,056 --> 00:08:51,816
Introducing Password AutoFill


252
00:08:51,816 --> 00:08:53,996
for Apps has a step-by-step


253
00:08:53,996 --> 00:08:55,016
tutorial that'll take you


254
00:08:55,016 --> 00:08:55,336
through it.


255
00:08:55,336 --> 00:08:56,316
It's pretty easy.


256
00:08:57,506 --> 00:08:59,386
And for universal links, once


257
00:08:59,386 --> 00:09:00,656
again, you're going to want to


258
00:09:00,656 --> 00:09:02,466
check out the Universal Links


259
00:09:02,466 --> 00:09:05,326
video that's in the WWDC app.


260
00:09:07,776 --> 00:09:10,276
Something about this API that is


261
00:09:10,276 --> 00:09:12,586
really awesome is that you can


262
00:09:12,586 --> 00:09:14,076
request multiple types of


263
00:09:14,076 --> 00:09:16,036
accounts at the same time using


264
00:09:16,036 --> 00:09:17,256
the AuthorizationController.


265
00:09:18,346 --> 00:09:20,206
And this is super handy if you


266
00:09:20,206 --> 00:09:22,036
want to check for both a


267
00:09:22,036 --> 00:09:24,176
password-based account and Sign


268
00:09:24,176 --> 00:09:26,076
In with Apple right around app


269
00:09:26,076 --> 00:09:26,396
launch.


270
00:09:27,636 --> 00:09:29,336
If you do this, you're going to


271
00:09:29,336 --> 00:09:30,196
want to make sure that you


272
00:09:30,196 --> 00:09:32,166
handle both types of credentials


273
00:09:32,796 --> 00:09:34,356
in the CompleteWithAuthorization


274
00:09:34,356 --> 00:09:35,646
delegate method.


275
00:09:37,506 --> 00:09:39,636
And that's how easy it is to use


276
00:09:39,636 --> 00:09:41,586
the new Authentication services


277
00:09:41,586 --> 00:09:44,286
APIs to make the process of


278
00:09:44,286 --> 00:09:45,666
getting signed into your apps


279
00:09:46,066 --> 00:09:47,516
even more streamlined than


280
00:09:47,516 --> 00:09:48,846
password AutoFill was able to.


281
00:09:54,336 --> 00:09:56,686
As long as we have passwords,


282
00:09:57,956 --> 00:09:59,156
there needs to be a healthy way


283
00:09:59,156 --> 00:10:01,806
to use them, a safe way to use


284
00:10:01,806 --> 00:10:01,976
them.


285
00:10:02,906 --> 00:10:04,726
And that's why iPhone has


286
00:10:04,886 --> 00:10:06,746
Automatic Strong Passwords,


287
00:10:07,406 --> 00:10:09,466
which encourages users to use a


288
00:10:09,466 --> 00:10:11,806
strong, unique password for


289
00:10:11,806 --> 00:10:12,816
every single one of their


290
00:10:12,816 --> 00:10:15,056
accounts, which greatly improves


291
00:10:15,056 --> 00:10:17,436
their security while also being


292
00:10:17,436 --> 00:10:18,746
easier to do than making the


293
00:10:18,746 --> 00:10:20,316
mistake of trying to create a


294
00:10:20,316 --> 00:10:21,206
password by hand.


295
00:10:22,466 --> 00:10:23,746
But what if one of your users


296
00:10:23,856 --> 00:10:25,206
already has a password that's


297
00:10:25,206 --> 00:10:25,716
kind of weak?


298
00:10:26,786 --> 00:10:30,096
Now, in Safari 13 and iOS 13,


299
00:10:30,796 --> 00:10:32,796
when a user signs into a website


300
00:10:33,136 --> 00:10:34,536
and Safari notices that the


301
00:10:34,536 --> 00:10:35,966
password they just used was


302
00:10:35,966 --> 00:10:38,536
weak, Safari will prompt the


303
00:10:38,536 --> 00:10:40,706
user to go and visit the website


304
00:10:40,766 --> 00:10:41,806
to change the password.


305
00:10:42,546 --> 00:10:43,726
And this is at the moment of


306
00:10:43,726 --> 00:10:45,246
sign-in where the user might be


307
00:10:45,246 --> 00:10:46,696
thinking about what the account


308
00:10:46,696 --> 00:10:47,266
means to them.


309
00:10:47,836 --> 00:10:50,346
If the user accepts Safari's


310
00:10:50,346 --> 00:10:51,826
offer, they'll be taken over to


311
00:10:51,826 --> 00:10:54,266
Settings where they can change


312
00:10:54,266 --> 00:10:54,886
their password.


313
00:10:55,366 --> 00:10:56,546
And with Automatic Strong


314
00:10:56,546 --> 00:10:58,806
Passwords, it's just a few taps


315
00:10:58,806 --> 00:11:01,846
to get upgraded.


316
00:11:02,516 --> 00:11:06,596
[ Applause ]


317
00:11:07,096 --> 00:11:08,266
And, of course, this feature is


318
00:11:08,266 --> 00:11:10,366
on the Mac as well with Safari


319
00:11:10,846 --> 00:11:11,000
13.


320
00:11:15,046 --> 00:11:18,066
This flow is at its best when


321
00:11:18,066 --> 00:11:20,136
your user is taken directly to


322
00:11:20,136 --> 00:11:22,166
your website's Change Password


323
00:11:22,166 --> 00:11:24,186
page rather than to the homepage


324
00:11:24,186 --> 00:11:24,596
of the site.


325
00:11:25,806 --> 00:11:27,296
And what's really cool is that


326
00:11:27,296 --> 00:11:28,566
this is completely in your


327
00:11:28,566 --> 00:11:30,216
control and super easy to


328
00:11:30,216 --> 00:11:30,656
implement.


329
00:11:31,416 --> 00:11:33,826
Websites like Twitter, GitHub,


330
00:11:33,826 --> 00:11:35,556
and WordPress.com have already


331
00:11:35,556 --> 00:11:37,396
adopted it.


332
00:11:37,396 --> 00:11:39,186
All you have to do is put a


333
00:11:39,186 --> 00:11:41,056
redirect at this path on your


334
00:11:41,056 --> 00:11:43,056
server that takes the user to


335
00:11:43,056 --> 00:11:44,486
your Change Password webpage,


336
00:11:44,966 --> 00:11:45,886
and that's it.


337
00:11:46,766 --> 00:11:48,116
The redirect can be implemented


338
00:11:48,246 --> 00:11:49,636
either as a client-side redirect


339
00:11:50,056 --> 00:11:51,436
or a server-side redirect.


340
00:11:52,096 --> 00:11:54,646
You can learn more about the


341
00:11:54,646 --> 00:11:56,206
well-known URL for changing


342
00:11:56,206 --> 00:11:58,586
passwords, which is a proposed


343
00:11:58,586 --> 00:12:00,426
standard at this URL.


344
00:12:01,736 --> 00:12:02,726
You'll also find it pretty


345
00:12:02,726 --> 00:12:04,086
easily if you search the web for


346
00:12:04,676 --> 00:12:04,746
it.


347
00:12:08,406 --> 00:12:13,176
And that is how iOS 13, iPadOS,


348
00:12:13,596 --> 00:12:16,536
and Safari 13 help users upgrade


349
00:12:16,536 --> 00:12:17,426
their weak passwords.


350
00:12:20,656 --> 00:12:22,236
Some of your apps authenticate


351
00:12:22,236 --> 00:12:24,096
using a third-party web service,


352
00:12:24,536 --> 00:12:25,936
and if you're doing this, you're


353
00:12:25,936 --> 00:12:27,456
probably using a standard like


354
00:12:27,456 --> 00:12:27,976
OAuth.


355
00:12:29,196 --> 00:12:31,226
The Authentication's Services


356
00:12:31,266 --> 00:12:31,866
frameworks


357
00:12:32,246 --> 00:12:34,526
ASWebAuthenticationSession is


358
00:12:34,526 --> 00:12:36,006
the best way to do this kind of


359
00:12:36,006 --> 00:12:36,706
authentication.


360
00:12:37,246 --> 00:12:39,976
Once a user confirms that


361
00:12:39,976 --> 00:12:42,086
they're OK with signing in, the


362
00:12:42,086 --> 00:12:43,916
AuthenticationSession will use


363
00:12:44,306 --> 00:12:45,896
existing signed-in accounts


364
00:12:45,896 --> 00:12:47,586
through Safari's cookies and


365
00:12:47,586 --> 00:12:49,716
data in order to let the user


366
00:12:49,716 --> 00:12:51,186
sign-in even faster.


367
00:12:51,566 --> 00:12:54,836
Sometimes the user will already


368
00:12:54,836 --> 00:12:56,356
be signed in to the identity


369
00:12:56,356 --> 00:12:58,506
provider, and all they have to


370
00:12:58,506 --> 00:13:00,566
do is agree to signing into your


371
00:13:00,916 --> 00:13:01,006
app.


372
00:13:01,736 --> 00:13:03,186
And once they do that, they're


373
00:13:03,186 --> 00:13:03,666
in.


374
00:13:03,756 --> 00:13:06,276
Nice and easy.


375
00:13:06,456 --> 00:13:08,556
I am so happy to be able to tell


376
00:13:08,556 --> 00:13:11,036
you today that this API is now


377
00:13:11,036 --> 00:13:15,576
available on macOS Catalina.


378
00:13:16,516 --> 00:13:19,366
[ Applause ]


379
00:13:19,866 --> 00:13:23,616
On macOS Catalina, this API uses


380
00:13:23,616 --> 00:13:25,446
the user's preferred web browser


381
00:13:25,686 --> 00:13:27,386
for signing in if that web


382
00:13:27,386 --> 00:13:28,326
browser supports it.


383
00:13:28,376 --> 00:13:30,186
And this is really great,


384
00:13:30,606 --> 00:13:31,936
because it means that all of


385
00:13:31,936 --> 00:13:33,806
your users will have their


386
00:13:33,806 --> 00:13:35,696
browser's password manager or


387
00:13:35,696 --> 00:13:37,036
password manager extension


388
00:13:37,036 --> 00:13:38,476
available to them in order to


389
00:13:38,476 --> 00:13:40,266
help get them signed in.


390
00:13:42,416 --> 00:13:43,816
If you're using the


391
00:13:43,816 --> 00:13:46,156
AuthenticationSession API, it


392
00:13:46,156 --> 00:13:47,456
has a few new features for you


393
00:13:47,456 --> 00:13:48,216
to use this year.


394
00:13:48,326 --> 00:13:51,546
And the first is a more private


395
00:13:51,546 --> 00:13:53,136
kind of sign-in.


396
00:13:54,576 --> 00:13:55,296
Because the


397
00:13:55,296 --> 00:13:57,216
AuthenticationSession shares


398
00:13:57,216 --> 00:13:58,726
website data with Safari,


399
00:13:59,686 --> 00:14:01,586
ASWebAuthenticationSession


400
00:14:01,676 --> 00:14:03,686
enables a single sign-on


401
00:14:03,686 --> 00:14:04,366
experience.


402
00:14:05,496 --> 00:14:08,116
New to iOS 13, your app can


403
00:14:08,116 --> 00:14:10,436
choose to deliver a more private


404
00:14:10,436 --> 00:14:12,716
experience, an experience that


405
00:14:12,716 --> 00:14:14,896
won't leave users logged into


406
00:14:14,896 --> 00:14:16,446
the identity provider in their


407
00:14:16,446 --> 00:14:18,306
web browser after they've signed


408
00:14:18,306 --> 00:14:19,466
into your app.


409
00:14:20,456 --> 00:14:22,036
If your app asks for this


410
00:14:22,036 --> 00:14:24,546
experience, users won't see this


411
00:14:24,546 --> 00:14:25,026
dialog.


412
00:14:25,886 --> 00:14:27,726
Instead, they'll be taken


413
00:14:27,726 --> 00:14:28,966
directly to the identity


414
00:14:28,966 --> 00:14:30,826
provider in order to get signed


415
00:14:31,416 --> 00:14:31,496
in.


416
00:14:33,576 --> 00:14:35,266
To do this, set the


417
00:14:35,266 --> 00:14:36,616
prefersEphemeral


418
00:14:36,616 --> 00:14:38,836
WebBrowserSession property on


419
00:14:38,836 --> 00:14:40,626
the session to true before


420
00:14:40,626 --> 00:14:41,426
starting the session.


421
00:14:42,696 --> 00:14:44,376
By doing this, you give your


422
00:14:44,436 --> 00:14:47,396
users more privacy and avoid


423
00:14:47,396 --> 00:14:49,486
that confirmation dialog, which


424
00:14:49,486 --> 00:14:50,796
overall might be a better


425
00:14:50,796 --> 00:14:52,426
experience for your app.


426
00:14:54,296 --> 00:14:56,806
Next, supporting multiple


427
00:14:56,806 --> 00:14:57,266
windows.


428
00:14:58,706 --> 00:15:00,126
In iOS 12, the


429
00:15:00,126 --> 00:15:02,586
AuthenticationSession API didn't


430
00:15:02,586 --> 00:15:05,146
need any information about view


431
00:15:05,146 --> 00:15:07,186
or windows from you in order to


432
00:15:07,186 --> 00:15:08,236
display its interface.


433
00:15:09,236 --> 00:15:11,326
This is because the API was iOS


434
00:15:11,326 --> 00:15:14,186
only, and almost all apps drew


435
00:15:14,186 --> 00:15:15,236
into a single window.


436
00:15:16,186 --> 00:15:19,136
But now with iPadOS and macOS


437
00:15:19,136 --> 00:15:20,686
support, you're going to have to


438
00:15:20,686 --> 00:15:22,076
help us out a little bit to


439
00:15:22,076 --> 00:15:23,106
figure out where to draw the


440
00:15:23,106 --> 00:15:23,686
interface.


441
00:15:25,056 --> 00:15:28,726
First, you'll give the session a


442
00:15:28,726 --> 00:15:30,746
presentationContextProvider, and


443
00:15:31,496 --> 00:15:33,466
that presentationContextProvider


444
00:15:33,796 --> 00:15:35,606
will provide a window via the


445
00:15:35,606 --> 00:15:36,896
PresentationAnchor method.


446
00:15:37,786 --> 00:15:39,316
This is a really easy change and


447
00:15:39,316 --> 00:15:40,946
one that you're definitely going


448
00:15:40,946 --> 00:15:43,926
to want to make.


449
00:15:43,926 --> 00:15:45,026
One more thing about OAuth.


450
00:15:46,096 --> 00:15:48,576
ASWebAuthenticationSession has a


451
00:15:48,576 --> 00:15:50,936
deprecated predecessor called


452
00:15:51,006 --> 00:15:52,226
SFAuthenticationSession.


453
00:15:52,866 --> 00:15:54,116
It's from the Safari Services


454
00:15:54,116 --> 00:15:54,526
framework.


455
00:15:55,536 --> 00:15:57,046
If you haven't already, you're


456
00:15:57,046 --> 00:15:58,076
going to want to take a moment


457
00:15:58,076 --> 00:15:58,916
to switch over.


458
00:16:00,066 --> 00:16:02,216
ASWebAuthenticationSession has


459
00:16:02,216 --> 00:16:03,256
the new features that we just


460
00:16:03,256 --> 00:16:05,556
talked about, and it's available


461
00:16:05,556 --> 00:16:06,856
on the Mac.


462
00:16:06,856 --> 00:16:07,786
It's, basically, the


463
00:16:07,786 --> 00:16:09,636
non-deprecated drop-in


464
00:16:09,636 --> 00:16:11,026
replacement for the old API.


465
00:16:11,756 --> 00:16:15,936
And that's it for OAuth.


466
00:16:20,836 --> 00:16:23,776
This year, macOS supports USB


467
00:16:23,936 --> 00:16:26,906
security keys in Safari through


468
00:16:26,906 --> 00:16:28,336
the WebAuthentication standard.


469
00:16:29,156 --> 00:16:31,246
I am really happy about this


470
00:16:31,246 --> 00:16:33,056
support, especially because I


471
00:16:33,056 --> 00:16:34,096
know that a number of you have


472
00:16:34,096 --> 00:16:35,586
been asking for it.


473
00:16:36,736 --> 00:16:39,266
Depending on who or what you're


474
00:16:39,266 --> 00:16:41,126
protecting and the threat models


475
00:16:41,126 --> 00:16:42,986
that you're concerned about, you


476
00:16:42,986 --> 00:16:45,066
might consider tying user


477
00:16:45,066 --> 00:16:47,126
authentication to the physical


478
00:16:47,126 --> 00:16:48,046
presence of some kind of


479
00:16:48,046 --> 00:16:49,566
hardware device.


480
00:16:50,696 --> 00:16:54,346
Safari 13 supports USB-based


481
00:16:54,796 --> 00:16:57,246
FIDO2-compliant devices with the


482
00:16:57,246 --> 00:16:58,436
WebAuthentication standard.


483
00:16:59,566 --> 00:17:01,656
It's available as an


484
00:17:02,426 --> 00:17:05,185
experimental feature in Seed 1


485
00:17:05,185 --> 00:17:07,626
of macOS Catalina, and it'll be


486
00:17:07,626 --> 00:17:09,236
on by default in Seed 2.


487
00:17:10,175 --> 00:17:11,786
You can also try it out right


488
00:17:11,786 --> 00:17:13,465
now if you download Safari


489
00:17:13,465 --> 00:17:14,356
Technology Preview.


490
00:17:14,955 --> 00:17:17,816
If you're interested in


491
00:17:17,816 --> 00:17:19,976
supporting USB security keys,


492
00:17:20,506 --> 00:17:22,445
it's really important to offer a


493
00:17:22,445 --> 00:17:24,236
great account recovery story,


494
00:17:25,435 --> 00:17:26,935
just in case your user's key


495
00:17:27,205 --> 00:17:29,816
gets lost, stolen, or broken.


496
00:17:31,276 --> 00:17:33,196
And designing account recovery


497
00:17:33,336 --> 00:17:35,316
systems when a hardware token is


498
00:17:35,316 --> 00:17:37,996
involved is really important,


499
00:17:37,996 --> 00:17:38,706
but it's not always


500
00:17:38,706 --> 00:17:39,336
straightforward.


501
00:17:40,486 --> 00:17:42,286
So unless you are already in


502
00:17:42,286 --> 00:17:44,246
this business or were seriously


503
00:17:44,246 --> 00:17:46,106
considering getting into it,


504
00:17:46,856 --> 00:17:48,546
it's more likely that one or


505
00:17:48,546 --> 00:17:50,076
more of the other areas that I


506
00:17:50,076 --> 00:17:51,816
cover today will be more


507
00:17:51,816 --> 00:17:53,956
relevant for your users, your


508
00:17:53,956 --> 00:17:54,976
apps, and your websites.


509
00:18:00,266 --> 00:18:01,866
If you develop an app with user


510
00:18:01,866 --> 00:18:04,386
accounts, I have three takeaways


511
00:18:04,426 --> 00:18:05,286
from what we've talked about


512
00:18:05,286 --> 00:18:05,506
today.


513
00:18:06,936 --> 00:18:09,326
First, strongly consider


514
00:18:09,326 --> 00:18:11,036
adopting Sign In with Apple.


515
00:18:12,196 --> 00:18:13,946
For your users, the best


516
00:18:13,946 --> 00:18:15,736
password is no password,


517
00:18:16,306 --> 00:18:17,896
especially when it's backed by


518
00:18:17,896 --> 00:18:19,666
two-factor authentication and


519
00:18:19,666 --> 00:18:21,000
great biometrics.


520
00:18:22,236 --> 00:18:25,126
Two, make signing into your app


521
00:18:25,476 --> 00:18:28,086
a one-tap experience using the


522
00:18:28,086 --> 00:18:29,676
Authentication Services


523
00:18:29,766 --> 00:18:30,286
framework.


524
00:18:31,056 --> 00:18:32,406
Users don't even need to see a


525
00:18:32,406 --> 00:18:34,266
keyboard anymore to get signed


526
00:18:34,706 --> 00:18:34,796
in.


527
00:18:35,476 --> 00:18:37,446
And finally, implement the


528
00:18:37,446 --> 00:18:39,036
well-known URL for changing


529
00:18:39,036 --> 00:18:39,686
passwords.


530
00:18:40,456 --> 00:18:42,076
It's really easy to do, takes


531
00:18:42,076 --> 00:18:44,056
just a moment, and it makes a


532
00:18:44,056 --> 00:18:46,146
huge difference when Safari is


533
00:18:46,146 --> 00:18:47,586
going to try to help your users


534
00:18:47,756 --> 00:18:48,906
upgrade their passwords.


535
00:18:51,076 --> 00:18:52,686
You'll find more information


536
00:18:52,686 --> 00:18:54,106
about what I covered today and


537
00:18:54,196 --> 00:18:57,136
more in the WWDC app or on the


538
00:18:57,136 --> 00:18:57,356
web.


539
00:18:58,406 --> 00:18:59,796
And that is it for me.


540
00:18:59,956 --> 00:19:01,066
Thank you all so much.


541
00:19:01,376 --> 00:19:02,556
I really hope you've been having


542
00:19:02,556 --> 00:19:04,186
a wonderful WWDC.


543
00:19:05,176 --> 00:19:07,500
[ Applause ]

