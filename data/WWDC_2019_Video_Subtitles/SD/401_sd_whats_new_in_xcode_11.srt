1
00:00:01,516 --> 00:00:05,516
[ Music ]


2
00:00:06,296 --> 00:00:08,296
[ Applause ]


3
00:00:08,576 --> 00:00:09,146
>> Good morning.


4
00:00:14,046 --> 00:00:16,386
Well, Xcode 11 has a ton of new


5
00:00:16,446 --> 00:00:18,106
features and improvements.


6
00:00:19,026 --> 00:00:20,896
Everything the tools do is in


7
00:00:20,896 --> 00:00:22,016
support of getting you from an


8
00:00:22,016 --> 00:00:23,936
idea, through development to


9
00:00:23,936 --> 00:00:26,156
delivering a great product.


10
00:00:26,766 --> 00:00:28,476
We want the tools to make you


11
00:00:28,476 --> 00:00:29,796
more productive, so you can


12
00:00:29,796 --> 00:00:31,576
spend more time dreaming up and


13
00:00:31,576 --> 00:00:32,766
implementing the next great


14
00:00:32,806 --> 00:00:32,986
thing.


15
00:00:33,786 --> 00:00:37,066
So, this year we focused on


16
00:00:37,066 --> 00:00:38,636
making it more efficient and


17
00:00:38,636 --> 00:00:41,016
faster for you to use the tools


18
00:00:41,116 --> 00:00:42,536
we rethought some of the basic


19
00:00:42,816 --> 00:00:43,526
workflows.


20
00:00:44,346 --> 00:00:44,846
Let's take a look.


21
00:00:45,306 --> 00:00:48,236
We'll start with a quick recap


22
00:00:48,506 --> 00:00:49,816
of Xcode 10.


23
00:00:50,666 --> 00:00:52,126
Now in Xcode 10, there's three


24
00:00:52,126 --> 00:00:54,366
main Editor modes, Standard,


25
00:00:54,566 --> 00:00:56,496
Assistant and Version, and they


26
00:00:56,496 --> 00:00:57,686
live up here in the toolbar,


27
00:00:57,896 --> 00:00:59,146
because they apply to the entire


28
00:00:59,146 --> 00:01:00,256
windows content.


29
00:01:00,816 --> 00:01:03,216
Now, the Version Editor, it's


30
00:01:03,216 --> 00:01:04,446
got three modes of its own,


31
00:01:04,736 --> 00:01:06,876
Comparison, Authors, and Log.


32
00:01:07,476 --> 00:01:08,656
So, you've got a lot of


33
00:01:08,656 --> 00:01:10,396
functionality available to you.


34
00:01:10,756 --> 00:01:12,236
You just have to pick the one


35
00:01:12,236 --> 00:01:12,976
thing that you're most


36
00:01:12,976 --> 00:01:13,526
interested in.


37
00:01:14,156 --> 00:01:15,586
Well, we heard your feedback


38
00:01:15,586 --> 00:01:16,696
that you wanted more


39
00:01:16,696 --> 00:01:17,526
flexibility.


40
00:01:18,036 --> 00:01:19,956
And so, we, we made some


41
00:01:19,956 --> 00:01:20,636
improvements.


42
00:01:22,086 --> 00:01:24,046
At first, we took the Source


43
00:01:24,046 --> 00:01:25,966
Control Log information, and we


44
00:01:25,966 --> 00:01:27,346
moved it over to the Inspector,


45
00:01:27,706 --> 00:01:29,476
where it's now available all the


46
00:01:29,476 --> 00:01:30,776
time for any file.


47
00:01:30,876 --> 00:01:32,526
So, you can bring it in when you


48
00:01:32,526 --> 00:01:34,396
need it, without ever disrupting


49
00:01:34,396 --> 00:01:36,046
what's in the main editor area.


50
00:01:36,606 --> 00:01:39,306
And next, we wanted to let you


51
00:01:39,346 --> 00:01:41,346
change each Editor Panes mode


52
00:01:41,346 --> 00:01:43,416
independently, because we know


53
00:01:43,416 --> 00:01:45,406
that different file types like


54
00:01:45,406 --> 00:01:47,006
Source Code and Storyboards,


55
00:01:47,436 --> 00:01:48,246
they have very different


56
00:01:48,246 --> 00:01:48,836
workflows.


57
00:01:49,886 --> 00:01:51,586
So we move the Assistant and the


58
00:01:51,586 --> 00:01:53,886
Authors out of the main toolbar


59
00:01:54,516 --> 00:01:56,286
down into each editor pane.


60
00:01:56,866 --> 00:01:57,706
So, now you can choose the right


61
00:01:57,706 --> 00:01:59,226
mode for each editor.


62
00:01:59,766 --> 00:02:01,816
Now a lot of people use the


63
00:02:01,816 --> 00:02:03,566
Assistant today to split up


64
00:02:03,566 --> 00:02:05,206
their Xcode window with multiple


65
00:02:05,256 --> 00:02:05,836
editors.


66
00:02:06,646 --> 00:02:08,656
Well in Xcode 11, you can create


67
00:02:08,656 --> 00:02:11,196
splits anytime, anywhere.


68
00:02:12,306 --> 00:02:13,616
And you can split both


69
00:02:13,716 --> 00:02:15,816
horizontally, as well as


70
00:02:15,856 --> 00:02:17,556
vertically, all within the same


71
00:02:17,556 --> 00:02:17,916
window.


72
00:02:18,466 --> 00:02:21,016
So, there's a lot of added


73
00:02:21,016 --> 00:02:22,406
flexibility this year which


74
00:02:22,406 --> 00:02:23,916
really does make it easier than


75
00:02:23,916 --> 00:02:25,576
ever to work the way that you


76
00:02:25,576 --> 00:02:25,946
want.


77
00:02:26,486 --> 00:02:29,046
Now there is no better way to


78
00:02:29,046 --> 00:02:30,846
see this than in a demo.


79
00:02:30,846 --> 00:02:32,266
So, here to show it to you now


80
00:02:32,676 --> 00:02:33,146
is Brendan.


81
00:02:34,516 --> 00:02:38,366
[ Applause ]


82
00:02:38,866 --> 00:02:39,406
>> Thanks Ken.


83
00:02:42,206 --> 00:02:44,166
So, we've given Xcode a bit of a


84
00:02:44,166 --> 00:02:45,796
renovation this year to give you


85
00:02:45,796 --> 00:02:47,246
more control of your workspace.


86
00:02:48,516 --> 00:02:50,076
One of the most visible changes,


87
00:02:50,126 --> 00:02:53,006
is to the Editor Splitting and


88
00:02:53,376 --> 00:02:54,036
the Assistant.


89
00:02:54,796 --> 00:02:55,616
So, let me start with the


90
00:02:55,616 --> 00:02:57,276
Assistant, and its new companion


91
00:02:57,576 --> 00:03:00,876
mode, the SwiftUI Canvas.


92
00:03:01,246 --> 00:03:02,676
Each editor has an options menu


93
00:03:02,676 --> 00:03:03,296
in the top right.


94
00:03:04,346 --> 00:03:05,546
This is where you control the


95
00:03:05,546 --> 00:03:07,636
behavior of the editor.


96
00:03:07,636 --> 00:03:09,366
I have this one set to Editor in


97
00:03:09,366 --> 00:03:11,556
Canvas, which means that if


98
00:03:11,586 --> 00:03:13,686
there is a SwiftUI preview to


99
00:03:13,686 --> 00:03:16,016
show, Xcode will show it.


100
00:03:16,066 --> 00:03:16,976
In this case, there is no


101
00:03:17,016 --> 00:03:17,366
preview.


102
00:03:17,616 --> 00:03:18,876
So there's nothing to see.


103
00:03:19,646 --> 00:03:21,386
But if I switch over to a file


104
00:03:21,386 --> 00:03:22,956
that has a preview the Canvas


105
00:03:22,956 --> 00:03:24,496
appears and Xcode renders a


106
00:03:24,686 --> 00:03:25,616
preview of my UI.


107
00:03:26,266 --> 00:03:28,376
Now, the Assistant works the


108
00:03:28,376 --> 00:03:28,816
same way.


109
00:03:29,686 --> 00:03:31,016
If I switch over to the


110
00:03:31,016 --> 00:03:32,186
Assistant using the options


111
00:03:32,216 --> 00:03:34,496
menu, Xcode will show me the


112
00:03:34,496 --> 00:03:36,746
generated interface for this


113
00:03:38,276 --> 00:03:38,406
file.


114
00:03:38,596 --> 00:03:39,996
But if I switch to a file that


115
00:03:39,996 --> 00:03:42,216
doesn't have an Assistant, like


116
00:03:42,216 --> 00:03:44,156
the project, it gets out of the


117
00:03:44,156 --> 00:03:44,356
way.


118
00:03:45,236 --> 00:03:46,376
There's no space wasted and


119
00:03:46,376 --> 00:03:47,626
there's no need for me to spend


120
00:03:47,626 --> 00:03:49,286
time manually switching modes as


121
00:03:49,286 --> 00:03:50,256
I switch between files.


122
00:03:50,896 --> 00:03:52,936
All right.


123
00:03:53,126 --> 00:03:55,176
When I switch back to a source


124
00:03:55,416 --> 00:03:56,966
file, of course, it remembers


125
00:03:56,966 --> 00:03:57,776
the state I was in, the


126
00:03:57,776 --> 00:03:58,666
Assistant comes back.


127
00:03:59,856 --> 00:04:01,786
So, that's the Assistant, and


128
00:04:01,846 --> 00:04:04,086
the SwiftUI Canvas, let's talk


129
00:04:04,086 --> 00:04:05,056
about Editor Splitting.


130
00:04:05,326 --> 00:04:07,326
The first thing is, it no longer


131
00:04:07,326 --> 00:04:08,386
requires the Assistant.


132
00:04:08,386 --> 00:04:10,246
So, let me get that out of the


133
00:04:10,896 --> 00:04:10,986
way.


134
00:04:11,206 --> 00:04:12,106
So, there's a few different ways


135
00:04:12,106 --> 00:04:13,146
I can split this window up.


136
00:04:13,146 --> 00:04:14,856
I'm going to start with the Add


137
00:04:15,186 --> 00:04:16,505
Editor button, which is up here


138
00:04:16,505 --> 00:04:17,826
in the corner, next to the


139
00:04:17,826 --> 00:04:18,565
options menu.


140
00:04:19,375 --> 00:04:20,826
When I click that, I get two


141
00:04:20,826 --> 00:04:21,745
independent editors.


142
00:04:22,166 --> 00:04:23,656
These editors have their own


143
00:04:23,706 --> 00:04:24,266
state.


144
00:04:24,326 --> 00:04:26,046
So if I want to, I can turn on


145
00:04:26,046 --> 00:04:27,306
modes like Code Coverage or


146
00:04:27,306 --> 00:04:28,856
Authors for each editor


147
00:04:28,856 --> 00:04:29,486
individually.


148
00:04:30,566 --> 00:04:32,176
The new editor is active.


149
00:04:32,866 --> 00:04:34,446
So to load another file into it,


150
00:04:34,886 --> 00:04:36,566
all I have to do is click on the


151
00:04:36,566 --> 00:04:36,826
file.


152
00:04:36,826 --> 00:04:37,566
All right.


153
00:04:39,396 --> 00:04:41,346
So, I've got two editors, I've


154
00:04:41,346 --> 00:04:42,826
got two files, let's add a


155
00:04:42,826 --> 00:04:43,116
third.


156
00:04:43,116 --> 00:04:45,626
I'm going to split the editor on


157
00:04:45,626 --> 00:04:47,196
the left, so I'm going to use


158
00:04:47,196 --> 00:04:48,386
the Add Editor button in the


159
00:04:48,386 --> 00:04:49,036
left editor.


160
00:04:49,036 --> 00:04:50,516
And I'm going to hold the option


161
00:04:50,516 --> 00:04:52,966
key down, so that I can split it


162
00:04:52,966 --> 00:04:53,886
in the opposite direction.


163
00:04:54,336 --> 00:04:55,636
The icon rotates to show me


164
00:04:55,636 --> 00:04:56,326
what's going to happen.


165
00:04:57,616 --> 00:04:58,506
So, I got an editor on the


166
00:04:58,506 --> 00:04:59,966
bottom, and it's active.


167
00:05:00,436 --> 00:05:04,596
So, another click and I've


168
00:05:04,596 --> 00:05:05,356
loaded that file.


169
00:05:06,816 --> 00:05:07,876
Sometimes I want to do that the


170
00:05:07,876 --> 00:05:08,726
other way around, though,


171
00:05:08,726 --> 00:05:10,076
sometimes I want to click on a


172
00:05:10,076 --> 00:05:11,596
file and tell Xcode where to put


173
00:05:11,596 --> 00:05:11,716
it.


174
00:05:12,466 --> 00:05:13,896
For that, I use the Destination


175
00:05:13,896 --> 00:05:14,226
Chooser.


176
00:05:14,716 --> 00:05:16,006
I'll just hold option and shift.


177
00:05:16,896 --> 00:05:18,016
Click on the file that I want,


178
00:05:18,016 --> 00:05:19,276
and the Destination Chooser


179
00:05:19,276 --> 00:05:19,666
appears.


180
00:05:20,386 --> 00:05:22,476
Now I can just hit return to


181
00:05:22,476 --> 00:05:23,606
open it in the active editor.


182
00:05:24,596 --> 00:05:26,506
Or I can use the arrow keys or


183
00:05:26,506 --> 00:05:29,366
the mouse to insert a new editor


184
00:05:29,366 --> 00:05:31,506
here, to open it in this editor,


185
00:05:31,636 --> 00:05:33,476
put an editor there, over here,


186
00:05:33,476 --> 00:05:34,066
whatever I want.


187
00:05:34,066 --> 00:05:35,896
I can also use standard keyboard


188
00:05:35,896 --> 00:05:37,156
shortcuts to do things like


189
00:05:37,156 --> 00:05:39,576
switch tabs, put it somewhere


190
00:05:39,576 --> 00:05:41,476
over here, or switch windows,


191
00:05:42,236 --> 00:05:43,216
put it somewhere over here.


192
00:05:44,216 --> 00:05:45,236
There's a lot of flexibility


193
00:05:45,236 --> 00:05:46,186
here, a lot of power.


194
00:05:46,816 --> 00:05:47,776
So, I'm going to put this one


195
00:05:47,776 --> 00:05:49,666
down here under the Globe Scene.


196
00:05:50,146 --> 00:05:50,946
Just press return.


197
00:05:52,266 --> 00:05:53,706
And I've got a set of files that


198
00:05:53,706 --> 00:05:55,186
I want to work with, a layout


199
00:05:55,186 --> 00:05:57,056
that I like, everything's set,


200
00:05:57,496 --> 00:06:01,106
but what if I want to just focus


201
00:06:01,106 --> 00:06:02,436
on one of these files for a


202
00:06:02,926 --> 00:06:03,086
minute.


203
00:06:03,836 --> 00:06:05,226
That's what the new Focus mode


204
00:06:05,226 --> 00:06:08,096
is for, each editor has a button


205
00:06:08,096 --> 00:06:09,936
in the corner next to the close


206
00:06:09,936 --> 00:06:12,446
button and if I click that, I


207
00:06:12,446 --> 00:06:14,396
can zoom in this editor to take


208
00:06:14,396 --> 00:06:15,126
over the whole window.


209
00:06:15,126 --> 00:06:17,036
So, let me use that to zoom in


210
00:06:17,036 --> 00:06:18,236
and talk about what's new in the


211
00:06:18,236 --> 00:06:18,846
Source Editor.


212
00:06:19,446 --> 00:06:22,616
So, one of my favorite new


213
00:06:22,616 --> 00:06:24,006
features in the Source Editor is


214
00:06:24,006 --> 00:06:26,786
the Minimap that's in the


215
00:06:26,786 --> 00:06:27,716
options menu, of course.


216
00:06:27,796 --> 00:06:30,336
So, I'll turn on Minimap, and


217
00:06:30,336 --> 00:06:31,766
then let me make it a little bit


218
00:06:31,766 --> 00:06:32,736
bigger, so you can see it.


219
00:06:33,706 --> 00:06:36,356
So, the Minimap, of course, is a


220
00:06:36,356 --> 00:06:37,846
bird's eye view of your code, it


221
00:06:37,846 --> 00:06:39,186
shows you the contours of your


222
00:06:39,186 --> 00:06:40,396
code it shows you the syntax


223
00:06:40,396 --> 00:06:40,876
coloring.


224
00:06:41,926 --> 00:06:44,036
And it's meant for navigation.


225
00:06:44,106 --> 00:06:45,156
So, it tells you where you're


226
00:06:45,156 --> 00:06:46,496
going before you get there, as


227
00:06:46,496 --> 00:06:47,376
you hover over different


228
00:06:47,376 --> 00:06:49,356
elements, it shows you exactly


229
00:06:49,356 --> 00:06:50,596
what it is, so you know where


230
00:06:50,596 --> 00:06:50,966
you're going.


231
00:06:51,946 --> 00:06:52,996
It also shows you important


232
00:06:52,996 --> 00:06:54,666
landmarks, like, where you have


233
00:06:54,666 --> 00:06:56,106
changes in your file or where


234
00:06:56,106 --> 00:06:58,616
you have breakpoints, the text


235
00:06:58,616 --> 00:07:00,566
you see down here are marks that


236
00:07:00,566 --> 00:07:02,096
I've inserted into my code to


237
00:07:02,096 --> 00:07:02,676
organize it.


238
00:07:02,676 --> 00:07:04,436
And if I click on one of those,


239
00:07:04,436 --> 00:07:05,516
you can see that we render the


240
00:07:05,516 --> 00:07:06,746
marks in the Minimap, and the


241
00:07:06,746 --> 00:07:07,996
Source Editor the same,


242
00:07:08,266 --> 00:07:09,636
including the divider lines to


243
00:07:09,636 --> 00:07:11,456
help anchor you as you scroll


244
00:07:12,026 --> 00:07:12,166
around.


245
00:07:12,936 --> 00:07:15,046
The Minimap also shows transient


246
00:07:15,046 --> 00:07:15,646
information.


247
00:07:15,896 --> 00:07:17,986
So, if I do find, for instance,


248
00:07:20,356 --> 00:07:22,606
Minimap shows me all of the


249
00:07:22,606 --> 00:07:25,096
matches in my file and it fades


250
00:07:25,166 --> 00:07:26,326
some of the other information,


251
00:07:26,326 --> 00:07:27,606
so that that stands out, so you


252
00:07:27,606 --> 00:07:28,986
can see exactly where you are,


253
00:07:29,696 --> 00:07:31,276
and the context of your current


254
00:07:31,276 --> 00:07:31,696
match.


255
00:07:35,186 --> 00:07:35,486
All right.


256
00:07:35,486 --> 00:07:36,376
So, that's the Minimap.


257
00:07:37,076 --> 00:07:38,426
Over on the source code side,


258
00:07:38,906 --> 00:07:39,996
we've made some improvements,


259
00:07:40,056 --> 00:07:42,236
like new syntax coloring options


260
00:07:42,776 --> 00:07:45,026
like these declarations you see


261
00:07:45,026 --> 00:07:45,326
here.


262
00:07:45,326 --> 00:07:47,776
And we've added new themes,


263
00:07:47,776 --> 00:07:49,566
including high contrast themes


264
00:07:49,596 --> 00:07:50,796
in light and dark.


265
00:07:54,716 --> 00:07:57,366
And we've given documentation, a


266
00:07:57,366 --> 00:07:58,566
big boost in readability.


267
00:07:59,686 --> 00:08:00,936
We've restyled it, so that it


268
00:08:00,936 --> 00:08:02,396
reads more like documentation


269
00:08:02,936 --> 00:08:04,616
and Xcode now understands a lot


270
00:08:04,616 --> 00:08:06,846
more of the structure of your


271
00:08:06,846 --> 00:08:08,106
documentation to help make it


272
00:08:08,106 --> 00:08:08,966
easier to maintain.


273
00:08:09,446 --> 00:08:10,516
So let me give you an example.


274
00:08:10,516 --> 00:08:12,796
I have here a function which is


275
00:08:12,796 --> 00:08:13,656
fully documented.


276
00:08:14,436 --> 00:08:18,446
But, if I add a new parameter to


277
00:08:18,446 --> 00:08:20,106
this and I'll make it a double.


278
00:08:20,576 --> 00:08:23,626
I'll give it a value and then


279
00:08:23,626 --> 00:08:25,286
let me use my parameter down


280
00:08:25,286 --> 00:08:26,856
here, so I don't get any issues.


281
00:08:27,696 --> 00:08:30,366
Now, I can use the action pop


282
00:08:30,366 --> 00:08:31,976
over and Add Documentation to


283
00:08:31,976 --> 00:08:34,196
fill in the gaps in my code.


284
00:08:34,785 --> 00:08:38,126
Best of all, it also works with


285
00:08:38,596 --> 00:08:39,785
multiple cursors, so if you have


286
00:08:39,785 --> 00:08:40,966
a bunch of gaps to fill it's


287
00:08:40,966 --> 00:08:41,496
really easy.


288
00:08:41,525 --> 00:08:42,186
All right.


289
00:08:44,416 --> 00:08:46,606
So, I got my documentation.


290
00:08:47,036 --> 00:08:48,656
Now, let's say hypothetically,


291
00:08:48,656 --> 00:08:49,986
you're on stage in front of a


292
00:08:50,036 --> 00:08:51,866
very large audience, and you've


293
00:08:51,866 --> 00:08:53,986
just made a typo in your code,


294
00:08:54,086 --> 00:08:55,746
and then you've used Code


295
00:08:55,746 --> 00:08:58,496
Completion and Add Documentation


296
00:08:58,496 --> 00:08:59,826
to spread that typo around.


297
00:09:00,646 --> 00:09:03,476
Well, Edit All In Scope can now


298
00:09:03,986 --> 00:09:06,136
clean up your mistakes very


299
00:09:06,136 --> 00:09:08,046
quickly, your signature, your


300
00:09:08,046 --> 00:09:09,596
code, and now, even the


301
00:09:09,596 --> 00:09:12,086
documentation, can be fixed in


302
00:09:12,086 --> 00:09:12,466
one go.


303
00:09:13,516 --> 00:09:17,376
[ Applause ]


304
00:09:17,876 --> 00:09:18,116
All right.


305
00:09:18,786 --> 00:09:19,786
One last thing I want to show


306
00:09:19,786 --> 00:09:20,946
you in the Source Editor that


307
00:09:20,946 --> 00:09:23,026
I'm really excited about is an


308
00:09:23,026 --> 00:09:24,236
enhancement to change bars.


309
00:09:24,796 --> 00:09:26,036
So down here at the bottom of my


310
00:09:26,036 --> 00:09:27,386
file I have a change that I made


311
00:09:27,386 --> 00:09:27,786
earlier.


312
00:09:28,426 --> 00:09:29,646
Change bars have always shown


313
00:09:29,646 --> 00:09:32,146
you that a reminder of the


314
00:09:32,146 --> 00:09:33,536
changes you made earlier which


315
00:09:33,636 --> 00:09:35,256
lines in your file have changed.


316
00:09:35,666 --> 00:09:36,746
If you hover over the change


317
00:09:36,746 --> 00:09:37,966
bar, it shows you where on the


318
00:09:37,966 --> 00:09:38,896
line those changes are.


319
00:09:39,476 --> 00:09:42,626
But now you can click on the


320
00:09:42,626 --> 00:09:43,826
change bar and there's a new


321
00:09:44,106 --> 00:09:45,756
Show Change command, which shows


322
00:09:45,756 --> 00:09:46,956
an Inline Diff right there in


323
00:09:46,956 --> 00:09:47,436
your file.


324
00:09:47,976 --> 00:09:49,216
If you hover over the bar again


325
00:09:49,216 --> 00:09:50,246
you can see exactly what it


326
00:09:50,246 --> 00:09:51,996
changed from what it changed to,


327
00:09:52,536 --> 00:09:53,836
and it's live, so any updates


328
00:09:53,876 --> 00:09:55,236
that you make will be reflected


329
00:09:55,236 --> 00:09:57,656
immediately in the diff.


330
00:09:57,886 --> 00:09:58,806
So that's everything I want to


331
00:09:58,806 --> 00:10:00,056
show in this first editor, let


332
00:10:00,056 --> 00:10:01,276
me pop back out to the big


333
00:10:01,276 --> 00:10:02,706
picture again to do that I just


334
00:10:02,706 --> 00:10:03,996
click the Focus button again.


335
00:10:05,046 --> 00:10:06,196
And my layout comes back just


336
00:10:06,196 --> 00:10:06,776
where I left it.


337
00:10:07,726 --> 00:10:09,206
One last thing before I go, I


338
00:10:09,206 --> 00:10:11,836
want to do a quick code review


339
00:10:11,836 --> 00:10:13,486
of my changes here.


340
00:10:13,866 --> 00:10:14,716
So, I'm going to click the Code


341
00:10:14,716 --> 00:10:16,066
Review button, and that's going


342
00:10:16,066 --> 00:10:17,466
to take the active editor and


343
00:10:17,466 --> 00:10:18,696
blow it up to the full window,


344
00:10:18,696 --> 00:10:19,996
so that I can concentrate on the


345
00:10:19,996 --> 00:10:21,736
task at hand, just like Focus


346
00:10:21,736 --> 00:10:22,006
mode.


347
00:10:22,476 --> 00:10:24,736
When I'm done, I click again, my


348
00:10:24,736 --> 00:10:25,516
layout comes back.


349
00:10:26,336 --> 00:10:28,966
That is a quick whirlwind tour


350
00:10:29,106 --> 00:10:30,346
of some of the many workflow


351
00:10:30,346 --> 00:10:31,546
changes in Xcode 11.


352
00:10:32,116 --> 00:10:32,826
Back to you Ken.


353
00:10:33,516 --> 00:10:38,776
[ Applause ]


354
00:10:39,276 --> 00:10:39,756
>> Thanks Brendan.


355
00:10:40,546 --> 00:10:42,136
I love that new Minimap, by the


356
00:10:42,136 --> 00:10:42,286
way.


357
00:10:42,286 --> 00:10:44,666
And there's so many other great


358
00:10:44,666 --> 00:10:46,196
Source Editor features this year


359
00:10:46,866 --> 00:10:48,686
from Spell Checking to Nested


360
00:10:48,686 --> 00:10:50,356
Code Folding to Inline Diff,


361
00:10:50,466 --> 00:10:51,196
just to name a few.


362
00:10:51,676 --> 00:10:53,206
But one area in particular that


363
00:10:53,206 --> 00:10:54,646
we focused on over the last year


364
00:10:55,136 --> 00:10:56,676
is Code Completion and giving


365
00:10:56,676 --> 00:10:58,046
you better results in more


366
00:10:58,046 --> 00:10:58,666
places.


367
00:11:00,166 --> 00:11:01,776
There's now Code Completions for


368
00:11:01,956 --> 00:11:04,936
Compiler Control statements and


369
00:11:05,256 --> 00:11:07,336
that never Completions work more


370
00:11:07,336 --> 00:11:09,456
reliably, and in more places


371
00:11:09,636 --> 00:11:11,026
like here, when you're pending


372
00:11:11,096 --> 00:11:13,636
an enum to an array [applause].


373
00:11:14,216 --> 00:11:14,936
All right [applause].


374
00:11:17,836 --> 00:11:19,576
And there's now Code Completions


375
00:11:19,696 --> 00:11:20,996
for function overload.


376
00:11:20,996 --> 00:11:23,056
So these are just a few of the


377
00:11:23,056 --> 00:11:25,266
many Completions we've improved


378
00:11:25,446 --> 00:11:26,156
in Xcode 11.


379
00:11:27,476 --> 00:11:29,126
Now, let's look at the Source


380
00:11:29,126 --> 00:11:30,546
Code Editor, and workflow.


381
00:11:31,126 --> 00:11:35,966
Now, this is a huge year for


382
00:11:35,966 --> 00:11:37,266
Swift Package Manager.


383
00:11:38,196 --> 00:11:39,316
It's been thriving since we


384
00:11:39,316 --> 00:11:41,366
introduced it with tons of


385
00:11:41,366 --> 00:11:44,046
packages available today, all of


386
00:11:44,046 --> 00:11:45,546
which let you build on the great


387
00:11:45,546 --> 00:11:47,536
work happening in the community.


388
00:11:48,536 --> 00:11:49,636
The packages are a great way to


389
00:11:49,636 --> 00:11:51,496
factor your own code, breaking


390
00:11:51,496 --> 00:11:52,676
it up into smaller, more


391
00:11:52,676 --> 00:11:53,656
testable pieces.


392
00:11:54,956 --> 00:11:56,286
Well, this year, we have fully


393
00:11:56,286 --> 00:11:57,936
integrated Swift Package Manager


394
00:11:58,126 --> 00:11:58,866
with Xcode.


395
00:11:59,266 --> 00:12:00,976
You can use packages to build


396
00:12:00,976 --> 00:12:02,976
apps for all of the platforms.


397
00:12:03,516 --> 00:12:10,686
[ Applause ]


398
00:12:11,186 --> 00:12:13,336
And packages, get first class


399
00:12:13,336 --> 00:12:15,016
integration throughout Xcode,


400
00:12:15,546 --> 00:12:17,836
from Source Control integration,


401
00:12:17,836 --> 00:12:19,376
to debugging, to testing,


402
00:12:19,846 --> 00:12:21,066
everything that you do with


403
00:12:21,066 --> 00:12:23,286
packages, it works just like


404
00:12:23,286 --> 00:12:24,786
you're used to, with projects.


405
00:12:25,486 --> 00:12:26,936
And Xcode makes it easy to


406
00:12:26,936 --> 00:12:29,076
discover and use packages, and


407
00:12:29,076 --> 00:12:31,056
then just as easy to create and


408
00:12:31,056 --> 00:12:32,586
share your own with the world.


409
00:12:33,176 --> 00:12:35,816
The integration with multiple


410
00:12:35,816 --> 00:12:38,036
services means that you are only


411
00:12:38,036 --> 00:12:40,356
ever just a few clicks away from


412
00:12:40,356 --> 00:12:42,016
some awesome code.


413
00:12:42,846 --> 00:12:44,056
We really think you are going to


414
00:12:44,056 --> 00:12:45,646
love using Swift Packages.


415
00:12:46,696 --> 00:12:47,726
And here to show you how to get


416
00:12:47,726 --> 00:12:49,156
started with Swift Packages in


417
00:12:49,196 --> 00:12:50,466
Xcode is Patrick.


418
00:12:51,516 --> 00:12:57,126
[ Applause ]


419
00:12:57,626 --> 00:12:58,796
>> Thanks Ken.


420
00:12:59,166 --> 00:13:00,366
Today, I'm really excited to


421
00:13:00,366 --> 00:13:01,976
show you all Swift Packages in


422
00:13:01,976 --> 00:13:02,576
Xcode 11.


423
00:13:02,826 --> 00:13:05,776
I will be working on our travel


424
00:13:05,776 --> 00:13:07,086
app, which includes a trip


425
00:13:07,086 --> 00:13:07,636
planning feature.


426
00:13:08,686 --> 00:13:09,566
This feature right now doesn't


427
00:13:09,566 --> 00:13:10,486
have any weather information


428
00:13:10,486 --> 00:13:11,496
which is a pretty important part


429
00:13:11,496 --> 00:13:12,046
about any trip.


430
00:13:12,736 --> 00:13:14,216
I don't want to have to reinvent


431
00:13:14,216 --> 00:13:14,916
the wheel to get this


432
00:13:14,916 --> 00:13:16,606
information in my app.


433
00:13:16,796 --> 00:13:18,706
Lucky for me, my coworker Rhonda


434
00:13:18,706 --> 00:13:19,736
told me about a package that I


435
00:13:19,736 --> 00:13:20,926
could use to do just this.


436
00:13:21,516 --> 00:13:22,546
So, let's add it to our project.


437
00:13:23,836 --> 00:13:26,276
I'll start by navigating to the


438
00:13:26,276 --> 00:13:26,916
Project Editor.


439
00:13:27,776 --> 00:13:28,966
And I'll navigate to the project


440
00:13:30,086 --> 00:13:31,006
where I'll see a new Swift


441
00:13:31,006 --> 00:13:31,666
Packages tab.


442
00:13:32,696 --> 00:13:34,176
This tab will show me any


443
00:13:34,176 --> 00:13:35,276
packages that my project


444
00:13:35,276 --> 00:13:36,006
currently depends on.


445
00:13:37,226 --> 00:13:38,856
To add the first, I'll click the


446
00:13:38,856 --> 00:13:39,396
plus button.


447
00:13:40,036 --> 00:13:40,986
And because I've already logged


448
00:13:40,986 --> 00:13:42,486
in with my GitHub account, I can


449
00:13:42,486 --> 00:13:43,836
see all of my personal packages,


450
00:13:43,986 --> 00:13:45,456
organizational packages, as well


451
00:13:45,456 --> 00:13:46,606
as my starred repos right at the


452
00:13:48,136 --> 00:13:49,376
top Here's that forecast package


453
00:13:49,376 --> 00:13:50,006
I was talking about.


454
00:13:51,116 --> 00:13:52,936
So, if I click next, Xcode will


455
00:13:52,936 --> 00:13:54,436
prompt me for my version


456
00:13:54,436 --> 00:13:56,196
information here, and Xcode will


457
00:13:56,196 --> 00:13:57,616
automatically fill in the most


458
00:13:57,616 --> 00:13:59,616
recent up-to-date version for me


459
00:13:59,616 --> 00:14:00,106
to start using.


460
00:14:00,206 --> 00:14:01,416
And that's what I want because I


461
00:14:01,416 --> 00:14:02,386
want the most up-to-date code,


462
00:14:02,486 --> 00:14:02,816
right away.


463
00:14:04,256 --> 00:14:06,036
When I click next, Xcode will


464
00:14:06,036 --> 00:14:07,246
resolve any dependencies that my


465
00:14:07,246 --> 00:14:08,826
package may have, but because


466
00:14:08,826 --> 00:14:10,066
it's this pretty simple package,


467
00:14:10,096 --> 00:14:10,806
it doesn't have any


468
00:14:10,806 --> 00:14:11,796
dependencies, it will resolve


469
00:14:11,796 --> 00:14:12,146
right away.


470
00:14:13,426 --> 00:14:16,236
Finally, I need to choose which


471
00:14:16,236 --> 00:14:17,586
target to link my package


472
00:14:17,636 --> 00:14:18,776
product against, and I'll choose


473
00:14:18,776 --> 00:14:20,396
my app target here, and I'll


474
00:14:20,396 --> 00:14:21,526
finish up.


475
00:14:22,276 --> 00:14:23,186
So, that was it.


476
00:14:23,336 --> 00:14:24,356
All I had to do to set up my


477
00:14:24,356 --> 00:14:26,126
package in my project was to add


478
00:14:26,126 --> 00:14:27,376
it to this dependency section.


479
00:14:28,516 --> 00:14:33,786
[ Applause ]


480
00:14:34,286 --> 00:14:35,066
And over in the project


481
00:14:35,066 --> 00:14:36,276
navigator, I now have a Swift


482
00:14:36,276 --> 00:14:37,426
Package dependency section,


483
00:14:37,586 --> 00:14:38,776
where I can browse all of the


484
00:14:38,776 --> 00:14:40,206
source of this package, just


485
00:14:40,206 --> 00:14:41,256
like it were part of my project,


486
00:14:41,316 --> 00:14:41,926
because it is.


487
00:14:43,886 --> 00:14:45,116
Great. So, I have a pretty good


488
00:14:45,116 --> 00:14:45,836
idea of where I need to


489
00:14:45,836 --> 00:14:46,966
implement this functionality.


490
00:14:46,966 --> 00:14:48,066
I'm going to put it right in my


491
00:14:48,066 --> 00:14:49,526
Weather Fetcher Swift file here,


492
00:14:49,666 --> 00:14:50,346
which currently doesn't do a


493
00:14:50,346 --> 00:14:50,766
whole lot.


494
00:14:51,836 --> 00:14:53,826
Now that I've configured it, I


495
00:14:53,826 --> 00:14:55,776
can quickly import the forecast


496
00:14:55,816 --> 00:14:56,316
module.


497
00:14:56,886 --> 00:15:00,186
And I'll start by creating a


498
00:15:00,186 --> 00:15:04,916
Forecast Object using the region


499
00:15:05,536 --> 00:15:06,456
that was passed in.


500
00:15:07,826 --> 00:15:08,896
But I just grabbed this package


501
00:15:08,896 --> 00:15:09,916
on GitHub and I'm not very


502
00:15:09,916 --> 00:15:10,706
familiar with the API.


503
00:15:10,706 --> 00:15:12,486
I could go look at it on the


504
00:15:12,486 --> 00:15:13,956
web, but because of the


505
00:15:14,016 --> 00:15:15,246
first-class citizen right here


506
00:15:15,276 --> 00:15:17,176
in Xcode, I can quickly jump to


507
00:15:17,176 --> 00:15:18,506
its definition and start


508
00:15:18,506 --> 00:15:19,876
browsing its source right away.


509
00:15:21,426 --> 00:15:22,466
So, I'll scroll down a little


510
00:15:22,466 --> 00:15:22,726
bit.


511
00:15:22,796 --> 00:15:24,616
And this observations method


512
00:15:24,616 --> 00:15:25,596
looks like what I want to use.


513
00:15:26,396 --> 00:15:27,346
But I'm not familiar with this


514
00:15:27,456 --> 00:15:29,136
observations structure this


515
00:15:29,136 --> 00:15:29,386
type.


516
00:15:29,866 --> 00:15:31,306
So I want to I want to jump in


517
00:15:31,306 --> 00:15:32,506
and find out more about it as


518
00:15:32,506 --> 00:15:32,736
well.


519
00:15:33,426 --> 00:15:35,046
And to show off some of our new


520
00:15:35,146 --> 00:15:36,276
search functionality in Xcode


521
00:15:36,276 --> 00:15:38,486
11, I'll use the find navigator


522
00:15:38,486 --> 00:15:40,306
by using command shift F.


523
00:15:40,926 --> 00:15:42,956
And I'll navigate down to the


524
00:15:43,026 --> 00:15:44,166
Forecast Package here to narrow


525
00:15:44,166 --> 00:15:45,536
my search just into that


526
00:15:45,536 --> 00:15:46,396
Forecast Package.


527
00:15:47,446 --> 00:15:49,356
I'll search for observation, and


528
00:15:49,826 --> 00:15:50,976
I'll only get results for that


529
00:15:50,976 --> 00:15:51,416
package.


530
00:15:51,966 --> 00:15:53,196
And it looks like it's defined


531
00:15:53,276 --> 00:15:53,736
right here.


532
00:15:54,896 --> 00:15:57,316
OK. So this enum looks like it


533
00:15:57,316 --> 00:15:58,616
has different options for me,


534
00:15:58,616 --> 00:15:59,486
like the metrics that will come


535
00:15:59,486 --> 00:16:01,426
back from this API, like the


536
00:16:01,426 --> 00:16:02,496
high temp, the low temp, the


537
00:16:02,496 --> 00:16:03,466
precipitation, and so on.


538
00:16:03,466 --> 00:16:05,016
I only want the high and low


539
00:16:05,016 --> 00:16:06,566
temp for my method, so I'll go


540
00:16:06,566 --> 00:16:07,156
and use those.


541
00:16:07,386 --> 00:16:09,216
And I'll use command shift J, to


542
00:16:09,216 --> 00:16:10,096
jump back to the project


543
00:16:10,096 --> 00:16:11,876
navigator, and navigate back to


544
00:16:11,876 --> 00:16:13,156
the Weather Fetcher here, and


545
00:16:13,156 --> 00:16:13,876
I'll start implementing this


546
00:16:13,876 --> 00:16:14,136
method.


547
00:16:15,086 --> 00:16:17,106
So, I'll use my Forecast Object.


548
00:16:17,836 --> 00:16:19,066
I'll pass in the date that was


549
00:16:19,096 --> 00:16:19,976
passing to this method.


550
00:16:20,926 --> 00:16:22,276
And like I said before I want


551
00:16:22,276 --> 00:16:25,586
the high temp and the low temp.


552
00:16:26,656 --> 00:16:27,856
And I'll fill in my Completion


553
00:16:27,856 --> 00:16:29,966
Handler really quick, grabbing


554
00:16:29,966 --> 00:16:31,396
the high and low temp out of the


555
00:16:31,396 --> 00:16:33,416
results, and then calling the


556
00:16:33,416 --> 00:16:35,556
completion with high and low.


557
00:16:35,556 --> 00:16:38,116
I'll fill in the condition


558
00:16:38,116 --> 00:16:39,286
method in a very similar way,


559
00:16:39,506 --> 00:16:41,206
only grabbing the condition back


560
00:16:41,206 --> 00:16:43,286
from the results.


561
00:16:43,396 --> 00:16:44,996
Awesome. So, now when I build,


562
00:16:44,996 --> 00:16:46,846
and run, and review the results


563
00:16:46,846 --> 00:16:47,746
in the simulator, I should be


564
00:16:47,746 --> 00:16:49,436
able to navigate the Plan tab


565
00:16:50,306 --> 00:16:51,466
and see some weather information


566
00:16:51,996 --> 00:16:53,356
in my San Francisco trip.


567
00:16:53,626 --> 00:16:54,546
And it looks like I got the high


568
00:16:54,546 --> 00:16:56,176
and the low and the expected


569
00:16:56,176 --> 00:16:56,796
conditions.


570
00:16:57,336 --> 00:16:58,106
And it looks like it's going to


571
00:16:58,106 --> 00:16:58,926
rain right towards the end of my


572
00:16:58,926 --> 00:17:00,116
trip, so I should probably bring


573
00:17:00,116 --> 00:17:00,456
a jacket.


574
00:17:01,426 --> 00:17:04,066
It was that easy to configure a


575
00:17:04,066 --> 00:17:05,336
Swift Package dependency in my


576
00:17:05,336 --> 00:17:06,656
project and start using it right


577
00:17:06,656 --> 00:17:06,896
away.


578
00:17:07,816 --> 00:17:08,376
That's the weather.


579
00:17:08,685 --> 00:17:09,356
Back to you Ken.


580
00:17:10,516 --> 00:17:13,306
[ Applause ]


581
00:17:13,806 --> 00:17:14,415
>> Thanks, Patrick.


582
00:17:15,016 --> 00:17:17,000
[ Applause ]


583
00:17:19,185 --> 00:17:21,086
Now, all of that new package


584
00:17:21,086 --> 00:17:22,465
integration is built on top of


585
00:17:22,465 --> 00:17:23,806
Xcode Source Control Support,


586
00:17:24,185 --> 00:17:25,306
and this year we're rounding


587
00:17:25,306 --> 00:17:26,675
that out with a couple more


588
00:17:26,675 --> 00:17:29,246
features, starting with Git


589
00:17:29,246 --> 00:17:31,296
Stash, which lets you save off a


590
00:17:31,296 --> 00:17:32,296
set of your changes.


591
00:17:33,516 --> 00:17:38,206
[ Applause ]


592
00:17:38,706 --> 00:17:39,726
It's available right here from


593
00:17:39,726 --> 00:17:40,936
the Source Control menu where


594
00:17:40,936 --> 00:17:42,256
you can quickly stash your


595
00:17:42,346 --> 00:17:44,006
current set of working changes.


596
00:17:45,516 --> 00:17:46,996
When you want to review those


597
00:17:46,996 --> 00:17:48,386
changes and pop the stash you


598
00:17:48,386 --> 00:17:49,436
can do that from the Source


599
00:17:49,436 --> 00:17:50,676
Control navigator.


600
00:17:51,676 --> 00:17:53,206
We're also integrating


601
00:17:53,476 --> 00:17:55,316
Cherry-Pick from the Source


602
00:17:55,316 --> 00:17:57,326
Control history view here, or


603
00:17:57,326 --> 00:17:58,256
just bring up the context menu


604
00:17:58,256 --> 00:17:59,476
on a comment and choose


605
00:17:59,476 --> 00:17:59,816
Cherry-Pick.


606
00:17:59,816 --> 00:18:01,186
So, it makes it really easy to


607
00:18:01,186 --> 00:18:03,176
move changes between branches.


608
00:18:04,116 --> 00:18:05,236
And like I mentioned earlier,


609
00:18:05,236 --> 00:18:07,096
you can now get the Source


610
00:18:07,096 --> 00:18:09,116
Control history for any file,


611
00:18:09,116 --> 00:18:11,626
anytime, with the new History


612
00:18:11,626 --> 00:18:13,656
Inspector, which by the way


613
00:18:13,656 --> 00:18:15,226
works great for non-tech files


614
00:18:15,296 --> 00:18:15,426
too.


615
00:18:16,516 --> 00:18:23,896
[ Applause ]


616
00:18:24,396 --> 00:18:25,666
Yesterday you saw the


617
00:18:25,666 --> 00:18:27,336
introduction of a number of new


618
00:18:27,726 --> 00:18:29,496
OS features, and you can begin


619
00:18:29,496 --> 00:18:30,636
adopting those today.


620
00:18:32,386 --> 00:18:34,046
Once you bring your iPad app to


621
00:18:34,046 --> 00:18:34,416
the Mac.


622
00:18:35,276 --> 00:18:36,406
You can start customizing it


623
00:18:36,406 --> 00:18:38,526
using the new Mac device here in


624
00:18:38,526 --> 00:18:40,196
the Storyboards Devices bar,


625
00:18:41,396 --> 00:18:43,196
makes it quick and easy to make


626
00:18:43,196 --> 00:18:44,596
your app feel right at home on


627
00:18:44,596 --> 00:18:48,226
the Mac, and for the new iOS


628
00:18:48,286 --> 00:18:49,176
dark appearance.


629
00:18:49,496 --> 00:18:50,746
This system does a lot of the


630
00:18:50,746 --> 00:18:51,696
work for you.


631
00:18:52,476 --> 00:18:53,886
Again, using the devices bar you


632
00:18:53,886 --> 00:18:55,526
can quickly switch between light


633
00:18:55,526 --> 00:18:57,626
and dark and make sure that your


634
00:18:57,626 --> 00:18:58,916
app looks great.


635
00:18:59,506 --> 00:19:02,166
Now, all of the new SF symbols


636
00:19:02,276 --> 00:19:03,636
are fully integrated.


637
00:19:03,966 --> 00:19:05,436
The options you need are right


638
00:19:05,436 --> 00:19:06,886
here in the inspector, things


639
00:19:06,886 --> 00:19:08,456
like having the symbol size,


640
00:19:08,686 --> 00:19:10,126
track the system font size.


641
00:19:11,026 --> 00:19:12,336
And then when you want to browse


642
00:19:12,706 --> 00:19:14,156
all the symbols, you can do that


643
00:19:14,156 --> 00:19:16,376
in the redesigned library, and


644
00:19:16,376 --> 00:19:17,416
then drag them right out into


645
00:19:17,416 --> 00:19:18,006
your Storyboard.


646
00:19:18,586 --> 00:19:21,536
Now, for your own resources,


647
00:19:21,766 --> 00:19:24,056
things like colors, and images,


648
00:19:24,536 --> 00:19:26,176
Asset Catalogs, they play a


649
00:19:26,176 --> 00:19:27,626
really important role.


650
00:19:28,086 --> 00:19:29,786
They let you vary for things


651
00:19:29,786 --> 00:19:31,586
like device type and for light


652
00:19:31,826 --> 00:19:32,216
and dark.


653
00:19:33,286 --> 00:19:35,256
The best part is, you don't have


654
00:19:35,256 --> 00:19:38,356
to write any code to do that.


655
00:19:38,686 --> 00:19:41,726
In Xcode 11, in iOS 13, you can


656
00:19:41,726 --> 00:19:43,576
create your own custom symbols.


657
00:19:43,816 --> 00:19:44,946
They get all the great


658
00:19:44,946 --> 00:19:46,706
characteristics of the new SF


659
00:19:46,806 --> 00:19:47,456
Symbols.


660
00:19:48,346 --> 00:19:49,796
So, symbols, they let you


661
00:19:49,796 --> 00:19:51,416
specify various sizes and


662
00:19:51,416 --> 00:19:52,666
weights of artwork.


663
00:19:53,296 --> 00:19:55,226
And then at runtime, the system,


664
00:19:55,396 --> 00:19:57,016
it'll choose the right variant,


665
00:19:57,256 --> 00:19:58,676
based on things like the users'


666
00:19:58,676 --> 00:20:00,556
font size, accessibility


667
00:20:00,556 --> 00:20:02,756
settings, even where the art is


668
00:20:02,756 --> 00:20:04,356
used within the user interface.


669
00:20:05,086 --> 00:20:06,386
So this is a really powerful new


670
00:20:06,386 --> 00:20:08,236
way to create dynamic artwork.


671
00:20:09,976 --> 00:20:11,856
And in Xcode 11, you can


672
00:20:11,856 --> 00:20:13,866
localize assets now too.


673
00:20:14,606 --> 00:20:16,256
You just select an asset, click


674
00:20:16,256 --> 00:20:17,356
the Localized button and the


675
00:20:17,356 --> 00:20:19,256
Attributes Inspector, and choose


676
00:20:19,256 --> 00:20:20,706
the localizations that you want


677
00:20:20,706 --> 00:20:21,396
to customize.


678
00:20:22,516 --> 00:20:25,036
[ Applause ]


679
00:20:25,536 --> 00:20:26,616
Very important stuff.


680
00:20:29,046 --> 00:20:30,136
And here to show you the updated


681
00:20:30,136 --> 00:20:32,346
Design tools is Lisa.


682
00:20:33,416 --> 00:20:33,936
>> Thank you, Ken.


683
00:20:35,546 --> 00:20:36,696
Hi, everyone.


684
00:20:37,006 --> 00:20:39,086
Today, I'm excited to show you


685
00:20:39,176 --> 00:20:41,366
how to adopt the new iOS 13


686
00:20:41,366 --> 00:20:43,656
features, Dark mode, and SF


687
00:20:43,826 --> 00:20:44,256
Symbols.


688
00:20:45,126 --> 00:20:47,086
Let's work on the login view of


689
00:20:47,086 --> 00:20:48,746
our travel app.


690
00:20:51,396 --> 00:20:53,796
The two images here, email and


691
00:20:53,796 --> 00:20:55,966
password are now using custom


692
00:20:55,966 --> 00:20:56,426
images.


693
00:20:56,906 --> 00:20:58,676
I would like to change to use


694
00:20:58,676 --> 00:21:00,566
the SF Symbols, so that they


695
00:21:00,566 --> 00:21:02,406
look great and they can work


696
00:21:02,406 --> 00:21:04,366
with dynamic type.


697
00:21:05,176 --> 00:21:06,996
When I browse the library


698
00:21:06,996 --> 00:21:08,556
earlier, there are two images


699
00:21:08,596 --> 00:21:09,616
that look nice to me.


700
00:21:10,086 --> 00:21:11,686
One is called envelope the other


701
00:21:11,686 --> 00:21:12,286
is lock.


702
00:21:12,846 --> 00:21:15,006
So let's change to use them.


703
00:21:15,556 --> 00:21:17,516
First, I'm going to click the


704
00:21:17,516 --> 00:21:19,956
email icon, and open the


705
00:21:19,956 --> 00:21:20,696
inspector.


706
00:21:21,716 --> 00:21:24,966
In Xcode 11, in the email, in


707
00:21:24,966 --> 00:21:27,666
the -- our image icons here that


708
00:21:27,666 --> 00:21:30,606
I cannot only view, the image


709
00:21:30,606 --> 00:21:33,796
names, but also I can see their


710
00:21:33,796 --> 00:21:35,496
appearances before I choose to


711
00:21:35,496 --> 00:21:37,476
use them.


712
00:21:38,066 --> 00:21:38,486
So I'm [applause].


713
00:21:39,276 --> 00:21:40,116
Yeah, like that too.


714
00:21:41,146 --> 00:21:42,876
So, I'm going to type envelope.


715
00:21:43,636 --> 00:21:45,246
Now it will show me a list of


716
00:21:45,246 --> 00:21:46,446
envelope with different


717
00:21:46,446 --> 00:21:47,116
appearances.


718
00:21:47,656 --> 00:21:49,216
I'm going to select


719
00:21:49,396 --> 00:21:51,716
envelope.fill, which looks good.


720
00:21:52,946 --> 00:21:54,476
And for the symbol


721
00:21:54,476 --> 00:21:56,406
configurations, I would like to


722
00:21:56,526 --> 00:21:58,536
set as font, so that they can


723
00:21:58,536 --> 00:21:59,816
work with dynamic type.


724
00:22:00,456 --> 00:22:03,096
I can also change the font size.


725
00:22:03,816 --> 00:22:05,176
Let's change to a bigger one.


726
00:22:05,446 --> 00:22:06,046
Title One.


727
00:22:06,636 --> 00:22:10,376
Next, I would like to do the


728
00:22:10,376 --> 00:22:11,986
same for the password icon.


729
00:22:12,706 --> 00:22:15,656
I'm going to type in lock and


730
00:22:15,656 --> 00:22:17,586
choose lock.fill which matches


731
00:22:17,586 --> 00:22:18,426
the style here.


732
00:22:19,576 --> 00:22:21,046
Again, I'll set the


733
00:22:21,046 --> 00:22:22,566
configuration as font.


734
00:22:23,126 --> 00:22:26,086
Next, I would like to take a


735
00:22:26,086 --> 00:22:27,766
look how my view looks in the


736
00:22:27,766 --> 00:22:28,416
Dark mode.


737
00:22:29,646 --> 00:22:31,836
From the devices bar there's a


738
00:22:31,836 --> 00:22:33,986
switch I can change from light


739
00:22:34,146 --> 00:22:35,946
to dark, let's do it.


740
00:22:36,386 --> 00:22:38,926
Now you can see the view has


741
00:22:38,966 --> 00:22:39,666
been updated.


742
00:22:40,776 --> 00:22:42,856
However, this image doesn't look


743
00:22:42,856 --> 00:22:43,076
right.


744
00:22:43,856 --> 00:22:45,396
The handle of my suitcase


745
00:22:45,396 --> 00:22:46,086
disappears.


746
00:22:46,776 --> 00:22:48,056
Let's figure out what happened.


747
00:22:48,976 --> 00:22:51,146
I'm switching back.


748
00:22:51,146 --> 00:22:52,336
Oh, I see.


749
00:22:52,716 --> 00:22:53,736
The handle is black.


750
00:22:54,266 --> 00:22:55,696
So, it doesn't show very well


751
00:22:55,696 --> 00:22:57,026
against the dark background.


752
00:22:57,976 --> 00:22:59,986
To fix that, I would like to


753
00:23:00,016 --> 00:23:01,776
provide a new variant for this


754
00:23:01,846 --> 00:23:03,406
image for the Dark mode.


755
00:23:04,186 --> 00:23:05,926
Luckily, I have a great designer


756
00:23:05,926 --> 00:23:06,376
named At.


757
00:23:07,136 --> 00:23:08,986
He has already created one image


758
00:23:08,986 --> 00:23:10,736
for me to use in dark.


759
00:23:11,286 --> 00:23:12,406
Let's change to use it.


760
00:23:12,406 --> 00:23:15,166
I'm going to select the image.


761
00:23:15,166 --> 00:23:18,036
And I can click this arrow.


762
00:23:18,766 --> 00:23:20,886
It will open this image into


763
00:23:20,916 --> 00:23:21,696
dark appearance.


764
00:23:22,416 --> 00:23:24,426
First, let's enable the dark


765
00:23:24,426 --> 00:23:25,016
appearance.


766
00:23:25,696 --> 00:23:27,806
And then I can drag in the


767
00:23:27,806 --> 00:23:32,486
image, created by At.


768
00:23:32,746 --> 00:23:34,356
Let's change by, up to the


769
00:23:34,446 --> 00:23:35,006
Storyboard.


770
00:23:36,346 --> 00:23:38,496
Now, you can see in Light mode,


771
00:23:38,616 --> 00:23:39,946
it is still using the original


772
00:23:40,016 --> 00:23:42,306
image as expected, but when I


773
00:23:42,306 --> 00:23:43,186
changed to Dark.


774
00:23:43,826 --> 00:23:45,516
Now the new image has been


775
00:23:45,516 --> 00:23:46,816
using, it's look good.


776
00:23:47,516 --> 00:23:52,056
[ Applause ]


777
00:23:52,556 --> 00:23:54,996
But At is a perfectionist, he


778
00:23:54,996 --> 00:23:56,276
thought these two blue buttons,


779
00:23:56,336 --> 00:23:57,716
although they look good in Light


780
00:23:57,716 --> 00:23:59,626
that he feel it doesn't pop as


781
00:23:59,626 --> 00:24:01,536
much as he wants in Dark.


782
00:24:02,226 --> 00:24:04,026
So, instead, he wanted me to


783
00:24:04,026 --> 00:24:05,446
change to use a different color


784
00:24:05,476 --> 00:24:06,026
orange.


785
00:24:06,906 --> 00:24:08,166
Let's figure out how to do that.


786
00:24:08,166 --> 00:24:10,566
I'm going to select the button.


787
00:24:11,476 --> 00:24:13,816
And now, I can see the tint


788
00:24:13,816 --> 00:24:15,396
color is set to use a custom


789
00:24:15,396 --> 00:24:16,726
color called Button color.


790
00:24:17,706 --> 00:24:20,026
So to use a light in the Light


791
00:24:20,026 --> 00:24:21,896
mode, I would like continue to


792
00:24:21,896 --> 00:24:24,106
using the blue button, but


793
00:24:24,106 --> 00:24:25,826
actually in the Dark mode, I


794
00:24:25,826 --> 00:24:27,626
would like to change to use the


795
00:24:27,686 --> 00:24:30,306
orange color, just as easy as


796
00:24:30,306 --> 00:24:32,456
what I done for the image.


797
00:24:32,456 --> 00:24:34,436
I'm going to open in the


798
00:24:34,546 --> 00:24:36,526
inspector and enable the dark


799
00:24:36,526 --> 00:24:37,036
appearance.


800
00:24:37,756 --> 00:24:39,366
And for the dark appearance, I'm


801
00:24:39,496 --> 00:24:41,556
going to use orange color.


802
00:24:42,576 --> 00:24:44,186
Let's switch back.


803
00:24:45,296 --> 00:24:47,866
Cool. I do find these two-orange


804
00:24:47,916 --> 00:24:49,836
button pop more and look better


805
00:24:49,836 --> 00:24:50,116
now.


806
00:24:50,636 --> 00:24:52,996
Next, I would like to take a


807
00:24:52,996 --> 00:24:54,706
look how my view looks at


808
00:24:54,706 --> 00:24:55,016
runtime.


809
00:24:55,016 --> 00:24:57,536
So, I'm going to build and run


810
00:24:57,696 --> 00:24:58,566
in a simulator.


811
00:25:04,416 --> 00:25:07,046
In Xcode 11, there's a new


812
00:25:07,046 --> 00:25:08,926
feature called Environment


813
00:25:09,046 --> 00:25:09,646
Overrides.


814
00:25:10,686 --> 00:25:12,976
It is located in the Debug bar.


815
00:25:13,886 --> 00:25:16,286
When I click it, it will show me


816
00:25:16,286 --> 00:25:18,286
a pop over that I can change


817
00:25:18,366 --> 00:25:19,846
different settings, such as


818
00:25:19,886 --> 00:25:21,316
system settings and


819
00:25:21,316 --> 00:25:22,486
accessibility settings.


820
00:25:23,476 --> 00:25:26,256
So, I can change the interface


821
00:25:26,256 --> 00:25:29,526
style from light to dark to see


822
00:25:29,776 --> 00:25:31,376
how my view got updated.


823
00:25:31,376 --> 00:25:33,706
I can set different


824
00:25:33,706 --> 00:25:36,766
accessibility settings, for


825
00:25:36,766 --> 00:25:39,846
example, the bold text.


826
00:25:40,456 --> 00:25:43,776
From this overrides, it allows


827
00:25:43,776 --> 00:25:46,386
me to test out my app at runtime


828
00:25:46,506 --> 00:25:47,736
with these different settings,


829
00:25:48,086 --> 00:25:49,706
without actually changing the


830
00:25:49,706 --> 00:25:51,506
settings on my simulator or


831
00:25:51,506 --> 00:25:52,066
devices.


832
00:25:52,066 --> 00:25:53,546
I can --


833
00:25:54,516 --> 00:25:57,876
[ Applause ]


834
00:25:58,376 --> 00:26:01,526
I can also change the dynamic


835
00:26:01,666 --> 00:26:03,646
type size by dragging the slider


836
00:26:03,726 --> 00:26:05,886
here and you can see how the


837
00:26:05,886 --> 00:26:06,976
view has been updated.


838
00:26:07,516 --> 00:26:11,976
[ Applause ]


839
00:26:12,476 --> 00:26:14,696
Remember earlier when I said the


840
00:26:14,696 --> 00:26:16,436
SF Symbols for these two images


841
00:26:16,936 --> 00:26:18,436
that I used font for their


842
00:26:18,436 --> 00:26:19,296
configuration.


843
00:26:19,876 --> 00:26:22,186
So, now, when I'm dragging to


844
00:26:22,236 --> 00:26:24,436
set different dynamic type, they


845
00:26:24,436 --> 00:26:28,386
react to it, just like text.


846
00:26:28,536 --> 00:26:30,836
With very simple edits, I think


847
00:26:30,836 --> 00:26:33,546
my view looks great in iOS 13.


848
00:26:33,546 --> 00:26:35,396
I hope this can make your app


849
00:26:35,396 --> 00:26:36,406
look great as well.


850
00:26:36,876 --> 00:26:37,186
Thank you.


851
00:26:37,706 --> 00:26:38,576
Give it back to Ken [applause].


852
00:26:39,806 --> 00:26:40,426
>> Thanks, Lisa.


853
00:26:41,856 --> 00:26:43,666
These new dark iOS apps look


854
00:26:43,736 --> 00:26:44,396
fantastic.


855
00:26:44,846 --> 00:26:46,136
And some of the scenarios that


856
00:26:46,136 --> 00:26:47,486
your users run into on their


857
00:26:47,486 --> 00:26:50,406
devices, things like networking


858
00:26:50,406 --> 00:26:51,666
or thermal conditions.


859
00:26:52,336 --> 00:26:53,616
Those are really hard to


860
00:26:53,616 --> 00:26:54,396
reproduce.


861
00:26:55,046 --> 00:26:56,606
And that makes them really hard


862
00:26:56,646 --> 00:26:59,226
to debug, well, in Xcode 11 you


863
00:26:59,276 --> 00:27:00,826
can change the way your device


864
00:27:00,926 --> 00:27:02,996
behaves, varying things like the


865
00:27:02,996 --> 00:27:05,676
network throughput, or changing


866
00:27:05,676 --> 00:27:07,156
the device's thermal state.


867
00:27:07,276 --> 00:27:10,226
In the devices window there's a


868
00:27:10,226 --> 00:27:12,006
new Device Condition section


869
00:27:12,516 --> 00:27:13,466
where you can turn on the


870
00:27:13,466 --> 00:27:15,576
Network Link Conditioner and


871
00:27:15,576 --> 00:27:17,166
simulate real world networking


872
00:27:17,256 --> 00:27:19,736
scenarios, or you can turn on


873
00:27:19,736 --> 00:27:20,806
the Thermal State Conditioner.


874
00:27:21,616 --> 00:27:22,696
Change your device's thermal


875
00:27:22,696 --> 00:27:24,246
state, so that it behaves like


876
00:27:24,246 --> 00:27:26,076
it's warmer than it actually is.


877
00:27:26,626 --> 00:27:28,096
And once you turn on one of


878
00:27:28,096 --> 00:27:29,776
these conditions, you'll see an


879
00:27:29,776 --> 00:27:32,036
indicator on your device, and


880
00:27:32,036 --> 00:27:33,736
you can tap that indicator to


881
00:27:33,736 --> 00:27:35,196
see exactly which condition is


882
00:27:35,246 --> 00:27:35,556
running.


883
00:27:36,426 --> 00:27:38,236
And you can stop it here, or


884
00:27:38,706 --> 00:27:40,036
when you disconnect from Xcode,


885
00:27:40,036 --> 00:27:41,596
it'll automatically be stopped


886
00:27:42,016 --> 00:27:42,376
for you.


887
00:27:43,126 --> 00:27:44,426
This is a great way to make sure


888
00:27:44,426 --> 00:27:46,186
that your apps perform really


889
00:27:46,186 --> 00:27:47,936
well in all conditions.


890
00:27:51,066 --> 00:27:53,186
Xcode 11 continues to improve


891
00:27:53,226 --> 00:27:55,096
testing this year with the


892
00:27:55,096 --> 00:27:56,696
introduction of test plans.


893
00:27:57,736 --> 00:27:59,766
Now test plans let you define a


894
00:27:59,766 --> 00:28:01,466
set of tests that you can share


895
00:28:01,466 --> 00:28:02,226
across schemes.


896
00:28:03,006 --> 00:28:04,396
A test plan can have any number


897
00:28:04,396 --> 00:28:06,336
of configurations that let you


898
00:28:06,336 --> 00:28:08,156
say what arguments do you want


899
00:28:08,156 --> 00:28:10,236
to pass or what environment


900
00:28:10,236 --> 00:28:11,456
variables do you want to say,


901
00:28:11,456 --> 00:28:13,196
even what sanitizers do you want


902
00:28:13,196 --> 00:28:13,616
to turn on?


903
00:28:14,506 --> 00:28:16,486
When you run that test plan, it


904
00:28:16,486 --> 00:28:18,236
runs all the tests in all the


905
00:28:18,236 --> 00:28:19,496
different configurations.


906
00:28:20,316 --> 00:28:21,836
So, for example, you can have a


907
00:28:21,836 --> 00:28:22,546
test plan that has


908
00:28:22,546 --> 00:28:24,516
configurations for each language


909
00:28:24,666 --> 00:28:25,736
your app supports.


910
00:28:26,356 --> 00:28:28,106
When you run that test plan, it


911
00:28:28,106 --> 00:28:29,866
runs all the tests in all the


912
00:28:29,866 --> 00:28:31,696
different languages, all with


913
00:28:31,696 --> 00:28:33,486
just a single action.


914
00:28:34,036 --> 00:28:35,926
And, of course, test plans, they


915
00:28:35,926 --> 00:28:37,186
work great with the Xcode's


916
00:28:37,186 --> 00:28:38,766
server where you can run your


917
00:28:38,766 --> 00:28:40,806
tests on multiple devices and


918
00:28:40,856 --> 00:28:43,486
simulators, all in parallel, and


919
00:28:43,486 --> 00:28:45,516
now in more configurations than


920
00:28:45,516 --> 00:28:45,776
ever.


921
00:28:46,356 --> 00:28:48,466
And it goes without saying,


922
00:28:48,516 --> 00:28:50,696
testing, it works great for iPad


923
00:28:50,696 --> 00:28:52,676
apps on the Mac, as well as


924
00:28:52,736 --> 00:28:54,446
those built with SwiftUI.


925
00:28:55,316 --> 00:28:59,046
And that's testing.


926
00:29:00,036 --> 00:29:01,896
There are some awesome


927
00:29:02,166 --> 00:29:03,956
improvements to the simulator


928
00:29:04,236 --> 00:29:04,666
this year.


929
00:29:06,146 --> 00:29:07,266
There were the new standalone


930
00:29:07,266 --> 00:29:09,446
watch apps you can deploy


931
00:29:09,446 --> 00:29:11,716
directly to the watch simulator.


932
00:29:12,306 --> 00:29:13,976
No iPhone simulator needed.


933
00:29:14,516 --> 00:29:19,306
[ Applause ]


934
00:29:19,806 --> 00:29:21,466
But the big news this year is


935
00:29:21,466 --> 00:29:23,736
that the simulator is built on


936
00:29:23,736 --> 00:29:24,856
top of Metal


937
00:29:25,081 --> 00:29:27,081
[ Applause ]


938
00:29:27,146 --> 00:29:27,276
Yeah.


939
00:29:28,161 --> 00:29:30,161
[ Applause ]


940
00:29:30,306 --> 00:29:31,636
So that means that apps built


941
00:29:31,636 --> 00:29:33,696
using Metal can now run in the


942
00:29:33,696 --> 00:29:35,916
simulator, and they get amazing


943
00:29:35,916 --> 00:29:37,806
graphics performance, and


944
00:29:37,806 --> 00:29:39,276
everything that's built on top


945
00:29:39,276 --> 00:29:41,556
of Metal, like UIKit, well, that


946
00:29:41,556 --> 00:29:42,746
gets a whole lot faster too.


947
00:29:44,246 --> 00:29:46,996
You'll see a beautiful 60 frames


948
00:29:47,066 --> 00:29:47,656
per second.


949
00:29:47,716 --> 00:29:50,796
And CPU use, it is reduced by up


950
00:29:50,886 --> 00:29:53,366
to 90% which is really great for


951
00:29:53,366 --> 00:29:55,486
battery life [applause].


952
00:29:55,486 --> 00:29:55,646
Yeah.


953
00:29:56,516 --> 00:29:59,726
[ Applause ]


954
00:30:00,226 --> 00:30:01,446
We didn't stop there though.


955
00:30:02,456 --> 00:30:04,916
Simulator Warm Boots are now up


956
00:30:04,916 --> 00:30:06,816
to twice as fast too.


957
00:30:07,516 --> 00:30:10,756
[ Applause ]


958
00:30:11,256 --> 00:30:12,276
So, big improvements to the


959
00:30:12,276 --> 00:30:12,776
simulator.


960
00:30:15,286 --> 00:30:16,866
Last year we introduced, OS


961
00:30:16,866 --> 00:30:18,296
Signposts and Custom


962
00:30:18,296 --> 00:30:19,936
Instruments, so that you can


963
00:30:19,936 --> 00:30:21,816
surface your own data up through


964
00:30:21,816 --> 00:30:22,526
the tools.


965
00:30:23,256 --> 00:30:25,206
Well, this year, we're bringing


966
00:30:25,206 --> 00:30:27,276
hierarchy to the tracks, to make


967
00:30:27,276 --> 00:30:29,166
it easier for you to explore and


968
00:30:29,166 --> 00:30:30,396
correlate data.


969
00:30:31,486 --> 00:30:33,076
But when you use OS Signposts


970
00:30:33,486 --> 00:30:35,756
each category that you log, will


971
00:30:35,756 --> 00:30:37,426
now get its own track, like


972
00:30:37,456 --> 00:30:37,556
this.


973
00:30:39,136 --> 00:30:41,466
Then you can pin that track and


974
00:30:41,566 --> 00:30:43,026
easily correlate it to another


975
00:30:43,026 --> 00:30:44,716
track, like CPU use.


976
00:30:46,236 --> 00:30:47,406
We're also introducing a new


977
00:30:47,406 --> 00:30:49,956
template for SwiftUI to give you


978
00:30:49,956 --> 00:30:51,386
insight into how much time


979
00:30:51,386 --> 00:30:52,656
you're spending building your


980
00:30:52,656 --> 00:30:54,736
user interfaces in the new body


981
00:30:54,736 --> 00:30:55,306
methods.


982
00:30:56,556 --> 00:30:58,506
And we've completely rewritten


983
00:30:58,506 --> 00:30:59,996
the Metal System Trace Template


984
00:31:00,066 --> 00:31:01,356
from the ground up.


985
00:31:02,666 --> 00:31:03,666
It takes advantage of the new


986
00:31:03,666 --> 00:31:05,406
hierarchical tracks and it's


987
00:31:05,406 --> 00:31:08,656
significantly faster, up to 10


988
00:31:08,926 --> 00:31:09,996
times faster.


989
00:31:10,666 --> 00:31:16,216
Now, we can't finish up here


990
00:31:16,216 --> 00:31:18,086
today without talking about


991
00:31:18,226 --> 00:31:20,436
SwiftUI, which really is an


992
00:31:20,436 --> 00:31:23,116
amazing new way to build user


993
00:31:23,116 --> 00:31:23,946
interfaces.


994
00:31:25,296 --> 00:31:27,376
SwiftUI makes it seamless to


995
00:31:27,376 --> 00:31:30,616
move from editing to running to


996
00:31:30,616 --> 00:31:31,296
debugging.


997
00:31:32,266 --> 00:31:34,806
The new previews which show you


998
00:31:34,806 --> 00:31:36,496
your real UI, they make these


999
00:31:36,556 --> 00:31:39,466
three things, just a single


1000
00:31:39,466 --> 00:31:40,126
activity.


1001
00:31:41,396 --> 00:31:44,356
Editing, when we see this is the


1002
00:31:44,356 --> 00:31:45,646
future of UI development.


1003
00:31:46,226 --> 00:31:49,936
So, from the new Preview mode to


1004
00:31:49,936 --> 00:31:51,406
the inline editors, we've


1005
00:31:51,406 --> 00:31:53,956
rethought how to build UI code.


1006
00:31:54,546 --> 00:31:55,886
And we've done that with an eye


1007
00:31:55,886 --> 00:31:57,586
towards efficiency and direct


1008
00:31:57,586 --> 00:31:59,716
manipulation, so that you can


1009
00:31:59,716 --> 00:32:01,866
write more code without ever


1010
00:32:01,866 --> 00:32:02,926
typing a character.


1011
00:32:03,576 --> 00:32:05,486
And there's a brand-new


1012
00:32:05,486 --> 00:32:07,306
documentation experience to go


1013
00:32:07,306 --> 00:32:07,686
with it.


1014
00:32:07,896 --> 00:32:09,156
And that's going to get you up


1015
00:32:09,156 --> 00:32:11,026
and writing code quickly.


1016
00:32:11,576 --> 00:32:13,366
There are great new tutorials,


1017
00:32:13,996 --> 00:32:16,346
all which guide and teach you,


1018
00:32:16,346 --> 00:32:18,386
while helping you write code.


1019
00:32:19,046 --> 00:32:21,926
Now, you don't need to create a


1020
00:32:21,926 --> 00:32:23,306
new project to get started with


1021
00:32:23,306 --> 00:32:24,996
previews, you can use them right


1022
00:32:25,076 --> 00:32:27,636
in your existing apps, just


1023
00:32:27,636 --> 00:32:28,196
implement the new


1024
00:32:28,196 --> 00:32:31,026
UIViewRepresentable protocol and


1025
00:32:31,026 --> 00:32:32,396
hand back one of your own views.


1026
00:32:32,396 --> 00:32:33,836
It's really that easy.


1027
00:32:35,166 --> 00:32:36,576
So, whether you have an iOS,


1028
00:32:36,576 --> 00:32:40,016
macOS, watchOS, or tvOS app, you


1029
00:32:40,166 --> 00:32:41,896
can get started today.


1030
00:32:41,896 --> 00:32:45,406
Well, that is a look at Xcode


1031
00:32:45,406 --> 00:32:45,906
11.


1032
00:32:46,366 --> 00:32:47,306
Thank you very much.


1033
00:32:47,756 --> 00:32:48,786
Have a great conference.


1034
00:32:49,516 --> 00:32:56,500
[ Applause ]

