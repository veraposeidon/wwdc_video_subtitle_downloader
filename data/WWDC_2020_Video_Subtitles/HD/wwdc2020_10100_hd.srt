1
00:00:03,871 --> 00:00:07,174 line:-1
Hello and welcome to WWDC.


2
00:00:08,642 --> 00:00:12,746 line:0
Hi. My name's Jared McGann.
I'm an engineering manager in watchOS.


3
00:00:12,813 --> 00:00:15,282 line:-2
Today, we'd like to talk about
Apple Watch face sharing,


4
00:00:15,349 --> 00:00:18,118 line:-1
a new feature in watchOS 7 and iOS 14.


5
00:00:18,952 --> 00:00:21,288 line:-1
Face sharing is exactly what you'd expect:


6
00:00:21,355 --> 00:00:23,624 line:-2
the ability to share a watch face
with anyone,


7
00:00:23,690 --> 00:00:25,726 line:-1
configured just the way you like.


8
00:00:25,792 --> 00:00:27,895 line:-2
Watch faces can be shared
directly from the watch


9
00:00:27,961 --> 00:00:31,098 line:-2
by long-pressing on your face
and tapping the new "share" button.


10
00:00:31,532 --> 00:00:34,501 line:-2
Select a recipient, compose a message,
and that's it.


11
00:00:34,935 --> 00:00:37,571 line:-2
In Messages, you'll see an inline preview
on your watch,


12
00:00:37,638 --> 00:00:39,173 line:-1
and so will the recipient.


13
00:00:39,740 --> 00:00:41,008 line:-1
They just tap the preview,


14
00:00:41,074 --> 00:00:43,644 line:-2
and they'll be prompted
to add the face to their watch.


15
00:00:45,779 --> 00:00:48,115 line:-2
You can also share watch faces
from your iPhone.


16
00:00:48,182 --> 00:00:50,751 line:-2
Just open the iOS Watch app
and select a face.


17
00:00:51,418 --> 00:00:54,521 line:-2
Then tap the familiar "share" icon
in the upper right-hand corner.


18
00:00:56,023 --> 00:00:57,624 line:-1
You'll be presented with a share sheet,


19
00:00:57,691 --> 00:00:59,993 line:-2
where you can pick
how you'd like to share your watch face.


20
00:01:00,060 --> 00:01:03,230 line:-2
So how can you as a developer
take advantage of face sharing?


21
00:01:03,297 --> 00:01:06,366 line:-2
Well, watch faces can be shared
directly from your apps


22
00:01:06,433 --> 00:01:08,335 line:-1
and hosted on Web sites.


23
00:01:08,402 --> 00:01:09,670 line:-1
With just a couple taps,


24
00:01:09,736 --> 00:01:12,940 line:-2
the watch face you've configured
can be on a customer's Apple Watch.


25
00:01:13,006 --> 00:01:15,742 line:-2
And if you include your complication
in the watch face,


26
00:01:15,809 --> 00:01:19,313 line:-2
the customer will be prompted to
install your app when they add the face.


27
00:01:20,547 --> 00:01:22,683 line:-2
If your app's not available
in the recipient's region,


28
00:01:22,749 --> 00:01:25,185 line:-2
your complication won't be available
on the watch face.


29
00:01:25,252 --> 00:01:26,687 line:-1
It's also worth mentioning


30
00:01:26,753 --> 00:01:29,857 line:-2
that some newer faces
are not available on older watches.


31
00:01:29,923 --> 00:01:31,658 line:-1
And Nike and HermÃ¨s watch faces


32
00:01:31,725 --> 00:01:34,494 line:-2
can only be generated and added
on respective hardware.


33
00:01:34,561 --> 00:01:37,364 line:-2
Watch face files
contain all the face's configurations,


34
00:01:37,431 --> 00:01:40,801 line:-2
including color, styles,
photos and complications,


35
00:01:40,868 --> 00:01:43,136 line:-1
anything you can configure on a watch.


36
00:01:43,203 --> 00:01:46,907 line:-2
If the watch face has your complication,
the file will include a sample entry


37
00:01:46,974 --> 00:01:49,276 line:-2
so it can be previewed
on the recipient's device


38
00:01:49,343 --> 00:01:51,311 line:-1
even if your app's not installed.


39
00:01:51,378 --> 00:01:54,848 line:-2
We have exciting new complication API
in ClockKit this year.


40
00:01:54,915 --> 00:01:58,719 line:-2
Watch faces now support
multiple complications from the same app.


41
00:01:58,785 --> 00:02:00,888 line:-1
And if your complication takes advantage


42
00:02:00,954 --> 00:02:03,657 line:-2
of user info dictionaries
or user activities,


43
00:02:03,724 --> 00:02:06,593 line:-2
those preferences can be included
in a shared watch face.


44
00:02:07,160 --> 00:02:10,631 line:-2
For example, if a shared face
included Dawn Patrol's complication,


45
00:02:10,697 --> 00:02:13,000 line:-2
the user info dictionary could be used
to specify


46
00:02:13,066 --> 00:02:15,435 line:-2
which city's surf conditions
are displayed.


47
00:02:15,903 --> 00:02:20,107 line:0
To learn more, please check out the talk
"Create Complications for Apple Watch."


48
00:02:21,341 --> 00:02:23,644 line:-2
So this year,
we've added new API to ClockKit


49
00:02:23,710 --> 00:02:27,714 line:-2
that allows you to prompt a customer
to add a watch face from within your app.


50
00:02:27,781 --> 00:02:32,519 line:-2
Call addWatchFace with the local URL
to your preconfigured watch face file,


51
00:02:32,586 --> 00:02:35,856 line:-2
and the customer will be prompted
to add the face to their Apple Watch.


52
00:02:35,923 --> 00:02:40,594 line:-2
This API is available in ClockKit
on both watchOS and iOS.


53
00:02:41,061 --> 00:02:43,764 line:-2
After a face with your complication
is added to a watch,


54
00:02:43,830 --> 00:02:47,734 line:-2
your app will run and respond
to a timeline request from ClockKit.


55
00:02:47,801 --> 00:02:51,638 line:-2
At this point, your app can reference the
user info dictionary I mentioned earlier.


56
00:02:52,239 --> 00:02:55,375 line:-2
Now I'd like to hand it over to Joe,
who's gonna walk us through the process


57
00:02:55,442 --> 00:02:57,911 line:-2
of adding this functionality
to an existing app.


58
00:02:57,978 --> 00:02:59,146 line:0
Thanks, Jared.


59
00:02:59,213 --> 00:03:02,716 line:0
Hi. My name is Joe Dion,
and I'm a software engineer in watchOS.


60
00:03:02,783 --> 00:03:05,052 line:-2
Today, I would like to show you
how to easily adopt


61
00:03:05,118 --> 00:03:09,122 line:-2
the new Watch Face Sharing API
in your iOS and watchOS apps.


62
00:03:09,189 --> 00:03:11,158 line:-1
I have an app called "Coffee Tracker."


63
00:03:11,225 --> 00:03:14,261 line:-2
This app allows you to track
your daily caffeine intake.


64
00:03:14,328 --> 00:03:15,896 line:-1
Here is the main view of my app,


65
00:03:15,963 --> 00:03:18,498 line:-2
where I can view my caffeine intake
for the day.


66
00:03:18,565 --> 00:03:20,834 line:0
If I tap the coffee cup button
at the bottom,


67
00:03:20,901 --> 00:03:22,603 line:0
it opens the drink list view.


68
00:03:23,470 --> 00:03:27,207 line:-2
In the drink list view,
I can see a list of caffeinated drinks.


69
00:03:27,274 --> 00:03:28,775 line:-1
If I tap one of these drinks,


70
00:03:28,842 --> 00:03:31,278 line:-2
it will be added
to my caffeine intake for the day.


71
00:03:32,379 --> 00:03:33,914 line:-1
My app also has a watch app


72
00:03:33,981 --> 00:03:37,518 line:-2
with complications
that display your current caffeine intake.


73
00:03:37,584 --> 00:03:40,354 line:-2
I think my app's complications
are super helpful,


74
00:03:40,420 --> 00:03:44,591 line:-2
and I'd like to share these with
my customers within the context of my app.


75
00:03:44,658 --> 00:03:47,694 line:-2
I think implementing watch face sharing
in my iOS app


76
00:03:47,761 --> 00:03:49,763 line:-1
is a great way to accomplish this.


77
00:03:49,830 --> 00:03:51,932 line:-1
Let's take a look how to implement this.


78
00:03:51,999 --> 00:03:55,402 line:-2
Here's a rundown of how I will implement
face sharing in this app.


79
00:03:55,469 --> 00:03:59,239 line:-2
First, I need to generate a watch face
with my app's complication.


80
00:03:59,940 --> 00:04:04,545 line:-2
Next, I will need to import the watch face
and face preview into my app's bundle.


81
00:04:05,479 --> 00:04:10,050 line:-2
Then I will create the UI
for displaying and adding the watch face.


82
00:04:10,651 --> 00:04:13,987 line:-2
And finally,
I will add support for older watches.


83
00:04:14,054 --> 00:04:15,989 line:-1
So let's see how to do this.


84
00:04:18,225 --> 00:04:19,560 line:-1
Here I am on my phone.


85
00:04:19,625 --> 00:04:23,597 line:-2
To get started, I need to create a face
to share, so I'll open the Watch app.


86
00:04:24,731 --> 00:04:26,366 line:-1
I'll open the Face Gallery.


87
00:04:27,568 --> 00:04:30,404 line:-2
Now, let's look for a watch face
that complements our app.


88
00:04:35,576 --> 00:04:38,846 line:-2
I like the classic analog look
of the Modular Compact face,


89
00:04:38,912 --> 00:04:40,180 line:-1
so I'll select that.


90
00:04:40,247 --> 00:04:43,951 line:-2
My watch app has a fantastic
graphic rectangular complication


91
00:04:44,017 --> 00:04:46,353 line:-2
that would look great
at the bottom of this face...


92
00:04:47,821 --> 00:04:50,524 line:-2
so I'll select
the Coffee Tracker complication.


93
00:04:50,591 --> 00:04:53,727 line:-2
This looks great,
but I'd like to make this face my own,


94
00:04:53,794 --> 00:04:55,896 line:-1
so I'm gonna pick a color for it.


95
00:04:55,963 --> 00:04:58,665 line:-2
Something to make this face
more coffee-ish.


96
00:05:01,935 --> 00:05:03,971 line:-1
Walnut looks just like a cup of coffee.


97
00:05:04,371 --> 00:05:06,874 line:-2
Now I'll select
a good middle complication too.


98
00:05:08,542 --> 00:05:10,110 line:-1
I think the Breathe complication


99
00:05:10,177 --> 00:05:13,146 line:-2
will help our caffeine-addicted users
calm down a little bit.


100
00:05:14,281 --> 00:05:15,649 line:-1
That looks great.


101
00:05:16,116 --> 00:05:19,419 line:-2
I'm happy with our coffee-tracking
watch face now and I'm ready to share it.


102
00:05:20,220 --> 00:05:21,455 line:-1
Before we share, it though,


103
00:05:21,522 --> 00:05:24,958 line:-2
keep in mind that your app needs to have
already been published to the App Store


104
00:05:25,025 --> 00:05:27,394 line:-2
before you can share this watch face
in your app.


105
00:05:27,461 --> 00:05:29,763 line:-2
With that out of the way,
I'm ready to share my face.


106
00:05:29,830 --> 00:05:33,166 line:-2
I just need to tap the "share" button
in the upper right-hand corner.


107
00:05:35,335 --> 00:05:38,138 line:-2
Here in the share view,
you can see the "options" button,


108
00:05:38,205 --> 00:05:41,175 line:-2
where you can exclude
any of the complications or their data


109
00:05:41,241 --> 00:05:42,576 line:-1
from the shared face.


110
00:05:43,477 --> 00:05:47,548 line:-2
My complication is configured to always
record a shot of espresso when tapped


111
00:05:47,614 --> 00:05:50,717 line:-2
using the user info dictionary
that Jared mentioned earlier.


112
00:05:50,784 --> 00:05:53,220 line:-2
But I don't want that to be the default
for my customers


113
00:05:53,287 --> 00:05:54,988 line:-1
when I share that face with them,


114
00:05:55,055 --> 00:05:58,692 line:-2
so I'll select "Include without data"
for my complication.


115
00:05:59,860 --> 00:06:02,429 line:-2
Everything else looks good,
so I'll leave it as is.


116
00:06:02,896 --> 00:06:04,831 line:-1
When you share a face via e-mail,


117
00:06:04,898 --> 00:06:08,569 line:-2
you will get the face file,
along with a preview image of the face.


118
00:06:08,635 --> 00:06:11,305 line:-2
The preview image
will be very helpful later on.


119
00:06:11,872 --> 00:06:13,841 line:-2
I've already e-mailed
the watch face to myself


120
00:06:13,907 --> 00:06:17,077 line:-2
and extracted the contents
to my downloads, so let's take a look.


121
00:06:17,144 --> 00:06:19,580 line:0
Here on my Mac,
I've opened my "Downloads" folder.


122
00:06:19,646 --> 00:06:21,882 line:-1
You can see I have the watch face file


123
00:06:21,949 --> 00:06:24,117 line:-2
and its associated preview
from the e-mail.


124
00:06:24,685 --> 00:06:27,487 line:-2
I'm gonna add this face file
to my Xcode project.


125
00:06:30,591 --> 00:06:33,627 line:-2
Another important aspect
of sharing a watch face in your app


126
00:06:33,694 --> 00:06:35,662 line:-1
is displaying a preview of the face.


127
00:06:36,630 --> 00:06:39,499 line:-2
Here in the folder,
you can see there's a preview image.


128
00:06:39,566 --> 00:06:42,569 line:-2
I'm going to use this preview image
when creating the UI,


129
00:06:42,636 --> 00:06:46,573 line:-2
so I'll take this image
and drag it into my Xcode assets folder.


130
00:06:46,640 --> 00:06:49,076 line:-2
Now that we have the image,
we're finally ready to get coding.


131
00:06:49,576 --> 00:06:52,212 line:-2
I'll start by opening up
the DeviceModel class.


132
00:06:54,481 --> 00:06:58,685 line:-2
I've created this class in order to detect
if a watch is paired to the phone.


133
00:06:58,752 --> 00:07:01,522 line:-2
I'll use this in my view
to only display my watch face


134
00:07:01,588 --> 00:07:03,357 line:-1
to users that have a watch.


135
00:07:03,423 --> 00:07:06,159 line:-2
I've imported
the WatchConnectivity framework as well,


136
00:07:06,226 --> 00:07:09,963 line:-2
which allows me to implement
the WCSessionDelegate protocol


137
00:07:10,030 --> 00:07:11,064 line:-1
in this class.


138
00:07:11,131 --> 00:07:12,599 line:-1
By implementing this protocol,


139
00:07:12,666 --> 00:07:17,404 line:-2
I can use WCSession to determine
if a customer has a paired watch.


140
00:07:17,471 --> 00:07:21,241 line:-2
I'm going to create an isPaired
computed variable in this class


141
00:07:21,308 --> 00:07:24,811 line:-2
using WCSession to indicate
if a watch is paired.


142
00:07:26,346 --> 00:07:29,917 line:-2
Now that I have the isPaired variable,
let's go to the DrinkListView.


143
00:07:31,485 --> 00:07:33,287 line:-1
At the bottom of this drink list,


144
00:07:33,353 --> 00:07:36,957 line:-2
I'd like a navigation link
to a view where someone can add the face.


145
00:07:37,024 --> 00:07:39,826 line:-2
However, I'd only like to show
this navigation link


146
00:07:39,893 --> 00:07:41,628 line:-1
to someone with a paired Apple Watch,


147
00:07:41,695 --> 00:07:43,630 line:-1
so I'll use my DeviceModel class


148
00:07:43,697 --> 00:07:47,501 line:-2
to create a constant equal to
the DeviceModel's isPaired variable.


149
00:07:47,968 --> 00:07:50,003 line:-1
Now I'll use my newly created constant


150
00:07:50,070 --> 00:07:54,641 line:-2
to determine if this view should display
a navigation link to the "add face" view.


151
00:07:54,708 --> 00:07:57,077 line:-2
I'm gonna add the check
and the UI for this now.


152
00:08:02,516 --> 00:08:04,818 line:0
And here is our newly created
navigation link.


153
00:08:04,885 --> 00:08:07,855 line:0
But right now the AddFaceView
doesn't have any content in it,


154
00:08:07,921 --> 00:08:10,557 line:-2
so let's go over
and take a look at the AddFaceView.


155
00:08:12,693 --> 00:08:16,129 line:-2
Here in the AddFaceView, I need to
display a preview of the watch face


156
00:08:16,196 --> 00:08:18,198 line:-1
and a button for adding the face.


157
00:08:18,265 --> 00:08:20,167 line:-1
I'm going to add the UI for this.


158
00:08:25,639 --> 00:08:28,942 line:-2
This displays a preview of the watch face
that I imported


159
00:08:29,009 --> 00:08:31,144 line:-1
and creates a button for adding the face.


160
00:08:31,211 --> 00:08:33,246 line:-1
It also displays an activity indicator


161
00:08:33,313 --> 00:08:35,883 line:-2
while the button is executing
its action block.


162
00:08:37,083 --> 00:08:41,488 line:-2
I created this button using an asset
from the Apple Design Resources Web site.


163
00:08:41,554 --> 00:08:43,524 line:-2
Right now, the button doesn't do anything,
though,


164
00:08:43,590 --> 00:08:47,361 line:-2
so I'll fix that by using
the new addWatchFace function.


165
00:08:47,961 --> 00:08:49,763 line:-1
First, I will import ClockKit.


166
00:08:55,235 --> 00:08:58,539 line:-2
Now I'll create a wrapper function
for calling addWatchFace.


167
00:09:08,115 --> 00:09:11,952 line:-2
Let's walk through this code to see
how to use the new addFace function.


168
00:09:13,654 --> 00:09:18,158 line:-2
First, I create a URL that points to
the watch face file in my app's bundle.


169
00:09:19,660 --> 00:09:22,296 line:-1
Next, I use the new addFace function.


170
00:09:22,362 --> 00:09:26,433 line:-2
I use it by creating an instance
of CLKWatchFaceLibrary.


171
00:09:26,500 --> 00:09:31,138 line:-2
Then I call the addWatchFace function
using my unwrapped watchFaceURL.


172
00:09:32,573 --> 00:09:33,774 line:-1
In the completion block,


173
00:09:33,841 --> 00:09:37,077 line:-2
we need to account for any errors
that might occur when adding the face.


174
00:09:37,144 --> 00:09:39,313 line:-1
For now, I'll just print the error out.


175
00:09:39,947 --> 00:09:43,083 line:-2
Now let's call this method
in the button's action block.


176
00:09:49,923 --> 00:09:52,192 line:-1
Here you can see that I'm calling addFace


177
00:09:52,259 --> 00:09:55,696 line:-2
using the face that I just created
and imported to the project.


178
00:09:56,096 --> 00:10:00,067 line:-2
Now let's see the Add Watch Face API
in action and run this app.


179
00:10:01,368 --> 00:10:03,203 line:0
I'll open the drink view...


180
00:10:04,571 --> 00:10:07,508 line:0
and here we can see
my navigation link button at the bottom.


181
00:10:07,574 --> 00:10:10,210 line:0
I'll tap it to open the "add face" view.


182
00:10:10,277 --> 00:10:14,147 line:-2
And here we can see the "add face" view
with a preview of our watch face.


183
00:10:14,214 --> 00:10:15,916 line:-1
This face looks super helpful,


184
00:10:15,983 --> 00:10:18,452 line:-2
so I'm going to tap
the "Add Watch Face" button.


185
00:10:20,988 --> 00:10:22,589 line:-1
And here we are in the Watch app.


186
00:10:22,656 --> 00:10:24,258 line:-1
I'll tap "Add to My Faces"...


187
00:10:25,459 --> 00:10:27,628 line:-1
and now the face is added to my watch.


188
00:10:27,694 --> 00:10:28,695 line:-1
This is great.


189
00:10:28,762 --> 00:10:32,266 line:-2
I think customers are going to find
this face to be super helpful.


190
00:10:33,467 --> 00:10:39,072 line:-2
However, this Modular Compact face
is not compatible with Series 3 watches.


191
00:10:39,139 --> 00:10:40,707 line:-1
To support older devices,


192
00:10:40,774 --> 00:10:44,711 line:-2
we can provide a fallback face
in case the customer has an older device.


193
00:10:44,778 --> 00:10:47,114 line:-2
Let's go back to Xcode
to see how we can do this.


194
00:10:49,082 --> 00:10:53,487 line:-2
Right now, the addWatchFaceWrapper
isn't handling errors it might encounter.


195
00:10:53,554 --> 00:10:56,023 line:-2
Let's change that
by trying to add a fallback face


196
00:10:56,089 --> 00:10:58,091 line:-1
when the first face is not compatible.


197
00:11:09,603 --> 00:11:12,673 line:-2
Now let's call
my addWatchFaceWrapper function


198
00:11:12,739 --> 00:11:15,275 line:-1
with a Series 3-compatible fallback face.


199
00:11:22,683 --> 00:11:25,152 line:-1
I'm using the Modular face as my fallback.


200
00:11:25,219 --> 00:11:27,788 line:-2
I picked this face
based off of a list of faces


201
00:11:27,855 --> 00:11:30,257 line:-1
that are compatible with Series 3 watches


202
00:11:30,324 --> 00:11:32,826 line:-2
outlined in
the Human Interface Guidelines.


203
00:11:33,327 --> 00:11:36,763 line:-2
I've also already put this file
into my Xcode project,


204
00:11:36,830 --> 00:11:40,934 line:-2
so now anyone with an Apple Watch
can utilize our app's watch face.


205
00:11:41,001 --> 00:11:44,738 line:-2
Before we move on, let's review
some best practices from the demo.


206
00:11:44,805 --> 00:11:49,543 line:-2
First, when you share your watch face,
remember that user data can be included.


207
00:11:49,610 --> 00:11:53,680 line:-2
This can be valuable for specifying what
content is displayed in your complication,


208
00:11:53,747 --> 00:11:56,817 line:-2
but be careful not to unintentionally
include private data.


209
00:11:57,918 --> 00:12:01,889 line:-2
It's also important to make sure that
your complications include sample data


210
00:12:01,955 --> 00:12:04,091 line:-1
so the watch face preview is not blank.


211
00:12:05,626 --> 00:12:08,862 line:-2
It's also helpful if you use
the WatchConnectivity API


212
00:12:08,929 --> 00:12:11,598 line:-1
to detect if a customer has a paired watch


213
00:12:11,665 --> 00:12:14,368 line:-2
before offering a watch face
from an iOS app.


214
00:12:15,335 --> 00:12:19,473 line:-2
Also remember that the best way to obtain
a preview image of your watch face


215
00:12:19,540 --> 00:12:20,807 line:-1
is to e-mail it.


216
00:12:21,775 --> 00:12:25,979 line:-2
Remember that if your watch face
is not compatible with Series 3 watches,


217
00:12:26,046 --> 00:12:28,916 line:-2
you should provide a face
for those customers as well.


218
00:12:29,683 --> 00:12:31,084 line:-1
Most importantly,


219
00:12:31,151 --> 00:12:33,720 line:-2
don't forget that your app
must be published


220
00:12:33,787 --> 00:12:36,290 line:-2
before you can include it
in a shared watch face.


221
00:12:36,356 --> 00:12:40,160 line:-2
This is because the App Store Connect ID
needs to be included


222
00:12:40,227 --> 00:12:41,962 line:-1
in the watch face file.


223
00:12:42,029 --> 00:12:43,597 line:-1
Now let's go back to Jared.


224
00:12:43,964 --> 00:12:44,965 line:-1
Thanks, Joe.


225
00:12:45,599 --> 00:12:48,001 line:-2
Watch faces
can also be shared on Web sites.


226
00:12:48,435 --> 00:12:50,604 line:-1
When a customer downloads a face in iOS,


227
00:12:50,671 --> 00:12:53,874 line:-2
Safari will prompt the customer
to add the face to their Apple Watch.


228
00:12:54,474 --> 00:12:57,377 line:-2
Safari is most likely
to recognize your file as a watch face


229
00:12:57,444 --> 00:13:00,814 line:-2
if you serve the file
using the watch face MIME type shown here.


230
00:13:03,083 --> 00:13:04,351 line:-1
Here we see an example


231
00:13:04,418 --> 00:13:07,387 line:-2
of what a watch face might look like
shared on a Web site.


232
00:13:07,454 --> 00:13:10,457 line:-2
A preview of the watch face
should be displayed above the official


233
00:13:10,524 --> 00:13:12,392 line:-1
"Add Apple Watch Face" button.


234
00:13:12,926 --> 00:13:14,494 line:-1
The preview image can be obtained


235
00:13:14,561 --> 00:13:17,497 line:-2
by sharing a watch face via e-mail
in the iOS Watch app,


236
00:13:17,564 --> 00:13:18,899 line:-1
as we just saw Joe do.


237
00:13:18,966 --> 00:13:22,102 line:-2
The button can be found
on the Apple Design Resources Web site,


238
00:13:22,169 --> 00:13:25,372 line:-2
along with a compact version
that can be used in watchOS.


239
00:13:25,439 --> 00:13:28,709 line:-2
If you prefer to display your preview
within photographic hardware,


240
00:13:28,775 --> 00:13:32,579 line:-2
as seen here, those images
can also be found in the design resources.


241
00:13:33,780 --> 00:13:36,950 line:-2
If the shared watch face
is incompatible with Apple Watch Series 3,


242
00:13:37,017 --> 00:13:39,419 line:-2
it's important to provide
an alternate watch face.


243
00:13:39,486 --> 00:13:41,088 line:-1
When you share two watch faces,


244
00:13:41,154 --> 00:13:44,091 line:-2
separate previews and buttons
should be included on your Web page.


245
00:13:44,157 --> 00:13:46,860 line:-2
More details,
including watch face compatibility,


246
00:13:46,927 --> 00:13:49,630 line:-2
can be found
in the watchOS Human Interface Guidelines.


247
00:13:50,597 --> 00:13:55,102 line:-2
QR codes and NFC tags provide additional
opportunities to share watch faces.


248
00:13:55,602 --> 00:13:58,372 line:-2
Just embed a Web link
that hosts a watch face file


249
00:13:58,438 --> 00:14:02,609 line:-2
to easily get your complications and app
onto a customer's Apple Watch.


250
00:14:03,477 --> 00:14:05,879 line:-2
We hope you'll go configure
your own watch faces


251
00:14:05,946 --> 00:14:08,448 line:-2
and adopt the face-sharing API
in your app,


252
00:14:08,515 --> 00:14:11,118 line:-1
or host watch faces on your Web site.


253
00:14:11,185 --> 00:14:13,487 line:-2
It's a great way to get your apps
and complications


254
00:14:13,554 --> 00:14:15,822 line:-1
onto customers' Apple Watches.


255
00:14:15,889 --> 00:14:16,990 line:-1
Thanks for joining us.

