1
00:00:03,871 --> 00:00:06,406 line:-1
Hello and welcome to WWDC.


2
00:00:09,643 --> 00:00:11,311 line:0
Hey. My name is Sofiane.


3
00:00:11,945 --> 00:00:13,914 line:0
I work on Proactive Intelligence
here at Apple,


4
00:00:14,281 --> 00:00:17,851 line:-2
and today, I'll be joined
by my colleagues Romain and Magnus


5
00:00:17,918 --> 00:00:19,620 line:-1
to tell you about how we make


6
00:00:19,686 --> 00:00:23,257 line:-2
integrating your reservations
with the system really easy,


7
00:00:23,323 --> 00:00:25,659 line:-2
and all of the great benefits
that come with it.


8
00:00:26,360 --> 00:00:29,229 line:-2
We first introduced
the Siri Event Suggestions API


9
00:00:29,296 --> 00:00:30,898 line:-1
last year in iOS 13,


10
00:00:30,964 --> 00:00:32,499 line:-1
and over the past year,


11
00:00:32,566 --> 00:00:35,769 line:-2
we've seen some great adoption
of the API in your apps.


12
00:00:36,336 --> 00:00:40,307 line:-2
But we've also listened to your feedback
and made a ton of improvements.


13
00:00:40,374 --> 00:00:41,508 line:-1
So let's dive right in.


14
00:00:42,442 --> 00:00:44,945 line:-1
So, what is Siri Event Suggestions?


15
00:00:45,812 --> 00:00:46,813 line:-1
At its core,


16
00:00:46,880 --> 00:00:51,518 line:-2
the feature makes it super easy to get
reservations from your app into Calendar.


17
00:00:52,719 --> 00:00:55,455 line:-2
All someone has to do
is make a reservation in an app,


18
00:00:55,522 --> 00:00:56,557 line:-1
like they normally would,


19
00:00:57,090 --> 00:00:59,760 line:0
and it'll magically appear in Calendar,
just like that.


20
00:01:00,894 --> 00:01:03,030 line:-2
The system then uses
on-device intelligence


21
00:01:03,096 --> 00:01:06,366 line:-2
to streamline everyday interactions
with your reservations.


22
00:01:07,000 --> 00:01:08,969 line:-1
So, for example, on the lock screen,


23
00:01:09,403 --> 00:01:13,240 line:-2
Siri can notify you when it's time
to leave for a restaurant reservation,


24
00:01:13,307 --> 00:01:14,975 line:-1
based on local traffic conditions.


25
00:01:15,609 --> 00:01:18,412 line:0
And when you open Maps,
you get a Siri Suggestion,


26
00:01:18,979 --> 00:01:21,615 line:0
so getting directions
to the airport to catch a flight


27
00:01:21,682 --> 00:01:23,483 line:0
is as easy as just one tap.


28
00:01:24,651 --> 00:01:28,255 line:-2
Siri can also proactively suggest
turning on Do Not Disturb,


29
00:01:28,322 --> 00:01:31,692 line:-2
so you can stay focused on what matters,
like the movie you're about to watch.


30
00:01:32,559 --> 00:01:34,828 line:-1
And Siri can even provide a suggestion


31
00:01:34,895 --> 00:01:37,631 line:-2
to check-in for your flight
right on your lock screen.


32
00:01:38,565 --> 00:01:41,969 line:-2
Today, we're gonna talk about
some of the enhancements we've made


33
00:01:42,035 --> 00:01:44,171 line:-1
to make your life as a developer easier,


34
00:01:44,805 --> 00:01:47,975 line:-2
as well as some of the improvements
we've brought to the user experience.


35
00:01:49,209 --> 00:01:51,512 line:-2
We're gonna break the talk down
into four broad segments.


36
00:01:52,546 --> 00:01:56,016 line:-2
We're gonna go over some exciting updates
on reservation categories


37
00:01:56,083 --> 00:01:58,285 line:-1
and how we've expanded to more platforms.


38
00:01:59,319 --> 00:02:04,458 line:-2
Next, my colleague Romain will introduce
a brand-new way to use web markup


39
00:02:04,525 --> 00:02:07,728 line:-2
to integrate with Siri Event Suggestions
on your website and emails.


40
00:02:09,062 --> 00:02:11,965 line:-2
We've also gotten great feedback from you
over the past year,


41
00:02:12,466 --> 00:02:15,235 line:-2
so Magnus will speak
to some donation best practices


42
00:02:15,302 --> 00:02:16,837 line:-1
we know you'll be interested in.


43
00:02:17,804 --> 00:02:20,140 line:-1
Finally, we have a short segment


44
00:02:20,207 --> 00:02:23,277 line:-2
where we'll share some tips and tricks
to make debugging easier.


45
00:02:23,944 --> 00:02:27,748 line:-2
All right. We've got a ton
of great content, so let's get started.


46
00:02:28,715 --> 00:02:31,685 line:-2
We already support
a wide range of categories,


47
00:02:31,752 --> 00:02:35,322 line:-2
from restaurants, to flights,
to event reservations,


48
00:02:35,389 --> 00:02:38,025 line:0
and this year,
we're expanding transit support


49
00:02:38,091 --> 00:02:40,227 line:0
to include bus and boat reservations.


50
00:02:41,195 --> 00:02:42,863 line:0
As with train reservations,


51
00:02:42,930 --> 00:02:46,466 line:0
these are not meant to represent
things like an all-day bus ticket,


52
00:02:46,533 --> 00:02:49,236 line:0
but instead, trips that are booked
for a specific time.


53
00:02:49,970 --> 00:02:52,573 line:-2
In addition to supporting
more reservation categories,


54
00:02:52,639 --> 00:02:54,975 line:-1
we're also expanding to new platforms.


55
00:02:55,709 --> 00:03:00,147 line:-2
This year, we're delighted to bring
Siri Event Suggestions to macOS Big Sur.


56
00:03:00,981 --> 00:03:02,716 line:-1
You can use the Intents framework


57
00:03:02,783 --> 00:03:05,018 line:-1
to donate your reservations in your app,


58
00:03:05,085 --> 00:03:07,187 line:-1
including apps built with Mac Catalyst.


59
00:03:08,222 --> 00:03:12,960 line:-2
And just as with iOS, all you need to do
is donate your reservations to the system.


60
00:03:13,560 --> 00:03:14,661 line:-1
And just like that,


61
00:03:14,728 --> 00:03:18,065 line:-2
people will get all of the same
on-device intelligence they do today,


62
00:03:18,799 --> 00:03:22,336 line:-2
like getting a reservation in Calendar,
Siri Suggestions, and more.


63
00:03:24,238 --> 00:03:27,140 line:-1
And if you have an iOS and a macOS app,


64
00:03:27,207 --> 00:03:30,210 line:-2
you should still donate
your reservation on all platforms.


65
00:03:31,144 --> 00:03:34,014 line:-2
As long as the data
you're donating is consistent,


66
00:03:34,081 --> 00:03:37,050 line:-2
the system will make
the cross-platform experience seamless


67
00:03:37,117 --> 00:03:38,952 line:-1
by automatically syncing reservations


68
00:03:39,019 --> 00:03:42,256 line:-2
across all devices
using end-to-end encryption.


69
00:03:42,856 --> 00:03:46,560 line:-2
By popular demand, we're also making
development easier than ever


70
00:03:46,627 --> 00:03:48,428 line:-1
by enabling you to use Simulator.


71
00:03:49,229 --> 00:03:50,864 line:-1
Just select the simulator as a target,


72
00:03:50,931 --> 00:03:53,000 line:-2
and build and run your app
as you normally would.


73
00:03:53,634 --> 00:03:55,802 line:0
The Siri Event Suggestions API


74
00:03:55,869 --> 00:03:58,071 line:0
is offered as part
of the Intents framework,


75
00:03:58,138 --> 00:04:01,508 line:0
which is available for apps on iOS,
and now on the Mac as well.


76
00:04:02,676 --> 00:04:06,613 line:0
You can check out last year's session
"Integrating with Siri Event Suggestions,"


77
00:04:06,680 --> 00:04:08,315 line:0
which covers this topic in-depth,


78
00:04:08,382 --> 00:04:10,551 line:0
and is a great way
to get started with the API.


79
00:04:12,586 --> 00:04:16,822 line:-2
We really want everyone to benefit
from the same on-device intelligence,


80
00:04:17,391 --> 00:04:19,760 line:-2
regardless of how they're making
or accessing


81
00:04:19,826 --> 00:04:21,094 line:-1
their reservation information.


82
00:04:21,962 --> 00:04:24,965 line:-2
And we know you interact with customers
through many channels.


83
00:04:25,532 --> 00:04:28,302 line:-2
Someone might start by making
a reservation on your website,


84
00:04:28,368 --> 00:04:31,205 line:-1
then later modify it using your app,


85
00:04:31,271 --> 00:04:33,006 line:-1
maybe check it from a confirmation email.


86
00:04:33,574 --> 00:04:36,043 line:-1
And that's why we're thrilled to announce


87
00:04:36,109 --> 00:04:39,446 line:-2
that we're introducing new ways
to integrate with Mail and Safari.


88
00:04:40,180 --> 00:04:45,285 line:-2
All you need to do is embed web markup
within the HTML of your website or emails,


89
00:04:45,352 --> 00:04:46,486 line:-1
and it just works.


90
00:04:47,554 --> 00:04:50,090 line:-2
And now I'd like to invite
my colleague Romain


91
00:04:50,157 --> 00:04:54,294 line:-2
to tell you about how to use markup
to integrate with Siri Event Suggestions


92
00:04:54,361 --> 00:04:55,896 line:-1
on your website and emails.


93
00:04:56,530 --> 00:04:57,664 line:-1
Romain?


94
00:04:58,265 --> 00:04:59,333 line:-1
Hello, everyone.


95
00:04:59,399 --> 00:05:00,501 line:-1
My name is Romain,


96
00:05:00,567 --> 00:05:02,736 line:-2
and I'm going to walk you through
how to add markup


97
00:05:02,803 --> 00:05:05,506 line:-2
to your website and emails
for Siri Event Suggestions.


98
00:05:06,507 --> 00:05:09,710 line:-1
This is new in iOS 14 and macOS Big Sur.


99
00:05:11,411 --> 00:05:13,514 line:-2
Now, when you view
a reservation in Safari,


100
00:05:13,580 --> 00:05:15,849 line:-2
the system will look
for markup you've added


101
00:05:15,916 --> 00:05:18,452 line:-2
and automatically
add the reservation to Calendar.


102
00:05:19,720 --> 00:05:24,491 line:-2
In Mail, reservations are intelligently
added to Calendar in the background,


103
00:05:24,558 --> 00:05:26,560 line:-1
without even having to open the Mail app.


104
00:05:28,295 --> 00:05:31,431 line:-2
We even display a useful banner at the top
to make it easy


105
00:05:31,498 --> 00:05:34,201 line:-2
to see the most important information
at a glance.


106
00:05:34,902 --> 00:05:37,804 line:-2
We're leveraging a web standard
called schema.org.


107
00:05:38,438 --> 00:05:41,275 line:-2
Schema.org is a standardized
markup vocabulary


108
00:05:41,341 --> 00:05:44,111 line:-2
which makes it easy to annotate
reservation information


109
00:05:44,178 --> 00:05:46,046 line:-1
on your website and emails.


110
00:05:46,947 --> 00:05:48,315 line:-1
And because it's a standard,


111
00:05:48,382 --> 00:05:51,285 line:-2
it can be used by any email client
or web browser,


112
00:05:51,351 --> 00:05:52,786 line:-1
even on other platforms.


113
00:05:53,187 --> 00:05:54,755 line:-1
Adding markup is easy,


114
00:05:54,821 --> 00:05:57,424 line:-1
and we support both JSON-LD and Microdata.


115
00:05:58,125 --> 00:06:00,527 line:-2
We created documentation
about the specific categories


116
00:06:00,594 --> 00:06:03,330 line:-2
and properties we support,
as well as some examples


117
00:06:03,397 --> 00:06:05,933 line:-1
to get you started on developer.apple.com.


118
00:06:07,167 --> 00:06:10,370 line:-2
Let's have a look on how to add markup
to your emails and web pages.


119
00:06:11,438 --> 00:06:15,075 line:-2
Here's an example of a confirmation email
for a restaurant reservation.


120
00:06:15,843 --> 00:06:18,078 line:-1
This email has lots of useful information.


121
00:06:19,413 --> 00:06:22,416 line:-2
For example,
we have the name of the restaurant,


122
00:06:22,482 --> 00:06:24,918 line:-1
the date and time of the reservation,


123
00:06:24,985 --> 00:06:27,654 line:-2
but also the phone number
and address of the restaurant.


124
00:06:29,156 --> 00:06:32,359 line:-2
And so, this is what the complete
JSON-LD markup looks like.


125
00:06:33,026 --> 00:06:35,696 line:-2
So, the more details
you provide in the markup,


126
00:06:35,762 --> 00:06:37,865 line:-1
the better user experience we can provide.


127
00:06:38,799 --> 00:06:41,301 line:-2
For instance,
knowing the address of the reservations


128
00:06:41,368 --> 00:06:44,004 line:-2
means we can notify the user
when it's time to leave.


129
00:06:45,906 --> 00:06:48,742 line:-2
And here's the same markup,
but using Microdata.


130
00:06:49,776 --> 00:06:52,579 line:-2
When a user changes
or cancels a reservation,


131
00:06:52,646 --> 00:06:54,815 line:-2
it's important to keep
the markup up to date.


132
00:06:55,983 --> 00:06:58,218 line:-2
For a modification,
the markup should represent


133
00:06:58,285 --> 00:07:00,187 line:-1
the updated reservation information.


134
00:07:01,121 --> 00:07:03,190 line:-2
As long as you keep
the same reservationId,


135
00:07:03,257 --> 00:07:05,759 line:-2
Siri will automatically update
the Calendar event.


136
00:07:07,127 --> 00:07:10,531 line:-2
In our example, the user
modified the time of the reservation


137
00:07:10,597 --> 00:07:12,866 line:-1
from 7:30 to 6:30 p.m.


138
00:07:13,600 --> 00:07:15,903 line:-2
So we're reflecting that
in the startDate property,


139
00:07:15,969 --> 00:07:17,804 line:-1
while keeping the same reservationId.


140
00:07:19,873 --> 00:07:22,009 line:-1
If a user cancels a reservation,


141
00:07:22,075 --> 00:07:25,212 line:-2
set the reservationStatus
to ReservationCancelled


142
00:07:25,279 --> 00:07:28,015 line:-2
and Siri will automatically
cancel the Calendar event.


143
00:07:29,183 --> 00:07:32,653 line:-2
Now, you have all the tools you need
to add markup to your website and emails.


144
00:07:32,719 --> 00:07:33,720 line:-1
Great!


145
00:07:34,354 --> 00:07:36,557 line:-2
Next, let me tell you
about our requirements.


146
00:07:38,058 --> 00:07:40,894 line:-2
First, you must register your domain
with Apple.


147
00:07:40,961 --> 00:07:44,831 line:-2
For that, we've created a simple form
on developer.apple.com


148
00:07:44,898 --> 00:07:48,001 line:-2
where you can submit your domain
and samples of your markup.


149
00:07:49,469 --> 00:07:52,206 line:-2
We also require that your website
uses HTTPS,


150
00:07:52,272 --> 00:07:54,808 line:-2
and that your emails
have a valid DKIM signature.


151
00:07:55,943 --> 00:07:57,444 line:-1
With that taken care of,


152
00:07:57,511 --> 00:08:00,180 line:-2
Safari and Mail will donate
your reservation to the system.


153
00:08:01,381 --> 00:08:04,585 line:-2
We also added two settings
that disable this requirement


154
00:08:04,651 --> 00:08:07,955 line:-2
to make testing your markup in development
super easy.


155
00:08:09,656 --> 00:08:12,226 line:-1
First, to enable your domain for testing,


156
00:08:12,292 --> 00:08:13,527 line:-1
open the Developer Settings


157
00:08:13,594 --> 00:08:15,562 line:-1
and enable Allow Any Domain on iOS,


158
00:08:15,963 --> 00:08:17,664 line:0
or use the command below on the Mac.


159
00:08:19,600 --> 00:08:21,869 line:0
Likewise, for local development,


160
00:08:21,935 --> 00:08:23,971 line:0
you can enable Unverified Sources


161
00:08:24,037 --> 00:08:26,006 line:0
in the Developer Settings on iOS,


162
00:08:26,073 --> 00:08:28,208 line:0
or by using this other command on the Mac.


163
00:08:29,576 --> 00:08:31,879 line:-2
Now, let me show you
how all of this comes together.


164
00:08:33,179 --> 00:08:34,280 line:-1
As I mentioned before,


165
00:08:34,347 --> 00:08:37,384 line:-2
to test the schema.org markup
in my development environment,


166
00:08:37,451 --> 00:08:38,784 line:-1
I'll need to do some prep work.


167
00:08:39,385 --> 00:08:43,357 line:-2
First, I'll set the
SuggestionsAllowAnyDomainForMarkup default


168
00:08:43,423 --> 00:08:45,425 line:-1
which will allow for unregistered domains.


169
00:08:50,430 --> 00:08:51,431 line:-1
Great.


170
00:08:52,065 --> 00:08:55,602 line:-2
Next, since my local environment
doesn't use HTTPS,


171
00:08:56,003 --> 00:08:59,306 line:-2
I'll set
SuggestionsAllowUnverifiedSourceForMarkup,


172
00:08:59,373 --> 00:09:02,075 line:-2
enabling
unverified source verification check.


173
00:09:04,778 --> 00:09:05,779 line:-1
And done.


174
00:09:08,749 --> 00:09:09,883 line:-1
In this example,


175
00:09:09,950 --> 00:09:12,686 line:-2
I'll be using a website
that handles restaurant reservations,


176
00:09:12,753 --> 00:09:15,422 line:-2
which already has
schema.org markup embedded.


177
00:09:16,290 --> 00:09:17,491 line:-1
Let's find a restaurant.


178
00:09:18,292 --> 00:09:19,593 line:-1
This one looks good to me.


179
00:09:20,894 --> 00:09:24,064 line:-2
Let's make a reservation
for this Friday for 7:30PM.


180
00:09:24,998 --> 00:09:25,999 line:-1
For two.


181
00:09:26,466 --> 00:09:27,868 line:-1
I'm going to make the reservation.


182
00:09:29,636 --> 00:09:32,673 line:-2
The website allows me to review
that all the information is correct,


183
00:09:33,207 --> 00:09:35,609 line:-2
and because the reservation
isn't confirmed at this point,


184
00:09:35,676 --> 00:09:37,144 line:-1
it won't be added to Calendar.


185
00:09:38,111 --> 00:09:39,313 line:-1
This looks all good to me,


186
00:09:39,379 --> 00:09:41,315 line:-2
so let me go ahead
and confirm the reservation.


187
00:09:42,816 --> 00:09:45,552 line:-2
Since my markup now contains
a confirmed reservation,


188
00:09:45,619 --> 00:09:47,988 line:-2
Safari is donating the reservation
to the system,


189
00:09:48,055 --> 00:09:50,057 line:-2
and I'll get this handy
Calendar notification.


190
00:09:51,592 --> 00:09:53,894 line:-2
Let's have a look at the Calendar event
Siri just created.


191
00:09:55,262 --> 00:09:57,030 line:0
By clicking on the notification,


192
00:09:57,097 --> 00:09:58,832 line:0
I can see all the information I need.


193
00:09:59,833 --> 00:10:01,068 line:0
Let's add it to Calendar.


194
00:10:06,573 --> 00:10:08,609 line:0
If your markup contains a URL,


195
00:10:08,675 --> 00:10:11,245 line:0
the system can provide it
as a link in Calendar,


196
00:10:11,311 --> 00:10:14,882 line:0
so I can quickly get back to my website
to access and manage the reservation.


197
00:10:15,682 --> 00:10:18,619 line:0
When I click on it,
it goes right back to that specific page.


198
00:10:20,654 --> 00:10:22,356 line:-2
Let's have a look
at the markup on this page,


199
00:10:22,422 --> 00:10:24,925 line:-2
using the Safari Web Inspector
to view the source code.


200
00:10:30,898 --> 00:10:32,866 line:0
Here you can see the JSON-LD tag.


201
00:10:32,933 --> 00:10:35,369 line:0
It contains all the information
about the reservation.


202
00:10:37,104 --> 00:10:38,906 line:0
You can see
that the reservation is confirmed,


203
00:10:39,573 --> 00:10:40,674 line:0
the reservationId,


204
00:10:41,341 --> 00:10:44,845 line:0
and also the URL we use
for the "Show in Safari" link we just saw.


205
00:10:46,280 --> 00:10:48,315 line:0
There's also the start time
of the reservation,


206
00:10:48,382 --> 00:10:50,717 line:0
which uses the ISO 8601 format,


207
00:10:50,784 --> 00:10:53,453 line:0
including the time zone
of where the reservation is happening.


208
00:10:55,222 --> 00:10:56,957 line:0
Now, let's say the user changes their mind


209
00:10:57,024 --> 00:10:58,659 line:0
and wants to cancel their reservation.


210
00:11:03,330 --> 00:11:06,433 line:0
It's really important here
that the markup reflects this change.


211
00:11:07,234 --> 00:11:10,137 line:0
The reservationStatus is updated
to ReservationCancelled.


212
00:11:11,438 --> 00:11:15,375 line:-2
And just like that, the Calendar event
is automatically cancelled in Calendar.


213
00:11:16,510 --> 00:11:18,478 line:-1
This feature also works great in Mail.


214
00:11:18,545 --> 00:11:20,647 line:-1
We've included the same schema.org markup


215
00:11:20,714 --> 00:11:23,851 line:-2
in the automatic confirmation emails
sent from our demo website.


216
00:11:24,518 --> 00:11:26,086 line:-1
Let's have a look at this on iOS.


217
00:11:29,489 --> 00:11:31,124 line:-1
I just received the email confirmation


218
00:11:31,191 --> 00:11:32,759 line:-1
about my reservation being cancelled.


219
00:11:33,293 --> 00:11:34,294 line:-1
I'm opening it.


220
00:11:35,095 --> 00:11:36,363 line:-1
And you can see at the top,


221
00:11:36,430 --> 00:11:38,799 line:-2
Siri detected the event,
but knows it's cancelled.


222
00:11:39,499 --> 00:11:40,701 line:-1
With just one tap,


223
00:11:40,767 --> 00:11:43,337 line:-2
I can delete the Calendar event
directly from the banner.


224
00:11:44,605 --> 00:11:45,606 line:-1
And it's gone.


225
00:11:46,073 --> 00:11:48,809 line:-2
The key takeaway here
is to keep the same reservationId


226
00:11:48,876 --> 00:11:51,778 line:-2
for confirmation, updates,
and cancellation.


227
00:11:52,145 --> 00:11:54,915 line:-2
And that's how easy it is to integrate
with Siri Event Suggestions


228
00:11:54,982 --> 00:11:57,184 line:-1
using markup on macOS and iOS.


229
00:11:57,818 --> 00:12:00,587 line:-2
Now that you know
how Siri Event Suggestions markup works,


230
00:12:00,654 --> 00:12:02,556 line:-1
I wanted to highlight a few key points.


231
00:12:03,757 --> 00:12:07,027 line:-2
It's important to respect
the format and type of each property


232
00:12:07,094 --> 00:12:09,096 line:-1
as defined in the developer documentation.


233
00:12:10,163 --> 00:12:11,565 line:-1
And here's a few examples.


234
00:12:12,633 --> 00:12:15,202 line:-2
First, use the appropriate
reservationStatus.


235
00:12:15,969 --> 00:12:18,772 line:-2
For example,
use the ReservationConfirmed status


236
00:12:18,839 --> 00:12:20,774 line:-1
only when the reservation is confirmed.


237
00:12:21,575 --> 00:12:25,179 line:-2
In some cases, that might mean making sure
payment has been processed.


238
00:12:26,914 --> 00:12:29,750 line:-2
For date times,
we all know this can be tricky,


239
00:12:30,217 --> 00:12:33,620 line:-2
so here, it's important to use
ISO 8601 format,


240
00:12:33,687 --> 00:12:36,623 line:-2
including the time zone
of where the reservation is happening.


241
00:12:38,659 --> 00:12:41,962 line:-2
And make sure all markup for a reservation
use the same reservationId.


242
00:12:42,663 --> 00:12:45,699 line:-2
This will allow Siri to update
the user's Calendar event,


243
00:12:45,766 --> 00:12:48,235 line:-2
if the reservation
is modified or cancelled.


244
00:12:49,069 --> 00:12:51,839 line:-2
Now that you are ready to integrate
with Siri Event Suggestions,


245
00:12:51,905 --> 00:12:53,273 line:-1
let's talk next steps.


246
00:12:54,508 --> 00:12:56,376 line:-1
Again, make sure to add markup


247
00:12:56,443 --> 00:12:58,679 line:-2
that accurately reflects
your reservation details,


248
00:12:58,745 --> 00:13:00,214 line:-1
including the correct status.


249
00:13:01,949 --> 00:13:04,852 line:-2
Use Developer Settings
to test your markup locally.


250
00:13:06,186 --> 00:13:09,556 line:0
And finally, once you've verified
your markup is working


251
00:13:09,623 --> 00:13:12,259 line:0
register your domain with Apple,
so people can start enjoying


252
00:13:12,326 --> 00:13:15,629 line:0
an even richer experience,
interacting with your reservations.


253
00:13:16,029 --> 00:13:18,398 line:-2
And now, I'll hand it off
to my colleague Magnus


254
00:13:18,465 --> 00:13:20,501 line:-1
to talk about donations best practices.


255
00:13:21,068 --> 00:13:22,369 line:-1
Thank you, Romain.


256
00:13:22,436 --> 00:13:25,706 line:-2
Since releasing the API last year,
we've seen some great adoption.


257
00:13:26,106 --> 00:13:28,041 line:-2
We also heard
some helpful feedback from you


258
00:13:28,108 --> 00:13:30,043 line:-1
about what features you'd like us to add,


259
00:13:30,377 --> 00:13:33,680 line:-2
and what some of the challenges were
when adopting the API.


260
00:13:34,448 --> 00:13:37,451 line:-2
In this section, I'd like to talk
about some of the best practices


261
00:13:37,518 --> 00:13:39,386 line:-1
for providing a great user experience.


262
00:13:40,621 --> 00:13:43,223 line:-2
Let's start with a quick refresh
on how the API works.


263
00:13:43,557 --> 00:13:45,459 line:-1
Integrating with Siri Event Suggestions


264
00:13:45,526 --> 00:13:47,561 line:-2
starts with the reservation details
in the app.


265
00:13:48,128 --> 00:13:51,431 line:-2
As an example, I'll be using
this made-up restaurant booking app


266
00:13:51,498 --> 00:13:53,467 line:-1
to walk through a typical donation flow.


267
00:13:55,135 --> 00:13:56,170 line:-1
To donate to Siri,


268
00:13:56,236 --> 00:13:58,038 line:-1
the app first maps its reservation details


269
00:13:58,105 --> 00:13:59,573 line:-1
into INReservation objects.


270
00:14:00,374 --> 00:14:02,543 line:-2
The INReservation object
is shown in green here,


271
00:14:02,609 --> 00:14:05,612 line:-2
and contains the details
about the reservation shown in the app.


272
00:14:06,647 --> 00:14:10,117 line:-2
To keep it simple, we're only showing
the itemReference in this example.


273
00:14:11,585 --> 00:14:14,488 line:-2
The INReservation objects
are added to an intent response


274
00:14:14,555 --> 00:14:15,923 line:-1
that together with the intent


275
00:14:15,989 --> 00:14:18,392 line:-2
forms the interaction
that the app donates to Siri.


276
00:14:19,459 --> 00:14:22,863 line:-2
Once donated, Siri may create
one or more Calendar events


277
00:14:23,430 --> 00:14:25,766 line:-2
and notify the user
that the reservations were added


278
00:14:25,832 --> 00:14:27,634 line:-1
to their Siri Event Suggestions Calendar.


279
00:14:28,836 --> 00:14:31,538 line:-2
Now the user has access
to some of the most important details


280
00:14:31,605 --> 00:14:32,773 line:-1
right in Calendar.


281
00:14:33,974 --> 00:14:36,743 line:-2
To get more details,
or to manage the reservation,


282
00:14:36,810 --> 00:14:39,112 line:-2
we want people
to easily get back into your app,


283
00:14:39,613 --> 00:14:42,916 line:-2
so we put a "Show in App" button
right in Calendar to make this easy.


284
00:14:44,117 --> 00:14:45,786 line:0
When the "Show in App" button is pressed,


285
00:14:45,853 --> 00:14:48,822 line:0
the system will construct
an INGetReservationDetailsIntent


286
00:14:48,889 --> 00:14:51,992 line:0
containing information about
the reservation the user wants to view.


287
00:14:53,227 --> 00:14:55,195 line:0
The intent uses
the container and item reference


288
00:14:55,262 --> 00:14:57,598 line:0
from the donation
that was used to create the event.


289
00:14:59,066 --> 00:15:00,767 line:-1
The app is then launched to the foreground


290
00:15:00,834 --> 00:15:03,570 line:-2
with the user activity and interaction
with that intent.


291
00:15:04,471 --> 00:15:05,906 line:-1
The app uses this information


292
00:15:05,973 --> 00:15:08,175 line:-2
to display the right reservation
to the user.


293
00:15:09,676 --> 00:15:10,677 line:-1
As we've seen,


294
00:15:10,744 --> 00:15:13,647 line:-2
the container and item references
are used to launch your app.


295
00:15:13,714 --> 00:15:16,917 line:-2
Let's take a look at some more details
on how the two are different


296
00:15:16,984 --> 00:15:20,220 line:-2
from a similar INReservation property,
the reservation number.


297
00:15:20,954 --> 00:15:22,789 line:-1
The reservation number is used by Siri


298
00:15:22,856 --> 00:15:25,926 line:-2
to identify changes to a reservation
across sources.


299
00:15:26,693 --> 00:15:28,695 line:-1
For instance, if you support both


300
00:15:28,762 --> 00:15:31,231 line:-2
the Siri Event Suggestions API
in your app,


301
00:15:31,298 --> 00:15:34,401 line:-2
and the Siri Event Suggestions markup
in your emails or on your website,


302
00:15:34,468 --> 00:15:37,704 line:-2
make sure the reservation number
is the same in all places.


303
00:15:38,872 --> 00:15:43,610 line:0
Similarly, if a reservation is updated
with new information, or is cancelled,


304
00:15:43,677 --> 00:15:45,212 line:0
Siri uses the reservation number


305
00:15:45,279 --> 00:15:47,781 line:0
to identify which Calendar event
to update.


306
00:15:49,983 --> 00:15:51,418 line:0
Like we talked about earlier,


307
00:15:51,485 --> 00:15:54,488 line:0
the container and item references
are used for launching your app.


308
00:15:55,155 --> 00:15:58,892 line:0
The container reference uniquely
identifies a reservation within your app.


309
00:15:59,726 --> 00:16:02,529 line:0
That reservation may consist
of one or more parts.


310
00:16:03,063 --> 00:16:06,400 line:0
For example, in a flight reservation
with multiple legs,


311
00:16:06,466 --> 00:16:08,802 line:0
each leg is one part of the reservation


312
00:16:08,869 --> 00:16:12,372 line:0
and must be represented
as an individual INReservation object


313
00:16:12,439 --> 00:16:14,007 line:0
with a unique item reference.


314
00:16:15,275 --> 00:16:17,177 line:0
The reason the item reference
must be unique


315
00:16:17,244 --> 00:16:21,281 line:0
is that the system may launch your app
to display a single part of a reservation,


316
00:16:21,348 --> 00:16:24,017 line:0
like one of the two legs
from that flight reservation.


317
00:16:25,686 --> 00:16:29,556 line:-2
Now that we have an understanding of what
the container and item references are for,


318
00:16:29,623 --> 00:16:32,492 line:-2
let's take a look
at some concrete examples of reservations


319
00:16:32,559 --> 00:16:34,595 line:-2
and how we can choose good values
for them.


320
00:16:34,661 --> 00:16:38,131 line:-2
I'll use the app we saw
in the previous section as an example.


321
00:16:38,198 --> 00:16:40,667 line:-2
In this app,
users make restaurant reservations


322
00:16:40,734 --> 00:16:42,102 line:-1
like the one on the screen.


323
00:16:43,003 --> 00:16:44,204 line:-1
For this reservation,


324
00:16:44,271 --> 00:16:47,741 line:-2
the reservation number
identifies all parts of the reservation,


325
00:16:47,808 --> 00:16:49,409 line:-1
which in this case is only one.


326
00:16:49,776 --> 00:16:51,778 line:-2
So, I'll use that
as the containerReference.


327
00:16:53,280 --> 00:16:55,349 line:-2
When there's only a single part
in the reservation,


328
00:16:55,415 --> 00:16:58,418 line:-2
I can make the itemReference
the same as the containerReference.


329
00:16:59,753 --> 00:17:02,222 line:-2
I'll also set a descriptive spokenPhrase
for the reference,


330
00:17:02,289 --> 00:17:04,892 line:-1
in this case "Table at ACME Eatery."


331
00:17:05,726 --> 00:17:08,095 line:-2
This'll be used
if the reference needs to be displayed,


332
00:17:08,161 --> 00:17:11,131 line:-2
like if the user makes a shortcut
to launch this reservation.


333
00:17:11,632 --> 00:17:14,167 line:-2
Again, I use the same value
for both references.


334
00:17:15,702 --> 00:17:18,605 line:-2
Next up is an app
for booking transit reservations,


335
00:17:18,672 --> 00:17:21,008 line:-2
like this round-trip train reservation
shown here.


336
00:17:22,175 --> 00:17:25,846 line:-2
This reservation has two parts,
one part for each leg of the trip.


337
00:17:27,013 --> 00:17:30,450 line:-2
Like in the previous example,
the reservation number identifies all--


338
00:17:30,517 --> 00:17:32,886 line:-2
in this case two--
parts of the reservation,


339
00:17:32,953 --> 00:17:34,888 line:-1
so I'll use that as the containerReference


340
00:17:34,955 --> 00:17:36,423 line:-1
and make sure I set a spokenPhrase


341
00:17:36,490 --> 00:17:38,959 line:-2
that also describes
all parts of the reservation.


342
00:17:40,561 --> 00:17:44,131 line:-2
For the two legs of the trip,
I'll create two TrainReservation objects.


343
00:17:44,831 --> 00:17:47,868 line:-2
Since there are two parts
but only a single reservation number,


344
00:17:47,935 --> 00:17:51,371 line:-2
I can't use that as the itemReference
like I did in the first example.


345
00:17:52,005 --> 00:17:53,941 line:-1
Instead, I'll have to pick an identifier


346
00:17:54,007 --> 00:17:56,076 line:-2
that's unique
to each part of the reservation.


347
00:17:57,211 --> 00:17:59,079 line:-1
In this case, I'm using the ticket number


348
00:17:59,146 --> 00:18:01,582 line:-2
associated with each
of the two legs of the trip.


349
00:18:02,216 --> 00:18:04,952 line:-2
That way my app can easily determine
which leg to show


350
00:18:05,018 --> 00:18:07,221 line:-2
if it's being launched
to show just one of them.


351
00:18:07,921 --> 00:18:10,891 line:-2
I also set a spokenPhrase
that describes each of the legs.


352
00:18:11,325 --> 00:18:14,361 line:-2
Finally, some apps allow users
to book reservations


353
00:18:14,428 --> 00:18:16,330 line:-1
with multiple different categories,


354
00:18:16,396 --> 00:18:20,667 line:-2
like a travel-agency app offering bundles
of transportation, lodging, and so on.


355
00:18:21,468 --> 00:18:24,271 line:-2
In this example,
the reservation has three parts:


356
00:18:24,638 --> 00:18:27,007 line:-1
two flight legs and one hotel stay.


357
00:18:27,875 --> 00:18:29,543 line:-1
In addition to having three parts,


358
00:18:29,610 --> 00:18:31,879 line:-2
the reservation also has
three reservation numbers.


359
00:18:32,546 --> 00:18:35,415 line:-2
One is for the two flight parts,
one is for the hotel part,


360
00:18:35,482 --> 00:18:36,917 line:-1
and one is for the whole trip.


361
00:18:37,551 --> 00:18:41,021 line:-2
The containerReference should identify
all parts of the reservation.


362
00:18:41,088 --> 00:18:44,091 line:-2
So, in this case, I'll use
the reservation number for the trip.


363
00:18:45,859 --> 00:18:49,263 line:-2
For the flight, I'll create
one flight reservation for each leg.


364
00:18:50,631 --> 00:18:52,032 line:-1
Like in the previous example,


365
00:18:52,099 --> 00:18:54,535 line:-2
the two legs share
the same reservation number,


366
00:18:54,601 --> 00:18:56,503 line:-1
so I can't use that for the itemReference.


367
00:18:57,171 --> 00:18:59,273 line:-1
In this case, I'll create a new identifier


368
00:18:59,339 --> 00:19:01,742 line:-2
combining the reservation number
and the flight number


369
00:19:01,808 --> 00:19:03,377 line:-1
and use that for the itemReference.


370
00:19:04,311 --> 00:19:07,314 line:-2
You can choose any identifier
you'd like here, as long as it's unique


371
00:19:07,381 --> 00:19:10,317 line:-2
and it enables you
to find a specific part of the reservation


372
00:19:10,384 --> 00:19:11,785 line:-1
to show when being launched.


373
00:19:13,887 --> 00:19:17,558 line:0
For the hotel part of this reservation,
I'll create a LodgingReservation object.


374
00:19:18,192 --> 00:19:19,626 line:0
The reservation number for the hotel


375
00:19:19,693 --> 00:19:22,196 line:0
is only used
for that one part of the reservation.


376
00:19:22,262 --> 00:19:24,765 line:0
Since it's unique,
I'll use that for the itemReference.


377
00:19:26,400 --> 00:19:29,703 line:0
Now we've seen a few examples of how
to set the container and item reference


378
00:19:29,770 --> 00:19:32,339 line:0
so your app can provide
a great user experience


379
00:19:32,406 --> 00:19:35,142 line:0
and show the right part of the reservation
when being launched.


380
00:19:36,109 --> 00:19:39,379 line:0
Next, let's take a look
at how this experience changes,


381
00:19:39,446 --> 00:19:41,215 line:0
if the calendar event is being displayed


382
00:19:41,281 --> 00:19:43,183 line:0
on a device
where your app is not installed.


383
00:19:44,251 --> 00:19:48,255 line:-2
This year, we added a new URL property
to the INReservation class.


384
00:19:48,922 --> 00:19:52,292 line:-2
If a Calendar event that was created
from one of your app's donations


385
00:19:52,359 --> 00:19:55,429 line:-2
is being displayed on a device
where your app is not installed,


386
00:19:55,495 --> 00:19:58,498 line:-2
and the reservation you donated
included a URL,


387
00:19:58,565 --> 00:20:01,101 line:-2
we'll display a "Show in Safari" button
in Calendar.


388
00:20:01,668 --> 00:20:03,036 line:-1
Instead of launching your app,


389
00:20:03,103 --> 00:20:05,973 line:-2
pressing this will open the URL
you set in Safari,


390
00:20:06,440 --> 00:20:09,376 line:-2
so the user can view
their reservation details on your website.


391
00:20:10,577 --> 00:20:12,779 line:-1
Make sure you adopt this new URL property,


392
00:20:12,846 --> 00:20:15,816 line:-2
since calendar events will be synced
to all the users' devices,


393
00:20:16,216 --> 00:20:18,318 line:-2
some of which
may not have your app installed.


394
00:20:18,986 --> 00:20:21,788 line:-2
That way you can still provide
a great user experience.


395
00:20:22,356 --> 00:20:23,924 line:-1
Providing a great user experience


396
00:20:23,991 --> 00:20:27,561 line:-2
also means donating
at the right time and place in your app.


397
00:20:28,262 --> 00:20:30,464 line:-2
That will give your users
the necessary context


398
00:20:30,531 --> 00:20:32,165 line:-1
if a notification is shown,


399
00:20:32,232 --> 00:20:35,502 line:-2
and it makes sure the system
has up-to-date reservation details.


400
00:20:36,303 --> 00:20:39,473 line:-2
This year, we made some changes
to how notifications are shown,


401
00:20:39,540 --> 00:20:43,210 line:-2
so your app can donate multiple
interactions containing reservations.


402
00:20:43,277 --> 00:20:45,979 line:-2
Now, the system
will intelligently group notifications


403
00:20:46,046 --> 00:20:49,149 line:-2
when multiple donations are made
within a short amount of time.


404
00:20:49,816 --> 00:20:51,018 line:-1
The ideal place to do this


405
00:20:51,084 --> 00:20:53,987 line:-2
is when your app is displaying
a list of upcoming reservations.


406
00:20:55,255 --> 00:20:58,058 line:-2
We also recommend you donate
when viewing a single reservation


407
00:20:59,092 --> 00:21:01,361 line:-2
and when viewing
a specific part of a reservation,


408
00:21:01,428 --> 00:21:03,797 line:-2
such as one of the two tickets
for this movie.


409
00:21:04,531 --> 00:21:07,234 line:-2
The system will only show a notification
for a reservation


410
00:21:07,301 --> 00:21:09,269 line:-1
the first time it's donated.


411
00:21:09,703 --> 00:21:10,971 line:-1
Another great time to donate


412
00:21:11,038 --> 00:21:14,007 line:-2
is in reaction to the reservation
changing outside your app.


413
00:21:15,008 --> 00:21:18,712 line:-2
Doing this means your users' data
is as up to date as possible,


414
00:21:18,779 --> 00:21:22,216 line:-2
both in your app and in the system,
by donating to Siri.


415
00:21:23,183 --> 00:21:25,419 line:0
There are two complementary ways
of achieving this,


416
00:21:25,485 --> 00:21:27,721 line:0
and Apple offers great APIs for both.


417
00:21:28,622 --> 00:21:31,158 line:0
Your app can use
the Background App Refresh APIs


418
00:21:31,225 --> 00:21:34,728 line:0
to periodically check for updates
and donate to Siri in the background.


419
00:21:35,963 --> 00:21:38,699 line:0
Your app should also adopt
silent push notifications


420
00:21:38,765 --> 00:21:41,001 line:0
so it can react to changes as they happen.


421
00:21:41,935 --> 00:21:44,037 line:0
When a silent push notification
is received,


422
00:21:44,104 --> 00:21:46,373 line:0
your app can refresh
its reservation details


423
00:21:46,440 --> 00:21:47,674 line:0
and donate to Siri.


424
00:21:48,609 --> 00:21:50,644 line:0
For more information about these APIs


425
00:21:50,711 --> 00:21:53,847 line:0
and other information
related to background execution,


426
00:21:53,914 --> 00:21:57,017 line:0
please refer to the "Advances
in App Background Execution" session


427
00:21:57,084 --> 00:21:58,285 line:0
from last year.


428
00:21:58,919 --> 00:22:00,721 line:-1
So that's donation best practices.


429
00:22:01,488 --> 00:22:04,157 line:-2
Next, I'd like to talk
about how to debug issues


430
00:22:04,224 --> 00:22:06,326 line:-1
when donating reservation details to Siri.


431
00:22:06,393 --> 00:22:08,529 line:-1
When your app donates reservation details,


432
00:22:08,595 --> 00:22:11,999 line:-2
they may be processed asynchronously
by different parts of the system,


433
00:22:12,065 --> 00:22:15,402 line:-2
so it's not always possible to let
your app know if something went wrong.


434
00:22:15,469 --> 00:22:17,804 line:-2
To help you debug issues
during development,


435
00:22:17,871 --> 00:22:21,008 line:-2
we added extra logging for some
of the most common issues we've seen


436
00:22:21,074 --> 00:22:22,276 line:-1
and heard about from you.


437
00:22:23,076 --> 00:22:25,679 line:-2
You can view these logs in the Console app
in Mac OS.


438
00:22:27,548 --> 00:22:30,017 line:-2
To only show logs
related to your donations,


439
00:22:30,083 --> 00:22:33,420 line:-2
set the search filter to the category
"siri-event-suggestions."


440
00:22:34,021 --> 00:22:36,290 line:-2
Let me show you a quick demo
of how this works.


441
00:22:39,126 --> 00:22:41,261 line:-1
So, here I am in the sample app.


442
00:22:41,328 --> 00:22:44,464 line:-2
I want to try out the new
bus reservation type we added this year,


443
00:22:44,531 --> 00:22:47,134 line:-2
so I've added
a createBusReservation method.


444
00:22:48,268 --> 00:22:50,304 line:-1
So far, I made some helper methods


445
00:22:50,370 --> 00:22:53,207 line:-2
to create the two bus trips
I'm making the reservation for.


446
00:22:56,643 --> 00:22:59,313 line:-2
And here, I'm creating
the reservation objects.


447
00:23:01,448 --> 00:23:04,885 line:0
Finally, I'm adding them
to the list of reservations in the app.


448
00:23:07,054 --> 00:23:08,956 line:0
Let's run the app and see it in action.


449
00:23:09,923 --> 00:23:14,228 line:-2
New in iOS 14, we added support
for using the Siri Event Suggestions API


450
00:23:14,294 --> 00:23:16,663 line:-1
in the iOS Simulator, so I'll use that.


451
00:23:18,031 --> 00:23:21,168 line:-2
To run the app in a simulator,
I simply select an iOS simulator


452
00:23:21,235 --> 00:23:23,537 line:-2
from the list of devices
next to the target.


453
00:23:24,638 --> 00:23:25,906 line:-1
And press "run."


454
00:23:27,608 --> 00:23:30,210 line:-2
Looks like my bus reservation
is visible in the app.


455
00:23:30,277 --> 00:23:31,345 line:-1
Great.


456
00:23:31,411 --> 00:23:33,680 line:-2
I'll press the reservation
to show more details.


457
00:23:34,047 --> 00:23:36,383 line:-2
That will also donate the reservation
to Siri,


458
00:23:36,783 --> 00:23:40,254 line:-2
so I should see a notification
telling me Siri has created an event.


459
00:23:41,722 --> 00:23:44,825 line:-2
I'm not seeing a notification,
so something must have gone wrong,


460
00:23:44,892 --> 00:23:46,727 line:-1
but I'm not sure what or why.


461
00:23:47,494 --> 00:23:50,864 line:-1
Starting with iOS 14 and macOS Big Sur,


462
00:23:50,931 --> 00:23:53,901 line:-2
we added extra logging
to help debug donations like this.


463
00:23:54,735 --> 00:23:57,237 line:-2
To see what's going on,
I'll first open Console.


464
00:24:00,607 --> 00:24:03,677 line:-2
In the Console app, I can choose
which device to see logs from,


465
00:24:03,744 --> 00:24:05,412 line:-1
and how to filter those logs.


466
00:24:06,113 --> 00:24:07,881 line:-1
I want to see logs from my simulator,


467
00:24:07,948 --> 00:24:10,083 line:-2
so I'll select it
from the list of devices.


468
00:24:12,219 --> 00:24:14,555 line:-2
There's a lot of logging going on
in the system,


469
00:24:14,621 --> 00:24:17,724 line:-2
so we created a logging category
for Siri Event Suggestions.


470
00:24:18,158 --> 00:24:20,194 line:-1
By setting this as a filter in Console,


471
00:24:20,260 --> 00:24:23,096 line:-2
I'll only see the messages
related to my donations.


472
00:24:24,097 --> 00:24:29,336 line:-2
To use this, I go to the search bar
and enter "siri-event-suggestions."


473
00:24:31,071 --> 00:24:34,508 line:-2
I also change the type of search
from "any" to "category."


474
00:24:37,077 --> 00:24:39,146 line:-1
Finally, I press "Start streaming."


475
00:24:40,714 --> 00:24:42,683 line:-1
Let's go back to the app and try again.


476
00:24:47,721 --> 00:24:49,957 line:-1
In Console, I now see a log message.


477
00:24:51,291 --> 00:24:53,026 line:-1
Let's click it for more details.


478
00:24:54,061 --> 00:24:57,464 line:-2
It says that two or more reservations
use the same itemReference.


479
00:24:58,665 --> 00:25:01,568 line:-2
As we talked about in the section
on donation best practices,


480
00:25:01,635 --> 00:25:04,972 line:-2
all parts of my reservation
must have a unique itemReference


481
00:25:05,038 --> 00:25:07,708 line:-2
so my app can show the right thing
when it's being launched.


482
00:25:13,514 --> 00:25:17,618 line:-2
When I wrote this code, I copy-pasted
the part to create the second reservation.


483
00:25:17,684 --> 00:25:19,786 line:-1
I forgot to change the itemReference.


484
00:25:19,853 --> 00:25:21,889 line:-1
They're both "ABC-001."


485
00:25:22,456 --> 00:25:27,160 line:-2
To fix this, I'll change the itemReference
of the second object to "ABC-002."


486
00:25:27,895 --> 00:25:31,031 line:-2
Keep in mind that in the production app,
you would likely get these values


487
00:25:31,098 --> 00:25:32,966 line:-1
from a database or a server.


488
00:25:33,033 --> 00:25:36,803 line:-2
But for the sake of this example,
I'm using some simple hard-coded values.


489
00:25:37,504 --> 00:25:38,906 line:-1
Let's run the app again.


490
00:25:46,480 --> 00:25:48,315 line:-1
I'm still not seeing a notification,


491
00:25:48,382 --> 00:25:51,185 line:-2
but it looks like there's a new log entry
in Console.


492
00:25:52,252 --> 00:25:53,720 line:-1
Let's look at the details.


493
00:25:55,789 --> 00:25:59,026 line:-2
It tells me I haven't acknowledged
the What's New in Calendar screen.


494
00:25:59,493 --> 00:26:03,030 line:-2
Siri won't add events to the calendar
until the user has done this,


495
00:26:03,096 --> 00:26:05,966 line:-2
and I haven't used Calendar
on this simulator before.


496
00:26:06,033 --> 00:26:08,135 line:-1
So let's open Calendar and do that.


497
00:26:12,806 --> 00:26:14,208 line:-1
That should do it.


498
00:26:14,274 --> 00:26:16,310 line:-1
I'll go back to the app and try again.


499
00:26:22,149 --> 00:26:23,350 line:-1
And there we go!


500
00:26:23,417 --> 00:26:24,785 line:-1
I now see a notification


501
00:26:24,852 --> 00:26:28,155 line:-2
telling me Siri has added
the reservations to my calendar,


502
00:26:28,222 --> 00:26:30,057 line:-1
and if I press the notification,


503
00:26:30,123 --> 00:26:32,326 line:-2
I can see that both parts
of the reservations


504
00:26:32,392 --> 00:26:33,794 line:-1
are in my Calendar inbox.


505
00:26:33,861 --> 00:26:34,862 line:-1
That's great.


506
00:26:34,928 --> 00:26:36,563 line:-1
Debugging issues in the Console app


507
00:26:36,630 --> 00:26:39,733 line:-2
isn't just useful
for the Siri Event Suggestions API.


508
00:26:39,800 --> 00:26:41,935 line:-2
It can also be used
for the new markup support


509
00:26:42,002 --> 00:26:43,537 line:-1
that Romain talked about earlier.


510
00:26:43,971 --> 00:26:45,539 line:-1
Let's take a look at a quick example.


511
00:26:46,206 --> 00:26:47,574 line:-1
I'll open Safari.


512
00:26:48,542 --> 00:26:51,578 line:-2
Here's the reservation site
from earlier in this session.


513
00:26:51,645 --> 00:26:55,482 line:-2
I'm gonna make a reservation for two
at this restaurant and confirm it.


514
00:26:55,916 --> 00:26:58,852 line:-2
Since this page contains markup
with a confirmed reservation,


515
00:26:58,919 --> 00:27:00,888 line:-1
I'm expecting to see a notification


516
00:27:00,954 --> 00:27:03,957 line:-2
telling me Siri has added the reservation
to my Calendar.


517
00:27:04,558 --> 00:27:07,928 line:-2
But like before, I'm not seeing one,
and I'm not sure why.


518
00:27:08,562 --> 00:27:11,365 line:-2
To debug this issue,
I'll bring up the Console app again.


519
00:27:12,432 --> 00:27:14,968 line:-2
This time,
I need to set the device to my Mac.


520
00:27:16,537 --> 00:27:17,671 line:-1
When I change the device,


521
00:27:17,738 --> 00:27:20,674 line:-2
I also have to set up my filter
in the search field again.


522
00:27:30,083 --> 00:27:31,251 line:-1
And press "start."


523
00:27:32,419 --> 00:27:35,088 line:-2
I'll go back to the web page
and reload it.


524
00:27:35,155 --> 00:27:37,524 line:-1
That way, Siri will read the markup again.


525
00:27:38,959 --> 00:27:41,695 line:-2
I'll then switch back to Console
to see if there's anything in there


526
00:27:41,762 --> 00:27:43,564 line:-1
to help me understand what's going on.


527
00:27:44,798 --> 00:27:48,235 line:-2
I now see some log entries.
I'll press the most recent one.


528
00:27:49,002 --> 00:27:52,606 line:-2
It tells me the end time
of the reservation has already passed.


529
00:27:53,607 --> 00:27:57,477 line:-2
Siri won't add events to the calendar
if the reservation has already ended.


530
00:27:58,412 --> 00:28:01,181 line:-2
I'll go back to the website,
and, sure enough,


531
00:28:01,248 --> 00:28:04,084 line:-2
it looks like I tried
to make this reservation for yesterday.


532
00:28:04,885 --> 00:28:06,720 line:-1
I'll update it to tomorrow...


533
00:28:09,790 --> 00:28:11,124 line:-1
and confirm.


534
00:28:12,526 --> 00:28:13,560 line:-1
And there we go.


535
00:28:13,627 --> 00:28:14,895 line:-1
I now see a notification


536
00:28:14,962 --> 00:28:17,731 line:-2
telling me Siri has added the reservation
to my Calendar.


537
00:28:18,532 --> 00:28:20,968 line:-2
That's how you can debug
Siri Event Suggestions


538
00:28:21,034 --> 00:28:25,105 line:-2
to catch some of the most common issues,
whether you're using the API in your app,


539
00:28:25,172 --> 00:28:27,407 line:-2
or markup in your emails
or on your website.


540
00:28:27,975 --> 00:28:31,378 line:-2
Now I'll hand it back to Sofiane
to wrap up. Thank you.


541
00:28:31,678 --> 00:28:32,913 line:-1
Thanks, Magnus.


542
00:28:32,980 --> 00:28:36,617 line:-2
We talked about a ton
of great updates today, so let's wrap up.


543
00:28:37,451 --> 00:28:40,454 line:-2
We added support
for bus and boat reservations,


544
00:28:40,521 --> 00:28:43,624 line:-2
and we've made it possible
to donate your reservations on macOS


545
00:28:43,690 --> 00:28:46,093 line:-1
for a great cross-platform experience.


546
00:28:46,960 --> 00:28:50,864 line:-2
We've introduced a new way to add markup
to your website and emails,


547
00:28:50,931 --> 00:28:54,701 line:-2
which will enable the same intelligent
user experience people love,


548
00:28:54,768 --> 00:28:57,437 line:-2
no matter how they're accessing
their reservation information.


549
00:28:58,238 --> 00:29:02,075 line:-2
And finally, we've enhanced
the experience for you as a developer


550
00:29:02,142 --> 00:29:07,247 line:-2
by making it easier to debug using Console
and test your adoption using Simulator.


551
00:29:07,314 --> 00:29:09,883 line:-2
We talked about how to best donate
your interactions,


552
00:29:09,950 --> 00:29:13,353 line:-2
and how the new URL property
can provide a great experience


553
00:29:13,420 --> 00:29:15,322 line:-1
even if your app is not installed.


554
00:29:15,889 --> 00:29:20,360 line:-2
We can't wait to see how you take
advantage of all of these improvements.


555
00:29:20,861 --> 00:29:21,862 line:-1
Thank you!

