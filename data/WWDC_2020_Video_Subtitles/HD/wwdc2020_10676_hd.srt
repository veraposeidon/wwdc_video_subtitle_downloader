1
00:00:03,737 --> 00:00:06,306 line:-1
Hello and welcome to WWDC.


2
00:00:08,141 --> 00:00:09,710 line:0
Hi, I'm Rohith,


3
00:00:09,776 --> 00:00:12,613 line:0
and I'm joined today
by my colleague Brandon.


4
00:00:12,679 --> 00:00:16,483 line:0
Today, we're going to take you through
how we build trust with our users


5
00:00:16,550 --> 00:00:18,452 line:0
through better privacy.


6
00:00:18,519 --> 00:00:21,421 line:-2
I'll walk through
our approach to privacy at Apple


7
00:00:21,488 --> 00:00:24,958 line:-2
and then go through
how we can apply our privacy principles


8
00:00:25,025 --> 00:00:27,895 line:-2
to mitigate user tracking
in our ecosystem.


9
00:00:29,029 --> 00:00:32,064 line:-1
So, what is our approach to privacy?


10
00:00:33,233 --> 00:00:36,737 line:-2
At Apple,
we have four fundamental privacy pillars


11
00:00:36,803 --> 00:00:39,740 line:-2
that guide the products and features
that we make.


12
00:00:39,806 --> 00:00:41,475 line:-1
On-device processing--


13
00:00:41,542 --> 00:00:45,412 line:-2
processing data locally,
without sending it to a server.


14
00:00:45,479 --> 00:00:50,551 line:-2
Data minimization-- requesting and only
using data that you actually need.


15
00:00:51,118 --> 00:00:52,553 line:-1
Security protections,


16
00:00:52,619 --> 00:00:55,656 line:-2
which enforce the privacy protections
on our platform.


17
00:00:55,722 --> 00:00:57,758 line:-1
And transparency and control--


18
00:00:57,824 --> 00:01:01,728 line:-2
providing the user understanding
and control over their data.


19
00:01:02,729 --> 00:01:07,267 line:-2
These four pillars help us build strong
privacy protections into our features


20
00:01:07,334 --> 00:01:10,170 line:-1
to continue building trust with our users.


21
00:01:11,271 --> 00:01:13,407 line:-1
Let's go through these one by one


22
00:01:13,473 --> 00:01:17,344 line:-2
as I showcase how each influences
changes that we've made this year,


23
00:01:17,411 --> 00:01:19,680 line:-1
starting with on-device processing.


24
00:01:20,547 --> 00:01:23,750 line:-2
So, what is the benefit
of operating on data


25
00:01:23,817 --> 00:01:27,621 line:-2
without sending it off a user's device
to a remote server?


26
00:01:29,489 --> 00:01:31,892 line:-1
When you send data to a remote server,


27
00:01:31,959 --> 00:01:35,629 line:-2
the user loses their ability
to control who can access it,


28
00:01:35,696 --> 00:01:38,065 line:-1
who the data will in turn be shared with


29
00:01:38,131 --> 00:01:40,667 line:-1
and what the data may be used for.


30
00:01:40,734 --> 00:01:44,037 line:-2
It additionally requires extra work
to secure customer data


31
00:01:44,104 --> 00:01:46,306 line:-1
against breaches or other threats.


32
00:01:47,241 --> 00:01:51,311 line:-2
But sometimes you need to collect data
to train a machine-learning model.


33
00:01:52,546 --> 00:01:55,582 line:-2
So we're creating more ways
to leverage Core ML


34
00:01:55,649 --> 00:01:58,719 line:-1
to build and train models on-device.


35
00:01:58,785 --> 00:02:03,357 line:-2
It's as easy as dragging and dropping
these models into your Xcode project.


36
00:02:03,423 --> 00:02:07,227 line:-2
And keeping data locally
automatically takes advantage


37
00:02:07,294 --> 00:02:10,797 line:-2
of the strong security protections
we have on our devices.


38
00:02:12,733 --> 00:02:16,170 line:-2
We've been leveraging on-device learning
for many of our features.


39
00:02:16,236 --> 00:02:20,607 line:-2
Since iOS 13, we have been using
private federated learning,


40
00:02:20,674 --> 00:02:22,276 line:-1
or PFL,


41
00:02:22,342 --> 00:02:26,013 line:-2
to build machine-learning models
on potentially sensitive data.


42
00:02:26,713 --> 00:02:31,285 line:-2
PFL works by having devices send
differentially private model updates


43
00:02:31,351 --> 00:02:33,720 line:-1
instead of sending the user data.


44
00:02:33,787 --> 00:02:37,491 line:-2
This way, we can build centralized models
on our servers


45
00:02:37,558 --> 00:02:40,627 line:-1
without ever having access to user data.


46
00:02:41,161 --> 00:02:44,231 line:-2
Last year,
we used this technology to improve models


47
00:02:44,298 --> 00:02:46,934 line:-1
for QuickType and Siri voice recognition


48
00:02:47,000 --> 00:02:49,837 line:-2
from users who opt in
to improve our products.


49
00:02:51,104 --> 00:02:55,609 line:-2
And this year, we're bringing new private
federated learning use cases.


50
00:02:55,676 --> 00:02:58,779 line:-2
We leverage the powerful Neural Engine
in our chips,


51
00:02:58,846 --> 00:03:01,548 line:-2
allowing us
to improve machine-learning models


52
00:03:01,615 --> 00:03:05,719 line:-2
without revealing user data
to Apple or any third parties.


53
00:03:06,787 --> 00:03:10,090 line:0
To learn more about
using machine learning in your apps,


54
00:03:10,157 --> 00:03:11,959 line:0
check out the following talks.


55
00:03:14,261 --> 00:03:18,999 line:-2
Additionally, we have brought dictation
locally to the device for many languages.


56
00:03:19,066 --> 00:03:23,237 line:-2
So when you dictate on your phone,
your voice data will be processed locally


57
00:03:23,303 --> 00:03:25,138 line:-1
right on your device.


58
00:03:25,205 --> 00:03:27,708 line:-1
And if you write apps that use dictation,


59
00:03:27,774 --> 00:03:31,245 line:-2
you should specify
to use the on-device dictation model


60
00:03:31,311 --> 00:03:33,680 line:-1
to take advantage of this new technology.


61
00:03:34,581 --> 00:03:38,452 line:-2
This year,
we also introduced a new HomeKit feature,


62
00:03:38,519 --> 00:03:39,953 line:-1
face recognition,


63
00:03:40,020 --> 00:03:43,991 line:-2
so that your cameras and video doorbells
can let you know who is there


64
00:03:44,057 --> 00:03:46,994 line:-2
based on the people that you've tagged
in your Photos app


65
00:03:47,060 --> 00:03:50,430 line:-2
or from recent visitors you identify
in the Home app.


66
00:03:50,497 --> 00:03:52,399 line:-1
If you opt in to this feature,


67
00:03:52,466 --> 00:03:55,802 line:-2
your home hub will leverage
on-device intelligence


68
00:03:55,869 --> 00:03:57,905 line:-1
to recognize people who walk by.


69
00:03:58,639 --> 00:04:02,242 line:-2
On-device processing is essential
to many of the new features


70
00:04:02,309 --> 00:04:04,411 line:-1
we are introducing this year.


71
00:04:04,478 --> 00:04:08,282 line:-2
You should look for new opportunities
to use on-device processing


72
00:04:08,348 --> 00:04:10,817 line:-1
and reconsider your existing features


73
00:04:10,884 --> 00:04:14,254 line:-2
as our devices continue
to become more powerful.


74
00:04:14,321 --> 00:04:17,257 line:-2
This is a great tool
to build trust with your users


75
00:04:17,324 --> 00:04:20,394 line:-2
by minimizing the data
that you send off the device.


76
00:04:21,361 --> 00:04:25,432 line:-2
Let me now hand it off to Brandon to
talk more about our next privacy pillar,


77
00:04:25,499 --> 00:04:27,134 line:-1
data minimization.


78
00:04:27,835 --> 00:04:29,002 line:-1
Thanks, Rohith.


79
00:04:29,069 --> 00:04:31,905 line:-2
Privacy is about building trust
with your users.


80
00:04:31,972 --> 00:04:33,473 line:-1
One of the best ways to do this


81
00:04:33,540 --> 00:04:36,043 line:-2
is use only the data you need
to get the job done.


82
00:04:37,077 --> 00:04:39,146 line:-1
You can think of this as a careful balance


83
00:04:39,213 --> 00:04:41,715 line:-1
between what data your app has access to


84
00:04:41,782 --> 00:04:44,051 line:-2
and what it will use
to deliver the feature.


85
00:04:44,985 --> 00:04:47,621 line:-2
Asking a user to share
lots of personal information


86
00:04:47,688 --> 00:04:50,824 line:-2
for features that will only
take advantage of a little


87
00:04:50,891 --> 00:04:54,161 line:-2
asks users to make a bigger choice
than they might be ready for


88
00:04:54,228 --> 00:04:56,163 line:-1
just to use that feature.


89
00:04:56,230 --> 00:04:58,065 line:-1
Trust is built over time,


90
00:04:58,131 --> 00:05:00,901 line:-2
and starting out
by showing respect for users' data


91
00:05:00,968 --> 00:05:03,537 line:-2
by asking for access
to as little as possible


92
00:05:03,604 --> 00:05:05,105 line:-1
is a great first step.


93
00:05:06,106 --> 00:05:08,308 line:-2
We know
it's not always simple in practice,


94
00:05:08,375 --> 00:05:12,379 line:-2
so this year we're introducing new tools
that will make it easier for you


95
00:05:12,446 --> 00:05:15,682 line:-2
to balance the amount of information
your app has access to


96
00:05:15,749 --> 00:05:18,352 line:-1
with a simple user experience.


97
00:05:18,418 --> 00:05:23,624 line:-2
Today we'll talk about three types of data
that are accessible in new ways in iOS 14:


98
00:05:24,291 --> 00:05:27,528 line:-1
Photos, Location and Contacts.


99
00:05:28,829 --> 00:05:32,232 line:-2
Let's look at these in the context
of a simple photo-sharing app.


100
00:05:33,000 --> 00:05:34,735 line:-1
The app needs access to Photos


101
00:05:34,801 --> 00:05:37,171 line:-2
in order to pick the photo
you want to share,


102
00:05:37,237 --> 00:05:40,574 line:-2
Location,
to find friends around you to share with,


103
00:05:40,641 --> 00:05:44,545 line:-2
and Contacts, if you want to pick a friend
to share with manually.


104
00:05:44,611 --> 00:05:47,681 line:-2
Let's see how this might
be implemented on iOS 13.


105
00:05:49,082 --> 00:05:51,852 line:-2
To select a photo to send,
the user will be asked


106
00:05:51,919 --> 00:05:54,988 line:-2
to give the app access
to their whole photos library.


107
00:05:55,956 --> 00:05:59,459 line:-2
The app will ask for location permission
to find friends in the area.


108
00:05:59,927 --> 00:06:03,330 line:-2
Or if a user wants to send the photo
to a specific friend,


109
00:06:03,397 --> 00:06:06,133 line:-2
the app will request access
to all of their contacts,


110
00:06:06,200 --> 00:06:08,669 line:-1
so the user can pick one to share with.


111
00:06:09,736 --> 00:06:12,072 line:-2
To look at the whole flow,
this is a lot of access


112
00:06:12,139 --> 00:06:14,141 line:-1
and a lot of user friction.


113
00:06:14,208 --> 00:06:17,377 line:-2
To share a photo,
the user had to answer three prompts,


114
00:06:17,444 --> 00:06:20,647 line:-2
and in the process gave access
to all of their photos,


115
00:06:20,714 --> 00:06:24,484 line:-2
their precise location
and all of their contacts.


116
00:06:24,551 --> 00:06:26,987 line:-2
This is not great
from a privacy perspective.


117
00:06:27,054 --> 00:06:30,591 line:-2
While the user did have control
over sharing their information,


118
00:06:30,657 --> 00:06:32,826 line:-2
they couldn't use the core functionality
of the app


119
00:06:32,893 --> 00:06:35,262 line:-1
without saying yes to a lot of sharing.


120
00:06:36,363 --> 00:06:38,632 line:-2
It's also not great
from a usability perspective.


121
00:06:38,699 --> 00:06:40,300 line:-1
But we can do better.


122
00:06:40,367 --> 00:06:43,103 line:-2
This year,
we're introducing a few new technologies


123
00:06:43,170 --> 00:06:46,073 line:-2
to help you improve
this experience in your apps,


124
00:06:46,139 --> 00:06:47,541 line:-1
starting with Photos.


125
00:06:48,442 --> 00:06:52,412 line:-2
For all apps that access
the photos library on iOS 14,


126
00:06:52,479 --> 00:06:55,883 line:-2
we're introducing
the "Limited Photos Library."


127
00:06:55,949 --> 00:07:00,053 line:-2
Users can give apps access to only
a limited selection of their photos


128
00:07:00,120 --> 00:07:02,689 line:-1
instead of their entire photos library.


129
00:07:02,756 --> 00:07:05,125 line:-1
When the user taps "Select Photos,"


130
00:07:05,192 --> 00:07:08,228 line:-2
they can pick just what they want
to share with the app.


131
00:07:09,029 --> 00:07:13,867 line:0
This is the new prompt for all apps
that ask for photos access on iOS 14.


132
00:07:13,934 --> 00:07:16,336 line:0
Please test your apps for compatibility,


133
00:07:16,403 --> 00:07:20,607 line:0
and for more information, check out
the "Limited Photos Library" session.


134
00:07:20,674 --> 00:07:23,810 line:0
But this still requires a prompt,
and we can do even better.


135
00:07:24,344 --> 00:07:26,980 line:-2
Most apps use only
a small number of photos,


136
00:07:27,047 --> 00:07:30,117 line:-2
like in this case, the photo
you want to share with a friend.


137
00:07:30,751 --> 00:07:35,322 line:-2
PHPicker is a new framework that
replaces UIImagePickerController


138
00:07:35,389 --> 00:07:39,326 line:-2
that you can adopt to avoid prompting
for photos access entirely.


139
00:07:39,393 --> 00:07:41,461 line:-1
It features search and multi-select


140
00:07:41,528 --> 00:07:43,897 line:-2
to help users
find what they're looking for


141
00:07:43,964 --> 00:07:47,367 line:-2
and doesn't require the user
to grant Photos Library access.


142
00:07:49,169 --> 00:07:52,272 line:0
PHPicker runs in a separate process
from your app,


143
00:07:52,339 --> 00:07:54,575 line:0
but is rendered on top of it.


144
00:07:54,641 --> 00:07:56,743 line:0
Your app can't access the picker directly


145
00:07:56,810 --> 00:07:59,680 line:0
or take screenshots of the picker content.


146
00:07:59,746 --> 00:08:03,750 line:0
Only what the user actually selected
is passed back to your app.


147
00:08:04,918 --> 00:08:08,188 line:0
Unless your app has a strong need
for access to all photos,


148
00:08:08,255 --> 00:08:10,224 line:0
such as to provide a backup service,


149
00:08:10,290 --> 00:08:12,559 line:0
you should use PHPicker.


150
00:08:12,626 --> 00:08:17,231 line:0
For more details on PHPicker, check out
the "Meet the New Photos Picker" session.


151
00:08:18,532 --> 00:08:22,336 line:-2
So let's look at what that means
in practice for our photo-sharing app.


152
00:08:22,402 --> 00:08:26,306 line:-2
To pick a photo to share,
the user is presented with the PHPicker,


153
00:08:26,373 --> 00:08:29,309 line:-2
where they can select
just the photos they want.


154
00:08:29,376 --> 00:08:32,446 line:-2
This is a much faster user experience
than going through a prompt


155
00:08:32,513 --> 00:08:34,748 line:-1
and results in much better privacy.


156
00:08:36,149 --> 00:08:38,684 line:-1
Next, let's look at Location.


157
00:08:38,751 --> 00:08:41,922 line:-2
In iOS 14, we're adding the ability
for a user to share


158
00:08:41,989 --> 00:08:44,525 line:-2
only their approximate location
with an app.


159
00:08:45,626 --> 00:08:49,630 line:-2
Like Limited Photos Library,
this is the new access prompt for all apps


160
00:08:49,696 --> 00:08:52,666 line:-1
that ask for location on iOS 14.


161
00:08:52,733 --> 00:08:54,535 line:-1
When the user taps the pill,


162
00:08:54,601 --> 00:08:57,905 line:-2
the app will receive
only approximate location updates.


163
00:08:58,906 --> 00:09:02,776 line:-2
Many apps today have features that are
a natural fit for approximate location,


164
00:09:02,843 --> 00:09:05,913 line:-2
like this photo-sharing app
for finding friends in your area.


165
00:09:06,680 --> 00:09:09,249 line:-2
You can request approximate location
by default


166
00:09:09,316 --> 00:09:11,652 line:-1
when asking for location authorization


167
00:09:11,718 --> 00:09:15,722 line:-2
by setting the
NSLocationDefaultAccuracyReduced key


168
00:09:15,789 --> 00:09:17,324 line:-1
in your Info.plist.


169
00:09:18,192 --> 00:09:21,695 line:-2
And if your app has features
that really needs precise location,


170
00:09:21,762 --> 00:09:23,697 line:-1
like turn-by-turn navigation,


171
00:09:23,764 --> 00:09:28,202 line:-2
you can ask the user for a temporary
upgrade to precise location.


172
00:09:28,268 --> 00:09:30,971 line:-2
In this photo-sharing app,
we don't need it,


173
00:09:31,038 --> 00:09:33,707 line:-2
so we'll ask
for just approximate location.


174
00:09:35,075 --> 00:09:37,744 line:-2
You should take a careful look
at how your app will respond


175
00:09:37,811 --> 00:09:39,713 line:-1
to approximate location.


176
00:09:39,780 --> 00:09:44,351 line:-2
Respect the user's intent by keeping
as many features available as possible,


177
00:09:44,418 --> 00:09:48,288 line:-2
and where appropriate, consider asking
for approximate location only.


178
00:09:49,423 --> 00:09:52,292 line:0
To learn more about
the Core Location API changes,


179
00:09:52,359 --> 00:09:54,795 line:0
see "What's New in Core Location."


180
00:09:54,862 --> 00:09:58,098 line:0
And for a thoughtful look at the design
choices Apple Maps made


181
00:09:58,165 --> 00:10:02,736 line:0
to adopt approximate location,
see "Design for Location Privacy."


182
00:10:03,637 --> 00:10:08,342 line:-2
Finally, let's look at how access
to Contacts can be simplified in iOS 14.


183
00:10:09,409 --> 00:10:13,914 line:0
This year, we've made
proactive keyboard even more intelligent.


184
00:10:13,981 --> 00:10:18,552 line:0
QuickType will suggest contact details
from your on-device contacts database.


185
00:10:19,286 --> 00:10:22,623 line:-2
When a user starts typing a name
in the "Enter name" field,


186
00:10:22,689 --> 00:10:26,693 line:-2
the keyboard automatically populates
the correct information for that name.


187
00:10:27,794 --> 00:10:30,864 line:-2
You can annotate text fields
to give clues to the keyboard


188
00:10:30,931 --> 00:10:34,101 line:-2
about what type of contact information
should be suggested.


189
00:10:35,068 --> 00:10:38,472 line:0
Most apps, like this photos app,
can have a great experience


190
00:10:38,539 --> 00:10:42,276 line:0
without needing to ask for access
to all of the user's contacts


191
00:10:42,342 --> 00:10:45,412 line:0
just to fill in a phone number
or e-mail field.


192
00:10:45,479 --> 00:10:49,583 line:0
To learn more about how this works,
see the "Autofill Everywhere" session.


193
00:10:50,884 --> 00:10:52,819 line:-1
Now let's recall how we started here.


194
00:10:52,886 --> 00:10:55,822 line:-2
To share a photo,
the user had to answer three prompts


195
00:10:55,889 --> 00:10:58,025 line:-1
and grant a lot of access.


196
00:10:58,091 --> 00:11:00,928 line:-2
Not great for privacy,
and not great for ease of use.


197
00:11:01,795 --> 00:11:05,265 line:-2
But now with the new tools available
to your app in iOS 14,


198
00:11:05,332 --> 00:11:08,001 line:-2
you can provide
a significantly better experience.


199
00:11:08,802 --> 00:11:12,506 line:-2
It's seamless for the user
to share only the photos they want,


200
00:11:12,573 --> 00:11:16,777 line:-2
easy to help them find friends in the area
without sharing their precise location,


201
00:11:17,578 --> 00:11:21,982 line:-2
and simple to type in a friend's name
without granting access to all contacts.


202
00:11:22,883 --> 00:11:25,686 line:-1
Great for privacy and great for usability.


203
00:11:26,820 --> 00:11:29,022 line:-2
Regardless
of the individual design choices


204
00:11:29,089 --> 00:11:31,458 line:-1
your app might make with these new API,


205
00:11:31,525 --> 00:11:34,094 line:-2
it's important to remember
the principle behind them.


206
00:11:34,928 --> 00:11:39,466 line:-2
Data minimization is about asking
for only what you need, when you need it,


207
00:11:39,533 --> 00:11:41,935 line:-2
and using new tools
to build great functionality


208
00:11:42,002 --> 00:11:43,904 line:-1
with the minimum data possible.


209
00:11:44,771 --> 00:11:47,541 line:-2
It's a great way to start building trust
with your users,


210
00:11:47,608 --> 00:11:49,843 line:-1
from their first moments using your app.


211
00:11:50,544 --> 00:11:54,147 line:-2
Back to Rohith to talk about
our next privacy principle, security.


212
00:11:55,482 --> 00:11:56,884 line:-1
Thanks, Brandon.


213
00:11:56,950 --> 00:12:00,954 line:-2
Security is another fundamental pillar
that grounds and enforces privacy


214
00:12:01,021 --> 00:12:02,489 line:-1
in our ecosystem.


215
00:12:03,690 --> 00:12:06,527 line:-2
This year, we leverage security
to address the problem


216
00:12:06,593 --> 00:12:09,429 line:-2
of server-name tracking
in Internet protocols.


217
00:12:10,964 --> 00:12:14,801 line:-2
One way that server names are exposed
is with DNS queries.


218
00:12:15,869 --> 00:12:20,240 line:-2
When a device accesses a website,
the system sends a DNS query


219
00:12:20,307 --> 00:12:23,043 line:-1
to turn that name into an IP address.


220
00:12:23,644 --> 00:12:25,746 line:-1
The DNS server the device uses


221
00:12:25,812 --> 00:12:29,383 line:-2
is usually automatically configured
by the Internet provider,


222
00:12:29,449 --> 00:12:33,187 line:-2
wireless carrier,
enterprise or other network operator.


223
00:12:33,887 --> 00:12:39,293 line:0
And since DNS queries do not support
either confidentiality or authenticity,


224
00:12:39,359 --> 00:12:43,096 line:0
the queries and server addresses
can be read or even modified


225
00:12:43,163 --> 00:12:46,366 line:0
by third parties or your network operator.


226
00:12:46,433 --> 00:12:50,737 line:0
They can collect, monitor,
retain and share information


227
00:12:50,804 --> 00:12:53,707 line:0
about the types of DNS queries
your device sends.


228
00:12:54,875 --> 00:12:57,277 line:0
But with an encrypted connection,


229
00:12:57,344 --> 00:13:00,681 line:0
third parties can no longer observe
DNS queries.


230
00:13:01,782 --> 00:13:05,285 line:-2
Starting this year,
Apple platforms natively support


231
00:13:05,352 --> 00:13:08,055 line:-1
two standard encrypted DNS protocols.


232
00:13:09,256 --> 00:13:12,226 line:-2
The supported
standard encrypted DNS protocols


233
00:13:12,292 --> 00:13:17,598 line:-2
protect both the confidentiality
and the authenticity of server names.


234
00:13:17,664 --> 00:13:20,367 line:-1
This will coexist with corporate VPNs


235
00:13:20,434 --> 00:13:22,970 line:-1
and MDM configuration profiles.


236
00:13:23,937 --> 00:13:28,375 line:-2
IOS 14 also supports
automatic DoH server discovery,


237
00:13:28,442 --> 00:13:32,813 line:-2
so that devices can automatically
use encrypted DNS protocols.


238
00:13:32,880 --> 00:13:36,116 line:-2
If you host web content,
you can direct devices


239
00:13:36,183 --> 00:13:39,653 line:-2
to resolve DNS queries
using your servers securely.


240
00:13:40,587 --> 00:13:43,991 line:-2
Apple server names will automatically
resolve DNS queries


241
00:13:44,057 --> 00:13:46,226 line:-1
using Apple's DoH server.


242
00:13:46,293 --> 00:13:48,962 line:0
For more information
about enabling these protocols,


243
00:13:49,029 --> 00:13:51,665 line:0
see the "Enable Encrypted DNS" talk.


244
00:13:52,199 --> 00:13:55,335 line:-2
Another way that server names
are revealed when you're browsing


245
00:13:55,402 --> 00:13:59,139 line:-2
is through the TLS session
establishment handshake.


246
00:13:59,206 --> 00:14:02,876 line:0
TLS is a protocol that is used
to encrypt traffic on the web.


247
00:14:02,943 --> 00:14:07,381 line:0
Even if you've enabled encrypted DNS
to make name resolution more private,


248
00:14:07,447 --> 00:14:09,116 line:0
TLS session establishment


249
00:14:09,183 --> 00:14:12,586 line:0
includes a plain-text
Server Name Indication,


250
00:14:12,653 --> 00:14:14,254 line:0
or SNI.


251
00:14:14,321 --> 00:14:16,323 line:0
Just like with DNS queries,


252
00:14:16,390 --> 00:14:19,760 line:0
the SNI can be observed
by a third party on the network,


253
00:14:19,826 --> 00:14:22,963 line:0
telling them the name of the server
you are making a connection with.


254
00:14:23,997 --> 00:14:27,668 line:0
We're currently working with the IETF
to standardize methods


255
00:14:27,734 --> 00:14:30,904 line:0
for encrypting even more
of the TLS handshake


256
00:14:30,971 --> 00:14:33,607 line:0
so that third parties
can't snoop on your traffic.


257
00:14:34,241 --> 00:14:38,612 line:0
With these updates, encryption prevents
network operators and third parties


258
00:14:38,679 --> 00:14:41,114 line:0
from tracking your activity on the web.


259
00:14:41,882 --> 00:14:43,617 line:-1
This is just one of the many ways


260
00:14:43,684 --> 00:14:47,054 line:-2
that security enforces privacy protections
in our systems.


261
00:14:47,120 --> 00:14:50,424 line:-2
Users depend on your apps
to keep their data secure.


262
00:14:51,124 --> 00:14:56,263 line:0
For more information about securing your
apps to maintain user trust in iOS 14,


263
00:14:56,330 --> 00:14:58,465 line:0
please see the following talks.


264
00:14:58,532 --> 00:15:01,635 line:-2
We've now talked through
three of our privacy pillars--


265
00:15:01,702 --> 00:15:06,540 line:-2
on-device processing, data minimization
and security protections.


266
00:15:06,607 --> 00:15:10,444 line:-2
In addition to giving developers
better ways to request access


267
00:15:10,511 --> 00:15:12,412 line:-1
for only what they need,


268
00:15:12,479 --> 00:15:17,885 line:-2
we're adding transparency for users
to understand when apps access what data.


269
00:15:17,951 --> 00:15:21,355 line:-2
This year, we have updates
to help users better understand


270
00:15:21,421 --> 00:15:25,392 line:-2
what data is collected
by apps and on the web.


271
00:15:26,627 --> 00:15:28,562 line:-1
Starting with the App Store.


272
00:15:29,563 --> 00:15:33,901 line:-2
Today, we already require
that all apps have a privacy policy.


273
00:15:33,967 --> 00:15:37,905 line:-2
This year, we're going one step further
by adding more information


274
00:15:37,971 --> 00:15:41,108 line:-2
to help you easily pick out
the most important details.


275
00:15:42,543 --> 00:15:46,980 line:-2
Starting in fall 2020, when you
submit your app to the App Store,


276
00:15:47,047 --> 00:15:51,919 line:-2
you will need to fill out a questionnaire
to describe how your app uses user data.


277
00:15:52,519 --> 00:15:56,690 line:-2
The information you provide will be shown
to users directly on your store page.


278
00:15:57,391 --> 00:16:00,694 line:-2
This gives users the ability
to see what an app does


279
00:16:00,761 --> 00:16:02,529 line:-1
before they download it.


280
00:16:02,596 --> 00:16:05,432 line:-2
They will be able to see
if you collect a little data


281
00:16:05,999 --> 00:16:07,768 line:-1
or a lot of data


282
00:16:07,835 --> 00:16:10,370 line:-2
and if any of that data
is used to track them.


283
00:16:11,305 --> 00:16:14,408 line:-2
You should make sure to still provide
further details to your users


284
00:16:14,474 --> 00:16:16,343 line:-1
to explain your data usage,


285
00:16:16,410 --> 00:16:19,513 line:-2
such as in your privacy policy
or on your website.


286
00:16:20,414 --> 00:16:24,251 line:-2
This information will be readily available
on your App Store product page.


287
00:16:26,053 --> 00:16:29,957 line:-2
It will also be shown for apps
in the App Stores on all platforms.


288
00:16:31,225 --> 00:16:33,760 line:-2
If you have installed
any third-party code,


289
00:16:33,827 --> 00:16:36,797 line:-1
such as an analytics or advertising SDK,


290
00:16:36,864 --> 00:16:41,802 line:-2
you will also need to declare
what data they collect and how it is used.


291
00:16:41,869 --> 00:16:45,038 line:-2
Remember that SDKs
run in-process of your app,


292
00:16:45,105 --> 00:16:48,475 line:-2
so they have access to the same
permissions that your app does.


293
00:16:48,542 --> 00:16:50,978 line:-1
And as a developer, you are responsible


294
00:16:51,044 --> 00:16:54,114 line:-2
for the trust and handling
of user data in your app,


295
00:16:54,181 --> 00:16:56,250 line:-1
including any code that you include.


296
00:16:56,750 --> 00:17:00,988 line:-2
And, SDK developers, this would be
a great time to update your documentation


297
00:17:01,054 --> 00:17:05,157 line:-2
to make sure that developers understand
what your SDK does.


298
00:17:05,692 --> 00:17:09,162 line:-2
The developer documentation
and questionnaire will be available later.


299
00:17:09,229 --> 00:17:12,398 line:-2
In the meantime,
reach out to your SDK's developers


300
00:17:12,465 --> 00:17:16,435 line:-2
to make sure you understand
how they may collect and use data.


301
00:17:17,204 --> 00:17:20,406 line:-2
On the web,
we're making changes to let you see


302
00:17:20,473 --> 00:17:25,444 line:-2
how Intelligent Tracking Prevention,
or ITP, has been protecting you.


303
00:17:26,146 --> 00:17:30,250 line:-2
ITP has been protecting users
since iOS 11 and Safari 11.


304
00:17:30,851 --> 00:17:34,888 line:-2
Now you can see what known trackers
ITP is protecting you from


305
00:17:34,955 --> 00:17:37,191 line:-1
right from Safari's toolbar.


306
00:17:37,257 --> 00:17:39,760 line:-2
And you can also dive deeper
and view a full report


307
00:17:39,826 --> 00:17:44,398 line:-2
of tracking that Safari has prevented
across all browsing in the last 30 days.


308
00:17:45,399 --> 00:17:49,203 line:-2
We're also adding
increased transparency within apps.


309
00:17:49,269 --> 00:17:52,339 line:-2
Users may copy and paste
a lot of sensitive information,


310
00:17:52,406 --> 00:17:56,109 line:-2
like passwords, photos
or even their credit-card number.


311
00:17:56,910 --> 00:17:58,846 line:-1
This information should only be accessed


312
00:17:58,912 --> 00:18:02,416 line:-2
when a user wants to share
their clipboard data with an app.


313
00:18:02,482 --> 00:18:06,587 line:-2
You may not even realize that code
you include is accessing the clipboard.


314
00:18:08,021 --> 00:18:12,092 line:-2
In iOS 14, we're making it clear
to developers and users


315
00:18:12,159 --> 00:18:15,829 line:-2
when apps access pasteboard items
from another app.


316
00:18:15,896 --> 00:18:18,699 line:-1
This includes programmatic access


317
00:18:18,765 --> 00:18:22,302 line:-2
as well as when a user manually pastes
using the keyboard,


318
00:18:22,369 --> 00:18:24,838 line:-1
menu items or the callout bar.


319
00:18:26,340 --> 00:18:30,143 line:-2
This serves to provide user confirmation
when they paste an item


320
00:18:30,210 --> 00:18:32,012 line:-1
and also warn of apps


321
00:18:32,079 --> 00:18:35,182 line:-2
that may be excessively accessing
pasteboard information.


322
00:18:37,150 --> 00:18:41,855 line:-2
We're also bringing increased transparency
to the camera and microphone.


323
00:18:44,091 --> 00:18:46,693 line:-1
When an app turns on the camera or mic,


324
00:18:46,760 --> 00:18:49,096 line:-1
an indicator will appear in the status bar


325
00:18:49,162 --> 00:18:52,332 line:-2
so users always know
when apps are recording.


326
00:18:53,100 --> 00:18:55,068 line:-1
Control Center will additionally show


327
00:18:55,135 --> 00:18:57,938 line:-2
which app is currently
using the camera or mic


328
00:18:58,005 --> 00:19:00,574 line:-1
or which app has recently used it.


329
00:19:00,641 --> 00:19:02,476 line:-1
This transparency also applies


330
00:19:02,543 --> 00:19:05,612 line:-2
to websites' use of the camera
and mic permissions.


331
00:19:06,246 --> 00:19:10,617 line:-2
Make sure you understand how your app
uses the pasteboard or recording


332
00:19:10,684 --> 00:19:13,887 line:-2
to ensure that it's only accessed
when a feature requires it


333
00:19:13,954 --> 00:19:16,456 line:-1
and that a user expects it.


334
00:19:16,523 --> 00:19:21,461 line:-2
This could include pre-warming
the pasteboard, microphone or camera


335
00:19:21,528 --> 00:19:23,797 line:-1
to make your app more responsive.


336
00:19:23,864 --> 00:19:25,465 line:-1
A user may be surprised


337
00:19:25,532 --> 00:19:28,302 line:-2
if an app immediately
starts recording on launch.


338
00:19:30,070 --> 00:19:33,173 line:-2
Make sure to include UI clues
that make it clear


339
00:19:33,240 --> 00:19:37,845 line:-2
when and why your app will access
the pasteboard or start recording.


340
00:19:39,379 --> 00:19:42,716 line:-2
And remember that SDKs
are part of your app too.


341
00:19:42,783 --> 00:19:45,085 line:-2
You're responsible
for the code in your app


342
00:19:45,152 --> 00:19:47,554 line:-1
and the relationship with the end user.


343
00:19:47,621 --> 00:19:51,792 line:-2
If an SDK in your app uses the pasteboard,
mic or camera,


344
00:19:51,859 --> 00:19:54,895 line:-2
it looks as if your app did so
to the end user.


345
00:19:54,962 --> 00:19:59,566 line:-2
Maintaining transparency reinforces trust
the users have with your app


346
00:19:59,633 --> 00:20:01,368 line:-1
and its use of their data.


347
00:20:03,237 --> 00:20:05,706 line:0
Control over data
that's shared with your app


348
00:20:05,772 --> 00:20:08,208 line:0
goes hand-in-hand with transparency.


349
00:20:08,275 --> 00:20:11,478 line:0
So let's go through the following updates
we're introducing this year,


350
00:20:12,279 --> 00:20:13,847 line:0
starting with networking.


351
00:20:14,982 --> 00:20:18,385 line:-2
Devices on a local network
can observe and gather information


352
00:20:18,452 --> 00:20:20,053 line:-1
about network activity,


353
00:20:20,120 --> 00:20:22,623 line:-2
and apps can gather information
about users


354
00:20:22,689 --> 00:20:24,558 line:-1
from the networks that they use.


355
00:20:25,559 --> 00:20:26,994 line:-1
Every network is unique,


356
00:20:27,060 --> 00:20:29,596 line:-2
and it represents a user's
surrounding environment.


357
00:20:30,163 --> 00:20:33,233 line:-2
This means that apps and other observers
can get information


358
00:20:33,300 --> 00:20:36,770 line:-2
such as if they are at home
and who is around them.


359
00:20:37,604 --> 00:20:40,908 line:-2
They can also build a profile
based on connected devices,


360
00:20:40,974 --> 00:20:43,677 line:-1
such as TVs and other accessories.


361
00:20:45,245 --> 00:20:49,216 line:-2
This year, we're adding control
over access to the local network.


362
00:20:49,283 --> 00:20:52,186 line:-2
When your app tries to access
the local network,


363
00:20:52,252 --> 00:20:55,122 line:-1
such as with a Bonjour or mDNS scan,


364
00:20:55,189 --> 00:20:58,392 line:-2
it will prompt the user
to provide it access to do so.


365
00:20:58,458 --> 00:21:02,863 line:-2
You should declare which Bonjour services
your app requires in your Info.plist


366
00:21:02,930 --> 00:21:06,800 line:-2
so that the system knows which services
to provide information from.


367
00:21:07,601 --> 00:21:10,771 line:-2
As before,
make sure you provide a usage string


368
00:21:10,838 --> 00:21:13,040 line:-1
to explain why your app needs access,


369
00:21:13,106 --> 00:21:18,178 line:-2
and make sure to have UI clues
so that the prompt is not unexpected.


370
00:21:19,179 --> 00:21:22,683 line:0
For more information
about local networking in iOS 14,


371
00:21:22,749 --> 00:21:26,186 line:0
see the "Support Local Network Privacy
in Your App" talk.


372
00:21:27,955 --> 00:21:32,726 line:-2
MAC addresses are identifiers used to
address specific devices on a network,


373
00:21:32,793 --> 00:21:36,463 line:-2
but they were not created
for the purpose of tracking devices.


374
00:21:36,530 --> 00:21:40,434 line:-2
In iOS 8,
we introduced MAC-address randomization.


375
00:21:40,501 --> 00:21:43,737 line:-2
This prevents users from being tracked
from their MAC address


376
00:21:43,804 --> 00:21:45,939 line:-1
when they are not connected to Wi-Fi.


377
00:21:47,241 --> 00:21:49,276 line:-1
But when users connect to a network,


378
00:21:49,343 --> 00:21:53,413 line:-2
their physical Wi-Fi MAC address
leaves a trail of their connectivity


379
00:21:53,480 --> 00:21:55,549 line:-1
because the address doesn't change.


380
00:21:56,016 --> 00:21:59,720 line:-2
As they move around
from one network to another,


381
00:21:59,786 --> 00:22:03,724 line:-2
network operators can combine the data
from their Wi-Fi MAC address


382
00:22:03,790 --> 00:22:06,126 line:-1
to create a more complete user profile


383
00:22:06,193 --> 00:22:10,297 line:-2
which includes where they've been
and details about their network activity.


384
00:22:10,831 --> 00:22:14,201 line:-2
So this year,
we're introducing private Wi-Fi address.


385
00:22:14,268 --> 00:22:20,174 line:-2
iOS 14 will automatically manage
Wi-Fi MAC addresses when joining networks.


386
00:22:20,240 --> 00:22:24,044 line:-2
This way, the MAC address
will not tie to a user's identity,


387
00:22:24,111 --> 00:22:28,215 line:-2
and it can't be used to track them
from one network to the next.


388
00:22:28,282 --> 00:22:33,053 line:0
A new MAC address will also be generated
for networks every 24 hours,


389
00:22:33,120 --> 00:22:35,956 line:0
and the new private address will be used
when the user leaves


390
00:22:36,023 --> 00:22:38,325 line:0
and rejoins the network.


391
00:22:38,392 --> 00:22:41,128 line:-2
Users are always in control
over this feature


392
00:22:41,195 --> 00:22:43,797 line:-2
and can adjust this
in their Wi-Fi settings.


393
00:22:44,431 --> 00:22:48,702 line:-2
So with private Wi-Fi addresses,
users get a per-network address


394
00:22:48,769 --> 00:22:52,372 line:-2
that is not linked to their identity,
generated daily.


395
00:22:52,439 --> 00:22:55,075 line:-1
And users are always in control.


396
00:22:56,109 --> 00:22:59,546 line:-2
We're also introducing
the Nearby Interaction framework this year


397
00:22:59,613 --> 00:23:02,583 line:-2
that allows you to take advantage
of the ultra-wideband ranging


398
00:23:02,649 --> 00:23:04,952 line:-1
we introduced with the U1 chip.


399
00:23:05,018 --> 00:23:09,356 line:-2
Nearby Interaction is a great way
to get distance and direction information


400
00:23:09,423 --> 00:23:13,126 line:-2
for interactive games
and other peer-to-peer use cases,


401
00:23:13,193 --> 00:23:17,130 line:-2
such as confirming that a nearby phone
is the one you are looking for.


402
00:23:18,131 --> 00:23:20,934 line:-2
When using this framework,
there is no need to prompt


403
00:23:21,001 --> 00:23:23,337 line:-1
for Bluetooth or network access.


404
00:23:23,403 --> 00:23:27,107 line:-2
Instead, your app will prompt
for a session-based access.


405
00:23:27,975 --> 00:23:29,343 line:-1
So the data will be available


406
00:23:29,409 --> 00:23:32,846 line:-2
while the app continues to be used
in the foreground.


407
00:23:32,913 --> 00:23:35,549 line:-1
Make sure to include a clear explanation


408
00:23:35,616 --> 00:23:37,618 line:-1
when you prompt the user for permission,


409
00:23:37,684 --> 00:23:41,555 line:-2
and prompt when there's context
for why your app is requesting it.


410
00:23:42,089 --> 00:23:45,726 line:0
For more information,
see the "Meet Nearby Interaction" talk.


411
00:23:47,728 --> 00:23:51,231 line:-1
New in iOS 14, app clips are a great way


412
00:23:51,298 --> 00:23:54,535 line:-2
to introduce users
to experiences in your application.


413
00:23:54,601 --> 00:23:57,771 line:-2
We designed app clips from the ground up
to be private,


414
00:23:57,838 --> 00:24:00,541 line:-2
so users can feel at ease
when trying them.


415
00:24:01,108 --> 00:24:04,178 line:-2
If a user doesn't upgrade
from an app clip to a full app,


416
00:24:04,244 --> 00:24:08,749 line:-2
iOS cleans up any unused app clips
so they leave no trace behind.


417
00:24:09,383 --> 00:24:13,053 line:0
We've also designed
new privacy-friendly location access


418
00:24:13,120 --> 00:24:16,723 line:0
specifically
for app clips' unique use cases


419
00:24:16,790 --> 00:24:19,560 line:0
to help you practice data minimization.


420
00:24:19,626 --> 00:24:22,829 line:-2
You can check to make sure
that a tag hasn't moved


421
00:24:22,896 --> 00:24:27,534 line:-2
or that a user is getting on the wait list
for the right restaurant.


422
00:24:27,601 --> 00:24:32,306 line:0
Location confirmation reveals just enough
information to accomplish this


423
00:24:32,706 --> 00:24:35,075 line:0
without the need for full location access.


424
00:24:35,742 --> 00:24:38,779 line:0
Users can control this
in the app clip card.


425
00:24:38,846 --> 00:24:42,349 line:0
When you ask the system if the app clip
was invoked at a specific location,


426
00:24:42,416 --> 00:24:44,318 line:0
there is no extra prompt.


427
00:24:44,384 --> 00:24:49,022 line:0
But a failed check may not indicate
that the user isn't nearby.


428
00:24:49,089 --> 00:24:52,192 line:0
The user may simply
have location services turned off


429
00:24:52,259 --> 00:24:55,329 line:0
or they may have declined
to allow location confirmation.


430
00:24:56,063 --> 00:24:59,099 line:0
You should provide a way
for users to complete the action,


431
00:24:59,166 --> 00:25:01,435 line:0
such as with additional confirmation.


432
00:25:02,035 --> 00:25:05,072 line:0
For more information,
see the "Streamline Your App Clip"


433
00:25:05,138 --> 00:25:08,275 line:0
and "Design Great App Clips" talks.


434
00:25:10,043 --> 00:25:15,349 line:-2
New in Safari 14, Safari web extensions
put users in direct control


435
00:25:15,415 --> 00:25:18,485 line:-2
over their extensions
and use of their data.


436
00:25:18,552 --> 00:25:20,921 line:-2
Users will be able
to select which websites


437
00:25:20,988 --> 00:25:23,490 line:-1
a Safari web extension gets access to


438
00:25:23,557 --> 00:25:26,093 line:-1
and customize it to their needs.


439
00:25:26,159 --> 00:25:30,664 line:-2
You should configure your extension to
request the minimum permissions necessary.


440
00:25:30,731 --> 00:25:33,233 line:-1
For example, the active-tab permission


441
00:25:33,300 --> 00:25:36,003 line:-2
allows you to run script
on the current web page


442
00:25:36,069 --> 00:25:40,507 line:-2
after the user invokes the extension
without additional user confirmation.


443
00:25:41,308 --> 00:25:44,778 line:0
To learn more about
Safari web extensions and privacy,


444
00:25:44,845 --> 00:25:47,514 line:0
check out
the "Meet Safari Web Extensions" talk.


445
00:25:49,449 --> 00:25:52,719 line:-2
And this year on the Mac,
we're bringing many of the technologies


446
00:25:52,786 --> 00:25:55,789 line:-2
and privacy protections
you're familiar with on iOS


447
00:25:55,856 --> 00:25:57,124 line:-1
to macOS.


448
00:25:57,191 --> 00:26:01,662 line:-2
Users can now control Bluetooth access
for macOS apps that use Core Bluetooth.


449
00:26:02,763 --> 00:26:05,432 line:-2
And if you use Catalyst
to build your apps,


450
00:26:05,499 --> 00:26:09,503 line:-2
users can also take advantage
of the Limited Photos Library,


451
00:26:09,570 --> 00:26:14,241 line:-2
HomeKit, which is available
with the same authorization model as iOS,


452
00:26:14,308 --> 00:26:16,877 line:-1
access to Media and Apple Music


453
00:26:16,944 --> 00:26:20,514 line:-1
and access to CNCopyCurrentNetworkInfo.


454
00:26:20,581 --> 00:26:23,617 line:-2
And just as in iOS,
you will need to provide a purpose string


455
00:26:23,684 --> 00:26:26,653 line:-2
to help users understand
why you need their data.


456
00:26:27,955 --> 00:26:29,957 line:-1
We've built great new tools this year


457
00:26:30,023 --> 00:26:33,527 line:-2
for you to practice transparency
and control in your apps.


458
00:26:33,594 --> 00:26:37,364 line:-2
It's important to explain and show users
how their data is used


459
00:26:37,431 --> 00:26:40,968 line:-2
and make sure that users
are always in control of their data.


460
00:26:41,902 --> 00:26:46,373 line:-2
These four privacy pillars put users
in charge of their data and their devices.


461
00:26:46,940 --> 00:26:49,843 line:-2
Each one continues
to build trust with your users,


462
00:26:49,910 --> 00:26:52,779 line:-2
starting from their first moments
in your app.


463
00:26:52,846 --> 00:26:56,450 line:-2
Back to Brandon to talk about
how these privacy pillars come together


464
00:26:56,517 --> 00:26:58,452 line:-1
to prevent user tracking.


465
00:26:59,052 --> 00:27:02,856 line:-2
Since the early days of Safari,
we've had tracking prevention built in


466
00:27:02,923 --> 00:27:05,726 line:-1
to protect users as they browse the web.


467
00:27:05,792 --> 00:27:09,096 line:-2
We've worked hard
to continually update these protections,


468
00:27:09,162 --> 00:27:11,632 line:-2
from blocking third-party cookies
by default


469
00:27:11,698 --> 00:27:16,003 line:-2
to this year's new transparency
in Intelligent Tracking Prevention.


470
00:27:16,069 --> 00:27:20,340 line:-2
This year, we're bringing this same
tracking prevention mentality to apps,


471
00:27:20,407 --> 00:27:23,844 line:-2
which is that we believe tracking
should always be transparent


472
00:27:23,911 --> 00:27:25,846 line:-1
and under our users' control.


473
00:27:26,513 --> 00:27:30,017 line:-2
Moving forward,
App Store policy will require apps to ask


474
00:27:30,083 --> 00:27:34,388 line:-2
before tracking users across apps
and websites owned by other companies.


475
00:27:35,055 --> 00:27:38,525 line:-2
Your app must display this prompt
and only track users


476
00:27:38,592 --> 00:27:41,395 line:-2
across apps and websites
owned by other companies


477
00:27:41,461 --> 00:27:43,564 line:-1
if they tap "Allow Tracking."


478
00:27:44,264 --> 00:27:47,134 line:-2
This includes tracking
for targeted advertising,


479
00:27:47,201 --> 00:27:48,902 line:-1
advertising measurement


480
00:27:48,969 --> 00:27:51,104 line:-1
or sharing with data brokers.


481
00:27:51,171 --> 00:27:55,509 line:-2
Let's take a closer look at what tracking
across companies means in practice.


482
00:27:56,510 --> 00:27:59,947 line:-2
For example,
if your app knows that I like bagels


483
00:28:00,013 --> 00:28:01,515 line:-1
and don't like grapes,


484
00:28:01,582 --> 00:28:04,051 line:-1
and then you share this with a data broker


485
00:28:04,117 --> 00:28:06,220 line:-1
who knows that I want to be an astronaut,


486
00:28:06,286 --> 00:28:08,655 line:-1
this counts as tracking.


487
00:28:08,722 --> 00:28:13,393 line:-2
Importantly, this counts
even if it isn't tied directly to my name,


488
00:28:13,460 --> 00:28:17,264 line:-2
but also if it's tied to an identifier
about a particular user,


489
00:28:17,331 --> 00:28:20,901 line:-2
such as a user ID,
identifier for advertising,


490
00:28:20,968 --> 00:28:24,938 line:-1
device ID, fingerprinted ID or profile.


491
00:28:25,005 --> 00:28:26,940 line:-1
There are a few specific circumstances


492
00:28:27,007 --> 00:28:29,376 line:-2
where calling the tracking API
isn't required.


493
00:28:30,310 --> 00:28:34,348 line:-2
For instance, if the linking is done
solely on the user's device.


494
00:28:34,414 --> 00:28:36,817 line:-2
That means the data
can't be sent off the device


495
00:28:36,884 --> 00:28:40,053 line:-2
in a way that can identify
that user or device.


496
00:28:40,120 --> 00:28:42,956 line:-2
Or if data is being shared
with a data broker,


497
00:28:43,023 --> 00:28:47,594 line:-2
but only for fraud detection or prevention
or for security purposes.


498
00:28:47,661 --> 00:28:51,331 line:-2
And regardless, the use
must be exclusively on your behalf,


499
00:28:51,398 --> 00:28:53,667 line:-1
not for the data broker's purposes.


500
00:28:54,568 --> 00:28:56,770 line:-1
To ask for permission to track a user,


501
00:28:56,837 --> 00:28:59,306 line:-2
call the AppTrackingTransparency
framework,


502
00:28:59,373 --> 00:29:02,009 line:-2
which will result in a prompt
that looks like this.


503
00:29:03,110 --> 00:29:06,980 line:-2
This framework requires
the NSUserTrackingUsageDescription key


504
00:29:07,047 --> 00:29:09,283 line:-1
to be filled out in your Info.plist.


505
00:29:10,317 --> 00:29:14,388 line:-2
You should add a clear description
of why you're asking to track the user.


506
00:29:15,589 --> 00:29:17,791 line:-1
The IDFA is one of the identifiers


507
00:29:17,858 --> 00:29:20,327 line:-2
that is controlled
by the new tracking permission.


508
00:29:21,094 --> 00:29:23,163 line:-1
To request permission to track the user,


509
00:29:23,230 --> 00:29:26,133 line:-2
call the AppTrackingTransparency
framework.


510
00:29:26,200 --> 00:29:29,369 line:-1
If users select "Ask App Not to Track,"


511
00:29:29,436 --> 00:29:32,906 line:-1
the IDFA API will return all zeros.


512
00:29:33,507 --> 00:29:38,545 line:-2
The AppTrackingTransparency framework
is only available in the iOS 14 SDK.


513
00:29:39,513 --> 00:29:42,983 line:-2
This means that if you haven't
built your app against iOS 14,


514
00:29:43,050 --> 00:29:45,252 line:-1
the IDFA will not be available,


515
00:29:45,319 --> 00:29:47,955 line:-1
and the API will return all zeros.


516
00:29:49,089 --> 00:29:54,261 line:-2
Additionally, users can choose to not be
asked by any app for tracking permissions.


517
00:29:54,995 --> 00:29:58,031 line:-2
Limit Ad Tracking
is migrating to this switch,


518
00:29:58,098 --> 00:30:00,667 line:-2
and as a user who is upgrading
would expect,


519
00:30:00,734 --> 00:30:03,904 line:-2
Limit Ad Tracking enabled
means apps on iOS 14


520
00:30:03,971 --> 00:30:07,007 line:-1
will continue to read the IDFA as zeros,


521
00:30:07,074 --> 00:30:09,476 line:-2
and the Request to Track switch
will be off.


522
00:30:10,377 --> 00:30:12,779 line:-2
Just like Limit Ad Tracking,
the switch will be off


523
00:30:12,846 --> 00:30:16,984 line:-2
and be disabled entirely
for child accounts, shared iPads,


524
00:30:17,050 --> 00:30:20,387 line:-2
and can be switched off and disabled
with an MDM profile.


525
00:30:21,688 --> 00:30:23,423 line:-1
Finally, you should keep in mind


526
00:30:23,490 --> 00:30:26,927 line:-2
that users can disallow
tracking permissions at any time.


527
00:30:27,728 --> 00:30:29,997 line:-1
Call the AppTrackingTransparency framework


528
00:30:30,063 --> 00:30:32,132 line:-1
every time your app is launched


529
00:30:32,199 --> 00:30:34,635 line:-1
before you want to use the IDFA.


530
00:30:34,701 --> 00:30:38,839 line:-2
As is the case today,
you shouldn't cache or store the IDFA.


531
00:30:39,506 --> 00:30:41,308 line:-2
And think about
what changes you should make


532
00:30:41,375 --> 00:30:44,311 line:-2
to stop tracking a user
if they switch tracking off.


533
00:30:45,112 --> 00:30:48,015 line:-2
We believe privacy
is a chance to innovate.


534
00:30:48,081 --> 00:30:50,651 line:-2
With this substantial change
to how tracking works,


535
00:30:50,717 --> 00:30:53,187 line:-1
we've put together an innovative solution


536
00:30:53,253 --> 00:30:57,024 line:-2
to help you answer a key question
that normally involves tracking--


537
00:30:57,090 --> 00:30:58,825 line:-1
advertising attribution.


538
00:31:00,294 --> 00:31:02,796 line:-2
For many developers,
tracking is a side effect


539
00:31:02,863 --> 00:31:04,698 line:-1
of trying to answer business questions


540
00:31:04,765 --> 00:31:08,335 line:-2
like "Which advertising campaign
is most effective?"


541
00:31:08,402 --> 00:31:10,470 line:-1
Apple's Search Ads attribution system


542
00:31:10,537 --> 00:31:13,307 line:-2
doesn't track users
across companies today,


543
00:31:13,373 --> 00:31:16,043 line:-1
but what about other attribution systems?


544
00:31:16,109 --> 00:31:19,913 line:-2
This year we're announcing
major improvements to SKAdNetwork,


545
00:31:19,980 --> 00:31:22,649 line:-2
a framework that gives you
a privacy-friendly way


546
00:31:22,716 --> 00:31:25,385 line:-2
to answer questions
about advertising performance.


547
00:31:25,986 --> 00:31:29,656 line:-2
SKAdNetwork is engineered
with privacy at its core.


548
00:31:29,723 --> 00:31:32,659 line:-2
It uses on-device intelligence
and aggregation


549
00:31:32,726 --> 00:31:36,897 line:-2
to provide conversion measurement
without users being tracked.


550
00:31:36,964 --> 00:31:39,566 line:-2
And because it's engineered
to not track users,


551
00:31:39,633 --> 00:31:42,369 line:-2
there's no need
to request permission to track.


552
00:31:42,436 --> 00:31:44,338 line:-1
Here's how attribution works.


553
00:31:44,404 --> 00:31:48,509 line:-2
You pay for an ad for your app
to appear in a news app.


554
00:31:48,575 --> 00:31:52,346 line:-2
If a user clicks on that ad,
they can see your app in the App Store,


555
00:31:52,412 --> 00:31:54,748 line:-1
decide to download it, launch it


556
00:31:54,815 --> 00:31:57,251 line:-1
and end up new users of your app.


557
00:31:58,151 --> 00:32:00,487 line:-1
SKAdNetwork can help you answer questions


558
00:32:00,554 --> 00:32:04,491 line:-2
like "Which advertising campaign
led to the most app installations?"


559
00:32:04,558 --> 00:32:07,261 line:-2
Here it looks like the orange background
is more effective,


560
00:32:07,327 --> 00:32:10,264 line:-2
so it's probably a good idea
to run more of Campaign 1


561
00:32:10,330 --> 00:32:11,899 line:-1
and less of Campaign 2.


562
00:32:12,399 --> 00:32:15,669 line:-2
It can also help you understand
which apps that the ad appeared in


563
00:32:15,736 --> 00:32:18,572 line:-1
led to the most new users of your app.


564
00:32:18,639 --> 00:32:22,309 line:-2
Here you should probably focus on
running more campaigns in the sports app.


565
00:32:22,876 --> 00:32:25,212 line:-1
So how does this work today?


566
00:32:25,279 --> 00:32:27,247 line:-1
When the user clicks on an ad,


567
00:32:27,314 --> 00:32:30,884 line:-2
the advertising SDK sends a message
to their ad network


568
00:32:30,951 --> 00:32:36,490 line:-2
with a campaign ID and an identifier
associated with the user, like the IDFA.


569
00:32:37,191 --> 00:32:40,160 line:-2
Then when the user has installed
and launched the app,


570
00:32:40,227 --> 00:32:44,765 line:-2
an advertising SDK in that app
sends up the same identifier


571
00:32:44,831 --> 00:32:46,400 line:-1
to tell the ad network.


572
00:32:46,967 --> 00:32:48,836 line:-1
The ad network puts these pieces together


573
00:32:48,902 --> 00:32:51,371 line:-2
and informs the developer
who bought the ad


574
00:32:51,438 --> 00:32:55,909 line:-2
that Campaign 89 in the news app
resulted in a successful conversion.


575
00:32:56,476 --> 00:32:58,478 line:-1
So what does the ad network learn?


576
00:32:58,545 --> 00:32:59,546 line:-1
They learn a lot.


577
00:32:59,613 --> 00:33:04,017 line:-2
They learn that this user has installed
both the news app and your app,


578
00:33:04,084 --> 00:33:07,454 line:-2
that they clicked on this ad,
and that the conversion was successful.


579
00:33:08,488 --> 00:33:11,024 line:-2
Now let's see what this would look like
without tracking.


580
00:33:12,092 --> 00:33:16,663 line:-2
If the user denies permission to track,
the user IDs here are gone,


581
00:33:16,730 --> 00:33:20,167 line:-2
so the ad network isn't able
to learn anything about the conversion.


582
00:33:20,801 --> 00:33:23,804 line:-2
This is a problem for conversion
measurement the traditional way.


583
00:33:24,505 --> 00:33:27,641 line:-2
But the ad network is only trying
to measure conversions,


584
00:33:27,708 --> 00:33:31,078 line:-2
which don't include
user-specific information.


585
00:33:31,144 --> 00:33:33,413 line:-1
We built SKAdNetwork to make it possible


586
00:33:33,480 --> 00:33:37,651 line:-2
to learn just conversion information
without user specifics.


587
00:33:38,385 --> 00:33:40,888 line:-2
Let's take a look
at how this works under the hood.


588
00:33:41,388 --> 00:33:45,158 line:-2
Instead of the ad SDK
calling the ad network directly,


589
00:33:45,225 --> 00:33:47,928 line:0
let's have it call the StoreKit framework
on-device


590
00:33:47,995 --> 00:33:50,330 line:0
and pass it the campaign ID.


591
00:33:50,397 --> 00:33:53,166 line:0
This information is stored
by the App Store client,


592
00:33:53,233 --> 00:33:55,636 line:0
which also records the app download.


593
00:33:56,336 --> 00:33:59,239 line:0
When the app is launched,
the ad network inside your app


594
00:33:59,306 --> 00:34:02,609 line:0
needs to tell StoreKit
that it has been successfully launched,


595
00:34:02,676 --> 00:34:05,112 line:0
which in turn informs
the App Store client.


596
00:34:06,180 --> 00:34:09,416 line:0
To prevent a unique combination
of the source and destination app


597
00:34:09,483 --> 00:34:11,251 line:0
from identifying a user,


598
00:34:11,318 --> 00:34:13,687 line:0
the conversion data is sent to Apple,


599
00:34:13,754 --> 00:34:16,255 line:0
which checks if a sufficient number
of other users


600
00:34:16,322 --> 00:34:18,659 line:0
have made this same conversion.


601
00:34:18,725 --> 00:34:20,460 line:0
If the check passes,


602
00:34:20,527 --> 00:34:21,962 line:0
the device is notified


603
00:34:22,029 --> 00:34:25,132 line:0
so that it can send the conversion data
to the ad network,


604
00:34:25,199 --> 00:34:28,768 line:0
reporting a successful conversion
from the news app to your app


605
00:34:28,835 --> 00:34:30,838 line:0
via the campaign you ran.


606
00:34:30,904 --> 00:34:33,306 line:0
And to ensure
the integrity of this information,


607
00:34:33,373 --> 00:34:36,009 line:0
cryptographic signatures
are used throughout.


608
00:34:37,476 --> 00:34:40,246 line:-2
Now let's look at
what the ad network learns here--


609
00:34:40,313 --> 00:34:45,585 line:-2
only that Campaign 89 led a number
of users from the news app to your app,


610
00:34:45,652 --> 00:34:48,188 line:-2
which is what they were trying
to measure all along.


611
00:34:48,755 --> 00:34:53,893 line:-2
SKAdNetwork is a great example of
applying privacy engineering techniques,


612
00:34:53,960 --> 00:34:56,096 line:-1
building creative technical solutions


613
00:34:56,163 --> 00:34:59,166 line:-2
to bridge the gap
between features and privacy.


614
00:34:59,800 --> 00:35:04,104 line:-2
There are several groups of developers
that can take steps to adopt SKAdNetwork.


615
00:35:04,171 --> 00:35:08,909 line:-2
If you have advertising in your app,
or your app is advertised in another app,


616
00:35:08,976 --> 00:35:11,645 line:-2
pick an ad network
that supports SKAdNetwork


617
00:35:11,712 --> 00:35:14,314 line:-2
so you don't have to prompt
for permission to track


618
00:35:14,381 --> 00:35:18,051 line:-2
and will get conversion data
regardless of user tracking choices.


619
00:35:18,118 --> 00:35:21,188 line:-2
If you're an ad network,
go to developer.apple.com


620
00:35:21,255 --> 00:35:24,258 line:-1
to learn how to adopt SKAdNetwork.


621
00:35:24,324 --> 00:35:28,061 line:0
Please check out the "What's New
with In App Purchases" session


622
00:35:28,128 --> 00:35:31,098 line:0
to learn more
about SKAdNetwork and adoption.


623
00:35:33,400 --> 00:35:37,337 line:-2
To wrap up, we talked about
the four key privacy pillars


624
00:35:37,404 --> 00:35:39,606 line:-1
that guide product decisions at Apple


625
00:35:39,673 --> 00:35:42,776 line:-2
and described how they apply
to our new features this year,


626
00:35:42,843 --> 00:35:44,678 line:-1
including new tracking protections.


627
00:35:45,179 --> 00:35:49,082 line:-2
We hope this will inspire you
to treat privacy as a chance to innovate


628
00:35:49,149 --> 00:35:51,485 line:-2
and use some of the tools
we talked about today


629
00:35:51,552 --> 00:35:54,488 line:-2
to build trust with your users
through great privacy.


630
00:35:54,555 --> 00:35:55,722 line:-1
Thank you.

