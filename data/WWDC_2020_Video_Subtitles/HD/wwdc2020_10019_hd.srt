1
00:00:03,904 --> 00:00:07,307 line:-1
Hello, and welcome to WWDC.


2
00:00:08,375 --> 00:00:13,213 line:0
I'm Sommer, and I'm here to talk about
app accessibility for Switch Control.


3
00:00:13,714 --> 00:00:18,018 line:-2
Today I'm really excited to be discussing
a very important technology


4
00:00:18,085 --> 00:00:20,354 line:-2
that supports our users
with motor impairments:


5
00:00:20,787 --> 00:00:22,055 line:-1
Switch Control.


6
00:00:22,122 --> 00:00:25,826 line:-2
We often talk about our APIs
in terms of visual accessibility,


7
00:00:25,893 --> 00:00:28,262 line:-1
but less frequently in terms of motor.


8
00:00:28,562 --> 00:00:32,833 line:-2
When it comes to our Switch Control users,
we may need to take a few additional steps


9
00:00:32,900 --> 00:00:35,169 line:-1
to truly empower these customers.


10
00:00:35,569 --> 00:00:39,640 line:-2
Today we'll cover what Switch Control is
and who uses this feature.


11
00:00:40,140 --> 00:00:43,177 line:-2
Then,
we'll dive into the APIs that you can use


12
00:00:43,243 --> 00:00:45,746 line:-2
to specifically support
users of Switch Control.


13
00:00:46,713 --> 00:00:50,284 line:-2
And we'll finish off by going over
some general best practices


14
00:00:50,350 --> 00:00:53,887 line:-2
to support better accessibility
for anyone with motor impairments.


15
00:00:55,022 --> 00:00:58,158 line:-2
So let's get started
and learn a bit more about Switch Control.


16
00:00:59,092 --> 00:01:02,129 line:-2
Switch Control is a technology
built into Apple devices


17
00:01:02,196 --> 00:01:04,665 line:-2
that allows users
with limited motor abilities


18
00:01:04,730 --> 00:01:06,567 line:-1
to interact with those iOS devices


19
00:01:06,900 --> 00:01:09,603 line:-2
using one or more
external switches or buttons.


20
00:01:10,771 --> 00:01:14,341 line:-2
They use these switches
to navigate a cursor around their screen.


21
00:01:14,408 --> 00:01:19,146 line:-2
Activating these switches can then
bring up menus that allow users to tap,


22
00:01:19,213 --> 00:01:22,749 line:-2
gesture, scroll, control the volume,
and much more.


23
00:01:23,250 --> 00:01:27,321 line:-2
Because those who use switch systems
often have limited use of their limbs,


24
00:01:27,387 --> 00:01:30,757 line:-2
it's common for these switches or buttons
to be mounted on wheelchairs


25
00:01:30,824 --> 00:01:36,330 line:-2
and operated by head taps, tongue clicks,
or breathing in or out into a straw.


26
00:01:36,897 --> 00:01:39,166 line:-2
Since these devices
are mounted to a chair,


27
00:01:39,233 --> 00:01:42,836 line:-2
they're often powered as well,
allowing the screen to remain on.


28
00:01:43,403 --> 00:01:46,607 line:-2
Of course,
the best way to understand Switch Control


29
00:01:46,673 --> 00:01:48,942 line:-1
is to see one of our customers using it.


30
00:01:49,376 --> 00:01:52,846 line:-2
Here, we meet Ian McKay
as he's navigating the woods


31
00:01:52,913 --> 00:01:55,949 line:-2
and taking a picture
using his mouth-operated switch.


32
00:01:56,717 --> 00:01:58,285 line:-1
[birds chirping]


33
00:01:58,352 --> 00:02:00,120 line:-1
[wheelchair motor whirring]


34
00:02:15,802 --> 00:02:19,606 line:-1
[mechanical clicking]


35
00:02:20,174 --> 00:02:21,475 line:-1
[shutter clicks]


36
00:02:31,985 --> 00:02:34,721 line:-2
Notice how he can use
different mouth gestures


37
00:02:34,788 --> 00:02:38,025 line:-2
to move an on-screen cursor, tap,
and more.


38
00:02:38,859 --> 00:02:42,863 line:-2
While we saw Ian using multiple switches
via his mouth in the last video,


39
00:02:42,930 --> 00:02:45,465 line:-2
it's also very common
for our Switch Control users


40
00:02:45,532 --> 00:02:47,701 line:-1
to utilize an automatic cursor


41
00:02:47,768 --> 00:02:50,671 line:-2
that advances through items
until they interact with it.


42
00:02:51,371 --> 00:02:54,408 line:-2
Here we can see a close-up
of that autoscanning behavior.


43
00:02:55,843 --> 00:02:58,812 line:-2
I'm using a switch to add a new clock
to my world clock


44
00:02:58,879 --> 00:03:01,148 line:-1
for one of my favorite cities, Amsterdam.


45
00:03:01,915 --> 00:03:04,551 line:-2
Notice that the cursor advances
automatically.


46
00:03:04,618 --> 00:03:06,453 line:-1
I don't have to do anything.


47
00:03:06,520 --> 00:03:10,324 line:-2
When I do tap the switch, the cursor
navigates into the group that it's on,


48
00:03:10,390 --> 00:03:14,161 line:-2
or, if it's on a leaf item,
Switch Control shows the menu.


49
00:03:14,728 --> 00:03:18,098 line:-2
This is a very common way for our users
to interact with their devices


50
00:03:18,165 --> 00:03:19,600 line:-1
when using Switch Control.


51
00:03:20,267 --> 00:03:23,103 line:-2
When building apps that work well
for users of Switch Control,


52
00:03:23,170 --> 00:03:25,305 line:-2
there's some extra information
to consider.


53
00:03:25,873 --> 00:03:27,741 line:-1
Because when using the autoscanner,


54
00:03:27,808 --> 00:03:31,345 line:-2
they often have to wait for
the correct item or group to be selected,


55
00:03:31,411 --> 00:03:33,514 line:-1
tap-timing is very important.


56
00:03:34,047 --> 00:03:37,951 line:-2
A mistap can result in numerous more steps
to perform a simple action.


57
00:03:38,485 --> 00:03:42,356 line:-2
Additionally, the efficiency and grouping
of these navigation items


58
00:03:42,422 --> 00:03:44,358 line:-1
is key for Switch Control users,


59
00:03:44,424 --> 00:03:47,027 line:-2
as poor grouping can lead to
large wait times


60
00:03:47,094 --> 00:03:49,062 line:-1
to arrive at the item of interest.


61
00:03:49,563 --> 00:03:54,201 line:-2
Finally, some switch users may have
tremors or other involuntary movements.


62
00:03:54,601 --> 00:03:56,803 line:-1
This can lead to a higher rate of mistaps


63
00:03:56,870 --> 00:03:59,773 line:-2
than we often see with
other assistive technologies.


64
00:04:00,140 --> 00:04:03,177 line:-2
If there's an option to delete all data
or log out,


65
00:04:03,243 --> 00:04:06,413 line:-2
one accidental tap
could have quite destructive consequences


66
00:04:06,480 --> 00:04:10,417 line:-2
for a Switch Control user,
so error tolerance is very important.


67
00:04:11,218 --> 00:04:14,755 line:-2
Now that we've gotten a better understanding
of who uses Switch Control


68
00:04:14,821 --> 00:04:18,091 line:-2
and important considerations
for this user group,


69
00:04:18,158 --> 00:04:22,162 line:-2
let's take a look at how we can build
our apps with these users in mind.


70
00:04:22,829 --> 00:04:26,400 line:-2
But before we dive into code,
I want to call out one important point.


71
00:04:27,201 --> 00:04:31,371 line:-2
Very often, you don't have to do
anything extra for Switch Control.


72
00:04:31,438 --> 00:04:35,042 line:-2
By making an app that's 100% accessible
to VoiceOver,


73
00:04:35,108 --> 00:04:38,145 line:-2
it will likely already be great
for Switch Control.


74
00:04:38,745 --> 00:04:42,015 line:-2
Sometimes, however,
we'll want to add a bit more polish


75
00:04:42,082 --> 00:04:43,917 line:-1
to our Switch Control experience,


76
00:04:43,984 --> 00:04:46,820 line:-2
especially where we may need
specialized behaviors


77
00:04:46,887 --> 00:04:48,455 line:-1
that don't apply to VoiceOver.


78
00:04:48,789 --> 00:04:52,793 line:-2
Also, by understanding
these Switch-Control-specific APIs,


79
00:04:52,860 --> 00:04:54,928 line:-1
we can even design and build apps


80
00:04:54,995 --> 00:04:58,665 line:-2
specifically targeted at customers
who use Switch Control.


81
00:04:58,732 --> 00:05:01,902 line:-1
Now let's dive into some code and see how.


82
00:05:02,236 --> 00:05:04,771 line:-2
Lately, a lot of my friends
have been having kids.


83
00:05:05,372 --> 00:05:07,040 line:-1
And as those kids are getting older,


84
00:05:07,107 --> 00:05:10,177 line:-2
they're starting to learn their numbers
and shapes and colors.


85
00:05:10,244 --> 00:05:12,813 line:-2
Now,
I've always been a fan of handmade gifts,


86
00:05:12,880 --> 00:05:15,115 line:-2
so I thought it would be fun
to make an app for them.


87
00:05:15,549 --> 00:05:17,484 line:-1
This is a game called Shape Shuffle.


88
00:05:17,951 --> 00:05:20,721 line:-2
In it,
children can travel down a learning path


89
00:05:20,787 --> 00:05:23,257 line:-2
by completing
more and more challenging quests


90
00:05:23,323 --> 00:05:27,394 line:-2
to build groups of objects
of different counts and shapes and colors.


91
00:05:27,861 --> 00:05:30,230 line:-1
Let's watch this video of how it works.


92
00:05:30,297 --> 00:05:34,168 line:-2
In the home screen, we can select a level
on our winding road of shapes.


93
00:05:34,234 --> 00:05:35,536 line:-1
I'll select level three.


94
00:05:37,538 --> 00:05:40,274 line:-2
When we enter the level,
we get a prompt like we see here:


95
00:05:40,340 --> 00:05:41,675 line:-1
Two Blue Squares.


96
00:05:41,742 --> 00:05:43,977 line:-1
Now we can flip cards by tapping on them


97
00:05:44,044 --> 00:05:47,748 line:-2
to try to find a set of three cards
that will complete the prompt.


98
00:05:47,814 --> 00:05:49,983 line:-1
Ah. I just found the blue card.


99
00:05:50,050 --> 00:05:52,953 line:-2
I can double-tap the blue card
to commit it to my answer.


100
00:05:53,820 --> 00:05:55,889 line:-1
So I double-tap, and there it is.


101
00:05:55,956 --> 00:06:01,261 line:-2
Now I'll keep on tapping cards,
searching for either two or square.


102
00:06:01,895 --> 00:06:04,164 line:-1
[clicks tongue] Hmm. Not yet.


103
00:06:06,533 --> 00:06:08,235 line:-1
Ah, I found two.


104
00:06:08,302 --> 00:06:12,072 line:-2
Now I can double-tap that one
and continue looking for that square.


105
00:06:12,973 --> 00:06:16,143 line:-2
Now,
if I'm not sure if something is a square,


106
00:06:16,210 --> 00:06:19,947 line:-2
I can put a pin in it with a long press
to remind me where it was,


107
00:06:20,013 --> 00:06:22,416 line:-2
and that will help me remember
to come back to it.


108
00:06:22,482 --> 00:06:24,151 line:-1
Then, I can keep looking.


109
00:06:25,719 --> 00:06:30,891 line:-2
So now I can decide between a few shapes
until I'm sure I've found my square.


110
00:06:30,958 --> 00:06:34,261 line:-2
[clicks tongue] Hmm.
I think the bottom one is it.


111
00:06:35,629 --> 00:06:38,699 line:0
So I double-tap, and there we go.
I've solved my first level.


112
00:06:38,765 --> 00:06:40,667 line:-1
Two Blue Squares.


113
00:06:42,169 --> 00:06:44,872 line:-2
While this game is simple and fun
for our touch users,


114
00:06:44,938 --> 00:06:47,774 line:-2
it poses some challenges
for our Switch Control users.


115
00:06:48,342 --> 00:06:52,513 line:-2
First of all, on the home screen,
there's no clear element grouping.


116
00:06:53,013 --> 00:06:57,217 line:-2
Normally, the Switch Control cursor
will travel top to bottom, left to right.


117
00:06:57,885 --> 00:07:00,821 line:-2
This will cause it to travel through
our levels in the wrong order


118
00:07:00,888 --> 00:07:02,289 line:-1
because of the curvy path.


119
00:07:02,890 --> 00:07:05,225 line:-2
Also,
because we don't group levels at all,


120
00:07:05,292 --> 00:07:08,896 line:-2
a user looking for level 30
would have a long time to wait


121
00:07:08,962 --> 00:07:11,265 line:-2
for the switch cursor
to get all the way there.


122
00:07:12,065 --> 00:07:15,135 line:-2
Secondly, we're relying
on tapping cards to see them.


123
00:07:15,769 --> 00:07:18,639 line:-2
In order to see a card,
a manual Switch Control user


124
00:07:18,705 --> 00:07:21,341 line:-2
might need to interact
with their switch multiple times.


125
00:07:21,675 --> 00:07:22,976 line:-1
This might get exhausting,


126
00:07:23,043 --> 00:07:25,913 line:-2
as the number of cards
increases in higher levels.


127
00:07:26,880 --> 00:07:30,017 line:-2
Finally,
double-tap and long-press gestures


128
00:07:30,083 --> 00:07:32,119 line:-1
have to be performed frequently.


129
00:07:32,186 --> 00:07:34,588 line:-2
While these are possible
for someone using Switch Control,


130
00:07:34,655 --> 00:07:37,524 line:-2
they require navigating
into the gestures submenu,


131
00:07:37,591 --> 00:07:39,793 line:-2
and that could slow down
game play even more.


132
00:07:40,727 --> 00:07:43,263 line:-2
So let's see how we can
address that first issue,


133
00:07:43,530 --> 00:07:46,967 line:-2
where we have too many elements
for Switch Control on our levels screen


134
00:07:47,034 --> 00:07:48,936 line:-1
and they are navigated out of order.


135
00:07:49,236 --> 00:07:50,504 line:-1
There are two steps.


136
00:07:50,971 --> 00:07:55,676 line:-2
First, we need to tell Switch Control
to group items in a single levels section


137
00:07:56,009 --> 00:07:59,346 line:-2
by setting accessibility-Navigation-Style
to combined.


138
00:07:59,713 --> 00:08:03,317 line:-2
Luckily this is easy because
I already built my view hierarchy


139
00:08:03,383 --> 00:08:05,919 line:-2
using container views
for every three levels.


140
00:08:06,520 --> 00:08:09,456 line:-2
Next, we need to control
the ordering of elements


141
00:08:09,523 --> 00:08:12,659 line:-2
so the top-to-bottom,
left-to-right ordering doesn't prevail.


142
00:08:13,126 --> 00:08:17,197 line:-2
We do this by explicitly setting
the Accessibility Elements array


143
00:08:17,264 --> 00:08:19,566 line:-2
to return the precise ordering
that we want.


144
00:08:20,033 --> 00:08:24,004 line:-2
This will cause Switch Control
to jump first to level four before five


145
00:08:24,071 --> 00:08:25,172 line:-1
and then to six.


146
00:08:26,540 --> 00:08:29,776 line:-2
The next issue we had
was that touching to reveal cards


147
00:08:29,843 --> 00:08:33,046 line:-2
requires multiple interactions
from our Switch Control users.


148
00:08:33,780 --> 00:08:36,283 line:-2
While those using autoscanning
may not mind this,


149
00:08:36,616 --> 00:08:39,986 line:-2
those manually scanning
may find card navigation taxing.


150
00:08:40,053 --> 00:08:42,523 line:-2
For these users,
we've added an extra setting


151
00:08:42,589 --> 00:08:45,325 line:-2
to auto-flip cards
when their cursor gets to them.


152
00:08:46,126 --> 00:08:47,294 line:-1
To implement this,


153
00:08:47,361 --> 00:08:51,798 line:-2
whenever a card gets focus,
accessibility-Element-Did-Become-Focused


154
00:08:51,865 --> 00:08:52,966 line:-1
will be called.


155
00:08:53,033 --> 00:08:56,036 line:-2
When this happens,
we just flip our card and show the front.


156
00:08:56,503 --> 00:08:58,238 line:-1
Whenever a card loses focus,


157
00:08:58,605 --> 00:09:01,675 line:-2
we will get a call for
accessibility-Element-Did-Lose-Focus,


158
00:09:01,742 --> 00:09:03,744 line:-1
and we'll flip the card back over.


159
00:09:03,810 --> 00:09:05,479 line:-1
Now, let's see how this looks.


160
00:09:05,846 --> 00:09:08,348 line:-2
Notice how the flips
are happening automatically.


161
00:09:08,415 --> 00:09:10,350 line:-1
There's no menu interaction required.


162
00:09:11,185 --> 00:09:15,556 line:-2
Before we solve our last issue
of our game requiring multiple gestures,


163
00:09:15,622 --> 00:09:19,860 line:-2
I want to quickly introduce the concept
of Accessibility Custom Actions.


164
00:09:20,360 --> 00:09:24,898 line:-2
Custom Actions give assistive technologies
like VoiceOver and Switch Control


165
00:09:24,965 --> 00:09:27,367 line:-2
quick access
to common behaviors in your app


166
00:09:27,434 --> 00:09:29,937 line:-2
that might be hard to reach
by cursor navigation.


167
00:09:30,003 --> 00:09:35,008 line:-2
For example, in reminders,
the swipe actions such as Delete and Flag


168
00:09:35,075 --> 00:09:37,344 line:-1
are presented as Custom Actions.


169
00:09:38,045 --> 00:09:40,113 line:-1
By making these items Custom Actions


170
00:09:40,180 --> 00:09:43,317 line:-2
rather than views
the user has to navigate their cursor to,


171
00:09:43,383 --> 00:09:44,952 line:-1
we greatly reduce clutter.


172
00:09:45,619 --> 00:09:49,256 line:-2
Also, we make navigation much faster
for common behaviors


173
00:09:49,323 --> 00:09:51,358 line:-1
and thus more convenient.


174
00:09:51,692 --> 00:09:54,161 line:-1
Now, let's loop back to our app.


175
00:09:54,461 --> 00:09:57,431 line:-2
Our game has frequent double-taps
and long presses


176
00:09:57,497 --> 00:09:59,499 line:-1
which would cause a Switch Control user


177
00:09:59,566 --> 00:10:02,069 line:-2
to have to return
to that gestures menu repeatedly.


178
00:10:02,603 --> 00:10:06,273 line:-2
So, we should turn those into actions
that our users can easily get to


179
00:10:06,340 --> 00:10:07,808 line:-1
on that top-level menu.


180
00:10:08,275 --> 00:10:12,112 line:-2
We can use Accessibility Custom Actions
API to do just this.


181
00:10:12,913 --> 00:10:17,117 line:-2
For each action we'd like to show up
in that top-level menu of Switch Control,


182
00:10:17,184 --> 00:10:20,420 line:-2
we simply create
a UI-Accessibility-Custom-Action.


183
00:10:21,121 --> 00:10:23,490 line:-2
Once we've created an item
for each action,


184
00:10:23,557 --> 00:10:27,895 line:-2
we just assign those items as an array
to Accessibility-Custom-Actions.


185
00:10:28,495 --> 00:10:32,065 line:-2
Now they will show up in the top level
of the Switch Control menu


186
00:10:32,132 --> 00:10:34,635 line:-2
when the user activates their switch
on that view.


187
00:10:35,002 --> 00:10:38,672 line:-2
But before we leave this slide,
I want to call out one more thing.


188
00:10:38,739 --> 00:10:41,942 line:-1
We've introduced a new API in iOS 14


189
00:10:42,009 --> 00:10:44,778 line:-2
to allow you to set an image
for your custom action.


190
00:10:45,112 --> 00:10:50,117 line:-2
As you can see here, I've used SF Symbols
to make a pin for my pin action


191
00:10:50,184 --> 00:10:52,419 line:-1
and a plus sign for my add action.


192
00:10:53,086 --> 00:10:56,823 line:-2
And if you don't use an image,
you'll see our old default behavior.


193
00:10:56,890 --> 00:11:00,360 line:-2
The menu item will display
the first letter of the action's name.


194
00:11:01,128 --> 00:11:05,032 line:-2
Now, let's take a look at our game running
with Switch Control.


195
00:11:05,098 --> 00:11:09,069 line:-2
In order to show the auto-flipping,
I've turned off autoscanning,


196
00:11:09,136 --> 00:11:11,171 line:-1
so you'll see me using two switches.


197
00:11:12,372 --> 00:11:15,576 line:-2
I'm using the right red switch
to move my cursor to the next item


198
00:11:15,642 --> 00:11:18,011 line:-2
and the left yellow switch
to enter a group


199
00:11:18,078 --> 00:11:20,147 line:-1
or activate my menu on an item.


200
00:11:20,781 --> 00:11:22,349 line:-1
Since I'm doing manual scanning,


201
00:11:22,416 --> 00:11:25,853 line:-2
you'll notice that I have auto-flipping
behavior turned on for my cards.


202
00:11:26,420 --> 00:11:28,889 line:-1
As I search for my six blue triangles,


203
00:11:28,956 --> 00:11:31,625 line:-2
I'll use my new pin action
in my top level menu


204
00:11:31,692 --> 00:11:33,460 line:-1
to pin the card on the top right.


205
00:11:33,861 --> 00:11:35,996 line:-1
Then, with a little more card flipping,


206
00:11:36,063 --> 00:11:39,099 line:-2
I'll find and add that blue card
with another action.


207
00:11:39,733 --> 00:11:41,535 line:-1
Before we move away from API,


208
00:11:41,602 --> 00:11:45,205 line:-2
I wanted to call out a couple more
useful methods and properties


209
00:11:45,272 --> 00:11:46,807 line:-1
that we have for Switch Control.


210
00:11:47,341 --> 00:11:51,278 line:-2
First, if you ever need to detect
when Switch Control is running,


211
00:11:51,345 --> 00:11:55,549 line:-2
you can call is-Switch-Control-Running
or use the associated notification.


212
00:11:56,450 --> 00:11:58,852 line:-1
Secondly, there are sometimes cases


213
00:11:58,919 --> 00:12:01,355 line:-2
when you have UI
that would otherwise be static,


214
00:12:01,421 --> 00:12:04,725 line:-2
like a UI-Label,
that updates when the user taps.


215
00:12:04,791 --> 00:12:05,826 line:-1
In this case,


216
00:12:05,893 --> 00:12:09,396 line:-2
we want to let Switch Control know
that it should navigate to this item,


217
00:12:09,463 --> 00:12:11,431 line:-1
even though it looks like static text,


218
00:12:11,798 --> 00:12:16,436 line:-2
so we can set accessibility-Responds-
To-User-Interaction to true.


219
00:12:16,803 --> 00:12:18,305 line:-1
And that's it for API.


220
00:12:18,372 --> 00:12:20,641 line:-1
Hopefully you've learned a few useful tips


221
00:12:20,707 --> 00:12:23,310 line:-2
to hone and polish your app
for Switch Control.


222
00:12:23,377 --> 00:12:27,080 line:-2
Or perhaps, now you have a vision
for an app built entirely


223
00:12:27,147 --> 00:12:28,949 line:-1
for your Switch Control customers.


224
00:12:29,016 --> 00:12:32,819 line:-2
To wrap up, I'd like to share with you
some general best practices


225
00:12:32,886 --> 00:12:36,056 line:-2
when it comes to making sure
that your app is accessible to users


226
00:12:36,123 --> 00:12:37,558 line:-1
with motor impairments.


227
00:12:37,624 --> 00:12:41,061 line:-2
However, these suggestions
are not only for Switch Control.


228
00:12:41,128 --> 00:12:43,830 line:-2
They'll bring a better experience
to all of your users.


229
00:12:44,731 --> 00:12:48,202 line:-2
First, make sure you confirm
any destructive behaviors


230
00:12:48,268 --> 00:12:50,971 line:-2
or high-consequence behaviors
in your applications.


231
00:12:51,572 --> 00:12:54,308 line:-2
This is especially important
for Switch Control users


232
00:12:54,374 --> 00:12:56,677 line:-1
who may be more likely to mistap an item.


233
00:12:56,743 --> 00:13:00,247 line:-2
It should never be too easy
for a user to delete all their data


234
00:13:00,314 --> 00:13:01,782 line:-1
or delete their account.


235
00:13:01,849 --> 00:13:05,986 line:-2
Next, we recommend against
having any timeouts in your apps,


236
00:13:06,053 --> 00:13:08,021 line:-1
at least when Switch Control is running.


237
00:13:08,722 --> 00:13:11,358 line:-2
Screens for entering pairing codes
and authentication codes


238
00:13:11,425 --> 00:13:14,261 line:-2
will often have short timeouts
for security purposes.


239
00:13:14,328 --> 00:13:18,332 line:-2
However, as Switch Control users
often enter information more slowly,


240
00:13:18,398 --> 00:13:19,967 line:-1
due to waiting on the cursor,


241
00:13:20,033 --> 00:13:24,805 line:-2
and take longer to correct input errors,
these timeouts may become frustrating.


242
00:13:25,739 --> 00:13:30,978 line:-2
Third, be sure that your view hierarchy
makes it easy to group items on screen.


243
00:13:31,044 --> 00:13:35,048 line:-2
All users benefit from clear
and easy-to-follow item groupings.


244
00:13:35,115 --> 00:13:38,886 line:-2
Once Switch Control is running,
those groups become even more important


245
00:13:38,952 --> 00:13:41,622 line:-2
for the efficiency and speed
of cursor navigation.


246
00:13:42,256 --> 00:13:43,257 line:-1
And finally,


247
00:13:43,323 --> 00:13:47,895 line:-2
remember that Switch Control users
can use devices mounted on wheelchairs,


248
00:13:47,961 --> 00:13:51,865 line:-2
and this means that it might be harder
for them to keep their screens private.


249
00:13:51,932 --> 00:13:56,170 line:-2
Avoid putting private information like
account numbers or medical information


250
00:13:56,236 --> 00:13:58,605 line:-1
on screen for longer than it needs be.


251
00:13:58,672 --> 00:14:01,375 line:-2
And with that,
we're at the end of our session.


252
00:14:01,441 --> 00:14:04,978 line:-2
I hope you've been able to better
understand who uses Switch Control


253
00:14:05,045 --> 00:14:08,982 line:-2
and some of the key considerations
to keep in mind for this user group


254
00:14:09,049 --> 00:14:10,951 line:-1
as you build your apps.


255
00:14:11,018 --> 00:14:15,522 line:-2
With just a few additional lines of code,
we were able to customize our game


256
00:14:15,589 --> 00:14:18,959 line:-2
to provide a smooth and easy
Switch control experience.


257
00:14:19,026 --> 00:14:21,562 line:-2
And finally,
we learned how some best practices


258
00:14:21,628 --> 00:14:25,132 line:-2
have a disproportionately large impact
for our Switch Control users.


259
00:14:25,599 --> 00:14:30,070 line:-2
We hope this helps you build apps
that are truly accessible to everyone.


260
00:14:30,604 --> 00:14:34,908 line:-2
Thank you so much for your time,
and have a great WWDC 2020.

