1
00:00:03,703 --> 00:00:06,840 line:-1
Hello and welcome to WWDC.


2
00:00:08,442 --> 00:00:13,814 line:0
Hello, I'm Baskaran. I'm an engineer
on the Apple Education team.


3
00:00:13,881 --> 00:00:16,783 line:0
Today, my coworker Daniel and I


4
00:00:16,850 --> 00:00:19,920 line:0
would like to update you
on the latest changes to ClassKit.


5
00:00:20,454 --> 00:00:24,525 line:-2
First, I'll show you enhancements
we have made to ClassKit,


6
00:00:25,259 --> 00:00:28,962 line:-2
enhancements that will enable you
to provide rich details


7
00:00:29,029 --> 00:00:31,131 line:-1
about content in your apps.


8
00:00:32,466 --> 00:00:36,637 line:-2
Then I will go over
some recommended best practices


9
00:00:36,703 --> 00:00:38,272 line:-1
for adopting ClassKit.


10
00:00:39,239 --> 00:00:44,511 line:-2
After that, Daniel will introduce you
to a new way to report your content


11
00:00:44,578 --> 00:00:47,848 line:-2
using a service
called ClassKit Catalog API.


12
00:00:48,715 --> 00:00:52,953 line:-2
And finally, he will go over
some recommended best practices


13
00:00:53,020 --> 00:00:54,788 line:-1
for adopting ClassKit Catalog API.


14
00:00:55,756 --> 00:00:59,293 line:-2
Let me begin with a brief overview
of ClassKit.


15
00:00:59,893 --> 00:01:03,597 line:-2
It's a core component
of Apple education ecosystem.


16
00:01:04,798 --> 00:01:10,204 line:-2
It's a framework that enables you to
surface educational content in your apps


17
00:01:10,737 --> 00:01:15,509 line:-2
as activities that teachers can use
in assignments for their students.


18
00:01:15,576 --> 00:01:18,545 line:-2
ClassKit enables your app
to report progress


19
00:01:18,612 --> 00:01:21,348 line:-1
as students work on their assignments.


20
00:01:21,415 --> 00:01:26,653 line:-2
And most importantly, it does this while
protecting the privacy of the students


21
00:01:26,720 --> 00:01:30,557 line:-2
by only reporting progress
on assigned activities.


22
00:01:30,624 --> 00:01:34,461 line:-1
For example, if a teacher assigns students


23
00:01:34,528 --> 00:01:37,831 line:-1
to read a chapter from <i>Fun with Science</i>


24
00:01:37,898 --> 00:01:41,668 line:-2
and a student also reads a chapter
from <i>Basic Arithmetic</i>,


25
00:01:42,402 --> 00:01:45,772 line:-2
the student and the teacher
will see progress


26
00:01:45,839 --> 00:01:47,741 line:-1
only on <i>Fun with Science</i>


27
00:01:48,375 --> 00:01:50,644 line:-1
because that was assigned reading.


28
00:01:51,245 --> 00:01:54,248 line:-1
ClassKit was introduced in 2018.


29
00:01:54,314 --> 00:01:58,218 line:-1
Now it's also available on macOS


30
00:01:58,285 --> 00:02:00,954 line:-1
for creating native and Catalyst apps.


31
00:02:02,089 --> 00:02:04,091 line:0
For more information on ClassKit,


32
00:02:04,157 --> 00:02:08,195 line:0
check out our 2019 session
"What's New in ClassKit"


33
00:02:08,262 --> 00:02:11,331 line:0
and our 2018 session
"Introducing ClassKit."


34
00:02:12,332 --> 00:02:14,368 line:-1
Before I go into the enhancements,


35
00:02:14,968 --> 00:02:19,039 line:-2
let's take a quick look
at how content in your app


36
00:02:19,106 --> 00:02:22,576 line:-2
appears as assignable activities
in Schoolwork.


37
00:02:23,277 --> 00:02:25,579 line:-1
Your app defines the content


38
00:02:25,646 --> 00:02:29,383 line:-2
and describes it as activities
using ClassKit,


39
00:02:29,449 --> 00:02:31,685 line:-1
which can be browsed using Schoolwork.


40
00:02:32,486 --> 00:02:36,523 line:-2
With Schoolwork,
it's easy to share class materials,


41
00:02:36,590 --> 00:02:39,893 line:-2
get students to a specific activity
in an app,


42
00:02:39,960 --> 00:02:43,463 line:-2
collaborate with students
and view student progress.


43
00:02:44,298 --> 00:02:47,301 line:-2
When you open Schoolwork,
you'll land on this view


44
00:02:47,734 --> 00:02:52,606 line:-2
which serves as home base for all content
teachers assign to their students.


45
00:02:53,607 --> 00:02:58,312 line:-2
You tap on the New Handout button
on the top right to create a new handout.


46
00:02:59,146 --> 00:03:02,316 line:-1
Let me zoom in to make it easier to see.


47
00:03:03,250 --> 00:03:08,589 line:-2
Now, tap on the App Activities
to show the app activity chooser.


48
00:03:09,857 --> 00:03:13,994 line:-2
The app activity chooser shows
ClassKit-enabled apps


49
00:03:14,061 --> 00:03:15,796 line:-1
with App Activities.


50
00:03:15,863 --> 00:03:18,599 line:-1
Here, we see three apps with activities.


51
00:03:19,366 --> 00:03:24,071 line:-2
I'm going to use the Book Reader app
as an example for this presentation.


52
00:03:24,137 --> 00:03:26,707 line:-2
Let's look at the activities
within Book Reader.


53
00:03:27,508 --> 00:03:30,477 line:-2
We see a book, <i>Fun with Science</i>,
with activities.


54
00:03:31,378 --> 00:03:33,914 line:-2
Let's browse the activities
in <i>Fun with Science</i>.


55
00:03:34,882 --> 00:03:38,018 line:-2
There are several activities
in <i>Fun with Science</i>


56
00:03:38,085 --> 00:03:39,987 line:-1
organized by chapters.


57
00:03:40,053 --> 00:03:44,358 line:-2
Let's see what's in the first chapter
titled "Inquiry."


58
00:03:45,359 --> 00:03:49,129 line:-2
This chapter has one activity,
Science Investigation.


59
00:03:49,696 --> 00:03:51,231 line:-1
Let's look at that activity.


60
00:03:52,132 --> 00:03:56,003 line:-2
At the end of the section
on Science Investigation, we see a quiz.


61
00:03:56,904 --> 00:04:01,408 line:-2
By the way, did you notice
the rich details shown for the activities?


62
00:04:02,442 --> 00:04:07,748 line:-2
We see here a thumbnail,
a summary describing the activity,


63
00:04:07,814 --> 00:04:11,018 line:-2
suggested age
and suggested completion time


64
00:04:11,952 --> 00:04:16,156 line:-2
and the types of progress
reported by the app for the activity.


65
00:04:16,890 --> 00:04:20,594 line:-1
These details help teachers to decide


66
00:04:20,661 --> 00:04:24,231 line:-2
if they want to use this activity
in an assignment or not.


67
00:04:24,898 --> 00:04:28,602 line:-2
Now let me show you
how we can add these details


68
00:04:28,669 --> 00:04:30,671 line:-1
to activities in our app.


69
00:04:30,737 --> 00:04:35,242 line:-2
Before we do that,
let's take a brief look at App Activities.


70
00:04:36,343 --> 00:04:40,380 line:-2
An app activity
is any assigned content in your app.


71
00:04:40,447 --> 00:04:45,752 line:-2
This could be a chapter in a book,
a media stream in a podcast,


72
00:04:45,819 --> 00:04:48,555 line:-1
a test, a quiz and so on.


73
00:04:49,823 --> 00:04:54,328 line:-2
They are defined by your app
and are structured hierarchically.


74
00:04:56,129 --> 00:04:58,031 line:-1
Let's look at our example.


75
00:04:58,098 --> 00:05:01,935 line:-2
We saw a hierarchy of activities
in a book titled <i>Fun with Science</i>.


76
00:05:03,036 --> 00:05:07,541 line:-2
At the top level of that hierarchy
is the book <i>Fun with Science</i>.


77
00:05:08,242 --> 00:05:12,546 line:-2
The children of the book
are the chapters in the book,


78
00:05:12,613 --> 00:05:16,884 line:-2
and their children are
the sections in the chapters and so on.


79
00:05:17,584 --> 00:05:22,589 line:-2
You may be wondering how we surface
these activities in Schoolwork.


80
00:05:22,656 --> 00:05:26,360 line:-1
We use the CLSContext class in ClassKit


81
00:05:26,426 --> 00:05:31,331 line:-2
and create an instance of CLSContext
to represent each activity.


82
00:05:31,899 --> 00:05:35,102 line:-2
ClassKit provides a root context
for your app


83
00:05:35,169 --> 00:05:37,104 line:-1
called the Main App Context.


84
00:05:37,804 --> 00:05:40,774 line:-2
This is the parent
of your activity hierarchy.


85
00:05:41,575 --> 00:05:43,243 line:-1
Get the Main App Context...


86
00:05:44,311 --> 00:05:49,016 line:-2
create a CLSContext
for the topmost activity Fun with Science


87
00:05:49,082 --> 00:05:52,286 line:-2
and add it as a child
of the Main App Context.


88
00:05:53,554 --> 00:05:56,290 line:-1
Then go down the activity hierarchy...


89
00:05:57,357 --> 00:06:02,429 line:-2
create a context for each activity
and add it to its parent's context.


90
00:06:02,496 --> 00:06:07,367 line:0
Now I'm going to use the measurements
quiz activity as an example


91
00:06:07,434 --> 00:06:11,638 line:-2
and show you how to add rich details
to that activity.


92
00:06:12,206 --> 00:06:15,409 line:-2
As we saw earlier,
there are several details here.


93
00:06:16,310 --> 00:06:18,812 line:-1
Let me walk you through, in steps,


94
00:06:18,879 --> 00:06:22,216 line:-2
and show you how to add these details
to the quiz context.


95
00:06:22,649 --> 00:06:25,185 line:-1
So, first, let me show you


96
00:06:25,252 --> 00:06:29,857 line:-2
how you can add a thumbnail
and summary to the quiz context.


97
00:06:29,923 --> 00:06:32,659 line:-1
First, create a context for the activity.


98
00:06:32,726 --> 00:06:35,495 line:-1
In this case, it is a measurements quiz.


99
00:06:35,562 --> 00:06:38,098 line:-1
Then add a summary to the context.


100
00:06:38,165 --> 00:06:40,133 line:-1
You say what the quiz is about.


101
00:06:40,801 --> 00:06:42,736 line:-1
Then add a thumbnail.


102
00:06:42,803 --> 00:06:48,375 line:-2
Remember, ClassKit limits the size
of thumbnails to 330 by 330 pixels.


103
00:06:49,176 --> 00:06:51,011 line:-1
It will downsize if needed.


104
00:06:51,745 --> 00:06:53,146 line:-1
In this example,


105
00:06:53,213 --> 00:06:55,816 line:-2
we are creating a thumbnail
from an image asset,


106
00:06:55,883 --> 00:06:58,385 line:-1
measurements_quiz.jpg.


107
00:06:58,452 --> 00:07:02,656 line:-2
Notice that we are using a function,
thumbnailFromImage,


108
00:07:02,723 --> 00:07:05,259 line:-1
to get a thumbnail from a file URL.


109
00:07:05,893 --> 00:07:07,594 line:-1
Let's take a look at this function.


110
00:07:08,862 --> 00:07:12,533 line:-2
This function shows you
how to create a thumbnail


111
00:07:12,599 --> 00:07:17,037 line:-2
from a file URL in a memory-efficient way
using CoreGraphics.


112
00:07:17,871 --> 00:07:20,374 line:-2
First create an image source
from the file...


113
00:07:21,642 --> 00:07:24,645 line:-2
then set some options
for creating a thumbnail.


114
00:07:25,445 --> 00:07:28,549 line:-2
We are choosing
to always create a thumbnail from an image


115
00:07:28,615 --> 00:07:31,151 line:-1
with a maximum size of 330 pixels.


116
00:07:32,519 --> 00:07:35,455 line:-1
Then create the thumbnail and return it.


117
00:07:35,522 --> 00:07:38,358 line:-2
This is just one way
of creating a thumbnail.


118
00:07:39,226 --> 00:07:43,263 line:-2
If UIImage
is more readily available to you,


119
00:07:43,330 --> 00:07:47,901 line:-2
you can get its CGImage property
and use it as thumbnail.


120
00:07:47,968 --> 00:07:50,938 line:-1
But keep in mind, doing it that way


121
00:07:51,004 --> 00:07:54,141 line:-2
may significantly increase the memory
used by your app.


122
00:07:54,441 --> 00:07:55,676 line:-1
Okay.


123
00:07:55,742 --> 00:07:58,745 line:-2
Let's add some more properties
to the quiz context.


124
00:07:59,446 --> 00:08:03,617 line:-2
Let's add suggested age
and suggested completion time.


125
00:08:04,418 --> 00:08:07,154 line:-1
It is very simple to add these properties.


126
00:08:07,221 --> 00:08:09,189 line:-1
They are both expressed as ranges.


127
00:08:09,890 --> 00:08:12,659 line:-2
Let's set the suggested age
as nine to 11 years


128
00:08:13,493 --> 00:08:17,397 line:-2
and the suggested completion time
as 15 to 20 minutes.


129
00:08:17,464 --> 00:08:23,070 line:-2
Next we will add the type of progress data
reported for the quiz activity.


130
00:08:23,971 --> 00:08:29,042 line:-2
In this example, we see four kinds
of progress data being reported--


131
00:08:29,877 --> 00:08:31,278 line:-1
percentage of progress,


132
00:08:32,179 --> 00:08:35,115 line:-2
correct/incorrect score
for each question...


133
00:08:36,250 --> 00:08:40,053 line:-2
the number of hints used by the student
when taking the quiz


134
00:08:40,587 --> 00:08:42,322 line:-1
and an overall score.


135
00:08:42,923 --> 00:08:48,061 line:-2
I'm going to show you how to add
a couple of these to the quiz context.


136
00:08:48,128 --> 00:08:53,166 line:-2
First, create a capability
for reporting progress percent.


137
00:08:54,168 --> 00:08:59,139 line:-2
The CLSProgressReportingCapability
class has two properties--


138
00:08:59,206 --> 00:09:00,774 line:-1
"kind" and "details."


139
00:09:01,975 --> 00:09:04,378 line:-1
You set the kind to percent kind


140
00:09:05,279 --> 00:09:09,149 line:-1
and set the details to a descriptive text.


141
00:09:09,216 --> 00:09:13,820 line:-2
Next create a capability
to report the number of hints used


142
00:09:13,887 --> 00:09:15,956 line:-1
when taking the quiz.


143
00:09:16,023 --> 00:09:20,894 line:-2
You can see how simple it is
to create each reporting capability.


144
00:09:20,961 --> 00:09:24,631 line:-2
Finally, we add these capabilities
to the quiz context.


145
00:09:24,698 --> 00:09:29,369 line:-2
In this example, I have set
the capability details in English,


146
00:09:29,436 --> 00:09:33,207 line:-2
but these text strings
are visible to users,


147
00:09:33,273 --> 00:09:38,612 line:-2
so please localize them at run time
based on the current locale.


148
00:09:38,679 --> 00:09:42,249 line:-2
Remember, this is similar
to what you have been doing


149
00:09:42,316 --> 00:09:45,619 line:-2
when setting the user visible title
of the activity.


150
00:09:45,686 --> 00:09:47,087 line:-1
Okay.


151
00:09:47,154 --> 00:09:51,091 line:-2
Now you know how to add the new properties
to your app activities.


152
00:09:51,992 --> 00:09:55,095 line:-2
This is how
you make your app activities rich.


153
00:09:55,729 --> 00:10:01,535 line:-2
Now I would like to go over
some recommended best practices


154
00:10:01,602 --> 00:10:05,105 line:-2
for creating and managing context
for your app.


155
00:10:06,139 --> 00:10:10,010 line:-2
The newly introduced properties
on CLSContext


156
00:10:10,077 --> 00:10:13,514 line:-2
adds valuable metadata
that informs the teacher


157
00:10:13,580 --> 00:10:16,350 line:-2
about the rich set of activities
in your app.


158
00:10:17,484 --> 00:10:19,620 line:-1
So, when you create a context,


159
00:10:20,420 --> 00:10:26,126 line:-2
please create a full-featured context
with as much metadata as you can provide.


160
00:10:27,594 --> 00:10:31,965 line:-2
If you find context saved
by an older version of your app,


161
00:10:32,032 --> 00:10:33,967 line:-1
update any missing properties.


162
00:10:35,202 --> 00:10:38,405 line:-2
If your app no longer supports
an older context,


163
00:10:38,472 --> 00:10:40,240 line:-1
then delete the context


164
00:10:40,307 --> 00:10:44,378 line:-2
so it does not show in the list
of activities supported by your app.


165
00:10:46,246 --> 00:10:51,418 line:-2
If your app uses a context provider
app extension to create context,


166
00:10:52,252 --> 00:10:54,621 line:-1
please update that app extension as well.


167
00:10:55,622 --> 00:10:59,026 line:-2
I'm almost done here,
and Daniel is itching to tell you


168
00:10:59,092 --> 00:11:01,929 line:-2
all about
the brand-new ClassKit Catalog APIs.


169
00:11:02,462 --> 00:11:07,067 line:-2
However, I want to tell you
about a few more enhancements


170
00:11:07,134 --> 00:11:11,238 line:-2
we have added to CLSContext
that many of you requested.


171
00:11:12,506 --> 00:11:15,676 line:-1
Like a read-only property identifierPath.


172
00:11:16,643 --> 00:11:19,980 line:-2
This returns you the full identifierPath
of the context.


173
00:11:20,714 --> 00:11:26,420 line:-2
And a new context type "course,"
and a new context type "custom."


174
00:11:27,154 --> 00:11:30,591 line:-2
Use this
in case none of the predefined types


175
00:11:30,657 --> 00:11:32,993 line:-1
is suitable for your app's content.


176
00:11:33,060 --> 00:11:38,398 line:-2
And an optional settable property
to give a name to your custom context,


177
00:11:38,465 --> 00:11:44,171 line:-2
your new property to mark a context
as a nonassignable activity.


178
00:11:44,238 --> 00:11:47,274 line:-2
Let's see where this property
is very useful.


179
00:11:48,242 --> 00:11:52,446 line:-2
In our example,
we created context for a book.


180
00:11:52,513 --> 00:11:58,051 line:-2
You see the entire book, <i>Fun with Science</i>,
is an assignable activity


181
00:11:58,118 --> 00:12:00,554 line:-1
indicated by a plus.


182
00:12:01,121 --> 00:12:04,892 line:-2
But I don't think your teacher
would assign that entire book.


183
00:12:04,958 --> 00:12:07,461 line:-1
In fact, as a developer,


184
00:12:07,528 --> 00:12:11,164 line:-2
you did not intend to make a book
an assignable activity.


185
00:12:11,965 --> 00:12:15,102 line:-2
You were just using a CLSContext
for the book


186
00:12:15,169 --> 00:12:17,504 line:-1
as a container to hold its chapters.


187
00:12:18,705 --> 00:12:24,144 line:-2
Now, by setting the new isAssignable
property of the context to "false,"


188
00:12:24,211 --> 00:12:29,116 line:-2
you can make it clear that the book
is not an assignable activity.


189
00:12:29,850 --> 00:12:33,921 line:-2
I encourage you to review
the updated developer documentation


190
00:12:34,555 --> 00:12:37,991 line:-2
to learn about all the enhancements
we have made to ClassKit.


191
00:12:38,859 --> 00:12:41,295 line:-2
These are the latest enhancements
to ClassKit.


192
00:12:42,663 --> 00:12:44,464 line:-1
With that, let me invite Daniel


193
00:12:44,531 --> 00:12:47,267 line:-1
to introduce you to the new and exciting


194
00:12:47,334 --> 00:12:48,902 line:-1
ClassKit Catalog API.


195
00:12:49,603 --> 00:12:50,804 line:-1
Here you go, Daniel.


196
00:12:51,138 --> 00:12:52,139 line:-1
Thanks, Baskaran.


197
00:12:52,639 --> 00:12:54,708 line:-2
Today, we'd like to introduce
a new web service


198
00:12:54,775 --> 00:12:56,543 line:-1
called ClassKit Catalog API.


199
00:12:57,477 --> 00:13:01,315 line:-2
Our motivation behind this service
was to provide an even better experience


200
00:13:01,381 --> 00:13:04,051 line:-2
for our developers
who build ClassKit-enabled apps


201
00:13:04,117 --> 00:13:05,919 line:-1
and for the teachers who use them.


202
00:13:05,986 --> 00:13:08,555 line:-2
We built this to help you
with several things in mind.


203
00:13:09,122 --> 00:13:11,892 line:-2
First, we wanted to improve
your content's discoverability


204
00:13:11,959 --> 00:13:12,960 line:-1
within Schoolwork.


205
00:13:13,660 --> 00:13:16,697 line:-2
Consumers of your app should see
the rich repository of content


206
00:13:16,763 --> 00:13:18,298 line:-1
you've made available to them


207
00:13:18,365 --> 00:13:20,534 line:-2
without having to work
through each piece first.


208
00:13:21,602 --> 00:13:23,804 line:-1
Next, we wanted to give you support


209
00:13:23,871 --> 00:13:26,773 line:-2
to provide an even wider array
of ClassKit-enabled content


210
00:13:26,840 --> 00:13:27,941 line:-1
than otherwise possible,


211
00:13:28,008 --> 00:13:30,544 line:-2
using the native approach
of CLSContext creation.


212
00:13:31,745 --> 00:13:34,915 line:-2
Lastly, we wanted to decouple
the management of your content


213
00:13:34,982 --> 00:13:36,817 line:-1
from the management of your application.


214
00:13:37,718 --> 00:13:39,486 line:-1
Your content is subject to change,


215
00:13:39,553 --> 00:13:43,023 line:-2
and you should be able to make those
modifications without changing your app.


216
00:13:43,991 --> 00:13:45,392 line:-1
How do we achieve this?


217
00:13:45,993 --> 00:13:49,563 line:-2
Currently, the CLSContexts
are defined natively in your app.


218
00:13:49,630 --> 00:13:52,065 line:-2
As teachers use it,
it delegates to ClassKit


219
00:13:52,132 --> 00:13:54,234 line:-1
to generate the necessary contexts


220
00:13:54,301 --> 00:13:56,470 line:-1
that get saved on the teacher's device


221
00:13:56,537 --> 00:13:59,072 line:-2
and eventually
on the students' devices too.


222
00:14:00,440 --> 00:14:03,977 line:-2
ClassKit Catalog API prescribes
a different way to report your content.


223
00:14:05,045 --> 00:14:06,446 line:-1
To use this new service,


224
00:14:06,513 --> 00:14:09,917 line:-2
begin by translating your existing
CLSContext hierarchy


225
00:14:09,983 --> 00:14:11,451 line:-1
into a JSON structure.


226
00:14:12,419 --> 00:14:14,321 line:-1
Next, take the payload


227
00:14:14,388 --> 00:14:16,723 line:-2
and upload it
using the ClassKit Catalog API.


228
00:14:17,824 --> 00:14:20,460 line:-2
From there, using the data
that you've provided,


229
00:14:21,328 --> 00:14:23,530 line:-1
we'll handle the generation of CLSContext


230
00:14:23,597 --> 00:14:25,666 line:-1
on the teacher or students' devices


231
00:14:25,732 --> 00:14:27,601 line:-2
whenever your app
is referenced in Schoolwork.


232
00:14:28,268 --> 00:14:29,736 line:-1
Before I move on,


233
00:14:29,803 --> 00:14:32,606 line:-2
it's important to note
that ClassKit Catalog API


234
00:14:32,673 --> 00:14:36,210 line:-2
is intended for content you'd like
to display publicly in Schoolwork.


235
00:14:36,910 --> 00:14:40,147 line:-2
Private content,
such as dynamically generated


236
00:14:40,214 --> 00:14:42,716 line:-1
or user-specific CLSContexts


237
00:14:42,783 --> 00:14:46,086 line:-2
should continue to be reported
to ClassKit using the native API.


238
00:14:46,954 --> 00:14:49,356 line:-2
We have a new address
to which you can make requests:


239
00:14:50,224 --> 00:14:53,560 line:-1
api.classkit-catalog.apple.com.


240
00:14:54,595 --> 00:14:56,530 line:-1
This is suffixed with "v1"


241
00:14:56,597 --> 00:14:58,365 line:-1
in order to version our API


242
00:14:58,432 --> 00:15:01,235 line:-2
to support any changes
we may introduce in the future.


243
00:15:02,736 --> 00:15:05,839 line:-2
The API itself is comprised
of two main components,


244
00:15:06,607 --> 00:15:09,376 line:-2
one to manage contexts
and one to manage thumbnails.


245
00:15:10,711 --> 00:15:14,248 line:-2
Contexts are the fundamental unit
that describe your content


246
00:15:14,715 --> 00:15:16,416 line:-1
and that the catalog operates on.


247
00:15:17,551 --> 00:15:19,520 line:-1
You can think of them as the CLSContexts


248
00:15:19,586 --> 00:15:21,355 line:-1
that Baskaran presented earlier,


249
00:15:21,421 --> 00:15:23,590 line:-2
but with a couple of more
bells and whistles.


250
00:15:23,657 --> 00:15:25,826 line:-2
We'll take a closer look at them
a little later.


251
00:15:26,894 --> 00:15:29,363 line:-2
Thumbnails are images
you associate with your contexts.


252
00:15:29,997 --> 00:15:31,765 line:-1
In the first part of this presentation,


253
00:15:31,832 --> 00:15:34,234 line:-2
we saw how this is done natively
using ClassKit.


254
00:15:35,135 --> 00:15:38,305 line:-2
Well, with the API,
we'll use the thumbnail endpoint,


255
00:15:38,372 --> 00:15:40,174 line:-1
which we'll see later as well.


256
00:15:40,507 --> 00:15:42,543 line:-1
Today, we'll focus on the POST requests.


257
00:15:43,277 --> 00:15:45,179 line:-2
Let's begin
by looking at one for contexts.


258
00:15:46,547 --> 00:15:47,981 line:-1
Here's an example of a POST request


259
00:15:48,048 --> 00:15:50,784 line:-2
with the required fields
you'll be expected to provide.


260
00:15:51,351 --> 00:15:53,720 line:-2
First is a query parameter
labeled "environment."


261
00:15:54,321 --> 00:15:56,223 line:-1
It determines whether the changes you make


262
00:15:56,290 --> 00:15:59,760 line:-2
target a development environment
or are made live to production.


263
00:16:00,761 --> 00:16:03,197 line:-2
We'll see how to take advantage
of this a little later.


264
00:16:03,664 --> 00:16:05,933 line:-1
Next, a couple of headers are expected.


265
00:16:05,999 --> 00:16:07,835 line:-1
Content-Type and Authorization.


266
00:16:08,936 --> 00:16:11,872 line:-2
Content-Type describes
what sort of payload you'll be delivering.


267
00:16:12,472 --> 00:16:15,242 line:-2
For this endpoint,
it should be application/json.


268
00:16:16,510 --> 00:16:18,178 line:-1
Authorization describes the credential


269
00:16:18,245 --> 00:16:20,247 line:-2
with which you'll authenticate
with our service.


270
00:16:21,515 --> 00:16:23,283 line:-1
For ClassKit Catalog API,


271
00:16:23,350 --> 00:16:26,086 line:-2
we decided to adopt
the use of JSON Web Tokens.


272
00:16:26,687 --> 00:16:29,122 line:-2
This is an industry-standard approach
to authentication


273
00:16:29,189 --> 00:16:31,692 line:-2
that's used across several
of Apple's web services.


274
00:16:32,726 --> 00:16:35,829 line:-2
We'll detail how to generate these tokens
later in the presentation.


275
00:16:36,964 --> 00:16:38,065 line:-1
The body of this request


276
00:16:38,131 --> 00:16:42,436 line:-2
should contain a JSON-formatted list
of contexts to be created or updated.


277
00:16:43,303 --> 00:16:46,507 line:-2
These contexts represent
the CLSContexts in your application,


278
00:16:47,474 --> 00:16:49,543 line:-2
and in order
for your application's capabilities


279
00:16:49,610 --> 00:16:51,044 line:-1
to be properly represented,


280
00:16:51,778 --> 00:16:54,681 line:-2
the entire context tree
associated with your ClassKit-enabled app


281
00:16:54,748 --> 00:16:55,949 line:-1
will have to be reported.


282
00:16:57,017 --> 00:16:59,486 line:-1
A single context consists of two fields,


283
00:17:00,254 --> 00:17:02,055 line:-1
data and metadata.


284
00:17:02,723 --> 00:17:05,692 line:-2
Let's take a closer look
at how these two fields are constructed.


285
00:17:06,492 --> 00:17:10,531 line:-2
The data object is comprised of fields
taken directly from a CLSContext,


286
00:17:11,031 --> 00:17:14,034 line:-2
including the new fields
added to the latest update of ClassKit,


287
00:17:14,101 --> 00:17:15,502 line:-1
which Baskaran mentioned earlier.


288
00:17:16,537 --> 00:17:18,038 line:-1
When you create this data object,


289
00:17:18,105 --> 00:17:20,406 line:-2
use the values of the fields
from the CLSContext


290
00:17:20,473 --> 00:17:22,309 line:-1
that your app already creates.


291
00:17:23,143 --> 00:17:26,346 line:-2
Make sure that they match the contexts
your app natively creates,


292
00:17:26,413 --> 00:17:29,116 line:-2
so that your content can be
properly represented in the catalog.


293
00:17:30,217 --> 00:17:32,085 line:-2
The metadata field
is meant to capture info


294
00:17:32,152 --> 00:17:34,121 line:-1
that's not represented in CLSContext.


295
00:17:35,088 --> 00:17:36,390 line:-1
It contains three fields.


296
00:17:37,324 --> 00:17:40,761 line:-2
Locale, which is meant to distinguish
your content between different languages


297
00:17:40,827 --> 00:17:42,296 line:-1
and regions of your application,


298
00:17:43,230 --> 00:17:45,899 line:-2
minimumBundleVersion,
which acts as a hit for the client


299
00:17:45,966 --> 00:17:49,436 line:-2
to determine whether this context
is supported by a version of your app,


300
00:17:50,170 --> 00:17:53,040 line:-2
and keywords,
which represent tags that you believe


301
00:17:53,106 --> 00:17:54,708 line:-1
accurately describes your content.


302
00:17:55,475 --> 00:17:57,444 line:-1
Metadata is a sparse object,


303
00:17:57,511 --> 00:17:59,913 line:-2
but we expect it to grow
along with the API.


304
00:18:01,715 --> 00:18:04,184 line:-2
That was an example
of a POST request for contexts.


305
00:18:05,319 --> 00:18:06,820 line:-1
More details on this endpoint,


306
00:18:06,887 --> 00:18:09,223 line:-2
along with the GET and DELETE
methods for contexts,


307
00:18:09,289 --> 00:18:11,592 line:-2
will be available
in Apple Developer documentation.


308
00:18:12,759 --> 00:18:14,761 line:-2
For now, let me highlight
a couple of guidelines


309
00:18:14,828 --> 00:18:16,463 line:-1
on the context endpoint.


310
00:18:16,530 --> 00:18:19,867 line:-2
First, there's a limit
of 200 contexts per POST request.


311
00:18:20,534 --> 00:18:23,570 line:-2
If you have more, split them up
across multiple requests.


312
00:18:24,671 --> 00:18:27,007 line:-2
If you do, make sure
that the children contexts


313
00:18:27,074 --> 00:18:29,009 line:-1
are submitted after their ancestors.


314
00:18:29,676 --> 00:18:33,113 line:-2
Aside from your main app context,
child contexts are considered invalid


315
00:18:33,180 --> 00:18:35,182 line:-1
if their parent does not exist.


316
00:18:35,249 --> 00:18:38,252 line:-2
Lastly, should you decide
to delete a context,


317
00:18:38,318 --> 00:18:40,821 line:-2
be aware that any of its descendants
will be deleted as well.


318
00:18:41,588 --> 00:18:44,725 line:-2
This is done to ensure the integrity
of your app's context hierarchy.


319
00:18:45,492 --> 00:18:46,560 line:-1
Moving on,


320
00:18:46,627 --> 00:18:49,162 line:-2
let's take a look at the POST method
to upload a thumbnail.


321
00:18:50,230 --> 00:18:53,267 line:-2
Here's an example of one
with the fields expected in a request.


322
00:18:54,501 --> 00:18:56,069 line:-1
It begins with a thumbnail reference,


323
00:18:56,136 --> 00:18:59,439 line:-2
which is used to associate the thumbnail
to one or more contexts.


324
00:19:00,741 --> 00:19:02,743 line:-2
This is done by matching
against the thumbnail field


325
00:19:02,809 --> 00:19:04,011 line:-1
on a context object.


326
00:19:05,012 --> 00:19:08,282 line:-2
The rest of this request
should be similar to the first one we saw.


327
00:19:08,916 --> 00:19:11,485 line:-2
For instance,
we must also target an environment


328
00:19:11,552 --> 00:19:13,253 line:-1
using the "environment" query parameter...


329
00:19:14,354 --> 00:19:16,823 line:-2
provide credentials
using the Authorization header,


330
00:19:17,524 --> 00:19:20,427 line:-2
as well as a Content-Type
to describe the image being uploaded.


331
00:19:21,762 --> 00:19:25,032 line:-2
Unlike our previous POST request,
we have the addition of a Content-Length


332
00:19:25,098 --> 00:19:28,268 line:-2
to describe the size of the thumbnail
to be uploaded in bytes


333
00:19:28,335 --> 00:19:31,338 line:-2
and a body that consists of the bytes
representing the image.


334
00:19:32,973 --> 00:19:34,775 line:-1
During the Handout creation flow,


335
00:19:34,842 --> 00:19:37,010 line:-2
this image is used
to represent an Activity.


336
00:19:37,711 --> 00:19:41,148 line:-2
So keep that in mind as you decide
how best to represent your content.


337
00:19:42,049 --> 00:19:44,418 line:-2
That was a look at the POST endpoint
for a thumbnail.


338
00:19:45,085 --> 00:19:48,856 line:-2
The corresponding GET and DELETE endpoints
are structured similarly,


339
00:19:49,456 --> 00:19:52,426 line:-2
and more details can be found
in Apple Developer documentation.


340
00:19:52,993 --> 00:19:55,362 line:-2
Before I move on,
let me highlight some guidelines


341
00:19:55,429 --> 00:19:57,064 line:-1
for the thumbnail endpoints.


342
00:19:57,598 --> 00:20:00,901 line:-2
First, use PNG or JPEG
to represent your thumbnails.


343
00:20:02,135 --> 00:20:06,607 line:-2
Next, format your thumbnails
to be 330 by 330 pixels.


344
00:20:07,274 --> 00:20:09,142 line:-2
That's the resolution
we'll use for Schoolwork.


345
00:20:10,377 --> 00:20:13,514 line:-2
Lastly, upload your contexts first,
followed by your thumbnails.


346
00:20:14,448 --> 00:20:16,283 line:-2
This is to prevent thumbnails
to be orphaned.


347
00:20:16,884 --> 00:20:18,485 line:-1
Upload requests will be rejected


348
00:20:18,552 --> 00:20:20,554 line:-2
if the thumbnail isn't referenced
by any context.


349
00:20:21,588 --> 00:20:23,223 line:-1
This also means if the last context


350
00:20:23,290 --> 00:20:24,992 line:-2
to reference a thumbnail
were to be deleted,


351
00:20:25,626 --> 00:20:27,294 line:-1
then the thumbnail would be deleted too.


352
00:20:28,128 --> 00:20:29,396 line:-1
Before I move on,


353
00:20:29,463 --> 00:20:32,132 line:-2
let's talk about how the API
would respond when something goes wrong.


354
00:20:33,000 --> 00:20:35,135 line:-2
Here is an example of a response
you might get back


355
00:20:35,202 --> 00:20:37,671 line:-2
from trying to POST a thumbnail
that's reporting an error.


356
00:20:38,472 --> 00:20:41,642 line:-1
Aside from an expected HTTP status code,


357
00:20:41,708 --> 00:20:43,410 line:-1
a response reporting an error


358
00:20:43,477 --> 00:20:45,379 line:-1
should also contain a JSON body


359
00:20:45,445 --> 00:20:47,481 line:-1
to provide more details on the problem.


360
00:20:48,382 --> 00:20:50,284 line:-1
The ID field provides a unique identifier


361
00:20:50,350 --> 00:20:52,719 line:-2
which we can use to identify
and track this error.


362
00:20:53,620 --> 00:20:56,857 line:-2
We can tell from the code field that
there's a problem with authentication...


363
00:20:58,192 --> 00:21:00,294 line:-1
and upon inspecting the message field,


364
00:21:00,360 --> 00:21:03,430 line:-2
we find a human-readable explanation
of the problem,


365
00:21:03,497 --> 00:21:05,599 line:-1
as well as the way to resolve it.


366
00:21:05,666 --> 00:21:08,368 line:-2
A full list of error codes
and their respective messages


367
00:21:08,435 --> 00:21:10,804 line:-2
will be available
in Apple Developer documentation.


368
00:21:11,538 --> 00:21:14,575 line:-2
As for this authentication error,
how do we get past this?


369
00:21:15,976 --> 00:21:18,579 line:-2
As promised,
let's talk about authentication.


370
00:21:19,012 --> 00:21:22,382 line:-2
We mentioned earlier that authentication
in ClassKit Catalog API


371
00:21:22,449 --> 00:21:26,420 line:-2
is handled with the use
of JSON Web Tokens, or JWT.


372
00:21:27,287 --> 00:21:28,689 line:-1
This is an industry standard


373
00:21:28,755 --> 00:21:31,391 line:-2
that's used across several
of Apple's web services.


374
00:21:32,593 --> 00:21:35,562 line:-2
To begin,
log into the Apple Developer portal


375
00:21:35,629 --> 00:21:38,332 line:-2
and provision a ClassKit Catalog API key
for your team.


376
00:21:40,067 --> 00:21:42,669 line:-2
This private key will be used
to create the JWT


377
00:21:42,736 --> 00:21:44,938 line:-2
used to authenticate
with ClassKit Catalog API,


378
00:21:45,005 --> 00:21:47,908 line:-2
and must be provided
with all the requests you make


379
00:21:47,975 --> 00:21:50,377 line:-2
as part of the Authorization header
we mentioned earlier.


380
00:21:51,745 --> 00:21:54,314 line:-1
The JWT consists of three parts,


381
00:21:54,381 --> 00:21:57,417 line:-1
a header, a payload and a signature.


382
00:21:58,552 --> 00:22:02,256 line:-2
To form the header and payload,
provide the key ID and team ID


383
00:22:02,322 --> 00:22:04,124 line:-1
found in the Apple Developer portal.


384
00:22:05,325 --> 00:22:07,728 line:-2
This will associate the credential
to your developer team.


385
00:22:08,695 --> 00:22:12,299 line:-2
Additionally, generate a UUID
to identify this token


386
00:22:12,866 --> 00:22:14,501 line:-1
and two UNIX time stamps,


387
00:22:15,235 --> 00:22:17,504 line:-1
one to represent when the token was issued


388
00:22:17,571 --> 00:22:20,040 line:-2
and one to represent
when the token expires.


389
00:22:20,841 --> 00:22:22,643 line:-1
What we see here are the raw fields.


390
00:22:23,544 --> 00:22:25,145 line:-1
To form the eventual token,


391
00:22:25,212 --> 00:22:27,781 line:-2
these fields will have to be
Base64 encoded.


392
00:22:28,649 --> 00:22:31,552 line:-2
To complete the JWT,
a signature is required,


393
00:22:31,618 --> 00:22:34,888 line:-2
which is generated using
encoded header and encoded payload.


394
00:22:35,722 --> 00:22:39,760 line:-2
The algorithm to be used to sign this
is ECDSASHA256.


395
00:22:40,561 --> 00:22:43,397 line:-2
There are plenty of public libraries
across programming languages


396
00:22:43,463 --> 00:22:44,865 line:-1
that should make it easy to do so.


397
00:22:45,999 --> 00:22:49,136 line:-2
Altogether, the fully formed JWT
will look like this.


398
00:22:50,370 --> 00:22:53,040 line:-2
This token must be included
in the Authorization header


399
00:22:53,106 --> 00:22:55,409 line:-1
and prefixed with the word "Bearer."


400
00:22:56,944 --> 00:22:58,478 line:-1
Now that we have all the pieces,


401
00:22:58,545 --> 00:23:00,314 line:-2
how would you test the content
you've uploaded


402
00:23:00,380 --> 00:23:01,882 line:-1
before it's shown to your users?


403
00:23:02,649 --> 00:23:04,918 line:-2
We have two environments
to which you can push your content,


404
00:23:04,985 --> 00:23:06,687 line:-1
development and production.


405
00:23:07,821 --> 00:23:10,924 line:-2
To test your changes,
use the "environment" query parameter


406
00:23:10,991 --> 00:23:12,860 line:-1
to upload your content to development,


407
00:23:12,926 --> 00:23:14,428 line:-2
like we showed earlier
in the presentation.


408
00:23:15,395 --> 00:23:17,297 line:-1
Once you've done that, open Settings


409
00:23:17,364 --> 00:23:19,533 line:-2
and navigate to the Developer tab
on your device


410
00:23:19,600 --> 00:23:21,468 line:-1
that's running a development build of iOS.


411
00:23:22,436 --> 00:23:24,738 line:-1
Tap on ClassKit API to see more options.


412
00:23:25,706 --> 00:23:29,176 line:-2
Under ClassKit Catalog Environment,
select the Development environment.


413
00:23:31,178 --> 00:23:33,981 line:-2
Once it's set, ClassKit will change
where it pulls data from


414
00:23:34,047 --> 00:23:36,450 line:-2
and display the appropriate content
in Schoolwork


415
00:23:36,517 --> 00:23:38,519 line:-1
based on the environment you have chosen.


416
00:23:39,653 --> 00:23:42,356 line:-2
Take note that content
pushed to development


417
00:23:42,422 --> 00:23:44,892 line:-2
will be available
to all ClassKit Apple developers


418
00:23:44,958 --> 00:23:47,294 line:-2
who are also using
the Development environment.


419
00:23:48,529 --> 00:23:50,764 line:-2
To wrap up, I'd like to highlight
some best practices


420
00:23:50,831 --> 00:23:52,766 line:-1
to keep in mind while using the API.


421
00:23:53,767 --> 00:23:55,302 line:-1
First and most importantly,


422
00:23:55,903 --> 00:23:58,906 line:-2
as you define new content
or remove old content,


423
00:23:58,972 --> 00:24:01,375 line:-1
report this using ClassKit Catalog API.


424
00:24:02,109 --> 00:24:04,378 line:-2
This ensures that your app
and its Activities


425
00:24:04,444 --> 00:24:06,280 line:-1
are properly represented in Schoolwork.


426
00:24:07,147 --> 00:24:11,251 line:-2
Next, take advantage of locale support
provided for contexts.


427
00:24:12,352 --> 00:24:15,355 line:-2
Doing so helps your app reach
the widest audience possible.


428
00:24:16,657 --> 00:24:18,859 line:-2
Lastly, you'll want to provide
as much detail as you can


429
00:24:18,926 --> 00:24:20,093 line:-1
in the contexts you report


430
00:24:20,160 --> 00:24:21,929 line:-1
and have thumbnails associated with them.


431
00:24:22,496 --> 00:24:24,965 line:-2
This will provide more detail
to users in Schoolwork


432
00:24:25,032 --> 00:24:28,735 line:-2
as well as a more compelling reason
for them to assign content from your app.


433
00:24:29,369 --> 00:24:31,271 line:-1
That's all for ClassKit Catalog API.


434
00:24:31,805 --> 00:24:34,441 line:-2
It will be available
for ClassKit developers this summer.


435
00:24:35,375 --> 00:24:38,178 line:-2
This also concludes our presentation
of "What's New in ClassKit."


436
00:24:38,245 --> 00:24:39,279 line:-1
Thanks.

