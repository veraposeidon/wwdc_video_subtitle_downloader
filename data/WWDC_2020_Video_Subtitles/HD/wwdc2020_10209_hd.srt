1
00:00:03,770 --> 00:00:07,007 line:-1
[Presenter] Hello and welcome to WWDC.


2
00:00:10,677 --> 00:00:15,215 line:0
Hi, my name is Lawrence and I work on
NFC software here at Apple.


3
00:00:16,149 --> 00:00:19,686 line:-2
Today we will go over the changes
in our existing APIs.


4
00:00:20,153 --> 00:00:23,924 line:-2
These changes follow some of the new
published Swift guidelines.


5
00:00:24,858 --> 00:00:30,063 line:-2
We have also expanded our APIs
for the ISO15693 tag


6
00:00:30,130 --> 00:00:33,100 line:-1
used in NFCTagReaderSession.


7
00:00:33,166 --> 00:00:37,571 line:-2
First, let's start with an overview
of Core NFC.


8
00:00:37,971 --> 00:00:43,076 line:-2
You may recall our creative salmon
from our last year WWDC presentation.


9
00:00:44,111 --> 00:00:45,646 line:-1
By the way, his name is Kevin.


10
00:00:47,014 --> 00:00:50,384 line:-2
Today I have brought Kevin with me
and here is the coupon tag.


11
00:00:53,687 --> 00:00:57,858 line:-2
Core NFC allows your app to read
this NFC tag using an iPhone.


12
00:00:59,993 --> 00:01:00,994 line:-1
[phone beeps]


13
00:01:06,166 --> 00:01:12,005 line:-2
NFC is also used in other places,
such as on parking meters, scooter rental,


14
00:01:12,606 --> 00:01:17,644 line:-2
electric car charging station,
ordering menu in restaurant, et cetera.


15
00:01:17,711 --> 00:01:24,318 line:-2
Core NFC allows an app to read an NFC tag
in a session lasting up to 60 seconds.


16
00:01:24,718 --> 00:01:27,955 line:-2
This has been supported on iPhones
since the iPhone 7.


17
00:01:28,021 --> 00:01:32,392 line:-2
Beginning on the iPhone XS,
tags can also be read in the background


18
00:01:32,459 --> 00:01:37,998 line:-2
while the screen is on, if the NFC forum
NDEF message contains a universal link.


19
00:01:38,365 --> 00:01:42,536 line:-2
Once the user has tapped
on the notification banner shown on screen


20
00:01:43,303 --> 00:01:46,773 line:-2
that NDEF message will be sent
to your application


21
00:01:46,840 --> 00:01:53,480 line:-2
as an NSUserActivity via
UIApplicationDelegate restorationHandler.


22
00:01:53,881 --> 00:01:59,152 line:-2
Texts may contain a NFC forum NDEF message
or other proprietary data set.


23
00:02:00,921 --> 00:02:07,027 line:-2
Core NFC supports NDEF reading and writing
as well as other native tag protocols.


24
00:02:08,862 --> 00:02:13,500 line:-2
The easiest path for tag access is to use
the NFCNDEFReaderSession.


25
00:02:14,468 --> 00:02:20,507 line:-2
Core NFC supports NDEF reading and writing
as well as other native tag protocols.


26
00:02:22,376 --> 00:02:27,147 line:-2
The easiest path for tag access is to use
the NFCNDEFReaderSession.


27
00:02:27,781 --> 00:02:34,021 line:-2
But Core NFC also supports raw tag
communication via ISO7816,


28
00:02:34,555 --> 00:02:38,926 line:-1
FeliCa, MIFARE and ISO15693.


29
00:02:39,359 --> 00:02:43,630 line:-2
Next, let's talk about some changes
to the Swift syntax


30
00:02:43,697 --> 00:02:47,234 line:-2
to make it easier to understand
your Core NFC code.


31
00:02:48,135 --> 00:02:53,607 line:-2
Core NFC now adopts the use
of the Result enum in our tag APIs,


32
00:02:54,474 --> 00:02:58,345 line:-2
specifically how parameters are returned
in our completion handler.


33
00:02:58,712 --> 00:03:03,483 line:-2
Let's look at the ISO7816-tag-send-command
as an example.


34
00:03:03,917 --> 00:03:09,890 line:-2
Before iOS 14, the method signature
accepts a closure with four arguments


35
00:03:10,424 --> 00:03:12,059 line:-1
as the completion handler.


36
00:03:12,125 --> 00:03:15,262 line:-2
Your application will need to check
the optional error object


37
00:03:15,329 --> 00:03:17,998 line:-1
to determine if an error occurs.


38
00:03:18,298 --> 00:03:20,000 line:-1
If the operation succeeds,


39
00:03:20,067 --> 00:03:23,670 line:-2
you may then parse the rest of arguments
to collect the results.


40
00:03:24,071 --> 00:03:28,575 line:-2
The new signature in iOS 14 returns
a Result enum


41
00:03:28,642 --> 00:03:35,115 line:-2
of either a NFCISO7816-Response-APDU
object on success,


42
00:03:35,182 --> 00:03:39,586 line:-2
which is the result of reading the tag,
or an error object on a failure.


43
00:03:40,254 --> 00:03:44,291 line:-2
The Result enum can be easily handled
using a switch statement as shown.


44
00:03:45,158 --> 00:03:48,161 line:-1
Now let me show you how it looks in Xcode.


45
00:03:49,763 --> 00:03:55,002 line:-2
I've opened the NFCFishTag sample project
from WWDC 2019.


46
00:03:55,068 --> 00:03:57,671 line:-1
Here, in CouponViewController,


47
00:03:57,738 --> 00:04:00,507 line:-2
the write function is shown
in its existing form.


48
00:04:01,108 --> 00:04:06,213 line:-2
Let's replace the send-MIFARE-command
using its new Result signature.


49
00:04:08,081 --> 00:04:09,883 line:-1
Here, in the new code,


50
00:04:09,950 --> 00:04:14,021 line:-2
the data object is handled in this section
of a switch statement.


51
00:04:14,755 --> 00:04:16,857 line:-1
An error is handled over here.


52
00:04:19,560 --> 00:04:22,963 line:-2
We have also made a few changes
to the existing enum values


53
00:04:23,030 --> 00:04:24,364 line:-1
to improve readability.


54
00:04:24,698 --> 00:04:25,732 line:-1
For example,


55
00:04:25,799 --> 00:04:31,972 line:-2
the ResolveFlag enum has been changed
to refer specifically to ISO15693.


56
00:04:32,039 --> 00:04:35,075 line:-2
Some other new enums
have been added as well.


57
00:04:35,142 --> 00:04:37,911 line:-2
Please refer to the documentation
for more details.


58
00:04:37,978 --> 00:04:41,081 line:-1
Now we will talk about new capabilities


59
00:04:41,148 --> 00:04:47,454 line:-2
we've added
to the NFC-ISO15693 tag protocol.


60
00:04:47,888 --> 00:04:52,993 line:-2
We have added the enhancement defined
by the ISO15693 specification


61
00:04:53,060 --> 00:04:55,596 line:-1
third edition 2019.


62
00:04:55,662 --> 00:04:57,297 line:-1
These functions are useful for tags


63
00:04:57,364 --> 00:05:01,101 line:-2
with larger memory sizes
and security operations.


64
00:05:01,168 --> 00:05:04,004 line:-2
We have also included
a new generic send command


65
00:05:04,071 --> 00:05:07,741 line:-2
if you would like to send arbitrary
data packets for your application.


66
00:05:08,275 --> 00:05:11,512 line:-2
Here is a complete list
of the enhancement function signatures


67
00:05:11,578 --> 00:05:15,682 line:-1
under the NFC-ISO15693Tag protocol.


68
00:05:16,550 --> 00:05:19,253 line:-1
We now support the following operations:


69
00:05:19,319 --> 00:05:23,023 line:-2
fast reading multiple blocks,
extended write multiple blocks,


70
00:05:23,891 --> 00:05:29,563 line:0
authenticate, key update,
challenge, read buffer,


71
00:05:29,630 --> 00:05:32,232 line:-2
extended get multiple blocks
security status,


72
00:05:33,033 --> 00:05:36,970 line:-2
extended fast read multiple blocks
and send request.


73
00:05:38,005 --> 00:05:40,574 line:-1
That's what new in Core NFC this year.


74
00:05:41,341 --> 00:05:43,777 line:-2
We look forward to seeing
what you can make with it.

