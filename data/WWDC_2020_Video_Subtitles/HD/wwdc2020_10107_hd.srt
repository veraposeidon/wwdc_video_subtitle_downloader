1
00:00:03,937 --> 00:00:07,274 line:-1
Hello and welcome to WWDC.


2
00:00:08,909 --> 00:00:12,513 line:0
Hi. I'm Jenny, and I'm an engineer
on the Pencil and Paper team.


3
00:00:12,579 --> 00:00:15,082 line:0
Welcome to "What's New in PencilKit."


4
00:00:15,148 --> 00:00:18,886 line:-2
In iOS 13, we introduced PencilKit,
a new framework


5
00:00:18,952 --> 00:00:23,557 line:-2
for easily adding a low-latency
expressive drawing experience to your app.


6
00:00:24,224 --> 00:00:26,760 line:-1
In iOS 14, we've added some new features


7
00:00:26,827 --> 00:00:29,129 line:-2
to the out-of-the-box
PencilKit experience.


8
00:00:29,696 --> 00:00:31,899 line:-2
Next, we'll go over
some of the changes we've made


9
00:00:31,965 --> 00:00:35,369 line:-2
to the finger versus pencil
drawing policy across the system.


10
00:00:36,036 --> 00:00:38,839 line:-2
Finally, we'll cover some API changes
that we've made,


11
00:00:38,906 --> 00:00:42,910 line:-2
in addition to a sneak peek at some
of the new APIs that we're exposing


12
00:00:42,976 --> 00:00:47,814 line:-2
that will really expand the possibilities
of what you can do with PencilKit.


13
00:00:48,515 --> 00:00:51,451 line:0
In iOS 13,
we showed you how you can adopt PencilKit


14
00:00:51,518 --> 00:00:55,088 line:0
with only a few lines of code
with PKCanvasView.


15
00:00:55,155 --> 00:00:57,457 line:0
It was great to see how you adopted it.


16
00:00:57,524 --> 00:00:59,326 line:0
If you haven't adopted PencilKit yet,


17
00:00:59,393 --> 00:01:03,063 line:0
check out our talk from 2019
to see just how easy it is.


18
00:01:03,931 --> 00:01:06,300 line:-1
The Apple Pencil has so much potential,


19
00:01:06,366 --> 00:01:10,904 line:-2
and it can really unlock the capabilities
of productivity and the iPad.


20
00:01:10,971 --> 00:01:12,539 line:-1
And so, we can't wait to show you


21
00:01:12,606 --> 00:01:16,677 line:-2
some of the new enhancements that
we've added to the PencilKit experience,


22
00:01:17,044 --> 00:01:20,147 line:-2
and the best part is
that they require zero adoption.


23
00:01:21,548 --> 00:01:23,517 line:-1
PencilKit documents have gotten smarter


24
00:01:23,584 --> 00:01:26,854 line:-2
as we infuse intelligence
across handwritten notes.


25
00:01:27,521 --> 00:01:29,556 line:-1
We've provided a rich-selection experience


26
00:01:29,623 --> 00:01:32,059 line:-2
that mirrors the way
that you select type text.


27
00:01:32,125 --> 00:01:36,530 line:-2
So you can double-tap for a word,
double-tap again to select a line,


28
00:01:36,597 --> 00:01:39,700 line:-2
or even use the grab handles
to expand your selection.


29
00:01:40,634 --> 00:01:45,005 line:-2
We've improvised some enhanced gestures,
like a velocity-sensitive tap-and-pan


30
00:01:45,072 --> 00:01:47,508 line:-2
so that you can make
noncontiguous selections


31
00:01:47,574 --> 00:01:49,977 line:-1
by brushing over specific strokes.


32
00:01:51,712 --> 00:01:53,247 line:-1
We've also introduced an easy way


33
00:01:53,313 --> 00:01:56,316 line:-2
to insert space
between your handwritten content.


34
00:01:56,917 --> 00:02:00,420 line:-2
Have you ever written stuff and realized
you've forgotten something right in between?


35
00:02:00,487 --> 00:02:04,491 line:-2
Instead of having to write super tiny
and squeeze additions in the margins,


36
00:02:04,558 --> 00:02:09,562 line:-2
you can just tap on the white space,
tap "Insert Space" from the callout bar,


37
00:02:09,630 --> 00:02:12,566 line:-2
use the grab handle
to adjust the amount of space...


38
00:02:13,667 --> 00:02:16,403 line:-2
and then easily add the new content
in between.


39
00:02:23,310 --> 00:02:26,713 line:-2
We also adopted the new UIKit system
standard color picker,


40
00:02:26,780 --> 00:02:30,250 line:-2
which features rich new ways
to choose more colors for your drawings.


41
00:02:30,317 --> 00:02:34,788 line:-2
You'll have a rainbow of color options
using the spectrum or sliders,


42
00:02:34,855 --> 00:02:37,224 line:-2
be able to save your custom colors
for later,


43
00:02:37,291 --> 00:02:40,093 line:-2
or even use the eye dropper
to sample colors.


44
00:02:40,460 --> 00:02:42,529 line:-1
For existing PencilKit clients,


45
00:02:42,596 --> 00:02:44,965 line:-2
there's nothing
that you'll need to add to your app.


46
00:02:45,032 --> 00:02:46,466 line:-1
You'll get it for free.


47
00:02:46,533 --> 00:02:49,102 line:0
For more information
about how to easily adopt this,


48
00:02:49,169 --> 00:02:50,671 line:0
check out the UIKit talk,


49
00:02:50,737 --> 00:02:53,941 line:0
"Build With iOS Pickers, Menus
and Actions."


50
00:02:54,007 --> 00:02:59,179 line:-2
We've also made some great
latency optimizations for third parties.


51
00:02:59,246 --> 00:03:03,750 line:-2
In iOS 13, we recommended techniques
to avoid impacting latency,


52
00:03:03,817 --> 00:03:07,387 line:-2
such as avoiding any visual effect views
or blur effects.


53
00:03:07,721 --> 00:03:10,624 line:-1
In iOS 14, that's no longer the case,


54
00:03:10,691 --> 00:03:13,093 line:-2
and you can use
different visual effect view materials


55
00:03:13,160 --> 00:03:14,828 line:-1
and bars to your heart's content.


56
00:03:16,163 --> 00:03:19,933 line:0
In addition, we've also added
PKCanvasView support for Catalyst.


57
00:03:20,567 --> 00:03:22,436 line:0
The tool picker is not supported,


58
00:03:22,503 --> 00:03:27,274 line:0
but you can easily set inks on the canvas
through the PKCanvasView APIs.


59
00:03:27,841 --> 00:03:31,311 line:-2
And, just as a reminder,
for smart selection, insert space,


60
00:03:31,378 --> 00:03:34,982 line:-2
and the new color picker,
no extra adoption is required.


61
00:03:35,349 --> 00:03:38,352 line:-2
And that's why we made it
a system-wide experience


62
00:03:38,418 --> 00:03:41,321 line:-2
so we could keep enhancing it
year after year,


63
00:03:41,388 --> 00:03:45,058 line:-2
providing a consistent enhanced experience
across the system.


64
00:03:45,526 --> 00:03:47,261 line:-1
We've also done some work to distinguish


65
00:03:47,327 --> 00:03:49,897 line:-2
the finger versus Pencil
drawing experience


66
00:03:49,963 --> 00:03:52,299 line:-2
and how it can be more unified
across the system.


67
00:03:52,900 --> 00:03:55,802 line:-2
PencilKit is supported
on both phones and iPads.


68
00:03:56,370 --> 00:03:59,540 line:-2
Drawing with both finger
and Apple Pencil is allowed,


69
00:03:59,606 --> 00:04:03,010 line:-2
and you have to remember
that not everyone has a Pencil.


70
00:04:03,977 --> 00:04:07,447 line:-2
In iOS 13, we introduced
the allowsFingerDrawing property,


71
00:04:07,514 --> 00:04:08,949 line:-1
which meant that if you had it on,


72
00:04:09,016 --> 00:04:12,419 line:-2
one finger would draw,
while two fingers would scroll.


73
00:04:14,054 --> 00:04:16,723 line:-1
In iOS 14, we have a new global setting


74
00:04:16,790 --> 00:04:20,160 line:-2
that can be set from
the new Apple Pencil menu in settings


75
00:04:20,226 --> 00:04:22,930 line:-1
via the Prefer Only Pencil Drawing toggle.


76
00:04:23,597 --> 00:04:26,300 line:-2
This is for all third parties
who use Pencil,


77
00:04:26,366 --> 00:04:28,268 line:-1
both for apps who adopted PencilKit,


78
00:04:28,335 --> 00:04:30,971 line:-2
and for those
with their own drawing engine.


79
00:04:32,139 --> 00:04:36,410 line:-2
This setting can be accessed
via UIPencilInteraction in UIKit.


80
00:04:36,476 --> 00:04:39,079 line:-2
Non-PencilKit clients
that have their own drawing engine


81
00:04:39,146 --> 00:04:40,914 line:-1
should respect the setting by querying


82
00:04:40,981 --> 00:04:45,619 line:-2
UIPencilInteraction.prefersPencilOnlyDrawing parameter.


83
00:04:46,153 --> 00:04:48,188 line:-2
On the phone,
this value is always "false,"


84
00:04:48,255 --> 00:04:51,058 line:-2
as finger
is your only drawing tool available.


85
00:04:52,893 --> 00:04:56,163 line:0
On the other hand,
PencilKit clients get this for free,


86
00:04:56,230 --> 00:04:57,998 line:0
as it's surfaced in the tool picker.


87
00:04:58,498 --> 00:05:02,402 line:0
This toggles the global setting
that you see in the settings pane.


88
00:05:02,903 --> 00:05:06,273 line:0
So when the Draw with Finger switch
is toggled on in Notes,


89
00:05:06,340 --> 00:05:09,009 line:0
then that means it will also be turned on
across the system,


90
00:05:09,076 --> 00:05:13,447 line:0
such as screenshots, Markup,
other PencilKit clients,


91
00:05:13,514 --> 00:05:16,683 line:0
and the new value
will also be reflected in settings.


92
00:05:18,218 --> 00:05:20,754 line:-2
We've also updated the call
on PKCanvasView


93
00:05:20,821 --> 00:05:24,024 line:-2
to account for this new
global finger drawing toggle.


94
00:05:24,091 --> 00:05:27,160 line:-2
We've deprecated allowsFingerDrawing
in favor of setting


95
00:05:27,227 --> 00:05:30,264 line:-2
the PKCanvasViewDrawingPolicy
on the canvas.


96
00:05:31,298 --> 00:05:35,102 line:-2
Please do not set the drawing gesture
recognizer allowedTouchTypes,


97
00:05:35,169 --> 00:05:37,538 line:-2
and instead set the drawing policy
on the canvas


98
00:05:37,604 --> 00:05:40,307 line:-1
to control Pencil vs finger touches.


99
00:05:41,475 --> 00:05:44,378 line:-2
There are three different kinds
of drawing policies.


100
00:05:44,444 --> 00:05:48,482 line:-2
The first,
PKCanvasViewDrawingPolicy.anyInput,


101
00:05:48,549 --> 00:05:53,253 line:-2
means that you allow any input,
allowing both finger and Pencil drawing.


102
00:05:54,988 --> 00:06:00,127 line:-2
The second policy, pencilOnly,
means you only allow Pencil,


103
00:06:00,194 --> 00:06:03,597 line:-2
so finger will scroll
or do smart selection gestures.


104
00:06:06,266 --> 00:06:07,835 line:0
The third, which is the default,


105
00:06:07,901 --> 00:06:10,871 line:0
is dependent on if the tool picker
is hidden or not.


106
00:06:11,572 --> 00:06:13,507 line:0
If the tool picker is visible, it


107
00:06:13,574 --> 00:06:18,712 line:0
respects UIPencilInteraction's 
prefersPencilOnlyDrawing state,


108
00:06:18,779 --> 00:06:23,016 line:0
a.k.a, what the user set in settings
or toggled in the tool picker.


109
00:06:24,551 --> 00:06:28,422 line:0
If the tool picker is hidden,
then only Pencil will ever draw.


110
00:06:29,089 --> 00:06:32,893 line:-2
Whenever finger scrolls, you can
also perform smart selection gestures.


111
00:06:32,960 --> 00:06:34,595 line:-1
Let me show you.


112
00:06:34,661 --> 00:06:36,897 line:-2
You don't even have to choose
the lasso tool.


113
00:06:36,964 --> 00:06:39,399 line:-1
When the pen is selected, you can scroll


114
00:06:39,833 --> 00:06:42,970 line:-2
and perform smart selection gestures
on your handwritten content


115
00:06:43,036 --> 00:06:46,106 line:-2
so that you can easily go back and forth
between writing...


116
00:06:48,342 --> 00:06:49,810 line:0
and selecting.


117
00:06:53,280 --> 00:06:55,649 line:-1
If your app is purely a Pencil app,


118
00:06:55,716 --> 00:06:58,185 line:-2
you might not want to show
the Draw With Finger toggle.


119
00:06:58,252 --> 00:07:00,654 line:-1
To turn this off in the UI,


120
00:07:00,721 --> 00:07:04,358 line:-2
you'll need to set PKToolPicker.showsDrawingPolicyControls 
to false.


121
00:07:04,958 --> 00:07:07,494 line:-2
By default, it will always be true
on iPads,


122
00:07:07,961 --> 00:07:11,632 line:-2
meaning they will always show the Draw
With Finger toggle in the tool picker.


123
00:07:12,099 --> 00:07:15,235 line:-2
If the canvas drawing policy
is set to Pencil only,


124
00:07:15,302 --> 00:07:18,438 line:-2
you'll want to set this to false,
so users won't be confused


125
00:07:18,505 --> 00:07:21,708 line:-2
when they flip the switch
and nothing changes on the canvas.


126
00:07:23,443 --> 00:07:27,481 line:-2
We've also updated the PKToolPicker
initialization methods.


127
00:07:27,548 --> 00:07:31,285 line:-2
Instead of having a single
shared tool picker for a UIWindow,


128
00:07:31,351 --> 00:07:35,088 line:-2
you can now initialize
individual instances of the tool picker.


129
00:07:35,722 --> 00:07:40,961 line:-2
By doing so, you can now have independent
PKToolPickers with their own state.


130
00:07:41,929 --> 00:07:44,998 line:-2
Given this state,
it's useful to have multiple tool pickers


131
00:07:45,065 --> 00:07:47,534 line:-2
for different canvases
or windows in your app.


132
00:07:47,901 --> 00:07:50,337 line:-1
However, one of the implications of this


133
00:07:50,404 --> 00:07:53,006 line:-2
is that you must always retain
your own tool picker instance


134
00:07:53,073 --> 00:07:55,242 line:-1
by having an Ivar reference it.


135
00:07:56,376 --> 00:08:00,347 line:0
And so, when should you have a single instance
versus creating a new one?


136
00:08:00,414 --> 00:08:03,483 line:0
As a refresher
from our "Introducing PencilKit" talk,


137
00:08:04,318 --> 00:08:07,321 line:0
you may have other UI responders
that set visible to "true"


138
00:08:07,387 --> 00:08:08,856 line:0
to keep the tool picker visible.


139
00:08:10,090 --> 00:08:13,093 line:-2
You should always pass
your unique tool picker instance around


140
00:08:13,160 --> 00:08:14,795 line:-1
to each of these responders.


141
00:08:16,296 --> 00:08:19,233 line:-2
On the other hand,
when do you need separate tool pickers?


142
00:08:19,800 --> 00:08:21,635 line:-1
Let's say my app has two modes,


143
00:08:21,702 --> 00:08:24,037 line:-1
a note-taking mode and a coloring mode.


144
00:08:25,239 --> 00:08:28,642 line:0
My note-taking canvas wants
a default drawing policy,


145
00:08:28,709 --> 00:08:33,380 line:0
versus I want to allow both finger
and Pencil drawing on my coloring canvas.


146
00:08:34,347 --> 00:08:35,982 line:0
In this case, each of the canvases


147
00:08:36,049 --> 00:08:40,453 line:0
should have their own unique tool picker
instance with their own unique state,


148
00:08:40,520 --> 00:08:44,157 line:0
since I'll want to hide the drawing
policy controls on my coloring canvas.


149
00:08:45,592 --> 00:08:49,229 line:0
The tool pickers will also have different
states in terms of their selected tool.


150
00:08:49,863 --> 00:08:53,467 line:0
I'll make the selected tool
on my notes canvas a black pen,


151
00:08:53,534 --> 00:08:56,837 line:0
while my coloring canvas will have
a purple marker as the default.


152
00:08:57,171 --> 00:09:00,340 line:0
The tool pickers in your app
might also have other varying states,


153
00:09:00,407 --> 00:09:02,709 line:0
such as different color user
interface styles


154
00:09:02,776 --> 00:09:05,846 line:0
if you're drawing versus
marking up an image.


155
00:09:08,682 --> 00:09:13,086 line:-2
Finally, one of the biggest changes
we made to PencilKit in iOS 14


156
00:09:13,153 --> 00:09:15,289 line:-1
is providing access to strokes,


157
00:09:15,355 --> 00:09:18,525 line:-2
letting you peek inside the internals
of PKDrawing.


158
00:09:19,059 --> 00:09:23,430 line:-2
With the strokes, you'll be able
to access inks, paths, points, and more.


159
00:09:24,798 --> 00:09:26,033 line:0
For more information,


160
00:09:26,099 --> 00:09:30,137 line:0
check out the "Inspect, Modify
and Construct PencilKit Drawings" talk.


161
00:09:30,804 --> 00:09:36,076 line:-2
Access to strokes can unlock so many more
interesting custom PencilKit experiences


162
00:09:36,143 --> 00:09:40,681 line:-2
involving annotations, animations,
recognition, and machine learning.


163
00:09:41,615 --> 00:09:43,650 line:-1
And that's what's new in PencilKit.


164
00:09:44,218 --> 00:09:46,153 line:-1
For existing PencilKit clients,


165
00:09:46,220 --> 00:09:49,756 line:-2
you'll get some new feature enhancements
with zero adoption,


166
00:09:49,823 --> 00:09:53,727 line:-2
including smart selection, insert space,
and the new color picker.


167
00:09:54,661 --> 00:09:58,232 line:-2
Move away from the deprecated APIs
to the new APIs


168
00:09:58,298 --> 00:10:02,903 line:-2
to make sure that you provide the best
finger and Pencil drawing experience.


169
00:10:04,004 --> 00:10:07,441 line:-2
And, finally, you can introspect
the strokes inside of PKDrawing


170
00:10:07,508 --> 00:10:12,746 line:-2
with some new PencilKit APIs, taking
your Pencil experience to the next level.


171
00:10:12,813 --> 00:10:14,014 line:-1
Thanks for watching,


172
00:10:14,081 --> 00:10:17,317 line:-2
and we're looking forward
to seeing what you will do with PencilKit.

