1
00:00:03,804 --> 00:00:07,074 line:-1
Hello and welcome to WWDC.


2
00:00:09,476 --> 00:00:11,078 line:0
Hi. My name is Mike Boylan


3
00:00:11,144 --> 00:00:14,715 line:0
and I'm a senior consulting engineer
supporting enterprise and education.


4
00:00:14,781 --> 00:00:17,851 line:0
I'm excited to be here with you today
alongside my colleague Sudhakar


5
00:00:17,918 --> 00:00:20,787 line:0
to discuss enterprise identity
and authentication.


6
00:00:21,188 --> 00:00:25,492 line:-2
Apple's focus on security extends beyond
just our software, hardware and services.


7
00:00:25,993 --> 00:00:29,263 line:-2
For organizations
that deploy Apple devices at any scale,


8
00:00:29,329 --> 00:00:30,998 line:-1
identity has become the centerpiece


9
00:00:31,064 --> 00:00:35,536 line:-2
of how users authenticate to devices,
Web sites, apps and services.


10
00:00:35,602 --> 00:00:39,106 line:-2
And it's a critical part
of ensuring security across our platform.


11
00:00:39,173 --> 00:00:41,441 line:-2
It's no surprise
that identity and authentication


12
00:00:41,508 --> 00:00:43,744 line:-2
have been getting
more and more complicated.


13
00:00:43,810 --> 00:00:45,546 line:-1
All enterprise apps or Web sites


14
00:00:45,612 --> 00:00:48,182 line:-2
need to authenticate a user
in order to function.


15
00:00:48,582 --> 00:00:53,153 line:-2
These apps connect to systems of record
either in the cloud, on premise, or both.


16
00:00:53,620 --> 00:00:56,089 line:-2
So how do organizations
deal with these challenges?


17
00:00:56,156 --> 00:00:57,491 line:-1
To help with what's out there,


18
00:00:57,558 --> 00:00:59,593 line:-2
Apple has built a number of tools
and technologies


19
00:00:59,660 --> 00:01:02,496 line:-2
that streamline how organizations
can leverage identity


20
00:01:02,563 --> 00:01:05,532 line:-2
across devices, Web sites,
apps and services.


21
00:01:05,599 --> 00:01:08,769 line:-2
We view identity as something
that needs to be tightly integrated


22
00:01:08,836 --> 00:01:11,171 line:-2
into our operating systems
in order to provide


23
00:01:11,238 --> 00:01:14,107 line:-2
a seamless, nearly invisible experience
for our users.


24
00:01:14,174 --> 00:01:16,443 line:-1
This empowers users to work from anywhere


25
00:01:16,510 --> 00:01:19,646 line:-2
while giving IT
the visibility and control that they need


26
00:01:19,713 --> 00:01:21,515 line:-1
to feel comfortable enabling that.


27
00:01:22,115 --> 00:01:24,484 line:-2
This session will focus
on three different technologies


28
00:01:24,551 --> 00:01:26,553 line:-2
and how they can be used together
in practice,


29
00:01:26,620 --> 00:01:28,255 line:-1
along with what's new this year.


30
00:01:28,622 --> 00:01:31,959 line:-2
We'll cover device authentication
and macOS account types,


31
00:01:32,025 --> 00:01:33,660 line:-1
single sign-on extensions,


32
00:01:33,727 --> 00:01:36,363 line:-2
and Managed Apple IDs
and federated authentication.


33
00:01:37,030 --> 00:01:39,766 line:-2
Let's start by talking about
device authentication.


34
00:01:39,833 --> 00:01:43,871 line:-2
Identity on our devices often starts
at the lock or log-in screen.


35
00:01:43,937 --> 00:01:46,740 line:-2
Here's an example of a Shared iPad
and a shared Mac


36
00:01:46,807 --> 00:01:49,476 line:-2
where users can select their account,
enter their credentials,


37
00:01:49,543 --> 00:01:51,845 line:-1
and see this personalized experience.


38
00:01:51,912 --> 00:01:54,882 line:-2
On iPadOS,
this is enabled by Managed Apple ID,


39
00:01:54,948 --> 00:01:58,151 line:-2
and on macOS, accounts can be local,
or come from the network.


40
00:01:58,819 --> 00:02:01,121 line:-2
On this Mac,
we can see identity playing a role


41
00:02:01,188 --> 00:02:03,190 line:-1
even during the initial deployment process


42
00:02:03,257 --> 00:02:05,926 line:-2
when a device is getting assigned
to one specific user.


43
00:02:06,460 --> 00:02:10,163 line:-2
Last year, we added a new feature
called enrollment customization


44
00:02:10,229 --> 00:02:13,534 line:-2
which allows a web page,
like you see here, to load during setup,


45
00:02:13,600 --> 00:02:17,371 line:-2
and can allow for a user to authenticate
using modern authentication methods.


46
00:02:17,437 --> 00:02:20,040 line:-2
User information
from the authentication process


47
00:02:20,107 --> 00:02:22,509 line:-2
can then be used to pre-populate
the local account name


48
00:02:22,576 --> 00:02:25,579 line:-2
and short name for the user
in the macOS setup assistant,


49
00:02:25,646 --> 00:02:27,347 line:-1
optionally locking them into place.


50
00:02:27,881 --> 00:02:30,250 line:-2
So that assumes
the user is using a local account.


51
00:02:30,317 --> 00:02:32,553 line:-2
On the Mac,
there are two primary types of accounts:


52
00:02:32,619 --> 00:02:35,222 line:-2
local accounts
and network, or mobile, accounts.


53
00:02:35,289 --> 00:02:37,991 line:-2
Mobile accounts
are a specific type of network account.


54
00:02:38,058 --> 00:02:40,427 line:-2
Depending on different
deployment scenarios over the years,


55
00:02:40,494 --> 00:02:43,030 line:-2
organizations have used
either type of these accounts,


56
00:02:43,096 --> 00:02:45,766 line:-1
or sometimes both depending on use case.


57
00:02:45,832 --> 00:02:47,568 line:-1
Mobile accounts and network accounts


58
00:02:47,634 --> 00:02:50,370 line:-2
are where organizational identity
first started on the Mac,


59
00:02:50,437 --> 00:02:53,574 line:-2
years before mobile devices
like iPhone and iPad were around


60
00:02:53,640 --> 00:02:55,209 line:-1
or as prevalent as they are today.


61
00:02:55,275 --> 00:02:58,111 line:-2
They existed primarily
to help with shared devices


62
00:02:58,178 --> 00:02:59,847 line:-1
in settings like computer labs,


63
00:02:59,913 --> 00:03:02,416 line:-2
but they make much less sense
to be used today,


64
00:03:02,482 --> 00:03:04,651 line:-1
especially in 1:1 deployment scenarios.


65
00:03:05,118 --> 00:03:06,720 line:-1
Using local accounts on macOS


66
00:03:06,787 --> 00:03:10,257 line:-2
is our recommendation
whenever possible for 1:1 deployments.


67
00:03:10,324 --> 00:03:12,860 line:-2
The user record
is stored locally on the Mac,


68
00:03:12,926 --> 00:03:15,028 line:-2
and the source of truth
for the authentication


69
00:03:15,095 --> 00:03:17,431 line:-1
is the local macOS directory services.


70
00:03:17,497 --> 00:03:20,501 line:-2
This helps ensure that
there are no unnecessary log-in delays,


71
00:03:20,567 --> 00:03:23,070 line:-2
and password management
happens locally on the Mac.


72
00:03:23,504 --> 00:03:27,441 line:-2
Now, we get a lot of questions about
when to bind a Mac to a directory service


73
00:03:27,508 --> 00:03:30,777 line:-2
and when not to do so,
especially for 1:1 deployments.


74
00:03:30,844 --> 00:03:33,814 line:-2
So for organizations
who have traditionally bound their Macs


75
00:03:33,881 --> 00:03:37,651 line:-2
to Active Directory or another
directory service for 1:1 deployments,


76
00:03:37,718 --> 00:03:40,254 line:-2
they should consider
not binding the machines.


77
00:03:40,320 --> 00:03:43,557 line:-2
Instead, consider using
the built-in Kerberos extension,


78
00:03:43,624 --> 00:03:45,192 line:-1
other SSO extensions,


79
00:03:45,259 --> 00:03:49,029 line:-2
or additional third-party value-adds
often provided by MDM vendors


80
00:03:49,096 --> 00:03:51,331 line:-1
to provide directory connectivity.


81
00:03:51,398 --> 00:03:53,300 line:-2
We'll discuss
the built-in Kerberos extension


82
00:03:53,367 --> 00:03:56,270 line:-2
and SSO extensions more
later in this session.


83
00:03:57,004 --> 00:04:01,008 line:-2
Using the built-in Kerberos extension with
on-premise Active Directory environments


84
00:04:01,074 --> 00:04:04,244 line:-2
allows the user to obtain
a Kerberos ticket-granting ticket,


85
00:04:04,311 --> 00:04:05,913 line:-1
otherwise known as TGT,


86
00:04:05,979 --> 00:04:09,650 line:-2
and access directory resources
like file servers and printers.


87
00:04:09,716 --> 00:04:12,886 line:-2
The extension can also help
keep the user's password in sync


88
00:04:12,953 --> 00:04:14,188 line:-1
with what is in the directory,


89
00:04:14,254 --> 00:04:16,589 line:-2
and can help ensure
when changing their password,


90
00:04:16,656 --> 00:04:20,226 line:-2
that the new password meets the
organizational complexity requirements.


91
00:04:20,827 --> 00:04:23,130 line:-2
Note that to traverse
Active Directory DFS,


92
00:04:23,197 --> 00:04:24,765 line:-1
or Distributed File System,


93
00:04:24,831 --> 00:04:28,502 line:-2
or to be able to acquire
an Active Directory machine certificate


94
00:04:28,569 --> 00:04:31,338 line:-2
using the AD Certificate payload
delivered via MDM,


95
00:04:31,405 --> 00:04:34,441 line:-2
the Mac itself does need to be bound
to Active Directory.


96
00:04:34,842 --> 00:04:38,946 line:-2
However, just because the Mac itself
is bound and has an AD machine record


97
00:04:39,012 --> 00:04:42,883 line:-2
does not mean that the user needs to use
a domain account to log in to the Mac.


98
00:04:42,950 --> 00:04:47,087 line:0
Ideally, a local account, as was
just described, would be used instead.


99
00:04:47,154 --> 00:04:51,491 line:-2
Local accounts offer the best,
most reliable experience on macOS,


100
00:04:51,558 --> 00:04:54,094 line:-2
and we recommend that
they be used whenever possible.


101
00:04:54,561 --> 00:04:56,964 line:-2
Another type of account
is a network account.


102
00:04:57,030 --> 00:05:01,268 line:-2
With these accounts, the source of truth
for authentication is a directory server.


103
00:05:01,735 --> 00:05:04,271 line:-2
Home folders
are optionally on a network volume,


104
00:05:04,338 --> 00:05:05,672 line:-1
and when logged in to macOS,


105
00:05:05,739 --> 00:05:09,409 line:-2
the contents of the home folder
can be accessed directly over the network.


106
00:05:09,943 --> 00:05:12,479 line:-1
Modern apps, file sizes and file types


107
00:05:12,546 --> 00:05:16,917 line:-2
including the fact that many applications
now use databases for storing content,


108
00:05:16,984 --> 00:05:20,053 line:-2
and the inherent concept of mobility
present immense challenges


109
00:05:20,120 --> 00:05:22,789 line:-2
for network accounts
and network home folders.


110
00:05:22,856 --> 00:05:27,160 line:-2
We really view accounts of this type
as legacy and do not recommend their use.


111
00:05:27,227 --> 00:05:30,864 line:-2
However, they're not deprecated
and can be used if absolutely necessary.


112
00:05:32,065 --> 00:05:34,535 line:0
We recommend using local accounts
whenever possible,


113
00:05:34,601 --> 00:05:36,003 line:0
and if absolutely needed,


114
00:05:36,069 --> 00:05:38,972 line:0
at least consider mobile accounts,
which we'll discuss next.


115
00:05:39,840 --> 00:05:41,975 line:-2
Mobile accounts
are a type of network account


116
00:05:42,042 --> 00:05:45,212 line:-2
and are far more commonly used
than true network accounts.


117
00:05:45,279 --> 00:05:48,282 line:-2
The source of truth for authentication
is still a directory server,


118
00:05:48,348 --> 00:05:50,817 line:-2
but the credentials
are also cached locally.


119
00:05:50,884 --> 00:05:53,453 line:-2
A home folder
is also created locally on the Mac.


120
00:05:53,520 --> 00:05:56,356 line:-2
The locally cached credentials
and the local home folder


121
00:05:56,423 --> 00:05:58,258 line:-1
helps ensure a user can use their Mac


122
00:05:58,325 --> 00:06:00,661 line:-2
even if the directory server
is unavailable.


123
00:06:00,727 --> 00:06:02,829 line:-1
However, because the source of truth


124
00:06:02,896 --> 00:06:05,632 line:-2
for the user's authentication
is the directory server,


125
00:06:05,699 --> 00:06:07,601 line:-1
there can be log-in delays that exist


126
00:06:07,668 --> 00:06:10,070 line:-2
as a result
of trying to access the directory server.


127
00:06:10,137 --> 00:06:11,972 line:-1
This can happen for a variety of reasons,


128
00:06:12,039 --> 00:06:15,576 line:-2
but most often,
it's a result of a DNS misconfiguration


129
00:06:15,642 --> 00:06:19,279 line:-2
or unexpected redirect--
for example, on a public Wi-Fi network.


130
00:06:20,380 --> 00:06:23,650 line:-2
Additional complexities also exist
in synchronizing the password,


131
00:06:23,717 --> 00:06:27,421 line:-2
as the password can be changed externally
and then needs to be updated on the Mac.


132
00:06:27,487 --> 00:06:29,890 line:-2
This is especially true
when using FileVault.


133
00:06:30,691 --> 00:06:33,794 line:0
Mobile accounts are supported in macOS
for 1:1 deployments,


134
00:06:33,861 --> 00:06:35,462 line:0
but are not recommended.


135
00:06:36,230 --> 00:06:37,664 line:0
For shared lab environments, however,


136
00:06:37,731 --> 00:06:39,867 line:0
mobile accounts
are often appropriate to use,


137
00:06:39,933 --> 00:06:43,937 line:0
and they can even be configured to expire
after a certain period of time if desired.


138
00:06:45,105 --> 00:06:47,074 line:-2
So that's a recap
of device authentication,


139
00:06:47,140 --> 00:06:49,810 line:-2
and how we manage different types
of accounts and authentication


140
00:06:49,877 --> 00:06:53,714 line:-2
between shared and individual devices,
both during and after deployment.


141
00:06:53,780 --> 00:06:56,216 line:-2
Now let's talk about
single sign-on extensions.


142
00:06:57,217 --> 00:06:58,318 line:-1
As a quick recap,


143
00:06:58,385 --> 00:07:03,857 line:-2
SSO extensions were introduced last year
in iPadOS, iOS 13 and macOS Catalina.


144
00:07:04,224 --> 00:07:06,026 line:-1
They enable native apps and WebKit


145
00:07:06,093 --> 00:07:08,962 line:-2
to provide
a more seamless single sign-on experience.


146
00:07:09,029 --> 00:07:11,965 line:-2
We use an SSO extension internally
for our own single sign-on


147
00:07:12,032 --> 00:07:14,268 line:-2
against our own
identity management system,


148
00:07:14,334 --> 00:07:17,504 line:-2
and we've seen large identity providers
like Microsoft and Okta


149
00:07:17,571 --> 00:07:19,206 line:-1
bring offerings to market as well.


150
00:07:19,973 --> 00:07:24,244 line:-2
SSO extensions allow organizations
to leverage existing credentials.


151
00:07:24,311 --> 00:07:26,380 line:-2
They're configured
via Mobile Device Management,


152
00:07:26,446 --> 00:07:30,050 line:-2
or MDM, for short,
and can provide a native UI, Web UI,


153
00:07:30,117 --> 00:07:33,287 line:-2
or a totally transparent
authentication experience to the user.


154
00:07:34,054 --> 00:07:36,723 line:-2
Here's a graphic depicting
how both Safari and WebKit


155
00:07:36,790 --> 00:07:40,160 line:-2
as well as native apps can call
into a single sign-on extension


156
00:07:40,227 --> 00:07:42,596 line:0
to authenticate against
an organization's identity provider.


157
00:07:43,664 --> 00:07:44,932 line:-1
This year, we're introducing


158
00:07:44,998 --> 00:07:47,768 line:-2
a number of new features and enhancements
to SSO extensions.


159
00:07:48,135 --> 00:07:51,939 line:-2
First is the ability to configure
SSO extensions on the user channel


160
00:07:52,005 --> 00:07:54,641 line:-1
on both macOS and iPadOS with Shared iPad.


161
00:07:55,409 --> 00:07:59,847 line:-2
We've improved the way that SSO extensions
interact with per-app VPN configurations.


162
00:08:00,681 --> 00:08:03,884 line:-2
We've added the ability for
SSO extension apps to include wild cards


163
00:08:03,951 --> 00:08:07,120 line:-2
in the list of matching URLs
that are embedded inside of the app.


164
00:08:07,988 --> 00:08:10,591 line:-2
We now provide additional information
to the extension


165
00:08:10,657 --> 00:08:13,393 line:-2
about the calling app
that's requesting authentication.


166
00:08:14,228 --> 00:08:17,164 line:-2
And when the MDM profile
that configures an extension is removed,


167
00:08:17,231 --> 00:08:18,866 line:-1
there is now an operation that is called


168
00:08:18,932 --> 00:08:21,902 line:-2
to allow for any cleanup tasks
needed by the extension.


169
00:08:22,369 --> 00:08:24,438 line:-2
And finally,
we've made some great enhancements


170
00:08:24,505 --> 00:08:26,940 line:-2
to our first-party
built-in Kerberos extension.


171
00:08:27,007 --> 00:08:29,376 line:-2
Let's take a deeper look
at all of these changes,


172
00:08:29,443 --> 00:08:31,645 line:-2
starting with
user-channel profile delivery.


173
00:08:32,712 --> 00:08:35,916 line:-2
This year, we're introducing
the ability to configure SSO extensions


174
00:08:35,982 --> 00:08:40,053 line:-2
on the user channel on both macOS
and iPadOS with Shared iPad.


175
00:08:40,120 --> 00:08:41,722 line:-1
This will allow MDM developers


176
00:08:41,788 --> 00:08:46,293 line:-2
to more easily integrate configurations
of SSO extensions into their products.


177
00:08:46,360 --> 00:08:49,229 line:-2
This feature is enabled
for all SSO extensions.


178
00:08:49,730 --> 00:08:51,298 line:-1
Settings configured on the user channel


179
00:08:51,365 --> 00:08:54,635 line:-2
take priority over any settings
configured at the system level.


180
00:08:55,402 --> 00:08:58,939 line:-2
This improvement will also allow for
easier per-user settings for SSO,


181
00:08:59,006 --> 00:09:00,741 line:-1
such as setting the user name.


182
00:09:01,475 --> 00:09:03,477 line:-1
We've also significantly improved


183
00:09:03,544 --> 00:09:06,380 line:-2
how an SSO extensions work
with per-app VPN.


184
00:09:06,446 --> 00:09:09,983 line:-2
New this year, associated domains
now work with per-app VPN.


185
00:09:10,651 --> 00:09:12,786 line:-1
As a result, SSO redirect extensions


186
00:09:12,853 --> 00:09:16,623 line:-2
can now redirect traffic for
identity providers that are on-premise.


187
00:09:16,690 --> 00:09:19,693 line:-2
The on-premise IdPs
have the same certificate restrictions


188
00:09:19,760 --> 00:09:21,328 line:-1
as Internet-based IdPs,


189
00:09:21,395 --> 00:09:23,330 line:-2
meaning that the certificate
needs to be issued


190
00:09:23,397 --> 00:09:25,866 line:-1
by a pre-installed, system-trusted CA.


191
00:09:26,800 --> 00:09:29,503 line:-2
To use this feature, you will need to add
the associated domains


192
00:09:29,570 --> 00:09:31,305 line:-1
to your per-app VPN payload


193
00:09:31,371 --> 00:09:33,440 line:-2
and enable
the new direct downloads feature


194
00:09:33,507 --> 00:09:36,810 line:-2
for the domains
via the Managed App attribute on iOS


195
00:09:36,877 --> 00:09:39,613 line:-2
or the Managed Associated Domains payload
on macOS.


196
00:09:40,080 --> 00:09:43,684 line:-2
We'll recap associated domains
and discuss some changes to them shortly.


197
00:09:44,718 --> 00:09:47,120 line:-2
Let's look at how the extension
can use per-app VPN


198
00:09:47,187 --> 00:09:49,256 line:-1
for on-premise identity providers.


199
00:09:49,323 --> 00:09:52,993 line:-2
When the app is installed, the OS
will request the site association file


200
00:09:53,060 --> 00:09:55,963 line:-2
through the per-app VPN
when the associated domains are present.


201
00:09:56,496 --> 00:09:59,967 line:-2
A native app can send an operation
to an extension, such as "Login".


202
00:10:00,634 --> 00:10:04,571 line:-2
That request then goes through
the per-app VPN to the on-premise network


203
00:10:04,638 --> 00:10:06,607 line:-1
to the on-premise identity provider.


204
00:10:07,274 --> 00:10:09,676 line:-2
The response
then goes back to the extension,


205
00:10:09,743 --> 00:10:11,411 line:-1
still through the per-app VPN.


206
00:10:11,478 --> 00:10:14,515 line:-2
And then the response and tokens
are sent back to the native app


207
00:10:15,449 --> 00:10:19,119 line:-2
SSO Extensions inherit the per-app
VPN settings of their host app.


208
00:10:19,186 --> 00:10:21,622 line:-1
If the host app is assigned a per-app VPN,


209
00:10:21,688 --> 00:10:25,526 line:-2
then all of the host and extension traffic
will use the per-app VPN.


210
00:10:25,592 --> 00:10:27,528 line:-2
This can impact performance
of the extension


211
00:10:27,594 --> 00:10:30,297 line:-2
because all of the traffic
has to be routed through the VPN,


212
00:10:30,364 --> 00:10:32,966 line:-2
even though some resources
may be in the cloud.


213
00:10:33,033 --> 00:10:37,204 line:-2
New this year, you can use
the "per-app VPN Excluded Domains list"


214
00:10:37,271 --> 00:10:41,675 line:-2
to allow your cloud IdP traffic
go do direct from the device to the IdP


215
00:10:41,742 --> 00:10:44,745 line:-2
to take advantage of load balancing
and regional instances.


216
00:10:44,811 --> 00:10:47,614 line:-2
This is useful when an app needs
simultaneous access


217
00:10:47,681 --> 00:10:50,884 line:-2
to both trusted cloud
and on-premise resources.


218
00:10:50,951 --> 00:10:53,253 line:-2
The exclusion list
is global for the device.


219
00:10:53,320 --> 00:10:55,622 line:-2
Previously,
to connect to a cloud resource,


220
00:10:55,689 --> 00:10:58,125 line:-2
an SSO Extension or app
had to send the traffic


221
00:10:58,192 --> 00:11:00,694 line:-2
through the per-app VPN
to the on-premise network.


222
00:11:00,761 --> 00:11:03,397 line:-2
Then it would be routed to the Internet
from there.


223
00:11:03,463 --> 00:11:05,832 line:-2
This can be inefficient
and can reduce the advantage


224
00:11:05,899 --> 00:11:09,503 line:-2
of global CDN or regional load balancing
for Internet resources.


225
00:11:10,337 --> 00:11:13,006 line:-2
Now you can connect directly
to trusted Internet resources


226
00:11:13,073 --> 00:11:14,775 line:-1
using excluded domains.


227
00:11:14,842 --> 00:11:17,878 line:-2
So here, you can see the SSO extension
sending some traffic


228
00:11:17,945 --> 00:11:20,480 line:-2
through the per-app VPN
to the on-premise network.


229
00:11:20,547 --> 00:11:24,585 line:0
But now, using the excluded domains list,
the extension can also send traffic


230
00:11:24,651 --> 00:11:28,789 line:0
directly to trusted cloud resources
for the domains you specify.


231
00:11:28,856 --> 00:11:32,626 line:-2
Also new this year, we'll also trigger
per-app VPN for auth-only requests


232
00:11:32,693 --> 00:11:35,028 line:0
such as a log-in event
or a password change.


233
00:11:35,095 --> 00:11:39,533 line:0
It no longer requires a separate http
or similar request to trigger the VPN.


234
00:11:39,600 --> 00:11:41,535 line:-1
And this applies to all platforms.


235
00:11:42,503 --> 00:11:44,271 line:-1
For a quick recap of associated domains,


236
00:11:44,338 --> 00:11:48,008 line:-2
we introduced these last year
to go alongside SSO extensions.


237
00:11:48,075 --> 00:11:51,278 line:-2
On iOS, these are configured
via the Managed App configuration


238
00:11:51,345 --> 00:11:53,680 line:-2
alongside the app
providing the SSO extension,


239
00:11:54,014 --> 00:11:55,516 line:-1
and on macOS, they're installed


240
00:11:55,582 --> 00:11:59,586 line:-2
via the separate managed associated
domains configuration payload from MDM.


241
00:12:00,420 --> 00:12:01,955 line:-1
When used with SSO extensions,


242
00:12:02,022 --> 00:12:05,592 line:-2
these allow identity providers
that have different host names per tenant


243
00:12:05,659 --> 00:12:08,362 line:-2
to specify the hosts for a customer
via MDM


244
00:12:08,428 --> 00:12:12,432 line:-2
rather than trying to add every customer
into the app's embedded set of URLs


245
00:12:12,499 --> 00:12:14,668 line:-2
before submitting the app
to the App Store.


246
00:12:14,735 --> 00:12:17,504 line:-2
To have an app be able to be used
together with associated domains,


247
00:12:17,571 --> 00:12:18,939 line:-1
it requires an entitlement.


248
00:12:19,439 --> 00:12:22,643 line:-2
The entitlement allows MDM
to supplement the associated domains


249
00:12:22,709 --> 00:12:24,478 line:-1
that are included with the app.


250
00:12:24,545 --> 00:12:25,646 line:-1
New this year is that


251
00:12:25,712 --> 00:12:30,784 line:-2
com.apple.developer.associated-domains.mdm
-managed entitlement


252
00:12:30,851 --> 00:12:31,885 line:-1
is now public


253
00:12:31,952 --> 00:12:35,222 line:-2
and no longer requires approval
from Developer Technical Support.


254
00:12:36,423 --> 00:12:39,092 line:-2
Associated domains
included in inside of an application


255
00:12:39,159 --> 00:12:41,962 line:-2
must be paired
with an Apple App Site Association file


256
00:12:42,029 --> 00:12:43,497 line:-1
on the related Web site.


257
00:12:44,064 --> 00:12:46,500 line:-1
This file contains app IDs and app keys


258
00:12:46,567 --> 00:12:49,002 line:-2
specifying the application identifiers
for the apps


259
00:12:49,069 --> 00:12:52,840 line:-2
that are available for use on the Web site
and with the given service type.


260
00:12:53,640 --> 00:12:56,510 line:-2
New this year is that
the Apple App Site Association file


261
00:12:56,577 --> 00:13:00,013 line:-2
is no longer directly accessed
by the device itself by default.


262
00:13:01,248 --> 00:13:05,052 line:-2
Instead, the file is accessed by
an Apple-operated content delivery network


263
00:13:05,118 --> 00:13:07,287 line:-1
that's dedicated to associated domains.


264
00:13:07,354 --> 00:13:08,789 line:-1
This reduces load on servers


265
00:13:08,856 --> 00:13:12,326 line:-2
and routes devices to a known-good,
known-fast connection.


266
00:13:13,393 --> 00:13:16,196 line:-2
For managed devices where an app may have
an associated domain


267
00:13:16,263 --> 00:13:19,833 line:-2
that's not available on the public
Internet for Apple's CDN to access,


268
00:13:19,900 --> 00:13:23,170 line:-2
an additional parameter can be added
to the domain inside of the app


269
00:13:23,237 --> 00:13:27,174 line:-2
to specify that it is a domain
for a managed app on a managed device.


270
00:13:27,774 --> 00:13:31,612 line:0
For more information, see this related
session from this year's WWDC.


271
00:13:31,678 --> 00:13:33,714 line:-2
This year,
we're providing more information


272
00:13:33,780 --> 00:13:36,016 line:-2
about the app
that is trying to use an SSO extension.


273
00:13:36,483 --> 00:13:40,120 line:-2
Specifically, we added
the Calling App Name, which is localized,


274
00:13:41,054 --> 00:13:43,056 line:-1
the Calling App Team Identifier,


275
00:13:43,857 --> 00:13:45,926 line:-1
and an Is-Caller-Managed flag.


276
00:13:45,993 --> 00:13:50,163 line:-2
SSO extensions can use this information
to both improve the user experience


277
00:13:50,230 --> 00:13:53,200 line:-2
by providing a more user-friendly name
of the app to the user,


278
00:13:53,267 --> 00:13:56,537 line:-2
and they can also use the Team Identifier
and the "is managed" flag


279
00:13:56,603 --> 00:13:59,940 line:-2
to make more informed security decisions
about the calling app.


280
00:14:00,574 --> 00:14:02,276 line:-1
Now, to operations.


281
00:14:02,342 --> 00:14:04,745 line:-2
We included some standard operations
last year


282
00:14:04,811 --> 00:14:09,082 line:-2
for typical uses of the extensions,
including log-in, refresh, and log-out.


283
00:14:09,149 --> 00:14:11,818 line:-2
Developers should have already
adopted these in their extensions.


284
00:14:13,053 --> 00:14:16,290 line:-2
This year we added
a new configuration-Removed operation.


285
00:14:16,356 --> 00:14:17,691 line:-1
This operation will be called


286
00:14:17,758 --> 00:14:21,428 line:-2
when the profile configuring an SSO
extension is removed from the device.


287
00:14:21,495 --> 00:14:24,131 line:-2
This will give extension developers
a short window of time


288
00:14:24,198 --> 00:14:27,601 line:-2
to log out, clean up files
or Keychain entries, revoke tokens,


289
00:14:27,668 --> 00:14:30,237 line:-2
or perform other cleanup actions
as necessary.


290
00:14:30,671 --> 00:14:33,106 line:-2
Using this feature
requires the SSO extension


291
00:14:33,173 --> 00:14:36,643 line:-2
be built with the iOS 14
or macOS Big Sur SDK.


292
00:14:38,145 --> 00:14:40,547 line:-2
We've added the ability
for SSO extension developers


293
00:14:40,614 --> 00:14:43,450 line:-2
to include embedded wild cards
in the list of matching URLs


294
00:14:43,517 --> 00:14:45,452 line:-1
for which their extension is used.


295
00:14:45,519 --> 00:14:49,022 line:-2
This allows for a much easier setup
for large identity providers


296
00:14:49,089 --> 00:14:52,092 line:-2
that use a common URL scheme
with slightly different URLs


297
00:14:52,159 --> 00:14:54,728 line:-1
to identify specific customers or tenants.


298
00:14:54,795 --> 00:14:58,665 line:-2
So, for example,
if an identities provider log-in URL is


299
00:14:58,732 --> 00:15:02,803 line:-1
auth.pretendco.com/CUSTOMER NAME/login,


300
00:15:02,870 --> 00:15:07,407 line:-2
they could include
auth.pretendco.com/*/login


301
00:15:07,474 --> 00:15:09,209 line:-1
in their embedded list of URLs.


302
00:15:09,276 --> 00:15:11,078 line:-2
This is different
from an associated domain


303
00:15:11,144 --> 00:15:12,813 line:-1
where the entire domain may be different.


304
00:15:13,714 --> 00:15:16,984 line:-2
These embedded wild card URLs
work together with associated domains


305
00:15:17,050 --> 00:15:18,785 line:-1
and aren't meant to replace them.


306
00:15:18,852 --> 00:15:21,355 line:-2
This improvement is focused
on extension developers


307
00:15:21,421 --> 00:15:24,424 line:-2
being able to more easily match
a large number of customers


308
00:15:24,491 --> 00:15:28,228 line:-2
when the URLs are similar and often
the host names themselves are the same.


309
00:15:28,295 --> 00:15:30,564 line:-2
Also new this year
is a number of improvements


310
00:15:30,631 --> 00:15:32,566 line:-1
to our built-in Kerberos extension.


311
00:15:32,633 --> 00:15:34,468 line:-1
First, the menu extra on macOS


312
00:15:34,535 --> 00:15:37,037 line:-2
now more accurately represents
the state of the extension.


313
00:15:37,104 --> 00:15:40,574 line:-2
The extension requires a credential,
an active network connection,


314
00:15:40,641 --> 00:15:44,144 line:-2
functioning DNS, and an unexpired
Kerberos ticket to work correctly.


315
00:15:44,845 --> 00:15:47,981 line:-2
The menu extra will show solid
if all of these are in place,


316
00:15:48,048 --> 00:15:52,252 line:-2
or now, when something is missing, it will
indicate to the user what the problem is.


317
00:15:52,319 --> 00:15:56,356 line:-2
We realize not all organizations
use the same names for their identities.


318
00:15:56,423 --> 00:15:59,493 line:-2
Some call it the Associate ID,
some call it their AD Account,


319
00:15:59,560 --> 00:16:02,996 line:-2
or even the PretendCo ID, where
PretendCo is the name of the organization.


320
00:16:03,664 --> 00:16:06,400 line:-2
This year, we're adding the ability
to customize the label


321
00:16:06,466 --> 00:16:08,235 line:-1
that is shown in the Kerberos extension


322
00:16:08,302 --> 00:16:11,605 line:-2
so that it can match the name
of your identity in your organization.


323
00:16:12,005 --> 00:16:14,775 line:-2
You can also now add help text
to let your users know


324
00:16:14,842 --> 00:16:17,144 line:-2
where they can get help
if they have trouble logging in.


325
00:16:17,211 --> 00:16:19,513 line:-2
This text is shown
at the bottom of the sign-in window.


326
00:16:20,214 --> 00:16:22,783 line:-2
So, here's an example
of the identity name being customized


327
00:16:22,850 --> 00:16:24,718 line:-1
alongside the custom help text.


328
00:16:27,221 --> 00:16:30,924 line:-2
Here are a few examples of the menu extra
showing different states to the user.


329
00:16:30,991 --> 00:16:32,559 line:-1
For example, on the left,


330
00:16:32,626 --> 00:16:35,662 line:-2
the user is not signed in,
and there is no network available.


331
00:16:35,729 --> 00:16:39,266 line:-2
In the middle, they are signed in,
but now the network is not available.


332
00:16:39,333 --> 00:16:41,068 line:-1
And on the right, the user is signed in,


333
00:16:41,134 --> 00:16:43,504 line:-2
and both the network and credential
are available,


334
00:16:43,570 --> 00:16:46,240 line:-2
and notice that the key icon is solid
in the menu bar.


335
00:16:47,541 --> 00:16:51,478 line:-2
The extension will now trigger per-app VPN
for an authentication-only requests


336
00:16:51,545 --> 00:16:53,580 line:-1
on iOS, iPadOS and macOS.


337
00:16:53,647 --> 00:16:57,317 line:-2
This will enable you to log in without
having a separate network request


338
00:16:57,384 --> 00:16:59,119 line:-1
or manually triggering the VPN.


339
00:16:59,186 --> 00:17:00,387 line:-1
The Kerberos extension


340
00:17:00,454 --> 00:17:04,124 line:-2
also now fully supports
app-to-per-app VPN on macOS.


341
00:17:04,191 --> 00:17:07,661 line:-2
You'll need to add the App-SSO-Agent
and the Kerberos-Menu-Extra


342
00:17:07,728 --> 00:17:09,695 line:-1
to the app-to-per-app VPN payload.


343
00:17:10,230 --> 00:17:12,232 line:-1
We discussed user channel profile delivery


344
00:17:12,299 --> 00:17:15,234 line:-2
being supported earlier
for all SSO extensions,


345
00:17:15,301 --> 00:17:17,371 line:-2
and this includes
the built-in Kerberos extension.


346
00:17:17,905 --> 00:17:20,907 line:-2
A large driver for the development
of this feature was the request


347
00:17:20,973 --> 00:17:24,178 line:-2
to be able to more easily reference
user-level certificate identities


348
00:17:24,243 --> 00:17:25,579 line:-1
delivered via MDM


349
00:17:25,646 --> 00:17:28,448 line:-2
and to use them
for certificate-based Kerberos or PKINIT.


350
00:17:29,616 --> 00:17:33,120 line:-2
It's important to mention that referencing
a user-level certificate identity


351
00:17:33,187 --> 00:17:36,156 line:-2
in a system-level scoped profile
has always been supported


352
00:17:36,223 --> 00:17:38,926 line:-2
in the context of configuring
the Kerberos extension,


353
00:17:38,992 --> 00:17:42,429 line:-2
but this improvement will make it
significantly easier for MDM vendors


354
00:17:42,496 --> 00:17:45,098 line:-2
to bundle the configurations
and the certificates together.


355
00:17:45,632 --> 00:17:48,001 line:-2
We're also providing more control
for administrators


356
00:17:48,068 --> 00:17:50,737 line:-2
regarding when a user is prompted
to log in to the extension


357
00:17:50,804 --> 00:17:52,606 line:-1
for the first time on macOS.


358
00:17:53,040 --> 00:17:57,644 line:-2
For example, previously, the app SSO agent
would listen for network state changes


359
00:17:57,711 --> 00:17:59,413 line:-1
and prompt for credentials.


360
00:17:59,479 --> 00:18:02,349 line:-2
Using this new option
will delay the first log-in prompt


361
00:18:02,416 --> 00:18:05,052 line:-2
until an administrator runs a command
to enable it


362
00:18:05,118 --> 00:18:07,721 line:-2
or the first authentication challenge
is received.


363
00:18:08,622 --> 00:18:12,426 line:-2
We've also added an optional
Managed App Access Control on iOS.


364
00:18:12,926 --> 00:18:16,530 line:0
If set, if the source app trying to access
the credential is unmanaged,


365
00:18:16,597 --> 00:18:18,131 line:0
then it won't be able to do so.


366
00:18:18,198 --> 00:18:20,300 line:-2
So that's a recap
of single-sign-on extensions


367
00:18:20,367 --> 00:18:22,069 line:-1
and the built-in Kerberos extension.


368
00:18:22,135 --> 00:18:25,772 line:-2
Now I'd like to turn it over to Sudhakar
to talk about Managed Apple IDs.


369
00:18:26,306 --> 00:18:27,808 line:-1
Thanks, Mike.


370
00:18:27,875 --> 00:18:30,043 line:-1
Hi. I am Sudhakar Mambakkam.


371
00:18:30,110 --> 00:18:33,847 line:-2
I'm a senior engineering manager
in Apple's Identity Management team.


372
00:18:34,748 --> 00:18:37,417 line:-2
Today,
I'll be talking about Managed Apple IDs


373
00:18:37,484 --> 00:18:39,786 line:-1
and federated authentication.


374
00:18:40,153 --> 00:18:43,790 line:-2
The features I cover today are applicable
to both Apple Business Manager


375
00:18:43,857 --> 00:18:45,425 line:-1
and Apple School Manager.


376
00:18:45,492 --> 00:18:49,596 line:-2
To keep it simple, I may refer
only to Apple Business Manager at times.


377
00:18:49,663 --> 00:18:53,700 line:-2
If there are actual feature differences,
I will call those out specifically.


378
00:18:54,835 --> 00:18:57,604 line:-2
Let's start with
what Managed Apple IDs are.


379
00:18:57,971 --> 00:19:01,875 line:-2
They are Apple user accounts
owned and managed by an organization.


380
00:19:02,976 --> 00:19:07,514 line:-2
Account management tasks such as creation,
deletion and password management


381
00:19:07,581 --> 00:19:11,818 line:-2
are done by IT administrators
or automated systems for these accounts.


382
00:19:12,719 --> 00:19:15,756 line:-2
Managed Apple IDs are used
to personalize a device


383
00:19:15,822 --> 00:19:18,625 line:-2
and to access Apple applications
and services.


384
00:19:19,059 --> 00:19:21,895 line:-2
Certain applications
can be tailored for their use,


385
00:19:21,962 --> 00:19:25,232 line:-2
and other applications
are available only for Managed Apple IDs.


386
00:19:26,233 --> 00:19:29,436 line:-2
IT teams use them
to sign into Apple Business Manager


387
00:19:29,503 --> 00:19:32,072 line:-2
for carrying out tasks
such as device management


388
00:19:32,139 --> 00:19:34,441 line:-1
and app purchase for their organization.


389
00:19:35,042 --> 00:19:37,778 line:-2
Features such as User Enrollment
and Shared iPad


390
00:19:37,845 --> 00:19:40,781 line:-2
are available for use
only with Managed Apple IDs.


391
00:19:42,049 --> 00:19:46,520 line:-2
Managed Apple IDs for education
support features such as Schoolwork


392
00:19:46,587 --> 00:19:49,423 line:-1
and come with 200 GB free iCloud storage.


393
00:19:51,859 --> 00:19:55,162 line:-2
Most importantly,
Managed Apple IDs have the capability


394
00:19:55,229 --> 00:19:57,264 line:-1
for federated authentication.


395
00:19:57,798 --> 00:19:59,066 line:-1
Let's see what that is


396
00:19:59,132 --> 00:20:02,002 line:-2
and why it's important
for enterprise identity.


397
00:20:03,403 --> 00:20:06,173 line:-2
Federated authentication
is a simple and secure


398
00:20:06,240 --> 00:20:10,077 line:-2
identity management architecture
that spans organization boundaries.


399
00:20:10,711 --> 00:20:13,413 line:-2
It allows organizations
in Apple Business Manager


400
00:20:13,480 --> 00:20:16,016 line:-2
to connect
to their existing identity systems


401
00:20:16,083 --> 00:20:19,319 line:-1
based on Microsoft Azure Active Directory.


402
00:20:19,386 --> 00:20:23,156 line:-2
This automatically sets up users
with access to Apple Services.


403
00:20:24,658 --> 00:20:28,595 line:-2
No new sign-in credential is created,
and Apple Services can be accessed


404
00:20:28,662 --> 00:20:31,331 line:-2
using the same credentials
a user would use normally


405
00:20:31,398 --> 00:20:34,168 line:-2
within the organization
for other applications.


406
00:20:34,768 --> 00:20:37,504 line:-2
This is the core objective
of the federation feature,


407
00:20:37,571 --> 00:20:42,409 line:-2
where organizations can determine
the authentication policy for their users.


408
00:20:44,144 --> 00:20:47,114 line:-2
When a user signs in
to an Apple device for the first time


409
00:20:47,181 --> 00:20:49,016 line:-1
using federated authentication,


410
00:20:49,082 --> 00:20:51,952 line:-2
the Managed Apple ID
needed to access the Apple service


411
00:20:52,019 --> 00:20:53,887 line:-1
is created automatically.


412
00:20:54,855 --> 00:20:58,258 line:-2
Federated authentication
reduces account-related overheads


413
00:20:58,325 --> 00:21:01,695 line:-1
for both IT teams and end users.


414
00:21:01,762 --> 00:21:05,465 line:-2
It ensures that identity policies
are consistently enforced


415
00:21:05,532 --> 00:21:09,169 line:-2
across all applications and services
used within the organization.


416
00:21:10,437 --> 00:21:13,674 line:-2
Now, let us see
how federated authentication works.


417
00:21:14,641 --> 00:21:20,447 line:-2
First, federation needs to be set up
between Azure Active Directory and Apple.


418
00:21:20,514 --> 00:21:24,685 line:-2
This is done using Apple Business Manager
or Apple School Manager.


419
00:21:25,285 --> 00:21:26,954 line:-1
Once federation is set up,


420
00:21:27,020 --> 00:21:29,857 line:-2
organization users can access
all Apple applications


421
00:21:29,923 --> 00:21:32,826 line:-2
using their organization
sign-in credentials.


422
00:21:34,761 --> 00:21:38,599 line:-2
Federation is configured
for each domain individually.


423
00:21:38,665 --> 00:21:43,103 line:-2
In this example, the domain acme.com
has been set up for federation.


424
00:21:44,738 --> 00:21:47,741 line:0
After this,
when a user in the acme.com domain


425
00:21:47,808 --> 00:21:49,576 line:0
attempts to access an Apple service,


426
00:21:49,643 --> 00:21:52,212 line:0
Apple will recognize the user as federated


427
00:21:52,279 --> 00:21:55,549 line:0
and redirect their device
to Azure AD for authentication.


428
00:21:56,750 --> 00:21:59,152 line:0
After the user authenticates in Azure AD,


429
00:21:59,219 --> 00:22:02,623 line:0
the device will be redirected back
to Apple with an authentication token.


430
00:22:03,624 --> 00:22:06,360 line:0
The federation protocol used here is SAML,


431
00:22:06,426 --> 00:22:10,731 line:0
and the authentication token
is the SAML response signed by Azure AD.


432
00:22:11,431 --> 00:22:13,433 line:0
Apple will verify the token signature


433
00:22:13,500 --> 00:22:16,136 line:0
using information exchanged
during the setup process


434
00:22:16,203 --> 00:22:18,605 line:0
and will allow the user
to access the service.


435
00:22:20,207 --> 00:22:23,610 line:-2
Federated authentication works
even if the identity system


436
00:22:23,677 --> 00:22:25,579 line:-1
is not natively on Azure AD


437
00:22:25,646 --> 00:22:29,883 line:-2
but is behind it on another system
such as on-premise ADFS


438
00:22:29,950 --> 00:22:32,119 line:-1
or another identity provider.


439
00:22:32,186 --> 00:22:35,222 line:-2
Azure AD's integration
with the other identity provider


440
00:22:35,289 --> 00:22:37,124 line:-1
is transparent to the Apple service


441
00:22:37,191 --> 00:22:40,561 line:-2
which still receives
the authentication token via Azure AD.


442
00:22:41,995 --> 00:22:44,898 line:-2
Let's go over the details
of the setup process.


443
00:22:45,299 --> 00:22:49,169 line:-2
Setting up federation requires the user
to have administration capability,


444
00:22:49,236 --> 00:22:53,040 line:-2
both within Apple Business Manager
and in Azure Active Directory.


445
00:22:53,607 --> 00:22:55,209 line:-1
Let's assume you are an administrator


446
00:22:55,275 --> 00:22:57,411 line:-2
in both these systems
for your organization


447
00:22:57,477 --> 00:22:59,780 line:-1
and walk through the process step by step.


448
00:23:01,515 --> 00:23:06,420 line:-2
As federation is set up by domain,
if your organization has multiple domains,


449
00:23:06,486 --> 00:23:09,189 line:-2
you need to decide
which of these domains to federate.


450
00:23:10,257 --> 00:23:12,860 line:-2
You get the most benefit
when you federate all domains


451
00:23:12,926 --> 00:23:15,762 line:-2
that have users
who will be accessing Apple Services.


452
00:23:16,930 --> 00:23:20,267 line:-2
Domain verification is a new feature
introduced this year


453
00:23:20,334 --> 00:23:23,270 line:-2
in Apple Business Manager
and Apple School Manager.


454
00:23:23,337 --> 00:23:26,106 line:-2
Domains that are used
to create Managed Apple IDs


455
00:23:26,173 --> 00:23:28,542 line:-1
need to undergo ownership verification.


456
00:23:29,510 --> 00:23:31,211 line:-1
Let's start with that process.


457
00:23:31,278 --> 00:23:34,281 line:-2
Enter the domain you want to federate
and select "continue."


458
00:23:35,315 --> 00:23:37,751 line:-2
The domain will be saved
in an unverified state,


459
00:23:37,818 --> 00:23:40,320 line:-2
and you can start
the verification process now.


460
00:23:41,154 --> 00:23:42,556 line:-1
The domain verification feature


461
00:23:42,623 --> 00:23:46,426 line:-2
uses a standard DNS TXT record-based
verification method.


462
00:23:46,927 --> 00:23:49,930 line:-2
Use the "verify" button
to generate a verification code.


463
00:23:51,231 --> 00:23:54,935 line:-2
Then, create a TXT record in your domain
using this code.


464
00:23:55,002 --> 00:23:57,971 line:-2
The code is valid for 14 days
from the time of generation,


465
00:23:58,038 --> 00:24:01,108 line:-2
and you need to complete the process
within this period.


466
00:24:01,608 --> 00:24:06,013 line:-2
After updating the DNS record,
you can trigger a DNS check manually


467
00:24:06,079 --> 00:24:09,149 line:-2
or let the scheduled process
do it automatically.


468
00:24:09,216 --> 00:24:12,019 line:-2
Either way,
keep in mind that DNS record propagation


469
00:24:12,085 --> 00:24:14,588 line:-1
may take a few hours after you update it.


470
00:24:16,490 --> 00:24:19,393 line:-2
Once the TXT record is visible
to Apple Business Manager,


471
00:24:19,459 --> 00:24:23,163 line:-2
it will be checked against the code
originally generated for the domain.


472
00:24:23,230 --> 00:24:25,933 line:-2
If it matches,
the domain is marked as verified


473
00:24:25,999 --> 00:24:28,001 line:-1
and it's available for federation now.


474
00:24:30,404 --> 00:24:31,939 line:-1
Start the federation process


475
00:24:32,005 --> 00:24:34,741 line:-2
using the "connect" button
under "federated authentication."


476
00:24:36,210 --> 00:24:39,112 line:-1
Sign into Azure AD as an administrator.


477
00:24:39,179 --> 00:24:41,815 line:-2
This can be a user
with one of the following roles:


478
00:24:41,882 --> 00:24:44,952 line:-2
a global administrator,
an application administrator


479
00:24:45,018 --> 00:24:47,054 line:-1
or a cloud application administrator.


480
00:24:48,622 --> 00:24:52,759 line:-2
Approve the integration between Azure AD
and Apple Business Manager.


481
00:24:53,227 --> 00:24:55,963 line:-2
This allows your users to sign in
to Apple Services


482
00:24:56,029 --> 00:24:58,232 line:-1
with their Azure AD credentials.


483
00:24:58,298 --> 00:25:01,368 line:-2
It also allows Azure AD
to share user information,


484
00:25:01,435 --> 00:25:05,572 line:-2
such as an employee's e-mail address
and name, with Apple.


485
00:25:05,639 --> 00:25:08,775 line:-2
This step is needed only once
for an organization.


486
00:25:09,610 --> 00:25:11,578 line:-1
Read the agreement and accept it.


487
00:25:13,080 --> 00:25:14,982 line:-1
Once you have granted permission,


488
00:25:15,048 --> 00:25:18,585 line:-2
sign in as a user belonging to the domain
you are federating.


489
00:25:18,652 --> 00:25:23,390 line:-2
This is a test sign-in that validates
that the permission grant was successful


490
00:25:23,457 --> 00:25:26,927 line:-2
and confirms that users
can now use their Azure AD credentials


491
00:25:26,994 --> 00:25:28,629 line:-1
to sign in to Apple Services.


492
00:25:29,696 --> 00:25:33,700 line:-2
If you federate a second domain later on,
you will directly go to this step,


493
00:25:33,767 --> 00:25:37,171 line:-2
as the permission for integration
has already been granted.


494
00:25:38,839 --> 00:25:42,609 line:-2
Next, Apple will scan its database
for username conflicts.


495
00:25:43,143 --> 00:25:46,280 line:-2
These are existing accounts
with usernames from your domain.


496
00:25:47,014 --> 00:25:49,616 line:-2
You will not be able to create
new Managed Apple IDs


497
00:25:49,683 --> 00:25:53,253 line:-2
with usernames that already exist
in Apple ID database.


498
00:25:54,388 --> 00:25:57,658 line:-2
So there is a resolution process
to remove these conflicts.


499
00:25:58,192 --> 00:26:02,963 line:-2
Apple will notify users to select
a new username in a different domain.


500
00:26:03,030 --> 00:26:07,267 line:-2
After 60 days, any remaining usernames
will be automatically updated


501
00:26:07,334 --> 00:26:09,803 line:-1
to a temporary domain by Apple.


502
00:26:09,870 --> 00:26:12,673 line:-2
Once that is done,
you can create Managed Apple IDs


503
00:26:12,739 --> 00:26:15,609 line:-2
with any username
in the domain you are federating.


504
00:26:16,777 --> 00:26:18,579 line:-1
Even if there are conflicts,


505
00:26:18,645 --> 00:26:21,815 line:-2
you do not have to wait 60 days
to enable federation.


506
00:26:21,882 --> 00:26:24,818 line:-2
Once the scan is complete
and you have the conflict results,


507
00:26:24,885 --> 00:26:28,055 line:-2
you can go ahead
and enable federation anytime.


508
00:26:28,121 --> 00:26:31,358 line:-2
Users without username conflicts
can then use Apple Services


509
00:26:31,425 --> 00:26:33,794 line:-2
with their organization credentials
right away.


510
00:26:34,862 --> 00:26:38,398 line:-2
Let's do a quick recap on the steps needed
to enable federation.


511
00:26:39,433 --> 00:26:41,668 line:-1
First, verify your domain.


512
00:26:42,169 --> 00:26:45,272 line:-2
Then sign in as an administrator
and provide consent.


513
00:26:46,440 --> 00:26:48,842 line:-1
Then sign in as a user in the domain.


514
00:26:50,444 --> 00:26:54,381 line:-2
Review username conflicts
and initiate resolution steps if required.


515
00:26:56,416 --> 00:26:58,685 line:-1
Then turn federation on.


516
00:26:59,319 --> 00:27:03,223 line:-2
Federated authentication removes
many of the account management challenges,


517
00:27:03,290 --> 00:27:06,927 line:-2
particularly the hardest one
of credential management.


518
00:27:07,594 --> 00:27:11,331 line:-2
But there are still a few important ones
that need to be addressed.


519
00:27:12,366 --> 00:27:15,569 line:-2
What happens when a user
leaves the organization?


520
00:27:15,636 --> 00:27:18,105 line:-2
Their access must be revoked
in a timely manner


521
00:27:18,172 --> 00:27:20,474 line:-1
to meet security and regulatory needs.


522
00:27:21,308 --> 00:27:25,412 line:-2
Of course, with federation, the user will
not be able to sign in after they leave,


523
00:27:25,479 --> 00:27:29,650 line:-2
but what about the devices and
applications they are already signed into?


524
00:27:29,716 --> 00:27:32,252 line:-2
How can we ensure
that those sessions are terminated?


525
00:27:34,388 --> 00:27:35,822 line:-1
Over the life of an account,


526
00:27:35,889 --> 00:27:38,659 line:-2
information such as
the department a user works in


527
00:27:38,725 --> 00:27:41,061 line:-1
or even their name, can change.


528
00:27:41,128 --> 00:27:44,198 line:-2
What is the best way to ensure
that the user's profile information


529
00:27:44,264 --> 00:27:46,533 line:-1
is consistent across all services?


530
00:27:48,602 --> 00:27:51,738 line:-2
Creating the Managed Apple ID
automatically at the time of sign-in


531
00:27:51,805 --> 00:27:53,507 line:-1
works for most users.


532
00:27:53,574 --> 00:27:56,376 line:-2
But what if there are certain
service-specific permissions


533
00:27:56,443 --> 00:27:57,578 line:-1
required for a user?


534
00:27:57,644 --> 00:28:00,414 line:-2
How do we avoid the manual work needed
to pre-create the account


535
00:28:00,480 --> 00:28:02,549 line:-2
so that permissions
can be granted up-front?


536
00:28:04,384 --> 00:28:08,355 line:-2
SCIM is a standard solution
that addresses all these problems.


537
00:28:08,422 --> 00:28:12,626 line:-2
We are very happy to share
that we are introducing SCIM integration


538
00:28:12,693 --> 00:28:15,362 line:-2
with Azure Active Directory
later this year.


539
00:28:15,929 --> 00:28:19,132 line:-2
This integration will be available
in both Apple Business Manager


540
00:28:19,199 --> 00:28:21,001 line:-1
and Apple School Manager.


541
00:28:22,035 --> 00:28:25,072 line:-2
Let's see what SCIM is
and how it will help.


542
00:28:26,106 --> 00:28:29,343 line:-2
SCIM is an automated process
for exchanging information


543
00:28:29,409 --> 00:28:32,379 line:-2
between an identity provider
and a service provider.


544
00:28:32,880 --> 00:28:37,417 line:-2
It allows the synchronization of
account data between Azure AD and Apple.


545
00:28:38,852 --> 00:28:40,954 line:-1
It's a standards-based data exchange


546
00:28:41,021 --> 00:28:43,457 line:-2
covering the full life cycle
of the account.


547
00:28:43,524 --> 00:28:48,362 line:-2
So account creations, modifications
and deletions, all can be synchronized.


548
00:28:48,428 --> 00:28:51,465 line:-2
It will be available
for all federated organizations


549
00:28:51,532 --> 00:28:54,668 line:-2
in Apple Business Manager
and Apple School Manager.


550
00:28:54,735 --> 00:28:58,005 line:-2
Education organizations
that already have a process


551
00:28:58,071 --> 00:29:01,141 line:-2
for importing account information
into Apple School Manager


552
00:29:01,208 --> 00:29:05,913 line:-2
via the SIS or SFTP process
will now have SCIM as another option.


553
00:29:05,979 --> 00:29:08,682 line:-2
Let's look at an overview
of the SCIM process.


554
00:29:08,749 --> 00:29:12,186 line:-2
Once a SCIM connection is set up
for your organization,


555
00:29:12,252 --> 00:29:15,122 line:-2
Azure AD monitors your user directory
for changes


556
00:29:15,189 --> 00:29:18,792 line:-2
and automatically publishes these changes
to Apple Business Manager.


557
00:29:20,394 --> 00:29:22,996 line:-1
Over a period of time, users may be added.


558
00:29:23,664 --> 00:29:28,268 line:-2
Some users' profiles may be updated,
and some other users may be deleted.


559
00:29:29,136 --> 00:29:33,407 line:-2
Azure AD monitors for these changes
and, using the SCIM interface,


560
00:29:33,473 --> 00:29:36,877 line:-2
identifies the changes to be sent
to Apple Business Manager.


561
00:29:37,978 --> 00:29:42,583 line:-2
Apple Business Manager consumes this data
and applies it to its database,


562
00:29:42,649 --> 00:29:44,718 line:-1
synchronizing it with Azure AD.


563
00:29:46,353 --> 00:29:49,122 line:-1
By keeping the two repositories in sync,


564
00:29:49,189 --> 00:29:53,493 line:-2
SCIM enhances the security and usability
of the federated architecture.


565
00:29:54,528 --> 00:29:57,030 line:-1
Now let's go over the SCIM setup process.


566
00:29:57,698 --> 00:29:59,700 line:-1
Similar to federated authentication,


567
00:29:59,766 --> 00:30:02,669 line:-2
SCIM configuration also requires you
to be an administrator


568
00:30:02,736 --> 00:30:05,272 line:-2
in both Apple Business Manager
and Azure AD.


569
00:30:07,074 --> 00:30:11,745 line:-2
Apple Business Manager will now have a new
data source option to configure SCIM.


570
00:30:12,346 --> 00:30:15,516 line:-2
Apple School Manager already supports
data source configuration


571
00:30:15,582 --> 00:30:17,885 line:-1
for SIS and SFTP.


572
00:30:17,951 --> 00:30:20,787 line:-2
It will now offer SCIM
as an alternative option.


573
00:30:22,122 --> 00:30:24,892 line:-2
Select "connect"
to start the configuration process.


574
00:30:26,059 --> 00:30:27,794 line:-1
This will generate a SCIM token


575
00:30:27,861 --> 00:30:31,098 line:-2
that you need to upload
to Azure Active Directory.


576
00:30:31,164 --> 00:30:33,233 line:-1
Copy this token for later use.


577
00:30:33,300 --> 00:30:36,803 line:-2
Once generated, the SCIM token
must be used within four days,


578
00:30:36,870 --> 00:30:38,438 line:-1
after which it will expire.


579
00:30:39,940 --> 00:30:41,408 line:-1
After you generate the token,


580
00:30:41,475 --> 00:30:44,878 line:-2
a tenant URL will also be displayed
in the user interface.


581
00:30:44,945 --> 00:30:46,346 line:-1
Note the tenant URL, too,


582
00:30:46,413 --> 00:30:50,684 line:-2
as both the token and the URL are needed
for Azure AD configuration.


583
00:30:51,919 --> 00:30:54,521 line:-1
Sign into Azure AD as an administrator.


584
00:30:54,588 --> 00:30:57,391 line:-2
Navigate to
Enterprise Applications section


585
00:30:57,457 --> 00:31:00,093 line:-2
and find the Apple Business Manager
application.


586
00:31:00,694 --> 00:31:03,363 line:-2
Go to the Provisioning section
for this application


587
00:31:03,430 --> 00:31:07,000 line:-2
and enter the information you obtained
from Apple Business Manager.


588
00:31:07,734 --> 00:31:12,005 line:-2
You can also choose to synchronize data
for all users in your directory,


589
00:31:12,072 --> 00:31:13,874 line:-1
or you can choose to synchronize data


590
00:31:13,941 --> 00:31:17,444 line:-2
for just the subset of users you assign
to Apple Business Manager.


591
00:31:18,645 --> 00:31:21,515 line:-1
Make your selection and click "save."


592
00:31:21,582 --> 00:31:24,117 line:-2
Azure AD
will automatically test the connection


593
00:31:24,184 --> 00:31:26,153 line:-1
and start data synchronization.


594
00:31:27,988 --> 00:31:30,691 line:-2
You can verify the SCIM status
in Apple Business Manager


595
00:31:30,757 --> 00:31:33,327 line:-1
using the Activity sidebar.


596
00:31:33,393 --> 00:31:37,531 line:-2
You can see the connection status and
the count of accounts imported via SCIM.


597
00:31:38,065 --> 00:31:40,734 line:-1
You can also see SCIM as a data source


598
00:31:40,801 --> 00:31:44,671 line:-2
on the label on accounts that have been
synchronized via the SCIM interface.


599
00:31:44,738 --> 00:31:48,275 line:-2
From now on, account information
will be automatically synchronized


600
00:31:48,342 --> 00:31:50,811 line:-2
between Azure AD
and Apple Business Manager.


601
00:31:51,545 --> 00:31:56,283 line:-2
Together, federation and SCIM will greatly
simplify your account management processes


602
00:31:56,350 --> 00:31:59,953 line:-2
and we are very excited to make
SCIM integration available to you.


603
00:32:00,287 --> 00:32:03,490 line:-2
Managed Apple IDs
allow you to use Apple Services


604
00:32:03,557 --> 00:32:05,893 line:-1
in a way that is tailored to your needs.


605
00:32:06,527 --> 00:32:08,562 line:-1
Federated authentication and SCIM


606
00:32:08,629 --> 00:32:12,099 line:-2
automate and simplify
identity management processes,


607
00:32:12,165 --> 00:32:14,935 line:-2
provide a seamless experience
to your users,


608
00:32:15,002 --> 00:32:18,605 line:-2
and help you get the most value
out of Apple Services.


609
00:32:18,672 --> 00:32:20,440 line:-1
I'll now hand it back to Mike.


610
00:32:21,508 --> 00:32:22,509 line:-1
Thanks, Sudhakar.


611
00:32:22,576 --> 00:32:25,846 line:-2
I'd like to briefly focus in a bit more
on federation and SSO.


612
00:32:26,547 --> 00:32:29,650 line:-2
These are complementary technologies
within our ecosystem.


613
00:32:29,716 --> 00:32:31,985 line:-1
Identity providers support SSO extensions.


614
00:32:32,052 --> 00:32:33,887 line:-2
As I mentioned
in the beginning of the session,


615
00:32:33,954 --> 00:32:36,823 line:-2
we've seen several large providers
like Microsoft and Okta


616
00:32:36,890 --> 00:32:39,493 line:-1
bring SSO extensions to market already.


617
00:32:39,560 --> 00:32:43,664 line:-2
SSO extensions allow non-Apple
applications and Web sites to use them


618
00:32:43,730 --> 00:32:45,832 line:-2
to directly integrate
with the identity provider


619
00:32:45,899 --> 00:32:47,601 line:-1
for the SSO experience.


620
00:32:47,668 --> 00:32:52,139 line:-2
On the other hand, Apple apps and services
work only with Managed Apple IDs,


621
00:32:52,206 --> 00:32:54,107 line:-1
meaning they do not use SSO extensions


622
00:32:54,174 --> 00:32:56,510 line:-2
to integrate
with your identity provider directly.


623
00:32:56,577 --> 00:32:59,580 line:-2
Instead, they integrate with Apple
for authentication,


624
00:32:59,646 --> 00:33:03,083 line:-2
which can then use federation
with Microsoft Azure Active Directory.


625
00:33:03,984 --> 00:33:07,754 line:-2
Whether Microsoft Azure Active Directory
is the actual backing identity provider


626
00:33:07,821 --> 00:33:08,822 line:-1
is up to you.


627
00:33:08,889 --> 00:33:10,657 line:-1
As Sudhakar described earlier,


628
00:33:10,724 --> 00:33:14,895 line:-2
Azure Active Directory also supports
federating with other identity providers.


629
00:33:14,962 --> 00:33:18,365 line:-2
So while Apple Business Manager
needs to talk to Azure Active Directory,


630
00:33:18,432 --> 00:33:22,135 line:-2
the backing source for the identities
could be another identity provider.


631
00:33:22,803 --> 00:33:25,372 line:-2
I'd like to wrap up by summarizing
what we discussed today


632
00:33:25,439 --> 00:33:26,607 line:-1
and provide some calls to action.


633
00:33:27,474 --> 00:33:31,778 line:-2
Use local accounts on macOS
whenever possible for 1:1 deployments


634
00:33:31,845 --> 00:33:35,549 line:-2
and enable directory connectivity
via the built-in Kerberos extension,


635
00:33:35,616 --> 00:33:36,917 line:-1
other SSO extensions,


636
00:33:36,984 --> 00:33:40,554 line:-2
or additional third-party value adds
often provided by MDM vendors.


637
00:33:41,088 --> 00:33:43,090 line:-1
Mobile accounts are supported in macOS


638
00:33:43,156 --> 00:33:45,526 line:-2
but are not recommended
for 1:1 deployments.


639
00:33:45,592 --> 00:33:46,927 line:-1
For shared lab environments,


640
00:33:46,994 --> 00:33:48,962 line:-2
mobile accounts
are often appropriate to use,


641
00:33:49,029 --> 00:33:53,300 line:-2
and they can even be configured to expire
after a certain period of time if desired.


642
00:33:53,367 --> 00:33:56,503 line:-2
This year we've brought a number
of new improvements to SSO extensions


643
00:33:56,570 --> 00:33:58,438 line:-2
and the built-in system
Kerberos extension.


644
00:33:58,505 --> 00:34:00,908 line:-2
We encourage you take advantage
of these improvements


645
00:34:00,974 --> 00:34:04,478 line:-2
to allow for an even better
single-sign-on experience for your users.


646
00:34:04,545 --> 00:34:06,580 line:-1
Use Managed Apple IDs in your institution,


647
00:34:06,647 --> 00:34:09,516 line:-2
as they're purpose-built
for enterprise and education.


648
00:34:09,583 --> 00:34:11,818 line:-2
They are created and managed
by your organization,


649
00:34:11,885 --> 00:34:15,389 line:-2
built for data privacy,
and provide access to Apple Services.


650
00:34:15,956 --> 00:34:19,126 line:-2
Verify domains in Apple School Manager
and Apple Business Manager


651
00:34:19,193 --> 00:34:22,228 line:-2
to enable the use of federation
for easy account creation


652
00:34:22,295 --> 00:34:25,799 line:-2
backed by an existing Microsoft Azure
Active Directory credential.


653
00:34:26,500 --> 00:34:29,636 line:-2
SCIM support is new and will be launching
in Apple School Manager


654
00:34:29,703 --> 00:34:32,172 line:-2
and Apple Business Manager
later this year.


655
00:34:32,239 --> 00:34:33,440 line:-1
It provides a data feed


656
00:34:33,507 --> 00:34:36,909 line:-2
directly from Microsoft Azure
Active Directory back to Apple


657
00:34:36,976 --> 00:34:40,480 line:-2
to help with account creation,
modifications and deletions.


658
00:34:41,348 --> 00:34:45,819 line:0
Please be sure to explore all the other
WWDC 2020 Enterprise sessions


659
00:34:45,886 --> 00:34:48,155 line:0
which are dedicated to IT professionals.


660
00:34:48,222 --> 00:34:51,725 line:0
And also, look in this session's resources
for last year's tech talk


661
00:34:51,792 --> 00:34:54,127 line:0
providing a deep dive on extensible SSO.


662
00:34:54,661 --> 00:34:57,164 line:-2
Thank you, and we hope you enjoy
all of the great content


663
00:34:57,231 --> 00:34:59,867 line:-1
that WWDC 2020 has to offer.

