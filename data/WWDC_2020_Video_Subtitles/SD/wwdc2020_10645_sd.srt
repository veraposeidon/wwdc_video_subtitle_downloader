1
00:00:03,836 --> 00:00:06,874 line:-1
Hello and welcome to WWDC.


2
00:00:09,009 --> 00:00:13,280 line:0
Hi, my name is Caleb.
I'm a software engineer on the tvOS team.


3
00:00:14,214 --> 00:00:16,350 line:-1
Today, I'm excited to share with you


4
00:00:16,416 --> 00:00:20,521 line:-2
a great new way for your apps to support
multiple users on Apple TV.


5
00:00:21,321 --> 00:00:24,992 line:-2
Apple TV is designed to be used
by everyone in your home.


6
00:00:26,126 --> 00:00:27,661 line:-1
And we think it's really important


7
00:00:27,728 --> 00:00:32,366 line:-2
that everyone who uses Apple TV is able to
access all of their own content and data.


8
00:00:33,066 --> 00:00:35,936 line:-1
In tvOS 13, we made switching users easy


9
00:00:36,003 --> 00:00:39,173 line:-2
by adding fast user switching
right in Control Center.


10
00:00:41,675 --> 00:00:44,444 line:-1
We also added the TVUserManager API


11
00:00:44,511 --> 00:00:48,515 line:-2
so apps can link their own user profiles
with users on the device.


12
00:00:50,717 --> 00:00:54,021 line:0
So if your app has its own user profiles,


13
00:00:54,087 --> 00:00:57,658 line:0
I encourage you to watch
"Mastering the Living Room with tvOS"


14
00:00:57,724 --> 00:01:00,027 line:0
from WWDC 2019


15
00:01:00,093 --> 00:01:05,566 line:0
so you can learn how TVUserManager can
help take people right to their content.


16
00:01:05,632 --> 00:01:08,235 line:-2
But what if your app doesn't have
its own user profiles?


17
00:01:08,302 --> 00:01:11,238 line:-2
What if you want to store separate data
for each user instead?


18
00:01:11,805 --> 00:01:15,843 line:-2
Today, tvOS apps have access
to a single set of resources


19
00:01:15,909 --> 00:01:17,244 line:-1
for the entire device.


20
00:01:18,111 --> 00:01:21,381 line:-1
That means things like iCloud, Game Center


21
00:01:21,448 --> 00:01:23,217 line:-1
and Local Storage for your app's data


22
00:01:23,283 --> 00:01:26,153 line:-2
are the same
no matter who's using Apple TV.


23
00:01:27,020 --> 00:01:29,857 line:-2
But wouldn't it be great
if your app knew who was using it


24
00:01:29,923 --> 00:01:32,459 line:-2
so you could create a personalized
user interface


25
00:01:32,526 --> 00:01:35,762 line:-2
and access data from their other devices
using iCloud?


26
00:01:36,864 --> 00:01:38,098 line:-1
In tvOS 14,


27
00:01:38,165 --> 00:01:41,802 line:-2
we're making it really easy
for your apps to do exactly that.


28
00:01:42,436 --> 00:01:45,405 line:-2
Now, each person who uses your app
will have access


29
00:01:45,472 --> 00:01:47,774 line:-1
to all of their own data in iCloud,


30
00:01:47,841 --> 00:01:50,110 line:-1
Achievements and Friends and Game Center,


31
00:01:50,177 --> 00:01:52,880 line:-2
and even their own local data
and preferences.


32
00:01:53,514 --> 00:01:56,750 line:-2
And because your apps can access data
in each user's iCloud,


33
00:01:56,817 --> 00:02:01,121 line:-2
everyone using Apple TV will now be able
to start a game on their iPhone,


34
00:02:01,188 --> 00:02:03,257 line:-1
continue playing on Apple TV


35
00:02:03,323 --> 00:02:06,627 line:-2
and easily sync their progress
across all of their other devices.


36
00:02:07,461 --> 00:02:09,096 line:-1
Let's talk about how this works.


37
00:02:10,130 --> 00:02:13,433 line:-2
When your app declares support
for multiple users in tvOS 14,


38
00:02:13,500 --> 00:02:17,070 line:-2
it will be given access to accounts
and storage for the selected user.


39
00:02:18,305 --> 00:02:19,640 line:-1
When a new user is selected,


40
00:02:19,706 --> 00:02:22,242 line:-2
your app will be given a chance
to save any unsaved data,


41
00:02:22,309 --> 00:02:23,810 line:-1
then it will be terminated.


42
00:02:25,312 --> 00:02:28,582 line:0
If your app was running in the foreground
when a new user was selected,


43
00:02:28,649 --> 00:02:31,118 line:0
it will be automatically relaunched
for the new user.


44
00:02:33,220 --> 00:02:36,356 line:-2
So far, I've only mentioned iCloud
and Game Center by name.


45
00:02:36,790 --> 00:02:40,294 line:-2
But I'm happy to share that all of the API
we provide for storing data,


46
00:02:40,360 --> 00:02:42,729 line:-1
both locally on Apple TV and in the cloud,


47
00:02:42,796 --> 00:02:45,499 line:-1
support storing individual user data.


48
00:02:46,700 --> 00:02:50,237 line:-2
And the best part is
you don't have to make any code changes.


49
00:02:50,304 --> 00:02:54,408 line:-2
You can keep using all of the API you're
already using to read and write data,


50
00:02:54,474 --> 00:02:56,743 line:-1
and the system will take care of the rest.


51
00:02:59,012 --> 00:03:02,349 line:-2
By now you're probably excited to learn
how to enable this for your apps.


52
00:03:02,416 --> 00:03:05,652 line:-2
There are only three things you need to do
to support multiple users


53
00:03:05,719 --> 00:03:07,120 line:-1
in your tvOS apps.


54
00:03:07,788 --> 00:03:11,959 line:-2
I'm going to go over them with you now,
starting with User Management capability.


55
00:03:12,759 --> 00:03:14,795 line:-1
In tvOS 14 and Xcode 12,


56
00:03:14,862 --> 00:03:19,132 line:-2
we have a new Runs as Current User option
in the User Management capability.


57
00:03:19,867 --> 00:03:24,505 line:-2
This tells the system that you want your
app to be able to support multiple users.


58
00:03:25,339 --> 00:03:27,341 line:-1
You can add the User Management capability


59
00:03:27,407 --> 00:03:31,545 line:-2
by navigating to your app's
Signing and Capabilities editor in Xcode.


60
00:03:32,713 --> 00:03:35,716 line:-2
And when you add this to your app target
in Xcode 12,


61
00:03:35,782 --> 00:03:39,319 line:-2
the Runs as Current User option
will be selected by default.


62
00:03:40,821 --> 00:03:44,858 line:-2
Next, I'd like to talk about changes
to the application life cycle.


63
00:03:46,393 --> 00:03:50,264 line:-2
Earlier I mentioned that when the selected
user changes, your app will be terminated.


64
00:03:51,231 --> 00:03:55,068 line:-2
If your app is currently running,
make sure you save any unsaved data


65
00:03:55,135 --> 00:03:56,703 line:-1
before your process exits.


66
00:03:58,205 --> 00:04:01,241 line:-2
You can do that by implementing
applicationWillTerminate


67
00:04:01,308 --> 00:04:02,576 line:-1
in your app delegate.


68
00:04:03,810 --> 00:04:06,713 line:-2
And note, they're given
a limited amount of time to perform tasks


69
00:04:06,780 --> 00:04:08,382 line:-1
when this function is called,


70
00:04:08,448 --> 00:04:12,019 line:-2
so be sure to do as little work
as possible to save any user data.


71
00:04:12,886 --> 00:04:14,755 line:-1
Let's take a look at an example.


72
00:04:15,889 --> 00:04:18,024 line:-2
Here I implemented
applicationWillTerminate


73
00:04:18,091 --> 00:04:19,526 line:-1
in my app delegate.


74
00:04:19,593 --> 00:04:23,197 line:-2
First, I check whether my game has
any changes that need to be saved.


75
00:04:23,931 --> 00:04:28,502 line:-2
If not, it's best to return right away so
the system may continue switching users.


76
00:04:30,337 --> 00:04:33,073 line:-2
Next, I ask my game
to save any unsaved data


77
00:04:33,140 --> 00:04:35,108 line:-1
both locally and to CloudKit.


78
00:04:36,143 --> 00:04:37,377 line:-1
Once this function returns,


79
00:04:37,444 --> 00:04:40,514 line:-2
the system is free to terminate my process
and switch users.


80
00:04:40,581 --> 00:04:42,983 line:-2
So I'm using a semaphore
to keep it running long enough


81
00:04:43,050 --> 00:04:44,785 line:-1
to save data asynchronously.


82
00:04:46,753 --> 00:04:48,856 line:-2
There's one last change
you may have to make


83
00:04:48,922 --> 00:04:51,959 line:-2
if your app uses CloudKit
subscription notifications.


84
00:04:53,694 --> 00:04:55,495 line:-1
When your app supports multiple users,


85
00:04:55,562 --> 00:04:58,498 line:-2
it may get CloudKit notifications
for other users on the device


86
00:04:58,565 --> 00:05:00,033 line:-1
who have used your app.


87
00:05:01,168 --> 00:05:03,370 line:-2
To make your app more efficient,
you should check


88
00:05:03,437 --> 00:05:07,975 line:-2
the new subscriptionOwnerUserRecordID
property on CKNotification


89
00:05:08,041 --> 00:05:11,178 line:-2
and compare it with the RecordID
of the current CloudKit user.


90
00:05:12,646 --> 00:05:15,015 line:-2
If the notification was meant
for a different user,


91
00:05:15,082 --> 00:05:16,617 line:-1
it can be safely discarded.


92
00:05:18,252 --> 00:05:19,253 line:-1
In this example,


93
00:05:19,319 --> 00:05:22,823 line:-2
I implemented the application
didReceiveRemoteNotification function


94
00:05:22,890 --> 00:05:24,224 line:-1
in my app delegate.


95
00:05:26,360 --> 00:05:29,263 line:-2
I start by initializing
a CKNotification object,


96
00:05:29,329 --> 00:05:31,732 line:-1
fromNotification userInfo dictionary.


97
00:05:33,867 --> 00:05:37,971 line:-2
Next, I check the notification's
subscriptionOwnerUserRecordID


98
00:05:38,038 --> 00:05:41,842 line:-2
and make sure it's equal to
my game object's currentUserRecordID.


99
00:05:41,909 --> 00:05:44,745 line:-2
Once I know this notification
is meant for the current user,


100
00:05:44,811 --> 00:05:47,347 line:-2
I tell my game object
to handle the notification


101
00:05:47,414 --> 00:05:49,082 line:-1
and call the completion handler.


102
00:05:50,317 --> 00:05:51,318 line:-1
That's it.


103
00:05:51,385 --> 00:05:52,753 line:-1
That's all you need to do


104
00:05:52,819 --> 00:05:56,657 line:-2
to prepare your app
to support multiple users in tvOS 14.


105
00:05:56,723 --> 00:05:58,792 line:-1
And now, I'd like to show you a demo.


106
00:05:59,860 --> 00:06:03,030 line:-2
Here, I have a simple game
that I ran from Xcode.


107
00:06:03,864 --> 00:06:05,933 line:-2
This game syncs all of its data
with iCloud


108
00:06:05,999 --> 00:06:08,335 line:-1
using NSPersistentCloudKitContainer.


109
00:06:10,103 --> 00:06:13,373 line:-2
The main menu allows me to resume the game
I started playing earlier


110
00:06:13,440 --> 00:06:16,610 line:-2
and to view my fastest solve times
from previous games.


111
00:06:17,344 --> 00:06:21,481 line:-2
Right now, my high score
is one minute and nine seconds.


112
00:06:21,548 --> 00:06:23,317 line:-1
If I select "Resume Game,"


113
00:06:23,383 --> 00:06:25,686 line:-2
you can see the current state
of the game board.


114
00:06:25,752 --> 00:06:28,922 line:-2
I can flip over tiles
to try to find matching Memoji.


115
00:06:32,759 --> 00:06:35,729 line:-2
Now my friend Felipe wants to play
and show off his high score.


116
00:06:35,796 --> 00:06:38,498 line:-2
He opens Control Center
and switches to his user.


117
00:06:39,800 --> 00:06:41,635 line:-1
But the game stayed the same.


118
00:06:41,702 --> 00:06:44,705 line:-2
That's not very exciting.
Let's see what we can do about that.


119
00:06:47,207 --> 00:06:49,476 line:-1
Here I have the Xcode project for my game.


120
00:06:51,144 --> 00:06:54,515 line:-2
I'm going to show you how easy it is
to add support for multiple users


121
00:06:54,581 --> 00:06:56,483 line:-1
to your tvOS app or game.


122
00:06:57,985 --> 00:07:01,221 line:-2
First, you'll navigate
to the Signing and Capabilities editor


123
00:07:01,288 --> 00:07:02,556 line:-1
of your app target.


124
00:07:04,558 --> 00:07:06,960 line:-2
Next, you'll add
the User Management capability.


125
00:07:09,696 --> 00:07:11,164 line:-1
And last, you'll make sure


126
00:07:11,231 --> 00:07:13,734 line:-2
the Runs as Current User option
is selected.


127
00:07:14,301 --> 00:07:15,369 line:-1
That's it.


128
00:07:15,435 --> 00:07:18,338 line:-2
Let's build and run
and switch back to Apple TV.


129
00:07:22,309 --> 00:07:24,711 line:-2
If I resume my game
or view my high scores,


130
00:07:24,778 --> 00:07:27,514 line:-2
you can see the same game data
that I showed you earlier.


131
00:07:28,081 --> 00:07:30,984 line:-2
But now, let's see what happens
when I switch users.


132
00:07:31,051 --> 00:07:32,953 line:-1
Notice that the game was terminated.


133
00:07:33,020 --> 00:07:36,657 line:-2
The system switched users,
and the game was relaunched for Felipe.


134
00:07:38,125 --> 00:07:41,662 line:-2
Now when Felipe plays the game,
he sees his own data.


135
00:07:41,728 --> 00:07:43,564 line:-1
He doesn't have an in-progress game yet,


136
00:07:43,630 --> 00:07:46,700 line:-2
so he has an option to start a new game
with no matches.


137
00:07:47,701 --> 00:07:51,471 line:-2
And notice, his high score of 39 seconds
is faster than mine.


138
00:07:52,739 --> 00:07:55,542 line:-2
Again, all this data is synced
with iCloud,


139
00:07:55,609 --> 00:07:58,145 line:-2
and it's kept completely separate
for each user.


140
00:07:58,212 --> 00:08:00,981 line:-2
And I didn't have to make any code changes
to support this.


141
00:08:01,048 --> 00:08:03,517 line:-2
We are really excited
for your games and apps


142
00:08:03,584 --> 00:08:06,787 line:-2
to take full advantage of multiple users
in tvOS 14.


143
00:08:07,821 --> 00:08:10,524 line:-2
To wrap up, the new
Runs as Current User option


144
00:08:10,591 --> 00:08:12,259 line:-1
in the User Management capability


145
00:08:12,326 --> 00:08:16,296 line:-2
allows your apps to easily support
multiple users in tvOS 14.


146
00:08:17,865 --> 00:08:19,433 line:-1
You can use existing API


147
00:08:19,499 --> 00:08:21,869 line:-2
to store separate data
for each person using your app


148
00:08:21,935 --> 00:08:23,637 line:-1
with no code changes required.


149
00:08:25,239 --> 00:08:28,809 line:0
This allows you to take full advantage
of multiple users on Apple TV


150
00:08:28,876 --> 00:08:31,011 line:0
and provide everyone
with a seamless experience


151
00:08:31,078 --> 00:08:33,413 line:0
when they use your app
across all of their devices.


152
00:08:34,615 --> 00:08:37,217 line:-2
Thanks for watching,
and enjoy the rest of the conference.

