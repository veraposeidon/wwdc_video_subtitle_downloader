1
00:00:03,904 --> 00:00:06,773 line:-1
Hello, and welcome to WWDC.


2
00:00:08,575 --> 00:00:11,712 line:0
Hello, and welcome back to Swan's Quest.


3
00:00:11,778 --> 00:00:15,582 line:-2
I'm Rob, your host as we go inside
the second chapter of our journey.


4
00:00:16,049 --> 00:00:18,418 line:-2
We hope you had a fun time
with the first challenge,


5
00:00:18,485 --> 00:00:21,221 line:-2
and learned a little bit
about accessible interfaces.


6
00:00:21,288 --> 00:00:24,258 line:-2
In the second chapter,
you returned to the Lizard,


7
00:00:24,324 --> 00:00:27,494 line:-2
who helps you uncover
the mystery of the Swan's scroll.


8
00:00:27,561 --> 00:00:28,962 line:-1
I don't want to spoil it for you,


9
00:00:29,029 --> 00:00:31,231 line:-2
but I can tell you
that to pass this challenge,


10
00:00:31,298 --> 00:00:34,635 line:-2
you need to play
a series of musical notes for the Swan.


11
00:00:35,769 --> 00:00:39,573 line:-2
In order to play notes, we're gonna
show you two pieces of API:


12
00:00:39,640 --> 00:00:41,675 line:-1
ToneOutput and Timer.


13
00:00:41,742 --> 00:00:43,777 line:-1
We'll cover both of them in enough detail


14
00:00:43,844 --> 00:00:46,947 line:-1
for you to impress our magnificent regent.


15
00:00:47,014 --> 00:00:49,149 line:-1
Finally, we'll end with a side quest


16
00:00:49,216 --> 00:00:51,518 line:-2
for those of you
in search of more adventure.


17
00:00:52,119 --> 00:00:54,655 line:-1
First, let's talk about how to play tones.


18
00:00:54,721 --> 00:00:57,457 line:-2
For that, we're gonna use
the ToneOutput type.


19
00:00:58,392 --> 00:01:00,994 line:-2
We introduced ToneOutput
in Sonic Workshop,


20
00:01:01,595 --> 00:01:05,766 line:-2
and included it in Sonic Create,
so you could use it in your own projects.


21
00:01:05,832 --> 00:01:07,835 line:-1
Let's take a closer look at ToneOutput.


22
00:01:08,802 --> 00:01:12,005 line:-2
Our ToneOutput type
has a straightforward API


23
00:01:12,072 --> 00:01:15,242 line:-2
for playing generated signals
from a tone value.


24
00:01:15,309 --> 00:01:18,979 line:-1
It produces 44,100 samples a second.


25
00:01:19,046 --> 00:01:23,183 line:-2
That's so your ears hear continuous sound
instead of discrete pulses.


26
00:01:23,884 --> 00:01:28,989 line:-2
The primary instance method, play(tone:)
is what you call to create a signal.


27
00:01:31,158 --> 00:01:34,228 line:-2
The definition for tone
is equally straightforward.


28
00:01:34,294 --> 00:01:37,764 line:-2
A pitch, which is a Double representation
of a frequency,


29
00:01:37,831 --> 00:01:40,400 line:-1
and a volume, also described as a Double.


30
00:01:41,702 --> 00:01:43,604 line:-1
And this is what it looks like in use.


31
00:01:43,670 --> 00:01:47,107 line:-2
In this example,
we create an instance of ToneOutput,


32
00:01:47,174 --> 00:01:51,678 line:-2
then pass it a 440 Hz frequency,
or middle A.


33
00:01:52,346 --> 00:01:55,182 line:-2
Run this code in your Playground
and you should hear a tone


34
00:01:55,249 --> 00:01:57,985 line:-2
reminiscent of
the Emergency Broadcast System.


35
00:01:58,519 --> 00:02:02,422 line:-2
If you don't stop running your Playground
code, that tone's gonna play forever.


36
00:02:03,390 --> 00:02:06,660 line:-2
Let's check in with Stephen
to see how to play more than one note.


37
00:02:08,127 --> 00:02:09,128 line:-1
Thanks, Rob.


38
00:02:09,196 --> 00:02:13,100 line:-2
As he mentioned, the ToneOutput sample
will play continuously


39
00:02:13,166 --> 00:02:14,268 line:-1
unless it is stopped.


40
00:02:15,102 --> 00:02:17,237 line:-1
To stop the ToneOutput instance,


41
00:02:17,304 --> 00:02:20,474 line:-2
we need to call stopTones
as highlighted here.


42
00:02:21,508 --> 00:02:26,013 line:-2
We can accomplish this in our example
by calling Dispatch_async_After,


43
00:02:26,079 --> 00:02:29,883 line:-2
which calls stopTones
after 400 milliseconds.


44
00:02:29,950 --> 00:02:33,353 line:-2
The note will play for a short
period of time and then stop.


45
00:02:34,087 --> 00:02:37,090 line:-2
This approach won't work
if you want to play more than one note.


46
00:02:38,225 --> 00:02:40,460 line:-1
We recommend using a timer.


47
00:02:40,527 --> 00:02:42,362 line:-1
It's a more straightforward API


48
00:02:42,429 --> 00:02:45,632 line:-2
and it's easy to repeat a loop
over a predetermined time interval.


49
00:02:46,466 --> 00:02:49,303 line:-2
Let's update our example
to play multiple notes.


50
00:02:50,470 --> 00:02:55,776 line:-2
Here, we have supplied the frequencies
for middle A, middle B and middle C.


51
00:02:55,843 --> 00:02:59,947 line:-2
To play them consecutively
after one another, we use a timer.


52
00:03:00,547 --> 00:03:02,683 line:-1
We iterate over our array of tones,


53
00:03:02,749 --> 00:03:05,319 line:-2
playing the next one
every 400 milliseconds.


54
00:03:05,752 --> 00:03:09,990 line:-2
When we get to the end of our array,
we call stopTones on our ToneOutput


55
00:03:10,057 --> 00:03:12,659 line:-2
and invalidate our timer
so it'll stop repeating.


56
00:03:14,161 --> 00:03:17,030 line:-2
Finally, you need to make a call
to endPerformance,


57
00:03:17,097 --> 00:03:19,166 line:-1
so that you get credit for your work.


58
00:03:19,233 --> 00:03:22,436 line:-2
You'll use this same call
on all of your remaining challenges


59
00:03:22,503 --> 00:03:25,405 line:-2
to signal to the Swan
that you've finished performing.


60
00:03:26,006 --> 00:03:28,876 line:-2
And that's how you can use a timer
to play multiple different notes


61
00:03:28,942 --> 00:03:30,444 line:-1
one after the other.


62
00:03:32,513 --> 00:03:33,647 line:-1
Thanks, Stephen.


63
00:03:34,314 --> 00:03:36,683 line:-2
Before we go any further,
I want to warn you.


64
00:03:38,051 --> 00:03:41,822 line:-2
This side quest will contain spoilers
for this chapter's challenge.


65
00:03:41,889 --> 00:03:45,292 line:-2
If you want to complete the challenge
first, hit pause on this video


66
00:03:45,359 --> 00:03:48,228 line:-2
and come back
after you've completed the challenge.


67
00:03:48,295 --> 00:03:49,830 line:-1
Good luck.


68
00:03:52,699 --> 00:03:55,469 line:-1
Okay, are you ready to do this side quest?


69
00:03:56,136 --> 00:03:59,006 line:-2
The Swan's challenge
was to play a C-major scale,


70
00:03:59,072 --> 00:04:01,575 line:-2
and they provided
all of the frequencies for you.


71
00:04:01,642 --> 00:04:05,812 line:-2
Let's see if you can adapt that code
to play an F-major scale.


72
00:04:05,879 --> 00:04:09,516 line:-2
If you think about it, you already have
many of the frequencies you need.


73
00:04:10,250 --> 00:04:13,820 line:-1
First, the F-major scale starts at F4.


74
00:04:13,887 --> 00:04:15,923 line:-1
You already have that note from the Swan.


75
00:04:15,989 --> 00:04:20,527 line:-2
Second, you should be able to reuse
your code from your C-major scale.


76
00:04:21,295 --> 00:04:25,465 line:-2
Finally, if you need to go up an octave,
just double the frequency.


77
00:04:25,532 --> 00:04:27,768 line:-1
That means to get an A5 from an A4,


78
00:04:27,835 --> 00:04:33,674 line:-2
you need to multiply 440 Hz by two
to get 880 Hz.


79
00:04:35,142 --> 00:04:37,978 line:-2
Right. You're gonna need
the frequency for B-flat too.


80
00:04:40,447 --> 00:04:41,448 line:-1
During this episode,


81
00:04:41,515 --> 00:04:44,751 line:-2
we gave you tips for completing
the second challenge in Swan's Quest.


82
00:04:45,219 --> 00:04:46,887 line:-1
We introduced you to ToneOutput


83
00:04:46,954 --> 00:04:50,724 line:-2
and how to use Swift Playgrounds
to play tuned pitches by frequency.


84
00:04:50,791 --> 00:04:55,062 line:-2
Then we discussed how to use timers
to change notes for a certain duration.


85
00:04:55,963 --> 00:05:01,134 line:-2
Tomorrow, we'll be back with a "note-able"
challenge. You're not gonna wanna miss it.


86
00:05:01,702 --> 00:05:03,537 line:-1
Good luck, have fun,


87
00:05:03,604 --> 00:05:07,107 line:-2
and join us in the forums to share
your solutions for the side quest.


88
00:05:07,174 --> 00:05:09,243 line:-1
We'd love to hear how you did.

