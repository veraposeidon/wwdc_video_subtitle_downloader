1
00:00:03,770 --> 00:00:07,107 line:-1
Hello, and welcome to WWDC.


2
00:00:07,808 --> 00:00:10,410 line:0
Hi, everyone. I’m Kevin Matsumura,


3
00:00:10,477 --> 00:00:13,914 line:0
and I’ll be explaining the simple steps
you need to follow


4
00:00:13,981 --> 00:00:18,218 line:0
to preserve High Dynamic Range
in your exported videos.


5
00:00:18,285 --> 00:00:19,586 line:-1
In this session,


6
00:00:19,653 --> 00:00:24,625 line:-2
we’ll review some basic points
on what High Dynamic Range video is,


7
00:00:25,125 --> 00:00:28,362 line:-1
what HDR formats we support in export,


8
00:00:28,428 --> 00:00:34,301 line:-2
how simple it is to export HDR video
content with AV-Asset-Export-Session,


9
00:00:35,035 --> 00:00:36,503 line:-1
the additional flexibility


10
00:00:36,570 --> 00:00:40,741 line:-2
that AV-Asset-Writer provides
when exporting HDR,


11
00:00:40,807 --> 00:00:45,979 line:-2
and finally touch on which Apple platforms
support HDR export.


12
00:00:46,513 --> 00:00:48,815 line:-1
All right, let’s get started.


13
00:00:48,882 --> 00:00:53,020 line:-2
High Dynamic Range extends
the dynamic range of the video


14
00:00:53,086 --> 00:00:57,691 line:-2
above and beyond what is capable
by Standard Dynamic Range video.


15
00:00:57,758 --> 00:01:02,963 line:-2
It does so via a significantly
increased range of luminance values.


16
00:01:04,397 --> 00:01:09,937 line:-2
SDR video is limited to up to
100 candelas per square meter,


17
00:01:10,003 --> 00:01:13,140 line:-1
also commonly referred to as nits.


18
00:01:13,207 --> 00:01:18,011 line:-2
HDR video, on the other hand,
can go all the way up to 10,000 nits.


19
00:01:18,078 --> 00:01:20,447 line:-1
That’s two orders of magnitude greater.


20
00:01:22,649 --> 00:01:27,721 line:-2
This results in videos that can display
brighter whites and deeper blacks.


21
00:01:28,255 --> 00:01:31,558 line:-1
HDR also offers better contrast,


22
00:01:31,625 --> 00:01:35,829 line:-2
resulting in more details in shadows
and striking highlights.


23
00:01:36,630 --> 00:01:40,701 line:-2
While this is technically
all that High Dynamic Range means,


24
00:01:40,767 --> 00:01:45,639 line:-2
HDR is often implicitly paired
with Wide Color gamut.


25
00:01:45,706 --> 00:01:49,409 line:-2
The color gamut, in combination
with the dynamic range,


26
00:01:49,476 --> 00:01:51,311 line:-1
defines the color volume,


27
00:01:51,378 --> 00:01:54,581 line:-2
or the total number of colors
that can be described.


28
00:01:56,617 --> 00:01:59,953 line:0
To accommodate the larger luminance
and color ranges,


29
00:02:00,020 --> 00:02:05,058 line:0
HDR is also typically associated
with higher bit depths,


30
00:02:05,125 --> 00:02:08,562 line:0
with 10-bit common for distribution media.


31
00:02:09,162 --> 00:02:12,966 line:-1
HDR is all about the transfer function.


32
00:02:13,033 --> 00:02:17,037 line:-2
Transfer functions describe
how scene linear light is mapped


33
00:02:17,104 --> 00:02:21,375 line:-2
to non-linear code values
and then back to display light.


34
00:02:22,009 --> 00:02:26,947 line:-2
The goal throughout this overall process
is to preserve the artistic intent


35
00:02:27,014 --> 00:02:31,251 line:-2
of the original scene
all the way to the end user’s display.


36
00:02:33,020 --> 00:02:37,991 line:-2
Opto-Electronic Transfer Functions,
or OETFs,


37
00:02:38,058 --> 00:02:43,397 line:-2
are on the encode or capture-side
and map from scene light to code values.


38
00:02:44,064 --> 00:02:48,368 line:-2
Electro-Optical Transfer Functions,
or EOTFs,


39
00:02:48,435 --> 00:02:51,205 line:-1
are on the decode or display-side


40
00:02:51,271 --> 00:02:54,241 line:-2
and map from code values
back to display light.


41
00:02:54,975 --> 00:03:00,781 line:-2
Note that the EOTF is not necessarily
an exact inverse of the OETF.


42
00:03:01,849 --> 00:03:05,519 line:-1
HDR introduced two new transfer functions.


43
00:03:05,586 --> 00:03:08,989 line:-2
The Hybrid Log-Gamma,
or HLG, transfer function


44
00:03:09,056 --> 00:03:12,693 line:-2
was designed to be backwards compatible
with SDR.


45
00:03:12,759 --> 00:03:16,830 line:-2
This means that HLG content
will display on SDR displays


46
00:03:16,897 --> 00:03:20,400 line:-2
but any pixels exceeding 100 nits
would be clipped.


47
00:03:22,169 --> 00:03:24,872 line:-1
HLG is a scene-referred system,


48
00:03:24,938 --> 00:03:30,077 line:-2
which means the encoded code values are
relative to the normalized scene light.


49
00:03:30,844 --> 00:03:34,548 line:-2
The Perceptual Quantizer,
or PQ, transfer function


50
00:03:34,615 --> 00:03:38,318 line:-2
was designed based on how
the human visual system works,


51
00:03:38,385 --> 00:03:42,589 line:-2
specifically with regard
to contrast sensitivity.


52
00:03:43,257 --> 00:03:47,394 line:-2
Some common PQ HDR formats
that you are likely familiar with


53
00:03:47,461 --> 00:03:50,564 line:-1
are Dolby Vision and HDR10.


54
00:03:51,131 --> 00:03:57,538 line:-2
While an HDR transfer function is
sufficient to categorize a video as HDR,


55
00:03:57,604 --> 00:04:01,275 line:-2
there are HDR formats that insert
additional information


56
00:04:01,341 --> 00:04:03,243 line:-1
into the output bitstream.


57
00:04:03,310 --> 00:04:07,347 line:-2
This additional information,
let’s call it HDR metadata,


58
00:04:07,414 --> 00:04:12,286 line:-2
allows better mapping of the encoded code
values back to display light


59
00:04:12,352 --> 00:04:17,156 line:-2
and is used by the EOTF in the decoder
to account for differences


60
00:04:17,224 --> 00:04:21,094 line:-2
between the mastering display environment
and the current display environment.


61
00:04:21,495 --> 00:04:25,999 line:-2
The contents of HDR metadata
can generally be categorized


62
00:04:26,066 --> 00:04:29,903 line:-1
as stream, scene, or frame statistics.


63
00:04:31,004 --> 00:04:36,109 line:-2
An example of an HDR format
with no metadata is HLG.


64
00:04:36,810 --> 00:04:42,883 line:-2
Some formats add a bit of static metadata
that is constant over the entire movie.


65
00:04:42,950 --> 00:04:45,853 line:-1
An example of this is HDR10.


66
00:04:46,486 --> 00:04:51,024 line:0
And then there are formats that add
dynamic metadata that varies per scene,


67
00:04:51,091 --> 00:04:53,427 line:0
or even on every video frame.


68
00:04:53,493 --> 00:04:55,729 line:0
This is what Dolby Vision does.


69
00:04:55,796 --> 00:05:00,400 line:0
Note that dynamic metadata
can also be paired with static metadata.


70
00:05:00,901 --> 00:05:06,607 line:-2
I mentioned earlier that HDR
is often associated with Wide color gamut.


71
00:05:07,040 --> 00:05:11,345 line:-2
This diagram illustrates the differences
in the color gamuts.


72
00:05:11,411 --> 00:05:18,218 line:-2
This first triangle represents
both the BT.709 and sRGB color spaces,


73
00:05:18,285 --> 00:05:19,987 line:-1
which were originally developed


74
00:05:20,053 --> 00:05:24,157 line:-2
for the standard definition
broadcast television industry.


75
00:05:24,224 --> 00:05:28,362 line:-2
This next larger triangle represents
the P3 color space,


76
00:05:28,428 --> 00:05:33,500 line:-2
originated by Digital Cinema Initiatives
for the film industry.


77
00:05:33,901 --> 00:05:39,540 line:-2
P3 can represent more nuanced colors
over BT.709.


78
00:05:39,606 --> 00:05:44,745 line:-2
This last and largest triangle
represents BT.2020,


79
00:05:44,811 --> 00:05:47,381 line:-1
which offers even more colors.


80
00:05:47,447 --> 00:05:53,587 line:-2
BT.2020 was developed as a standard
for ultra-high definition television.


81
00:05:54,054 --> 00:05:59,860 line:-2
Wide Color gamut, in combination with
HDR transfer functions and 10-bit formats,


82
00:05:59,927 --> 00:06:05,299 line:-2
result in videos that are more vibrant
and representative of the original scene.


83
00:06:06,200 --> 00:06:10,003 line:-2
Now that we have
a basic understanding of HDR,


84
00:06:10,070 --> 00:06:14,741 line:-2
let’s go over which HDR formats
are supported by export.


85
00:06:15,676 --> 00:06:21,381 line:-2
AVFoundation supports HDR
via the HLG and HDR10 formats,


86
00:06:22,082 --> 00:06:27,020 line:-2
which are both industry standards
and widely supported by consumer displays.


87
00:06:27,754 --> 00:06:32,593 line:-2
This is important, because we want your
user to be able to capitalize


88
00:06:32,659 --> 00:06:36,697 line:-2
on all the benefits of HDR
all the way to their display.


89
00:06:37,698 --> 00:06:41,335 line:-2
So regardless of
if your user is viewing your content


90
00:06:41,401 --> 00:06:44,805 line:-2
on an Apple device
that natively supports HDR,


91
00:06:45,706 --> 00:06:51,612 line:-1
like an iPhone, or iPad, or MacBook, or iMac,


92
00:06:51,678 --> 00:06:57,518 line:0
or if they are displaying
to an external HDR monitor or TV,


93
00:06:57,584 --> 00:07:02,222 line:0
your exported videos will render in HDR
for your user.


94
00:07:02,289 --> 00:07:06,493 line:-2
Note that Apple already brought support
for HDR export


95
00:07:06,560 --> 00:07:09,730 line:-1
to our Pro users back in 2017,


96
00:07:09,796 --> 00:07:14,368 line:0
specifically via Final Cut Pro X
and Compressor.


97
00:07:14,434 --> 00:07:18,772 line:-2
This year we are bringing HDR export
to you, the developers.


98
00:07:19,473 --> 00:07:23,177 line:-2
While HDR video content
has typically been limited


99
00:07:23,243 --> 00:07:25,579 line:-1
to high-end video cameras to date,


100
00:07:25,646 --> 00:07:29,783 line:-2
we anticipate that HDR content
will become more common in the future


101
00:07:29,850 --> 00:07:34,421 line:-2
and want to position you with the tools
to take full advantage of it.


102
00:07:35,289 --> 00:07:38,292 line:-2
Now let’s talk about
the main export interface


103
00:07:38,358 --> 00:07:43,263 line:-2
that most of you will be dealing with,
AV-Asset-Export-Session.


104
00:07:43,330 --> 00:07:47,901 line:-2
AV-Asset-Export-Session is
the most common interface of export.


105
00:07:47,968 --> 00:07:51,004 line:-1
It assumes a file transcoding workflow.


106
00:07:51,538 --> 00:07:56,276 line:-2
You can use it to simply export
a single asset in a sharing use case,


107
00:07:57,377 --> 00:07:59,112 line:-1
or you can do some editing


108
00:07:59,179 --> 00:08:03,951 line:-2
by temporally combining multiple
track segments via AV-Composition,


109
00:08:04,017 --> 00:08:09,823 line:-2
or performing spatial compositions using
AV-Video-Composition prior to exporting.


110
00:08:10,824 --> 00:08:15,262 line:-2
AV-Asset-Export-Session is designed
to make exporting simple.


111
00:08:15,796 --> 00:08:18,832 line:-1
AV-Asset-Export-Session is preset-based.


112
00:08:19,333 --> 00:08:23,704 line:-2
The presets define what
the output encoding parameters are,


113
00:08:23,770 --> 00:08:27,674 line:-2
and AV-Asset-Export-Session
takes care of the rest for you.


114
00:08:28,208 --> 00:08:31,645 line:-2
If needed,
it will perform color space conversion,


115
00:08:31,712 --> 00:08:34,748 line:-2
downscaling,
frame rate conversion, and so on.


116
00:08:35,349 --> 00:08:39,553 line:-2
AV-Asset-Export-Session offer presets
for H.264,


117
00:08:39,620 --> 00:08:42,489 line:-1
HEVC and Apple ProRes codecs.


118
00:08:43,390 --> 00:08:47,961 line:-2
There are presets that conform
to specific maximum video resolutions,


119
00:08:48,529 --> 00:08:51,164 line:-2
and there are also
a limited number of presets


120
00:08:51,231 --> 00:08:54,601 line:-2
that allow for selecting
different video quality levels.


121
00:08:55,502 --> 00:09:00,908 line:-2
Here’s a code snippet that illustrates
the simplicity of AV-Asset-Export-Session.


122
00:09:01,775 --> 00:09:07,347 line:-2
You first create the export session
with a source asset and a preset.


123
00:09:07,414 --> 00:09:11,919 line:-2
In this case, I’ve chosen
the HEVC-Highest-Quality preset.


124
00:09:12,619 --> 00:09:18,458 line:-2
You then specify the output file name
as a URL and the outputFileType.


125
00:09:19,226 --> 00:09:20,260 line:-1
That’s it.


126
00:09:20,327 --> 00:09:24,831 line:-2
In the minimal case, this is
all you need to kick-off the export.


127
00:09:25,232 --> 00:09:27,034 line:-1
So what do you need to change


128
00:09:27,100 --> 00:09:31,805 line:-2
in order to export HDR videos
with AV-Asset-Export-Session?


129
00:09:32,372 --> 00:09:34,508 line:-1
I think you’ll like the answer to this.


130
00:09:34,575 --> 00:09:39,546 line:-2
Nothing, if you are using HEVC
or Apple ProRes presets.


131
00:09:40,113 --> 00:09:46,954 line:-2
We have upgraded the existing HEVC presets
to preserve the source’s HDR format.


132
00:09:48,889 --> 00:09:54,628 line:-2
For example, HDR10 source assets
will export as HDR10,


133
00:09:54,695 --> 00:09:57,831 line:-1
HLG exports to HLG,


134
00:09:57,898 --> 00:10:03,837 line:-2
and SDR source assets, of course,
will continue to export as SDR.


135
00:10:04,938 --> 00:10:11,078 line:-2
The Apple ProRes presets will also
preserve the HDR format of the source.


136
00:10:13,447 --> 00:10:17,317 line:-1
In order to convert from HDR to SDR,


137
00:10:17,384 --> 00:10:21,054 line:-2
we recommend that you use
the H.264 presets


138
00:10:21,121 --> 00:10:25,192 line:-2
which will also maximize
backwards compatibility.


139
00:10:25,993 --> 00:10:29,596 line:-2
Compositions,
whether they are temporal or spatial,


140
00:10:29,663 --> 00:10:33,834 line:-2
need additional handling
when mixing dynamic range formats.


141
00:10:34,902 --> 00:10:40,307 line:-2
Let’s consider the case where
we have a mix of HDR and SDR content.


142
00:10:41,508 --> 00:10:46,613 line:-2
AV-Asset-Export-Session will inspect
all source assets presented to it,


143
00:10:46,680 --> 00:10:49,349 line:-1
searching for HDR content.


144
00:10:49,416 --> 00:10:53,887 line:-2
Upon finding the HDR content,
the exported file will be HDR,


145
00:10:53,954 --> 00:10:58,725 line:-2
and any SDR assets in the composition
will be converted to HDR.


146
00:10:59,793 --> 00:11:03,363 line:-1
If there's a mix of differing HDR formats,


147
00:11:03,430 --> 00:11:09,837 line:-2
export’s default policies are
to first prefer HLG over PQ formats.


148
00:11:09,903 --> 00:11:14,474 line:-2
Note that AV-Asset-Export-Session
knows how to convert properly


149
00:11:14,541 --> 00:11:17,344 line:-1
between PQ and HLG formats.


150
00:11:18,612 --> 00:11:20,881 line:-1
If further refinement is needed,


151
00:11:20,948 --> 00:11:26,920 line:-2
then export prefers HDR formats
with metadata over those with no metadata.


152
00:11:27,354 --> 00:11:32,059 line:-2
Graphically, the export composition
policies I just described


153
00:11:32,125 --> 00:11:33,961 line:-1
are shown in this table.


154
00:11:34,027 --> 00:11:40,667 line:-2
The first row and column show
the preference of HDR over SDR.


155
00:11:40,734 --> 00:11:46,473 line:-2
The second row and column show
the preference of HLG over PQ.


156
00:11:46,540 --> 00:11:52,579 line:-2
And the logic reflected in this table is
extensible to any number of source assets.


157
00:11:53,447 --> 00:11:59,286 line:-2
While we expect AVAssetExportSession to
be sufficient for many developers' needs,


158
00:11:59,353 --> 00:12:01,221 line:-1
we know it doesn’t work for everyone.


159
00:12:01,889 --> 00:12:04,658 line:-1
That brings us to AVAssetWriter.


160
00:12:04,725 --> 00:12:08,762 line:-2
Here are two common workflows
for AVAssetWriter:


161
00:12:09,830 --> 00:12:14,301 line:-2
The first workflow employs reading samples
from AVAssetReader


162
00:12:14,368 --> 00:12:20,507 line:-2
that were optionally edited via
AVComposition and/or AVVideoComposition


163
00:12:20,574 --> 00:12:23,577 line:-1
and then exporting with AVAssetWriter.


164
00:12:25,646 --> 00:12:30,584 line:-2
The next workflow represents an app
that uses AVAssetWriter


165
00:12:30,651 --> 00:12:33,787 line:-1
to export camera-captured frames.


166
00:12:33,854 --> 00:12:39,293 line:-2
AVAssetWriter puts you
in complete control of the export process.


167
00:12:39,359 --> 00:12:42,996 line:-2
You can explicitly specify
the video codec,


168
00:12:43,063 --> 00:12:48,068 line:-2
what bit rate you want to use,
the frame rate of the exported video,


169
00:12:48,135 --> 00:12:51,171 line:-1
the exact dimensions of the video frames,


170
00:12:51,238 --> 00:12:54,942 line:-1
the color space and the dynamic range.


171
00:12:55,008 --> 00:12:57,878 line:-1
On Macs with multiple video encoders,


172
00:12:57,945 --> 00:13:02,616 line:-2
you can even specify which video encoder
to use for the export.


173
00:13:03,951 --> 00:13:07,454 line:-2
Note this is not an exhaustive list
by any means,


174
00:13:07,521 --> 00:13:12,593 line:-2
but it gives you an idea of some common
parameters that you may want to configure.


175
00:13:13,360 --> 00:13:16,964 line:-2
Since AVAssetWriter offers
many controls,


176
00:13:17,030 --> 00:13:22,436 line:-2
I’ll now discuss two methods that
can simplify the configuration process.


177
00:13:22,936 --> 00:13:27,741 line:-2
This code snippet shows the simplest
invocation of AVAssetWriter.


178
00:13:28,175 --> 00:13:33,213 line:-2
First you create the AssetWriter with
an output URL and file type.


179
00:13:33,747 --> 00:13:37,351 line:-2
Then you need to provide
an outputSettings dictionary,


180
00:13:37,417 --> 00:13:40,587 line:-1
which controls all facets of the export.


181
00:13:40,654 --> 00:13:45,659 line:-2
However, here we are using
the AVAssetWriterInput interface


182
00:13:45,726 --> 00:13:49,496 line:-2
which accepts a sourceFormatHint
in the form


183
00:13:49,563 --> 00:13:52,232 line:-2
of the videoFormatDescription
of the source.


184
00:13:52,699 --> 00:13:58,005 line:-2
In this case, the only required key
in the outputSettings dictionary


185
00:13:58,071 --> 00:14:00,040 line:-1
is the video codec type.


186
00:14:00,807 --> 00:14:06,280 line:-2
AVAssetWriter will construct reasonable
defaults for the remaining parameters


187
00:14:06,346 --> 00:14:08,982 line:-2
based on
the source videoFormatDescription


188
00:14:09,049 --> 00:14:11,051 line:-1
provided in the hint.


189
00:14:11,618 --> 00:14:15,956 line:-2
This next code snippet shows how
to configure AVAssetWriter


190
00:14:16,023 --> 00:14:18,725 line:-1
with AVOutputSettingsAssistant.


191
00:14:19,293 --> 00:14:23,597 line:-2
AVOutputSettingsAssistant offers
presets to choose from


192
00:14:23,664 --> 00:14:26,700 line:-1
similar to AVAssetExport-Session.


193
00:14:27,201 --> 00:14:32,706 line:-2
The presets provide a template dictionary
that you can either use directly


194
00:14:32,773 --> 00:14:37,110 line:-2
or as a starting point for configuring
AVAssetWriter-Input.


195
00:14:39,513 --> 00:14:45,686 line:-2
Here I’ve selected the hevc1920x1080
dimensional preset.


196
00:14:45,752 --> 00:14:48,622 line:-2
We also strongly recommend
that you provide


197
00:14:48,689 --> 00:14:53,193 line:-2
the sourceVideoFormatDescription
to the settings assistant


198
00:14:53,527 --> 00:14:56,797 line:-1
prior to retrieving the video-Settings.


199
00:14:57,397 --> 00:15:00,000 line:-1
By providing the sourceVideoFormat,


200
00:15:00,067 --> 00:15:04,705 line:-2
AVOutputSettingsAssistant can combine
the source characteristics


201
00:15:04,771 --> 00:15:06,406 line:-1
with the preset settings,


202
00:15:06,473 --> 00:15:11,311 line:-2
and return settings very similar
to what AVAssetExportSession


203
00:15:11,378 --> 00:15:14,548 line:-1
would configure for an analogous export.


204
00:15:15,282 --> 00:15:18,986 line:-2
It is quite possible that these settings
are sufficient for you,


205
00:15:19,052 --> 00:15:24,525 line:-2
in which case you can pass them unmodified
to AVAssetWriter-Input.


206
00:15:25,058 --> 00:15:29,630 line:-2
But you also have the opportunity to alter
the settings at this point,


207
00:15:30,063 --> 00:15:32,900 line:-2
possibly changing
the output video dimensions,


208
00:15:32,966 --> 00:15:35,469 line:-1
or the video bit rate, as examples.


209
00:15:36,036 --> 00:15:38,505 line:-1
Now let’s talk about the various keys


210
00:15:38,572 --> 00:15:42,676 line:-2
within the AVAssetWriter-Input
output-Settings dictionary


211
00:15:42,743 --> 00:15:45,112 line:-1
that are relevant to HDR.


212
00:15:45,579 --> 00:15:49,917 line:-2
There are three such keys that you need
to take care in configuring


213
00:15:49,983 --> 00:15:51,985 line:-1
when dealing with HDR:


214
00:15:52,519 --> 00:15:58,292 line:-2
the video codec, color properties
and compression properties keys.


215
00:15:58,358 --> 00:16:01,028 line:-2
Let’s go into more detail
on each of these.


216
00:16:02,196 --> 00:16:04,498 line:-1
The AVVideoCodecKey.


217
00:16:04,565 --> 00:16:11,171 line:-2
AVFoundation supports HDR via two codecs:
HEVC and Apple ProRes.


218
00:16:12,005 --> 00:16:16,977 line:-2
HEVC is a very common distribution format
for HDR.


219
00:16:17,444 --> 00:16:20,681 line:-1
HEVC provides good compression efficiency,


220
00:16:20,747 --> 00:16:23,984 line:-2
so the exported file sizes
will be manageable.


221
00:16:24,818 --> 00:16:30,824 line:-2
Apple ProRes is a mezzanine format
used in professional video workflows.


222
00:16:31,391 --> 00:16:36,563 line:-2
The AVVideoColorPropertiesKey is
a dictionary with three keys:


223
00:16:36,630 --> 00:16:41,001 line:-2
transfer function, color primaries
and YCbCr-Matrix.


224
00:16:41,902 --> 00:16:44,338 line:-1
Transfer function we’ve already gone over.


225
00:16:44,404 --> 00:16:49,476 line:-2
HLG and PQ are the two supported
HDR transfer functions.


226
00:16:51,478 --> 00:16:56,583 line:-2
The Color-Primaries-Key is typically set
to a Wide Color gamut format.


227
00:16:56,650 --> 00:17:00,621 line:-1
BT.2020 is common for HDR content.


228
00:17:02,823 --> 00:17:06,292 line:-2
The YCbCr-Matrix-Key represents
how to convert


229
00:17:06,359 --> 00:17:10,631 line:-1
between YUV and RGB color representations.


230
00:17:11,098 --> 00:17:17,003 line:-2
BT.2020 non-constant luminance system
is typical for HDR.


231
00:17:18,539 --> 00:17:22,608 line:-2
The AVVideoCompressionPropertiesKey
is a dictionary


232
00:17:22,675 --> 00:17:28,115 line:-2
that contains most of the keys that you
may want to vary in the output settings.


233
00:17:28,749 --> 00:17:34,721 line:-2
However, the only relevant HDR key in this
is the VideoProfileLevelKey


234
00:17:34,788 --> 00:17:39,293 line:-1
which must be set to HEVC_Main10_AutoLevel


235
00:17:39,359 --> 00:17:43,564 line:-1
when exporting HDR using the HEVC codec.


236
00:17:44,298 --> 00:17:48,669 line:-1
Note that 8-bit HEVC HDR is not supported,


237
00:17:49,503 --> 00:17:53,173 line:-2
and this key is not applicable
to ProRes exports.


238
00:17:54,174 --> 00:17:58,879 line:-2
All right, let’s take the time now
to summarize how you would configure


239
00:17:58,946 --> 00:18:04,318 line:-2
the keys I just discussed when outputting
to two common HDR formats:


240
00:18:04,384 --> 00:18:07,154 line:-1
HLG and HDR10.


241
00:18:07,221 --> 00:18:13,727 line:-2
This table shows what the relevant HDR
settings are for exporting an HLG file.


242
00:18:14,494 --> 00:18:20,000 line:-2
You must select either HEVC
or Apple ProRes for the codec.


243
00:18:20,067 --> 00:18:25,272 line:-2
You can specify any value
for color primaries and YCbCr-Matrix,


244
00:18:25,339 --> 00:18:29,743 line:-2
but they are both typically
set to ITU_R_2020.


245
00:18:30,210 --> 00:18:36,950 line:-2
The transfer function must obviously be
set to HLG, since we desire an HLG file.


246
00:18:37,584 --> 00:18:40,954 line:-1
And if you’ve selected the HEVC codec,


247
00:18:41,021 --> 00:18:47,628 line:-2
you’ll also need to specify the
Profile-Level as HEVC_Main10_AutoLevel.


248
00:18:48,295 --> 00:18:52,533 line:-2
Now let’s tackle HDR10,
which is a bit more complicated.


249
00:18:53,066 --> 00:18:59,606 line:-2
As before, select either HEVC
or Apple ProRes as the codec type.


250
00:19:00,374 --> 00:19:04,111 line:-1
While HDR10 is conventionally HEVC-based,


251
00:19:04,178 --> 00:19:08,682 line:-1
we also use HDR10 to define a ProRes asset


252
00:19:08,749 --> 00:19:15,189 line:-2
that has MasteringDisplayColorVolume
and ContentLightLevelInfo specified.


253
00:19:15,255 --> 00:19:16,957 line:-1
More on that in a bit.


254
00:19:17,624 --> 00:19:19,426 line:-1
As in the HLG case,


255
00:19:19,493 --> 00:19:25,032 line:-2
the Color-Primaries and Matrix
are typically set to ITU_R_2020,


256
00:19:25,532 --> 00:19:29,469 line:-2
and the transfer function
must be set to PQ.


257
00:19:30,437 --> 00:19:36,109 line:-2
Again, set the Profile-Level
to HEVC_Main10_AutoLevel


258
00:19:36,176 --> 00:19:39,413 line:-1
for HEVC HDR10 exports.


259
00:19:40,647 --> 00:19:47,020 line:-2
Finally for HDR10, there are two optional
keys that we recommend you also specify.


260
00:19:47,087 --> 00:19:50,424 line:-1
Let’s discuss these in more detail.


261
00:19:50,490 --> 00:19:53,827 line:-1
Mastering Display Color Volume, or MDCV,


262
00:19:53,894 --> 00:19:58,165 line:-2
describes the display on which
the content was mastered.


263
00:19:58,732 --> 00:20:02,536 line:-1
Content Light Level Information, or CLLI,


264
00:20:02,603 --> 00:20:07,207 line:-2
provides information about
the overall light levels of the movie.


265
00:20:08,675 --> 00:20:12,212 line:-2
Ideally both the values
should be specified.


266
00:20:12,279 --> 00:20:18,719 line:-2
This will allow more accurate
HDR rendering by the EOTF of the decoder.


267
00:20:18,785 --> 00:20:24,892 line:-2
If absent, the EOTF of the decoder will be
forced to assume a default for them,


268
00:20:24,958 --> 00:20:27,261 line:-1
which may not match what you intended.


269
00:20:27,895 --> 00:20:32,099 line:0
MDCV and CLLI SEI message formats


270
00:20:32,165 --> 00:20:36,336 line:0
are defined in this referenced
ISO specification.


271
00:20:37,271 --> 00:20:39,773 line:-1
At this point, I’d like to briefly touch


272
00:20:39,840 --> 00:20:43,477 line:-2
on which Apple platforms
can support HDR export.


273
00:20:44,077 --> 00:20:47,648 line:-1
iOS supports HEVC hardware encoding


274
00:20:47,714 --> 00:20:51,818 line:-2
on devices with Apple A10 Fusion chips
or newer.


275
00:20:52,319 --> 00:20:56,290 line:-2
Fortunately A10 devices have been around
for a while,


276
00:20:56,356 --> 00:21:01,328 line:-2
dating back to the iPhone 7,
iPads released in 2018,


277
00:21:01,395 --> 00:21:03,997 line:-1
and the 2019 iPod touch.


278
00:21:05,265 --> 00:21:06,767 line:-1
In regards to Macs,


279
00:21:06,834 --> 00:21:12,706 line:-2
both HEVC and Apple ProRes software
encoders are available on all Macs.


280
00:21:13,273 --> 00:21:17,377 line:-2
HEVC hardware encoding
is generally available


281
00:21:17,444 --> 00:21:22,049 line:-2
on 2017 and newer Macs
running the new macOS.


282
00:21:22,883 --> 00:21:27,020 line:-2
Hardware encoding will make
the export significantly faster.


283
00:21:27,821 --> 00:21:30,524 line:-1
All right, time to wrap this up.


284
00:21:30,591 --> 00:21:33,927 line:-1
We’ve briefly reviewed what HDR is


285
00:21:33,994 --> 00:21:39,733 line:-2
and how it is designed to preserve
the artistic intent of the original scene


286
00:21:39,800 --> 00:21:42,769 line:-1
all the way to the end user’s display.


287
00:21:42,836 --> 00:21:45,305 line:-1
With increased dynamic range,


288
00:21:45,372 --> 00:21:50,177 line:-2
HDR can create videos with brighter whites
and deeper blacks,


289
00:21:50,244 --> 00:21:54,581 line:-2
as well as increased details
in shadows and highlights.


290
00:21:54,648 --> 00:21:59,052 line:-2
Due to all the benefits
that HDR video provides,


291
00:21:59,119 --> 00:22:06,093 line:-2
you need to ensure that your apps preserve
this vibrant HDR content in your exports.


292
00:22:06,727 --> 00:22:08,362 line:-1
The steps are simple.


293
00:22:08,428 --> 00:22:10,264 line:-1
Like with any export,


294
00:22:10,330 --> 00:22:15,369 line:-2
you can use AVAssetExportSession
or AVAssetWriter to do this.


295
00:22:15,435 --> 00:22:20,741 line:-2
Select either an HEVC
or Apple ProRes codec or preset.


296
00:22:21,775 --> 00:22:28,582 line:-2
With AVAssetWriter, remember to set
the transfer function to HLG or PQ.


297
00:22:28,649 --> 00:22:34,321 line:-2
Explicitly set the video profile level
to HEVC_Main10_AutoLevel


298
00:22:34,388 --> 00:22:37,357 line:-1
for HEVC HDR exports,


299
00:22:38,058 --> 00:22:44,431 line:-2
and finally, use a Wide Color gamut,
preferably ITU_R_2020.


300
00:22:45,299 --> 00:22:48,802 line:-2
Here are some additional references
on HDR.


301
00:22:48,869 --> 00:22:51,338 line:-2
Note there is a companion session
to this one,


302
00:22:51,405 --> 00:22:56,276 line:-2
addressing HDR editing
and playback using AVFoundation.


303
00:22:58,946 --> 00:23:01,215 line:-1
Thank you for watching my presentation.


304
00:23:01,281 --> 00:23:06,186 line:-1
I hope you enjoy the rest of WWDC 2020.

