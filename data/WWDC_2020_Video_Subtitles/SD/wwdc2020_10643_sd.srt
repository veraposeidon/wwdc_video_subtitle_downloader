1
00:00:03,836 --> 00:00:06,874 line:-1
Hello and welcome to WWDC.


2
00:00:08,775 --> 00:00:13,046 line:0
Hi. I'm Matt, and I'm the engineering
manager of the Swift Playgrounds team,


3
00:00:13,113 --> 00:00:15,649 line:0
and today I'm going to be walking you
through the process


4
00:00:15,716 --> 00:00:19,086 line:0
of using Swift Playgrounds
to prototype a SwiftUI view.


5
00:00:20,020 --> 00:00:23,857 line:-2
Many people know Swift Playgrounds as
a great way to learn to code using Swift.


6
00:00:24,558 --> 00:00:25,826 line:-1
What you may not know


7
00:00:25,893 --> 00:00:29,663 line:-2
is that it's a full-featured environment
for prototyping and coding in Swift


8
00:00:29,730 --> 00:00:31,999 line:-2
far beyond the end
of the "Learn to Code" series.


9
00:00:33,267 --> 00:00:37,304 line:-2
Today we'll start out by creating
a Playground that's compatible with Xcode


10
00:00:37,371 --> 00:00:40,274 line:-2
and showing a SwiftUI view
as the Playground's live view.


11
00:00:40,908 --> 00:00:44,211 line:-2
We'll take a tour of some of Swift
Playground's unique editing features


12
00:00:44,278 --> 00:00:47,047 line:-2
that can make prototyping
faster and easier,


13
00:00:47,114 --> 00:00:50,117 line:-2
and we'll look at how to move your code
into multiple source files


14
00:00:50,184 --> 00:00:52,352 line:-1
for building more complex Playgrounds.


15
00:00:53,420 --> 00:00:58,091 line:0
Lastly, we'll look at a couple of tricks
for building custom, interactive previews


16
00:00:58,158 --> 00:01:00,394 line:0
with more than one SwiftUI view at once.


17
00:01:01,962 --> 00:01:05,265 line:-2
So, as so many engineers do
at one point in their lives,


18
00:01:05,331 --> 00:01:07,568 line:-2
I'm working on building
a task-tracking app,


19
00:01:07,634 --> 00:01:10,871 line:-2
with tasks grouped into milestones
for a particular project.


20
00:01:11,371 --> 00:01:12,673 line:-1
One thing it's missing, though,


21
00:01:12,739 --> 00:01:15,976 line:-2
is a nice summary of my progress
through the project as a whole.


22
00:01:16,677 --> 00:01:18,645 line:-1
I want to do a little something like this.


23
00:01:18,712 --> 00:01:22,716 line:-2
Now, clearly my hand-drawn art
isn't quite ready for prime time,


24
00:01:22,783 --> 00:01:25,285 line:-2
so we're going to build this view
using SwiftUI,


25
00:01:25,352 --> 00:01:27,521 line:-1
and I'm going to do it in a Playground.


26
00:01:28,188 --> 00:01:31,024 line:-2
Today I'm using an iPad
with a Magic Keyboard attached,


27
00:01:31,091 --> 00:01:34,294 line:-2
but you can do this just as easily
using the on-screen keyboard


28
00:01:34,361 --> 00:01:36,129 line:-1
or using Swift Playgrounds on Mac.


29
00:01:37,197 --> 00:01:40,634 line:-2
Since I know I'm going to be bringing
my work into Xcode when I'm done,


30
00:01:40,701 --> 00:01:42,836 line:-2
I'm going to create
a blank Xcode Playground


31
00:01:42,903 --> 00:01:44,838 line:-1
rather than a blank Playground book.


32
00:01:45,639 --> 00:01:49,409 line:-2
I do that by tapping the "See All" button
in the bottom right-hand corner,


33
00:01:50,210 --> 00:01:52,513 line:-2
scrolling to the end
of the starting points,


34
00:01:52,579 --> 00:01:55,382 line:-2
and then tapping "Get"
next to Xcode Playground,


35
00:01:55,449 --> 00:01:59,386 line:-2
which will create a new, blank
Xcode Playground in the top left corner


36
00:01:59,453 --> 00:02:00,988 line:-1
of the My Playgrounds screen.


37
00:02:01,788 --> 00:02:04,124 line:-2
I'll give it a more interesting name
before we start,


38
00:02:04,191 --> 00:02:06,159 line:-1
which I can do by tapping and holding,


39
00:02:06,226 --> 00:02:09,463 line:-2
or in my case,
two-finger clicking on the Playground,


40
00:02:09,530 --> 00:02:12,566 line:-2
choosing "Rename,"
and then entering a new name.


41
00:02:13,233 --> 00:02:15,702 line:-1
We'll call it "My ProgressView."


42
00:02:17,471 --> 00:02:18,906 line:-1
I'll tap "Done,"


43
00:02:19,740 --> 00:02:22,509 line:-2
and then I can open
the playground by tapping on it.


44
00:02:23,544 --> 00:02:25,145 line:-1
And we're ready to start coding.


45
00:02:26,380 --> 00:02:30,450 line:-2
Since I'm building a SwiftUI view,
the first thing I'll do is import SwiftUI.


46
00:02:34,087 --> 00:02:36,857 line:-2
I'm also going to import
the PlaygroundSupport framework,


47
00:02:36,924 --> 00:02:39,826 line:-2
which is what you use to customize
the behavior of your Playground,


48
00:02:39,893 --> 00:02:41,695 line:-1
including showing live views.


49
00:02:42,863 --> 00:02:44,865 line:-1
Next, we'll create our view,


50
00:02:44,932 --> 00:02:48,035 line:-2
which is going to be a struct
called ProgressView.


51
00:02:50,170 --> 00:02:52,105 line:-1
It'll conform to the "View" protocol...


52
00:02:53,473 --> 00:02:55,576 line:-1
and it'll have a property called "body,"


53
00:02:56,210 --> 00:02:58,178 line:-1
which returns an opaque view type.


54
00:02:59,246 --> 00:03:02,783 line:-1
For now, let's just say "Hello world."


55
00:03:05,786 --> 00:03:09,656 line:-2
We're ready to show our view now,
so I'll move to the end of the document,


56
00:03:09,723 --> 00:03:14,261 line:-2
and I'll use the PlaygroundPage type
to access the current page


57
00:03:14,328 --> 00:03:16,330 line:-1
and then call the setLiveView method.


58
00:03:17,130 --> 00:03:19,666 line:-2
Now, you might have noticed
that while I've been typing,


59
00:03:19,733 --> 00:03:22,870 line:-2
I've been getting completion suggestions
at the bottom of the screen.


60
00:03:22,936 --> 00:03:24,638 line:-1
I can either tap those with my finger,


61
00:03:24,705 --> 00:03:27,040 line:-2
or in this case,
I'll click using the trackpad...


62
00:03:28,475 --> 00:03:30,677 line:-1
and then I'll create a new ProgressView.


63
00:03:32,980 --> 00:03:34,481 line:-1
To see what this looks like,


64
00:03:34,548 --> 00:03:37,951 line:-2
I'll tap the Run My Code button in the
bottom right-hand corner of the screen.


65
00:03:39,219 --> 00:03:42,155 line:-1
And voilÃ ! Our first SwiftUI view.


66
00:03:43,023 --> 00:03:46,960 line:-2
Now, this text is just a placeholder,
and I think we want to get started


67
00:03:47,027 --> 00:03:49,596 line:-2
by building out the basic shape
of our live view,


68
00:03:49,663 --> 00:03:52,099 line:-2
which, if you remember
from my crudely drawn mock-up,


69
00:03:52,165 --> 00:03:54,334 line:-1
is kind of a circle-y type shape.


70
00:03:54,735 --> 00:03:57,004 line:-2
So I'll delete the text
that I've written here...


71
00:03:59,106 --> 00:04:00,841 line:-1
and replace it with a Circle view.


72
00:04:03,043 --> 00:04:06,079 line:-2
The arc in the mock-up has a blue stroke
on the outside of it,


73
00:04:06,146 --> 00:04:08,015 line:-1
so I'll use the stroke modifier...


74
00:04:09,082 --> 00:04:11,351 line:-1
and start typing "line width."


75
00:04:12,419 --> 00:04:16,156 line:-2
Then I can tap the first suggestion at
the bottom of the screen to complete it.


76
00:04:16,957 --> 00:04:19,660 line:-1
For now, let's say "25."


77
00:04:20,694 --> 00:04:24,264 line:-2
And since I like to indent my modifiers
below the view that they belong to,


78
00:04:24,331 --> 00:04:27,601 line:-2
I'm going to use the Command-Right
square bracket keyboard shortcut


79
00:04:27,668 --> 00:04:28,936 line:-1
to indent the code.


80
00:04:30,070 --> 00:04:32,606 line:-2
We'll also want to give this
a foreground color,


81
00:04:33,373 --> 00:04:35,742 line:-1
and we'll set that color to blue.


82
00:04:37,544 --> 00:04:39,279 line:-1
We can look at this by running it,


83
00:04:39,346 --> 00:04:43,050 line:-2
which this time I'm going to do using
the Command-R keyboard shortcut.


84
00:04:44,284 --> 00:04:46,687 line:-1
And there we have it. A blue circle.


85
00:04:46,753 --> 00:04:49,556 line:-2
I'll admit, it's a little bigger
than I thought it was going to be,


86
00:04:49,623 --> 00:04:52,426 line:-2
and that stroke isn't quite as heavy
as I imagined either,


87
00:04:52,492 --> 00:04:54,194 line:-1
but that's pretty easy to change.


88
00:04:54,761 --> 00:04:58,966 line:-2
For the stroke width, I can single-tap
or double-click on 25 to select it,


89
00:04:59,766 --> 00:05:02,102 line:-1
and we'll say maybe 40 instead.


90
00:05:03,570 --> 00:05:08,742 line:-2
And we can give the view a little padding
by adding a padding modifier of maybe 150.


91
00:05:10,344 --> 00:05:12,412 line:-1
If I hit Command-R again,


92
00:05:12,479 --> 00:05:16,016 line:-2
this time it looks a lot closer
to what I had in my head.


93
00:05:17,050 --> 00:05:19,453 line:-2
The next thing we'll build
is the text in the middle


94
00:05:19,520 --> 00:05:22,789 line:-2
that tells us how far we are
through our project as a percentage,


95
00:05:22,856 --> 00:05:25,225 line:-2
so I'm going to add a Text view
to contain that text


96
00:05:25,292 --> 00:05:27,561 line:-2
and then put it in a ZStack
with my circle.


97
00:05:28,862 --> 00:05:32,399 line:-2
I'll click above the circle,
type "ZStack,"


98
00:05:33,333 --> 00:05:35,269 line:-1
and create a pair of curly braces.


99
00:05:36,236 --> 00:05:39,239 line:-2
But rather than move my code
inside of those braces manually,


100
00:05:39,306 --> 00:05:43,844 line:-2
I can tap on the ending brace,
or in this case hover my pointer over it,


101
00:05:43,911 --> 00:05:49,183 line:-2
press and drag down
to encompass the circle and its modifiers.


102
00:05:50,050 --> 00:05:55,522 line:-2
Finally, we'll add a text view,
and for now, we'll just hard-code "25%."


103
00:05:56,557 --> 00:05:57,925 line:-1
If I hit Command-R...


104
00:05:58,959 --> 00:06:00,194 line:-1
Looking good.


105
00:06:00,260 --> 00:06:03,263 line:-2
We're really cooking now and making
great progress through this view.


106
00:06:03,330 --> 00:06:05,766 line:-2
-So it's time to get...
-[computer dings]


107
00:06:05,832 --> 00:06:09,436 line:-2
Oh. Well, I guess our designer
has actually already done


108
00:06:09,503 --> 00:06:11,538 line:-2
-all of the hard work for us.
-[computer dings]


109
00:06:11,605 --> 00:06:14,074 line:-2
It looks like
they've started their Playground


110
00:06:14,141 --> 00:06:16,376 line:-1
and put it in a shared iCloud folder.


111
00:06:16,443 --> 00:06:20,714 line:-2
So I'll close this document by tapping
the X button in the top left-hand corner,


112
00:06:21,615 --> 00:06:24,284 line:-2
and I can access files
outside the Playgrounds folder


113
00:06:24,351 --> 00:06:26,220 line:-1
by tapping the "Locations" button.


114
00:06:26,286 --> 00:06:27,588 line:-1
And there it is.


115
00:06:28,055 --> 00:06:29,456 line:-1
So I'll open that...


116
00:06:30,557 --> 00:06:32,626 line:-1
and then I'll tap the Run My Code button.


117
00:06:33,527 --> 00:06:37,130 line:-2
And you can see, yeah,
they got a lot further along than I did.


118
00:06:37,197 --> 00:06:40,534 line:-2
In fact, it looks so good, I'm not sure
what they want me to change about it.


119
00:06:40,601 --> 00:06:42,369 line:-2
-It's pretty perfect.
-[computer dings]


120
00:06:42,436 --> 00:06:46,840 line:-2
Oh. Okay. So it Looks like they want us
to try tweaking with the colors a bit,


121
00:06:46,907 --> 00:06:49,776 line:-2
so let's see if we can't make this look
a little snazzier.


122
00:06:49,843 --> 00:06:52,579 line:-2
It's really easy to play with colors
in Swift Playgrounds


123
00:06:52,646 --> 00:06:55,249 line:-2
because it has
an awesome built-in color picker.


124
00:06:55,315 --> 00:06:58,552 line:-2
So, you can see on this line here
at the top of the screen,


125
00:06:58,619 --> 00:07:02,523 line:-2
we have the two gradient colors, which
are the SwiftUI colors blue and purple.


126
00:07:03,190 --> 00:07:06,493 line:-2
The Color type actually has another
initializer that'll take a UIColor,


127
00:07:06,560 --> 00:07:08,629 line:-1
so I'll use parentheses to open that...


128
00:07:09,830 --> 00:07:11,899 line:-2
and if you look at the bottom
of the screen,


129
00:07:11,965 --> 00:07:15,602 line:-2
one of the options there is this gray
square that represents a color literal.


130
00:07:16,436 --> 00:07:18,672 line:-1
When I insert it, I get a color picker


131
00:07:18,739 --> 00:07:21,642 line:-2
with tons of options
provided by Swift Playgrounds.


132
00:07:22,142 --> 00:07:25,045 line:-2
I think we'll pick this
nice raspberry color for the first one,


133
00:07:25,112 --> 00:07:28,315 line:-2
and then for the second color,
we'll follow the same steps.


134
00:07:28,382 --> 00:07:29,850 line:-1
I'll open the parens,


135
00:07:30,717 --> 00:07:32,186 line:-1
insert a color literal,


136
00:07:33,053 --> 00:07:35,455 line:-1
and this time pick a nice deep purple.


137
00:07:36,623 --> 00:07:38,158 line:-1
And now if I hit Command-R,


138
00:07:38,859 --> 00:07:41,628 line:-2
you can see it looks a lot livelier
than it did before.


139
00:07:42,563 --> 00:07:44,965 line:-2
I think we're really
about done with this now


140
00:07:45,032 --> 00:07:46,934 line:-2
-and ready to wrap it up.
-[computer dings]


141
00:07:47,000 --> 00:07:49,169 line:-2
Unless, of course,
our designer has other ideas.


142
00:07:49,236 --> 00:07:51,572 line:-2
And they have a great suggestion,
as always.


143
00:07:51,638 --> 00:07:54,007 line:-2
We should see what this looks like
in Dark Mode.


144
00:07:54,074 --> 00:07:57,744 line:-2
Now, one of the great things about
working with SwiftUI in Swift Playgrounds


145
00:07:57,811 --> 00:08:00,948 line:-2
is that this entire live view area
is your canvas,


146
00:08:01,014 --> 00:08:04,785 line:-2
so if I want to show my view more
than once, I can do that really easily.


147
00:08:05,886 --> 00:08:09,590 line:-2
First, though, I want to give myself a bit
more breathing room in the main page,


148
00:08:09,656 --> 00:08:13,093 line:-2
so we're going to move ProgressView
to a file all of its own.


149
00:08:13,760 --> 00:08:17,364 line:-2
I can add a new file by tapping on the
"File" button in the top left-hand corner,


150
00:08:17,431 --> 00:08:21,702 line:-2
or on a Mac, by opening the sidebar,
and then tapping the "New File" button.


151
00:08:23,170 --> 00:08:27,241 line:-2
I'll give it the name "ProgressView,"
press "Return" to accept it,


152
00:08:28,008 --> 00:08:30,911 line:-2
and then I can tap outside the popover
to close it.


153
<html>
<head><title>500 Internal Server Error</title></head>
<body>
<center><h1>500 Internal Server Error</h1></center>
<hr><center>QTL_Cache/1.2.14</center>
</body>
</html>
00:08:36,650 --> 00:08:38,684 line:-1
I'll switch back over to the main page,


154
00:08:39,086 --> 00:08:42,022 line:-2
and now what I want to do
is move this entire ProgressView struct


155
00:08:42,089 --> 00:08:43,991 line:-1
over into the file we just created.


156
00:08:44,558 --> 00:08:46,293 line:-1
I can do that by single-tapping


157
00:08:46,360 --> 00:08:48,996 line:-2
or two-finger clicking
on the "struct" keyword,


158
00:08:49,530 --> 00:08:51,231 line:-1
and then choosing "Cut."


159
00:08:53,033 --> 00:08:55,302 line:-2
I can then switch back over
to the ProgressView tab


160
00:08:55,369 --> 00:08:58,405 line:-2
with the Command-Shift-Right Brace
keyboard shortcut,


161
00:08:59,339 --> 00:09:03,443 line:-2
tap to enter code,
and then press "Command-V" to paste.


162
00:09:03,944 --> 00:09:07,014 line:-2
And there we have it.
It's in a file all its own.


163
00:09:08,482 --> 00:09:10,684 line:-2
Right away,
you can see it has some issues, though,


164
00:09:10,751 --> 00:09:15,022 line:-2
and the biggest one is that I haven't yet
imported SwiftUI into this file.


165
00:09:15,656 --> 00:09:16,790 line:-1
So I'll do that.


166
00:09:21,228 --> 00:09:23,564 line:-2
I'm also going to want to mark
my struct "public,"


167
00:09:23,630 --> 00:09:26,567 line:-2
since it's now in a separate module,
so I'll do that as well.


168
00:09:29,803 --> 00:09:32,940 line:-2
Now that I've done that, you can see
there's one new issue for us to address,


169
00:09:33,006 --> 00:09:34,641 line:-1
and if I tap on the "issue" dot,


170
00:09:34,708 --> 00:09:37,911 line:-2
it's reminding me that "body"
needs to be made public as well.


171
00:09:38,445 --> 00:09:40,447 line:-1
I'll tap "fix" to accept the fix-it.


172
00:09:41,181 --> 00:09:44,551 line:-2
And while I'm here, I'm also going
to mark the initializer as public,


173
00:09:44,618 --> 00:09:47,054 line:-2
because I'm about to use it
on the main page.


174
00:09:49,289 --> 00:09:52,125 line:-2
I can use Command-Shift-Left Brace
to switch back...


175
00:09:53,627 --> 00:09:55,262 line:-1
and if I hit Command-R...


176
00:09:56,597 --> 00:09:58,532 line:-1
you can see the live view is unchanged.


177
00:09:59,433 --> 00:10:02,069 line:-2
Now, I want to look at two of these
at the same time


178
00:10:02,135 --> 00:10:05,239 line:-2
so I can compare what it looks like
in Light Mode versus Dark Mode,


179
00:10:05,305 --> 00:10:08,609 line:-2
so to do that, I'm going to create
a new view to act as my preview.


180
00:10:10,143 --> 00:10:12,112 line:-1
We'll create a struct called "Preview"...


181
00:10:13,213 --> 00:10:15,782 line:-2
that conforms to the View protocol
like before.


182
00:10:17,217 --> 00:10:20,988 line:-2
And in this case,
the body is going to be a VStack.


183
00:10:22,756 --> 00:10:24,791 line:-1
We'll add a little bit of spacing...


184
00:10:26,159 --> 00:10:28,896 line:-2
and inside it,
we'll create two ProgressViews.


185
00:10:32,266 --> 00:10:35,669 line:-2
While we're at it, I'm going to
spruce it up a bit so it looks nice.


186
00:10:35,736 --> 00:10:38,338 line:-2
I'm going to get rid of the padding
we specified down below


187
00:10:38,405 --> 00:10:40,874 line:-1
using Option-Delete to delete by word...


188
00:10:42,242 --> 00:10:44,978 line:-2
and then I'm going to add some padding
to the VStack.


189
00:10:49,816 --> 00:10:51,652 line:-1
I'll also add a background modifier


190
00:10:51,718 --> 00:10:55,956 line:-2
so it's easier to see differences between
Light and Dark Mode variants of our view.


191
00:10:58,458 --> 00:11:00,093 line:-1
Here I'll use a color,


192
00:11:00,527 --> 00:11:02,563 line:-1
and I'll pass in the UIKit...


193
00:11:03,830 --> 00:11:06,834 line:-1
secondary system background color,


194
00:11:06,900 --> 00:11:09,169 line:-2
which I'll let code completion
fill in for me.


195
00:11:10,771 --> 00:11:14,208 line:-2
Lastly, we'll switch the ProgressView
initializer at the bottom of the file


196
00:11:14,274 --> 00:11:16,109 line:-1
to our new Preview initializer


197
00:11:16,176 --> 00:11:20,447 line:-2
by single-tapping or double-clicking
its name and typing "Preview."


198
00:11:22,749 --> 00:11:24,484 line:-1
I'll use Command-R to run,


199
00:11:25,118 --> 00:11:29,523 line:-2
and you can see that now I've got two
different previews of our ProgressView.


200
00:11:30,624 --> 00:11:32,960 line:-1
I did want one to be in Dark Mode, though,


201
00:11:33,026 --> 00:11:36,196 line:-2
so for the second one,
I can add an environment modifier,


202
00:11:37,030 --> 00:11:38,732 line:-1
and we'll set the color scheme...


203
00:11:39,766 --> 00:11:40,834 line:-1
to dark.


204
00:11:42,035 --> 00:11:43,604 line:-1
Now when I hit Command-R,


205
00:11:44,371 --> 00:11:47,274 line:-2
you can see we have one in Light Mode,
one in Dark Mode.


206
00:11:47,341 --> 00:11:48,609 line:-1
Looking great.


207
00:11:48,675 --> 00:11:52,179 line:-2
The last thing I want to do is take a look
at how this view feels in action


208
00:11:52,246 --> 00:11:55,315 line:-2
with different progress values
and with animation.


209
00:11:55,382 --> 00:11:59,186 line:-2
Since the live view is fully interactive,
I'm going to do that by adding a button


210
00:11:59,253 --> 00:12:03,056 line:-2
to step through different values
in 25% increments.


211
00:12:03,123 --> 00:12:06,860 line:-2
I noticed that the ProgressView accepts a
double as an argument to its initializer,


212
00:12:06,927 --> 00:12:09,129 line:-1
so let's wire that up in our preview.


213
00:12:10,731 --> 00:12:14,401 line:-2
I'll create a new State variable
called "Progress,"


214
00:12:14,468 --> 00:12:16,703 line:-1
and I'll set that to 25%.


215
00:12:17,437 --> 00:12:20,140 line:-2
I can then pass that into each
of our ProgressViews...


216
00:12:22,509 --> 00:12:26,180 line:-2
and when I hit Command-R,
the value updates.


217
00:12:26,914 --> 00:12:29,349 line:-2
With that in place,
we can now add our button.


218
00:12:29,850 --> 00:12:32,286 line:-2
I'll create a new method
called "Increment,"


219
00:12:32,352 --> 00:12:36,757 line:-2
which is just going to add 25%
to our current progress value.


220
00:12:37,357 --> 00:12:39,459 line:-1
And since I did promise animation,


221
00:12:39,526 --> 00:12:41,962 line:-2
we'll add a "with Animation" block
on top of it...


222
00:12:43,163 --> 00:12:48,836 line:-2
and like before, drag the closing brace
to encompass our incrementing statement.


223
00:12:50,270 --> 00:12:53,640 line:-2
Now I'll create a new button view
inside our VStack...


224
00:12:54,842 --> 00:12:57,845 line:-2
and I'll set its action
to the method that we just created.


225
00:12:59,646 --> 00:13:01,582 line:-1
Lastly, we'll give our button a label,


226
00:13:01,648 --> 00:13:05,886 line:-2
which is just going to be a Text view
with the message "Increment Progress."


227
00:13:07,487 --> 00:13:09,089 line:-1
If I hit Command-R now...


228
00:13:10,257 --> 00:13:12,159 line:-1
you can see we have a new button,


229
00:13:12,226 --> 00:13:16,063 line:-2
and if I tap it,
we have a working ProgressView.


230
00:13:17,364 --> 00:13:20,968 line:-2
And that's building a SwiftUI view
using Swift Playgrounds.


231
00:13:22,169 --> 00:13:25,572 line:-2
In summary,
Swift Playgrounds has loads of features,


232
00:13:25,639 --> 00:13:29,710 line:-2
like color literals, brace dragging,
and a full suite of keyboard shortcuts


233
00:13:29,776 --> 00:13:32,246 line:-1
that make it easier to edit complex code.


234
00:13:33,213 --> 00:13:35,415 line:-2
If you're going to be bringing your work
back to Xcode,


235
00:13:35,482 --> 00:13:38,986 line:-2
it usually makes sense to start with
the Xcode Playground starting point.


236
00:13:39,887 --> 00:13:41,989 line:-2
You can split your code
across multiple source files


237
00:13:42,055 --> 00:13:44,258 line:-1
to make it easier to understand.


238
00:13:44,324 --> 00:13:46,693 line:-2
This is especially useful
with SwiftUI views,


239
00:13:46,760 --> 00:13:48,829 line:-2
where you can put your view code
in a module


240
00:13:48,896 --> 00:13:51,365 line:-2
and use your main source file
for previews.


241
00:13:51,865 --> 00:13:54,401 line:-2
And remember,
you can customize your previews


242
00:13:54,468 --> 00:13:58,639 line:-2
and add interactivity by creating
your own views just for that purpose.


243
00:14:00,107 --> 00:14:04,511 line:-2
Thanks for watching, and enjoy
the rest of the awesome content from WWDC.

