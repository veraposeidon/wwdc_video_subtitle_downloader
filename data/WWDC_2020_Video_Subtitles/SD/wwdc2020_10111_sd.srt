1
00:00:03,871 --> 00:00:06,707 line:-1
Hello and welcome to WWDC.


2
00:00:07,774 --> 00:00:10,377 line:0
Hello, everyone. I'm Jiten Mehta,


3
00:00:10,444 --> 00:00:13,881 line:0
and today we're gonna take a look
at some of the important things


4
00:00:13,947 --> 00:00:17,751 line:0
you should be doing
on both your app and your server


5
00:00:17,818 --> 00:00:20,254 line:0
to provide the best user experience.


6
00:00:20,320 --> 00:00:23,857 line:-2
We're gonna touch on ways
to maximize the performance


7
00:00:23,924 --> 00:00:25,726 line:-1
of your networking operations.


8
00:00:26,527 --> 00:00:30,330 line:-2
Take advantage
of rock-solid security capabilities


9
00:00:30,397 --> 00:00:32,866 line:-1
built into all Apple platforms.


10
00:00:33,333 --> 00:00:39,273 line:-2
Deliver a robust mobility experience as
devices move between different networks.


11
00:00:39,339 --> 00:00:41,141 line:-1
And protect your users' privacy.


12
00:00:41,208 --> 00:00:43,377 line:-1
A brief note as we begin.


13
00:00:43,443 --> 00:00:47,314 line:-2
Many of the things we're gonna talk about
involve technologies


14
00:00:47,381 --> 00:00:50,784 line:-2
that must be supported
both on the client device


15
00:00:50,851 --> 00:00:53,754 line:-2
as well as on the server
that it's talking to.


16
00:00:54,188 --> 00:00:56,523 line:-1
On the client, you're all set


17
00:00:56,590 --> 00:00:59,927 line:-2
if you're already using
the modern networking APIs


18
00:00:59,993 --> 00:01:04,965 line:-2
on Apple platforms,
URLSession and Network.framework,


19
00:01:05,032 --> 00:01:09,002 line:-2
as you'll get support
for all these technologies automatically.


20
00:01:09,703 --> 00:01:12,906 line:-2
Let's dive right in
starting with performance.


21
00:01:13,540 --> 00:01:18,612 line:-2
First step, IPv6, the newest version
of the Internet protocol,


22
00:01:19,179 --> 00:01:22,382 line:-2
the fundamental protocol
that supports the Internet.


23
00:01:23,283 --> 00:01:28,255 line:-2
Apple platforms have had
native IPv6 support for a number of years,


24
00:01:28,322 --> 00:01:31,959 line:-1
including support for IPv6-only networks.


25
00:01:33,327 --> 00:01:37,965 line:-2
Connections using IPv6 on the network
observe lower latency


26
00:01:38,031 --> 00:01:41,168 line:-2
and are generally more performant
than IPv4,


27
00:01:41,835 --> 00:01:46,373 line:-2
in part because of fewer NATs
and more modern networking equipment.


28
00:01:47,908 --> 00:01:51,778 line:-2
Test that your app works
on IPv6-only networks


29
00:01:51,845 --> 00:01:56,316 line:-2
with the NAT64 support
in Internet sharing on your Mac,


30
00:01:56,850 --> 00:01:59,486 line:-2
as it's an App Store
submission requirement.


31
00:01:59,553 --> 00:02:03,690 line:-2
The good news is that if you use
the modern networking APIs,


32
00:02:03,757 --> 00:02:05,192 line:-1
it should just work.


33
00:02:05,859 --> 00:02:10,430 line:-2
There has been a growing trend
of IPv6 usage on the Internet.


34
00:02:10,497 --> 00:02:14,034 line:-2
If you look at the last month
of connections made worldwide


35
00:02:14,101 --> 00:02:15,836 line:-1
by Apple devices,


36
00:02:15,903 --> 00:02:22,142 line:-2
we see that IPv6 now accounts
for 26% of all connections made.


37
00:02:22,209 --> 00:02:26,413 line:-2
Twenty percent of the time,
the connection could have used IPv6,


38
00:02:26,480 --> 00:02:28,649 line:-1
but the server didn't have it enabled.


39
00:02:28,715 --> 00:02:32,853 line:-2
And when IPv6 is in use,
the median connection setup


40
00:02:32,920 --> 00:02:36,857 line:-1
is 1.4 times faster than IPv4.


41
00:02:36,924 --> 00:02:42,062 line:-2
This is primarily due to reduced NAT usage
and improved routing.


42
00:02:42,496 --> 00:02:47,701 line:-2
Make sure your app is taking advantage
of the improvements IPv6 offers


43
00:02:47,768 --> 00:02:52,005 line:-2
by using URLSession
or Network.framework on the client


44
00:02:52,072 --> 00:02:54,508 line:-2
where you'll get the support
built right in.


45
00:02:55,809 --> 00:03:00,614 line:-2
We've done our part. Now it's up to you
to check the box on the server side.


46
00:03:01,114 --> 00:03:05,118 line:-2
So make sure
you have enabled IPv6 on your server


47
00:03:05,185 --> 00:03:08,188 line:-2
to ensure the best experience
for your users.


48
00:03:08,589 --> 00:03:13,961 line:-2
Next, URLSession provides
built-in HTTP/2 support,


49
00:03:14,027 --> 00:03:16,063 line:-1
which improves load performance.


50
00:03:17,030 --> 00:03:20,901 line:-2
It multiplexes several requests
to the same server


51
00:03:20,968 --> 00:03:23,003 line:-1
onto a single connection.


52
00:03:23,070 --> 00:03:28,542 line:-2
This saves you time by not having to wait
for the end of each response


53
00:03:28,609 --> 00:03:30,878 line:-1
before sending your next request.


54
00:03:30,944 --> 00:03:36,450 line:-2
HTTP/2 also provides performance
improvements via connection coalescing.


55
00:03:36,517 --> 00:03:42,055 line:-2
The system detects that different requests
can be served by the same server


56
00:03:42,122 --> 00:03:46,593 line:-2
and reuse an existing connection,
saving you connection setup costs.


57
00:03:47,127 --> 00:03:51,865 line:-2
Header compression support
allows for better bandwidth utilization


58
00:03:51,932 --> 00:03:57,671 line:-2
as extraneous bytes can be eliminated
on both request and response headers.


59
00:03:58,272 --> 00:04:02,442 line:0
To learn more about how HTTP/2
can benefit your app,


60
00:04:02,976 --> 00:04:06,480 line:0
check out "Optimizing Your App
for Today's Internet"


61
00:04:06,547 --> 00:04:08,882 line:0
from WWDC 18.


62
00:04:09,316 --> 00:04:12,486 line:-1
If we look at the HTTP usage in Safari,


63
00:04:12,553 --> 00:04:17,190 line:-2
we see that 79% of requests
in the past month


64
00:04:17,257 --> 00:04:18,992 line:-1
are using HTTP/2,


65
00:04:19,526 --> 00:04:23,530 line:-2
and the median duration
of the URLSession tasks


66
00:04:23,597 --> 00:04:27,034 line:-1
for the requests that use HTTP/2


67
00:04:27,100 --> 00:04:29,636 line:-1
is 1.8 times faster


68
00:04:29,703 --> 00:04:33,540 line:-2
as compared to the requests
that use HTTP/1.1.


69
00:04:33,607 --> 00:04:39,680 line:-2
Using URLSession on the client
will negotiate HTTP/2 by default


70
00:04:39,746 --> 00:04:41,548 line:-1
if it is enabled on the server.


71
00:04:42,216 --> 00:04:47,487 line:-2
So double-check your server settings
to make sure HTTP/2 is enabled.


72
00:04:49,056 --> 00:04:53,894 line:-2
Next, let's talk about some advances
in securing your network transactions.


73
00:04:54,328 --> 00:04:59,233 line:-2
TLS 1.3 is the latest and greatest version
of TLS,


74
00:04:59,299 --> 00:05:01,969 line:-1
providing reduced connection setup times


75
00:05:02,035 --> 00:05:05,405 line:-2
by removing one round trip
from the handshake.


76
00:05:05,472 --> 00:05:09,643 line:-2
It provides improved security
through formal verification


77
00:05:09,710 --> 00:05:12,779 line:-2
and by reducing the potential
for misconfigurations.


78
00:05:13,480 --> 00:05:16,450 line:-1
In iOS 12 and macOS Mojave,


79
00:05:16,517 --> 00:05:21,188 line:-2
we provided a preview where you
could enable preliminary versions


80
00:05:21,255 --> 00:05:23,757 line:-1
of the TLS 1.3 standard


81
00:05:23,824 --> 00:05:26,727 line:-2
and test them
against your server deployments.


82
00:05:27,961 --> 00:05:30,597 line:-1
Now the standard has been finalized,


83
00:05:31,164 --> 00:05:37,771 line:-2
and TLS 1.3 has been enabled by default
since iOS 13.4


84
00:05:37,838 --> 00:05:40,607 line:-1
for URLSession and Network.framework.


85
00:05:41,575 --> 00:05:47,414 line:-2
Over the past month,
we've seen roughly 49% of all connections


86
00:05:47,481 --> 00:05:52,186 line:-2
use TLS 1.3
on devices running the latest iOS.


87
00:05:53,153 --> 00:05:59,326 line:-2
And connections that use TLS 1.3
are established 1.3 times faster


88
00:05:59,393 --> 00:06:01,929 line:-1
than those using TLS 1.2.


89
00:06:02,896 --> 00:06:08,202 line:-2
Our modern networking APIs
will negotiate TLS 1.3 by default


90
00:06:08,268 --> 00:06:10,237 line:-1
if it's enabled on the server.


91
00:06:10,871 --> 00:06:14,007 line:-1
So turn on TLS 1.3 on your server today


92
00:06:14,074 --> 00:06:18,545 line:-2
to take advantage of this faster
and more secure experience.


93
00:06:19,479 --> 00:06:23,283 line:-2
Let's take a look at how you can provide
a seamless experience


94
00:06:23,350 --> 00:06:26,486 line:-2
as a device transitions
between different networks.


95
00:06:26,987 --> 00:06:33,760 line:-2
Multipath TCP allows a single
TCP connection from your app to continue


96
00:06:33,827 --> 00:06:36,296 line:-1
as the device changes networks.


97
00:06:37,231 --> 00:06:41,435 line:-2
This prevents your app
from needing to start all over


98
00:06:41,502 --> 00:06:43,637 line:-1
when the connectivity is flaky


99
00:06:43,704 --> 00:06:47,074 line:-2
or if the user
is moving in and out of networks.


100
00:06:48,742 --> 00:06:52,212 line:-2
On the client,
you can opt into Multipath support


101
00:06:52,279 --> 00:06:55,415 line:-2
by setting
the multipathServiceType property


102
00:06:55,482 --> 00:07:00,521 line:-2
on your URLSessionConfiguration
or on your NWParameters object


103
00:07:00,587 --> 00:07:02,456 line:-1
if using Network.framework.


104
00:07:02,923 --> 00:07:07,694 line:-2
We have had great success
with Multipath TCP for our own services.


105
00:07:08,562 --> 00:07:12,432 line:-2
Last year,
we announced that in addition to Siri,


106
00:07:12,499 --> 00:07:16,537 line:-2
we'd also enable Multipath TCP
for Apple Music.


107
00:07:17,237 --> 00:07:21,675 line:0
Since then, we've seen
a 13% reduction in Music stalls.


108
00:07:22,609 --> 00:07:25,212 line:0
And in the event that a stall occurs,


109
00:07:25,279 --> 00:07:29,216 line:0
there has been a 22% reduction
in the stall duration.


110
00:07:30,217 --> 00:07:34,488 line:-2
You can opt into Multipath protocols
easily on Apple platforms


111
00:07:34,555 --> 00:07:37,424 line:-2
by setting
the multipathServiceType property


112
00:07:37,491 --> 00:07:40,227 line:-1
on your configuration or parameters.


113
00:07:40,294 --> 00:07:44,865 line:0
You need to do a little bit more work
to enable it on the server,


114
00:07:44,932 --> 00:07:47,501 line:0
so visit multipath-tcp.org


115
00:07:47,568 --> 00:07:52,973 line:0
to find instructions for enabling
Multipath TCP on your server deployment.


116
00:07:53,040 --> 00:07:55,142 line:-1
Next, my colleague Eric


117
00:07:55,209 --> 00:08:00,380 line:-2
is going to walk us through some
important new privacy features in iOS 14.


118
00:08:00,814 --> 00:08:02,216 line:-1
Thank you all.


119
00:08:02,282 --> 00:08:03,817 line:-1
Thanks, Jiten.


120
00:08:03,884 --> 00:08:07,321 line:0
iOS 14 improves user privacy


121
00:08:07,387 --> 00:08:10,824 line:0
by introducing new privacy protections
for the local network.


122
00:08:11,491 --> 00:08:16,129 line:0
This helps to prevent apps
and third-party libraries, or SDKs,


123
00:08:16,196 --> 00:08:18,665 line:0
from using the presence
of other devices on the network


124
00:08:18,732 --> 00:08:21,401 line:0
to locate or fingerprint your users.


125
00:08:21,468 --> 00:08:24,938 line:0
Built-in system services
that interact with the local network,


126
00:08:25,005 --> 00:08:28,509 line:0
such as AirPrint, AirPlay and HomeKit,


127
00:08:28,575 --> 00:08:32,145 line:0
don't give the app any private information
about the network.


128
00:08:32,712 --> 00:08:37,017 line:0
However, directly accessing
any local network resources,


129
00:08:37,083 --> 00:08:40,087 line:0
including the use of multicast
and broadcast,


130
00:08:40,153 --> 00:08:42,623 line:0
now requires explicit user permission.


131
00:08:43,222 --> 00:08:47,461 line:-2
To help your users understand
how your app uses their local network,


132
00:08:47,528 --> 00:08:51,899 line:-2
you need to provide a reason string
in the Info.plist for your app.


133
00:08:52,900 --> 00:08:56,370 line:0
For more information
about what to expect when testing your app


134
00:08:56,436 --> 00:08:58,172 line:0
and how to make sure that you're ready


135
00:08:58,238 --> 00:09:01,308 line:0
to provide
a more privacy-protecting experience,


136
00:09:01,375 --> 00:09:05,379 line:0
make sure you check out "Support
Local Network Privacy in Your App."


137
00:09:06,146 --> 00:09:09,650 line:0
Also new in iOS 14 and macOS Big Sur


138
00:09:09,716 --> 00:09:12,986 line:0
is support
for secure domain name resolution,


139
00:09:13,053 --> 00:09:19,092 line:0
including both DNS-over-TLS
and DNS-over-HTTPS.


140
00:09:19,593 --> 00:09:22,529 line:0
Instead of providing
individual resolution services


141
00:09:22,596 --> 00:09:24,598 line:0
for each app or browser,


142
00:09:24,665 --> 00:09:27,634 line:0
this support comes to the system resolver


143
00:09:27,701 --> 00:09:32,272 line:0
so that once you've configured secure DNS,
all apps on the device will benefit.


144
00:09:32,339 --> 00:09:35,375 line:-2
In addition to writing an app
using NetworkExtension


145
00:09:35,442 --> 00:09:39,680 line:-2
to deliver these system-wide settings
for encrypted DNS transports,


146
00:09:39,746 --> 00:09:42,683 line:-2
you can also require
encrypted resolution in your app.


147
00:09:43,483 --> 00:09:45,752 line:0
See the "Enable Encrypted DNS" session


148
00:09:45,819 --> 00:09:49,056 line:0
for details on how to take advantage
of these new APIs.


149
00:09:49,590 --> 00:09:52,559 line:-2
You can deliver system-wide settings
for encrypted resolution


150
00:09:52,626 --> 00:09:55,696 line:-2
by writing an app using
NetworkExtension on the client,


151
00:09:55,762 --> 00:09:57,397 line:-1
and ask your DNS provider


152
00:09:57,464 --> 00:10:01,401 line:-2
to offer a DNS-over-HTTPS option
if they don't already.


153
00:10:01,935 --> 00:10:05,906 line:-2
We'd also like to share a sneak peek
of some upcoming technologies


154
00:10:05,973 --> 00:10:08,041 line:-1
that you can start preparing for today.


155
00:10:08,942 --> 00:10:13,313 line:-2
Even if you've enabled encrypted DNS
to make name resolution more private,


156
00:10:13,747 --> 00:10:16,950 line:-1
every TLS handshake you do with a server


157
00:10:17,017 --> 00:10:21,154 line:-2
includes a cleartext
server name indication, or SNI,


158
00:10:21,221 --> 00:10:23,724 line:-2
that can be observed by a third party
on the network.


159
00:10:24,324 --> 00:10:28,028 line:-2
We're currently working with the IETF
to standardize methods


160
00:10:28,095 --> 00:10:30,631 line:-2
for encrypting even more
of the TLS handshake


161
00:10:30,697 --> 00:10:33,433 line:-2
so that third parties cannot snoop
on your traffic.


162
00:10:33,867 --> 00:10:37,271 line:-2
This, especially in combination
with encrypted DNS,


163
00:10:37,337 --> 00:10:40,941 line:-2
will be a major step towards ensuring
that your network communications


164
00:10:41,008 --> 00:10:43,744 line:-2
stay between you
and the server you're talking to.


165
00:10:44,511 --> 00:10:50,617 line:-2
For another sneak peek,
HTTP/3 is the next generation of HTTP,


166
00:10:50,684 --> 00:10:54,154 line:-2
which is built on top
of the new QUIC transport protocol.


167
00:10:55,923 --> 00:11:00,727 line:-2
This transport protocol
has TLS 1.3 security built right in


168
00:11:01,161 --> 00:11:06,266 line:-2
and provides all the same
multiplexed stream support as HTTP/2,


169
00:11:06,333 --> 00:11:09,503 line:-2
but with further reductions
to head-of-line blocking


170
00:11:09,570 --> 00:11:13,273 line:-2
so that losses of any individual request
or response


171
00:11:13,340 --> 00:11:16,944 line:-2
won't hold up
other potentially unrelated messages.


172
00:11:18,545 --> 00:11:23,116 line:-2
HTTP/3, using QUIC,
also has higher fidelity information


173
00:11:23,183 --> 00:11:27,254 line:-2
to provide improved congestion control
and recovery of lost packets.


174
00:11:28,288 --> 00:11:31,124 line:-1
It also brings built-in mobility support


175
00:11:31,191 --> 00:11:35,128 line:-2
such that network transitions don't cause
in-progress operations to fail.


176
00:11:35,195 --> 00:11:39,566 line:-2
They can instead seamlessly continue
on the new network without interruption.


177
00:11:41,435 --> 00:11:46,540 line:0
HTTP/3 is still
an in-progress specification at the IETF,


178
00:11:46,607 --> 00:11:49,042 line:0
where we continue to actively collaborate


179
00:11:49,109 --> 00:11:52,980 line:0
to help make HTTP/3 ready
for worldwide deployment.


180
00:11:53,046 --> 00:11:55,916 line:-2
As an important first step
in that direction,


181
00:11:55,983 --> 00:12:01,355 line:-2
iOS 14 and macOS Big Sur
include an experimental preview


182
00:12:01,421 --> 00:12:05,893 line:-2
of HTTP/3 support for your apps
that use URLSession,


183
00:12:05,959 --> 00:12:08,395 line:-2
which you can enable
in developer settings.


184
00:12:09,696 --> 00:12:13,901 line:-2
You can also try out
the same HTTP/3 support in Safari


185
00:12:13,967 --> 00:12:15,702 line:-1
via experimental settings.


186
00:12:16,570 --> 00:12:22,042 line:0
Similarly, for macOS Big Sur,
you can enable experimental HTTP/3 support


187
00:12:22,109 --> 00:12:24,211 line:0
for apps using URLSession


188
00:12:24,278 --> 00:12:28,916 line:0
by setting the CFNetworkHTTP3Override
user default,


189
00:12:28,982 --> 00:12:33,687 line:0
and you can use the develop menu to enable
it under experimental features for Safari.


190
00:12:33,754 --> 00:12:35,989 line:-1
Please try out HTTP/3


191
00:12:36,056 --> 00:12:38,492 line:-2
and file bugs for any issues
you might encounter.


192
00:12:38,559 --> 00:12:40,994 line:-2
We're really looking forward
to your feedback.


193
00:12:41,795 --> 00:12:48,268 line:-2
Today we talked about how taking advantage
of IPv6, HTTP/2,


194
00:12:48,335 --> 00:12:53,674 line:-1
TLS 1.3, Multipath TCP and encrypted DNS


195
00:12:53,740 --> 00:12:57,244 line:-2
can provide performance, security,
mobility


196
00:12:57,311 --> 00:12:59,546 line:-1
and privacy benefits for everyone.


197
00:13:00,113 --> 00:13:02,850 line:-2
All of these technologies
are currently supported


198
00:13:02,916 --> 00:13:06,019 line:-2
by the modern networking APIs
on Apple platforms,


199
00:13:06,453 --> 00:13:11,425 line:-2
so make sure you're using URLSession
or Network.framework in your application.


200
00:13:11,491 --> 00:13:14,661 line:0
Next,
take a look at your server deployment


201
00:13:14,728 --> 00:13:18,565 line:0
to make sure everything is up to date
and these features are enabled


202
00:13:18,632 --> 00:13:21,034 line:0
so you can fill in
the right-hand side of this list.


203
00:13:21,768 --> 00:13:25,806 line:0
Finally,
enable experimental HTTP/3 support


204
00:13:25,873 --> 00:13:27,774 line:0
and test with your server deployment


205
00:13:27,841 --> 00:13:31,612 line:0
to provide feedback on the next
generation of networking protocols.


206
00:13:31,678 --> 00:13:33,447 line:-1
Thanks for watching.

