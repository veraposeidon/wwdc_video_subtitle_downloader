1
00:00:03,971 --> 00:00:07,107 line:-1
Hello, and welcome to WWDC.


2
00:00:08,775 --> 00:00:11,278 line:0
Hi. I'm Danny Mandel,


3
00:00:11,345 --> 00:00:15,015 line:0
and welcome to "Expand Your SiriKit
Media Intents to More Platforms."


4
00:00:15,082 --> 00:00:18,719 line:-2
We've got an exciting mix
of SiriKit Media new features


5
00:00:18,785 --> 00:00:20,621 line:-1
and experiences for you this year.


6
00:00:20,687 --> 00:00:23,156 line:-1
We've got a lot to talk about.


7
00:00:23,223 --> 00:00:26,793 line:-2
We're putting a particular emphasis
on SiriKit Media Intents


8
00:00:26,860 --> 00:00:27,995 line:-1
in the home this year.


9
00:00:28,061 --> 00:00:31,498 line:-2
As part of that,
we'll be opening up to new platforms.


10
00:00:32,098 --> 00:00:35,402 line:-2
Additionally,
we have some new features to discuss.


11
00:00:36,236 --> 00:00:38,639 line:-2
Finally,
we'll finish up with some new ways


12
00:00:38,705 --> 00:00:41,708 line:-2
to make your SiriKit Media experience
even faster.


13
00:00:42,242 --> 00:00:46,647 line:-2
So let's dive right in
to the new SiriKit Media platforms.


14
00:00:46,713 --> 00:00:50,651 line:-2
Last year, we made a great experience
for you on the go,


15
00:00:50,717 --> 00:00:54,188 line:-2
and this year we're bringing
that same great experience


16
00:00:54,254 --> 00:00:57,090 line:-2
to one of the places
you listen to music the most--


17
00:00:57,157 --> 00:00:58,158 line:-1
in the home.


18
00:01:00,127 --> 00:01:03,463 line:0
On HomePod,
we're using the same media intents


19
00:01:03,530 --> 00:01:05,899 line:0
and a new cloud playback API


20
00:01:05,966 --> 00:01:08,435 line:0
to take advantage
of the unique characteristics


21
00:01:08,502 --> 00:01:10,938 line:0
of the HomePod in the Apple Home.


22
00:01:11,004 --> 00:01:14,374 line:0
You'll want to check out
the full developer program details


23
00:01:14,441 --> 00:01:17,678 line:0
at developer.apple.com/siri.


24
00:01:18,846 --> 00:01:21,715 line:-2
We're happy to announce
that SiriKit Media Intents


25
00:01:21,782 --> 00:01:24,618 line:-1
also now work on Apple TV.


26
00:01:24,685 --> 00:01:26,453 line:-1
In addition to your iOS apps,


27
00:01:26,520 --> 00:01:30,557 line:-2
we know many of you
have custom Apple TV experiences,


28
00:01:30,624 --> 00:01:34,695 line:-2
and we wanted to open up SiriKit Media
to those apps as well.


29
00:01:34,761 --> 00:01:37,931 line:-2
Now I'll hand it over
to my colleague Ryan Klems


30
00:01:37,998 --> 00:01:42,069 line:0
to give us a demo of the new
Apple TV functionality in action.


31
00:01:42,135 --> 00:01:44,705 line:0
Last year, in iOS 13 and watchOS 6,


32
00:01:44,771 --> 00:01:48,175 line:-2
we introduced SiriKit Media Intent
handling for your media applications.


33
00:01:48,242 --> 00:01:51,278 line:-2
This year, we're happy to announce
that we've brought that same functionality


34
00:01:51,345 --> 00:01:52,980 line:-1
to tvOS 14.


35
00:01:53,046 --> 00:01:55,849 line:-2
Now you can add Siri support
to your applications on the big screen.


36
00:01:55,916 --> 00:01:58,585 line:-2
SiriKit Media Intents
allow you to add a wide variety


37
00:01:58,652 --> 00:02:00,687 line:-2
of natural language queries
to your application.


38
00:02:00,754 --> 00:02:02,055 line:-1
You can do simple searches:


39
00:02:02,923 --> 00:02:05,392 line:0
Play music on ControlAudio.


40
00:02:06,760 --> 00:02:08,595 line:0
You can ask to play a band:


41
00:02:08,662 --> 00:02:11,665 line:0
Play the band Khruangbin on ControlAudio.


42
00:02:14,434 --> 00:02:16,303 line:0
You can ask to play a song by an artist:


43
00:02:16,370 --> 00:02:20,374 line:0
Play the song "Be Kind"
by Marshmello and Halsey on ControlAudio...


44
00:02:22,709 --> 00:02:23,877 line:0
and many more.


45
00:02:23,944 --> 00:02:25,379 line:-1
So how do you do that?


46
00:02:25,445 --> 00:02:28,815 line:-2
Adding SiriKit Media Intent handling
to your tvOS application


47
00:02:28,882 --> 00:02:31,718 line:-2
is done the same way
you would add the support to iOS.


48
00:02:31,785 --> 00:02:34,955 line:-1
Please see the 2019 WWDC session,


49
00:02:35,022 --> 00:02:37,157 line:-1
"Introducing SiriKit Media Intents,"


50
00:02:37,224 --> 00:02:40,627 line:-2
for more information on the steps to add
the extension target to your application.


51
00:02:40,694 --> 00:02:43,597 line:-2
Now, let's do a quick recap of how
we handle natural language requests


52
00:02:43,664 --> 00:02:44,831 line:-1
in SiriKit Media apps.


53
00:02:45,999 --> 00:02:49,369 line:-2
The intent handler is the key class
in handling SiriKit Media requests,


54
00:02:49,436 --> 00:02:52,973 line:-2
and the key method to implement
is resolveMediaItems.


55
00:02:53,040 --> 00:02:56,543 line:-2
resolveMediaItems is where you
evaluate the INPlayMediaIntent object


56
00:02:56,610 --> 00:02:58,378 line:-1
that is received by your application


57
00:02:58,445 --> 00:03:01,381 line:-2
and perform a search to turn it
into the concrete media item


58
00:03:01,448 --> 00:03:03,550 line:-1
that you want your app to play.


59
00:03:03,617 --> 00:03:06,753 line:-2
After you resolve the media item,
your handler will be called,


60
00:03:06,820 --> 00:03:10,324 line:-2
and this will cause your application
to be launched so you can begin playback.


61
00:03:10,390 --> 00:03:12,659 line:-2
One difference with tvOS
is that the customer is


62
00:03:12,726 --> 00:03:15,262 line:-2
generally only interacting
with one application at a time,


63
00:03:15,329 --> 00:03:19,066 line:-2
and as a result, a foreground app launch
is likely the more preferred interaction.


64
00:03:19,132 --> 00:03:22,736 line:-2
Unlike on iOS where a background launch
is more likely the preferred interaction.


65
00:03:23,670 --> 00:03:26,640 line:-2
You control this by returning
continueInApp


66
00:03:26,707 --> 00:03:28,876 line:-2
from your handle method
instead of handleInApp.


67
00:03:28,942 --> 00:03:31,879 line:-2
So, with the same few short steps
that we showed you last year,


68
00:03:31,945 --> 00:03:33,580 line:-2
you can add the ability
for your application


69
00:03:33,647 --> 00:03:36,183 line:-2
to play audio content through Siri
on tvOS.


70
00:03:36,250 --> 00:03:38,552 line:-2
We were very excited
to see all the great adoptions


71
00:03:38,619 --> 00:03:41,522 line:-2
of SiriKit Media Intents last year
on iOS and watchOS


72
00:03:41,588 --> 00:03:44,758 line:-2
and are looking forward to seeing
what you do on tvOS this year.


73
00:03:44,825 --> 00:03:46,693 line:-1
Thanks for that awesome demo, Ryan.


74
00:03:46,760 --> 00:03:49,830 line:-2
Now I want to switch from platforms
to new features


75
00:03:49,897 --> 00:03:53,901 line:-2
that make the experience of asking Siri
to listen to music even easier.


76
00:03:53,967 --> 00:03:56,236 line:-1
As we work through these examples,


77
00:03:56,303 --> 00:03:58,805 line:-2
we'll be using our example app,
ControlAudio,


78
00:03:59,406 --> 00:04:01,875 line:-1
which was introduced at WWDC19.


79
00:04:02,442 --> 00:04:05,746 line:-2
So let's talk about
the new Siri alternatives UI.


80
00:04:06,547 --> 00:04:09,950 line:-2
So, let's take a look at the current
SiriKit Media experience


81
00:04:10,017 --> 00:04:12,452 line:-1
in the new compact Siri UI.


82
00:04:12,519 --> 00:04:15,989 line:-2
We ask to play a song
from the album New Me, Same Us.


83
00:04:16,055 --> 00:04:20,726 line:-2
ControlAudio chose a single song to play,
and playback begins.


84
00:04:20,793 --> 00:04:23,764 line:-2
There isn't a way
to present more information than this,


85
00:04:23,830 --> 00:04:26,700 line:-1
so we're only able to play that one song.


86
00:04:27,234 --> 00:04:29,970 line:-2
We all know that sometimes
we want something slightly different


87
00:04:30,037 --> 00:04:31,772 line:-1
than what starts playing.


88
00:04:31,839 --> 00:04:34,908 line:-2
So we've made it easier
to make tweaks on the fly,


89
00:04:34,975 --> 00:04:38,645 line:-2
without having to open the app and disrupt
whatever you're doing while on the go.


90
00:04:39,479 --> 00:04:44,751 line:-2
We do so with the new
alternatives UI in SiriKit Media.


91
00:04:44,818 --> 00:04:48,188 line:-2
We can see that someone asked
to play that same song,


92
00:04:48,255 --> 00:04:50,357 line:-1
and Siri started playing it for them.


93
00:04:51,825 --> 00:04:55,028 line:-1
However, we can now also see this new menu


94
00:04:55,095 --> 00:04:57,164 line:-1
that says "Maybe You Wanted,"


95
00:04:57,231 --> 00:05:00,934 line:-2
and if we tap on it,
we are taken to the following UI.


96
00:05:02,369 --> 00:05:04,004 line:-1
And as you can see here,


97
00:05:04,071 --> 00:05:07,407 line:-2
there are a number of different songs
from the same album


98
00:05:07,474 --> 00:05:11,945 line:-2
that someone might have wanted instead
of the one that ControlAudio chose.


99
00:05:12,012 --> 00:05:14,681 line:-1
Now we can tap on any one of those options


100
00:05:14,748 --> 00:05:17,818 line:-2
to start playing that
instead of the first choice.


101
00:05:18,385 --> 00:05:21,688 line:-2
And that is the new
SiriKit Media Alternatives UI.


102
00:05:21,755 --> 00:05:25,592 line:-2
So how do we make this work?
It ends up being quite simple.


103
00:05:26,460 --> 00:05:29,096 line:-2
In your current
resolveMediaItems method,


104
00:05:29,162 --> 00:05:33,800 line:-2
you're probably calling the success
with resolvedMediaItem method


105
00:05:33,867 --> 00:05:36,837 line:-1
on INMediaItemResolutionResult.


106
00:05:36,904 --> 00:05:41,875 line:-2
Now, that method is going to return
a single media item resolution result.


107
00:05:44,044 --> 00:05:46,413 line:-1
In order to return multiple items,


108
00:05:46,480 --> 00:05:50,584 line:-2
all you need to do is switch over
to the new plural version,


109
00:05:50,651 --> 00:05:53,587 line:-1
successes with resolvedMediaItems,


110
00:05:53,654 --> 00:05:56,056 line:-2
and anything
after the first item in the list


111
00:05:56,123 --> 00:05:58,025 line:-1
will show up as an alternative.


112
00:05:59,560 --> 00:06:02,829 line:-2
So the next question you may ask
is how do you handle the taps


113
00:06:02,896 --> 00:06:05,332 line:-2
when someone chooses
one of the alternatives?


114
00:06:06,099 --> 00:06:09,136 line:-2
All that happens when someone taps
on one of the alternatives


115
00:06:09,203 --> 00:06:11,772 line:-1
is that the media item they've tapped on


116
00:06:11,839 --> 00:06:15,142 line:-2
is set as the media item
in the INPlayMediaIntent


117
00:06:15,209 --> 00:06:16,543 line:-1
that is passed to handle.


118
00:06:16,610 --> 00:06:18,879 line:-2
What this means
is that you can handle this


119
00:06:18,946 --> 00:06:22,649 line:-2
just as you handle
any other INPlayMediaIntent today.


120
00:06:23,684 --> 00:06:25,519 line:-1
Let's see the code change we need to make


121
00:06:25,586 --> 00:06:28,856 line:-2
in order to get SiriKit Media
alternatives working.


122
00:06:28,922 --> 00:06:31,992 line:-2
The first thing we're gonna do
is open our intent handler


123
00:06:32,059 --> 00:06:34,127 line:-1
in our sample project, ControlAudio.


124
00:06:37,798 --> 00:06:41,268 line:-2
And we'll navigate
to our resolveMediaItems method.


125
00:06:41,335 --> 00:06:42,336 line:-1
[typing continues]


126
00:06:42,402 --> 00:06:45,672 line:-2
Currently, we're calling
the singular version of the method


127
00:06:46,540 --> 00:06:48,175 line:-1
success with:


128
00:06:48,242 --> 00:06:50,644 line:-1
So let's run the app and see what it does.


129
00:06:53,313 --> 00:06:58,018 line:-2
Play a song from New Me, Same Us
on ControlAudio.


130
00:06:58,719 --> 00:07:01,855 line:-2
[Siri] Here's "Where You Belong"
by Little Dragon on ControlAudio.


131
00:07:01,922 --> 00:07:04,658 line:-2
All right, we can see
that it started playback,


132
00:07:04,725 --> 00:07:06,527 line:-1
but there are no alternatives.


133
00:07:07,628 --> 00:07:09,763 line:-1
So let's go back to Xcode,


134
00:07:09,830 --> 00:07:11,164 line:-1
kill the process,


135
00:07:11,231 --> 00:07:13,934 line:-2
and update the method
to return multiple media items


136
00:07:14,001 --> 00:07:15,736 line:-1
instead of just a single one.


137
00:07:15,802 --> 00:07:20,641 line:-1
[typing]


138
00:07:30,450 --> 00:07:33,153 line:-2
So now we're calling
the plural version of the method


139
00:07:33,220 --> 00:07:34,555 line:-1
successes with:


140
00:07:34,621 --> 00:07:38,125 line:-2
Let's run the app
and see what it does this time.


141
00:07:44,264 --> 00:07:48,368 line:-2
Play a song from <New Me, Same Us
on ControlAudio.


142
00:07:49,236 --> 00:07:53,373 line:-2
[Siri] "Where You Belong" by Little Dragon
now playing on ControlAudio.


143
00:07:53,440 --> 00:07:55,843 line:-1
All right now we have alternatives.


144
00:07:55,909 --> 00:07:57,411 line:-1
Let's go play one.


145
00:07:58,278 --> 00:07:59,947 line:-1
And I'll play "New Fiction."


146
00:08:03,884 --> 00:08:05,853 line:-1
And we can see that it started playing.


147
00:08:05,919 --> 00:08:09,623 line:-2
It's just that easy
to get the new alternative support


148
00:08:09,690 --> 00:08:11,992 line:-1
hooked up in SiriKit Media.


149
00:08:12,059 --> 00:08:14,828 line:-2
Now let's talk about
some performance improvements


150
00:08:14,895 --> 00:08:17,397 line:-1
that are new to SiriKit Media this year.


151
00:08:18,532 --> 00:08:21,869 line:-2
Last year, when we launched
SiriKit Media Intents,


152
00:08:21,935 --> 00:08:24,505 line:-2
we required the use
of an intents extension


153
00:08:24,571 --> 00:08:27,241 line:-1
to adopt your SiriKit Media functionality.


154
00:08:28,041 --> 00:08:31,979 line:-2
This year, there's a new way
to handle SiriKit Media Intents--


155
00:08:32,044 --> 00:08:33,780 line:-1
in-app intent handling.


156
00:08:34,681 --> 00:08:38,684 line:-2
In-app intent handling moves all
the intent handling stages into your app


157
00:08:38,751 --> 00:08:41,020 line:-1
rather than in an extension.


158
00:08:41,087 --> 00:08:44,691 line:-2
An advantage here
is that it avoids a process launch,


159
00:08:44,758 --> 00:08:48,195 line:-2
as you don't need to launch
your intents extension and your app


160
00:08:48,262 --> 00:08:50,631 line:-1
to start a background audio session.


161
00:08:50,697 --> 00:08:52,633 line:-1
You only need to launch your app.


162
00:08:54,268 --> 00:08:57,137 line:-2
However,
because it's launching your full app,


163
00:08:57,204 --> 00:09:00,240 line:-2
this could potentially mean
a slower Siri response time


164
00:09:00,307 --> 00:09:02,409 line:-1
during the resolve phase.


165
00:09:02,476 --> 00:09:07,915 line:-2
Intents extensions are small, lightweight
processes optimized for quick launching,


166
00:09:07,981 --> 00:09:11,418 line:-2
so you will definitely need
to tune your full app launch experience


167
00:09:11,485 --> 00:09:13,987 line:-1
to get the same quick response out of it.


168
00:09:14,955 --> 00:09:16,857 line:-1
One other benefit you could see


169
00:09:16,924 --> 00:09:21,395 line:-2
is that you can start the player
warming phase much earlier in your app,


170
00:09:21,461 --> 00:09:24,164 line:-2
since you'll be implementing
resolve there.


171
00:09:24,231 --> 00:09:28,535 line:-2
So, if you know you need to kick off
network requests to fetch credentials,


172
00:09:28,602 --> 00:09:31,104 line:-2
you can start that
at the beginning of resolve


173
00:09:31,171 --> 00:09:33,941 line:-2
and ensure that the player
is 100% initialized


174
00:09:34,007 --> 00:09:36,243 line:-1
by the time you get to handle the intent.


175
00:09:36,310 --> 00:09:40,380 line:-2
I refer you to the presentation,
"Integrate Intents with Your App,"


176
00:09:40,447 --> 00:09:43,350 line:-2
to get the full details
on in-app intent handling.


177
00:09:44,484 --> 00:09:48,021 line:-2
For those of you with existing
extension-based implementations,


178
00:09:48,088 --> 00:09:51,725 line:-2
we also have a performance boost
this year via app pre-warming.


179
00:09:52,426 --> 00:09:55,529 line:0
Looking at your existing
SiriKit Media implementation,


180
00:09:55,596 --> 00:09:59,266 line:0
we go through the standard resolve,
confirm and handle phases,


181
00:09:59,333 --> 00:10:01,435 line:0
and then once all those are complete,


182
00:10:01,502 --> 00:10:05,105 line:0
we issue a background app launch
for your app to begin playback.


183
00:10:05,739 --> 00:10:08,709 line:-2
This does provide
for a nice separation of concerns


184
00:10:08,775 --> 00:10:12,412 line:-2
in that the extension can contain
all the intent handling logic,


185
00:10:12,479 --> 00:10:14,948 line:-1
and the app can handle the playback logic.


186
00:10:15,015 --> 00:10:18,185 line:-2
However,
it can delay important app concerns


187
00:10:18,252 --> 00:10:21,555 line:-2
such as playback engine setup
or credential fetching


188
00:10:21,622 --> 00:10:23,557 line:-1
until much later than they need to be.


189
00:10:25,292 --> 00:10:29,263 line:-2
With app pre-warming,
SiriKit will get your app fired up earlier


190
00:10:29,329 --> 00:10:33,600 line:-2
and have playback ready to go
once your extension is complete.


191
00:10:33,667 --> 00:10:36,136 line:-1
It's important to note that app pre-warming


192
00:10:36,203 --> 00:10:39,239 line:-2
does require some additional work
in your app,


193
00:10:39,306 --> 00:10:43,343 line:-2
so you'll want to work with us
to make sure you get it working properly.


194
00:10:43,410 --> 00:10:45,746 line:-1
And last, there are benefits and drawbacks


195
00:10:45,812 --> 00:10:49,049 line:-2
to both in-app intent handling
and app pre-warming,


196
00:10:49,116 --> 00:10:51,785 line:-2
so you're going to need
to evaluate the pros and cons


197
00:10:51,852 --> 00:10:55,389 line:-2
for your particular implementation
to see what works best for you.


198
00:10:55,856 --> 00:10:58,425 line:-2
We wanted to let everyone
in the developer community know


199
00:10:58,492 --> 00:11:01,962 line:-2
that, as the saying goes,
we're eating our own dog food.


200
00:11:02,796 --> 00:11:05,999 line:-2
We're thrilled to have a common
framework for our bug fixes,


201
00:11:06,066 --> 00:11:08,969 line:-1
new features, and performance improvements


202
00:11:09,036 --> 00:11:12,573 line:-2
that both you and the Siri team at Apple
can benefit from.


203
00:11:13,207 --> 00:11:15,075 line:-1
Thank you, and we hope you enjoy


204
00:11:15,142 --> 00:11:18,812 line:-2
giving people great, new
SiriKit Media experiences this year.

