1
00:00:03,871 --> 00:00:06,106 line:-1
Hello and welcome to WWDC.


2
00:00:08,709 --> 00:00:11,712 line:0
My name is Roman,
and I'm a Shortcuts engineer at Apple.


3
00:00:12,179 --> 00:00:15,983 line:0
Today, I'm going to share some tips
on how to efficiently debug your Siri


4
00:00:16,049 --> 00:00:17,317 line:0
and Shortcuts support.


5
00:00:17,918 --> 00:00:19,419 line:-1
Let's start by taking a look


6
00:00:19,486 --> 00:00:23,657 line:-2
at how you can automate Siri queries
using the scheme editor in Xcode.


7
00:00:25,092 --> 00:00:27,794 line:-2
You can provide the Siri intent query
from the get-go,


8
00:00:27,861 --> 00:00:29,763 line:-1
so you don't actually have to trigger Siri


9
00:00:29,830 --> 00:00:32,566 line:-2
and speak to it
when you debug your extension.


10
00:00:33,734 --> 00:00:36,103 line:-2
When you're attaching
to your Intents extension,


11
00:00:36,170 --> 00:00:40,674 line:-2
you have an option to choose between Siri
and the Shortcuts app as the host process.


12
00:00:40,741 --> 00:00:42,476 line:-1
Sometimes you might wonder


13
00:00:42,543 --> 00:00:45,345 line:-2
why you don't hit breakpoints
in your Intents UI extension


14
00:00:45,412 --> 00:00:48,248 line:-2
while you're being attached
to an Intents extension in Xcode.


15
00:00:48,782 --> 00:00:52,319 line:-2
This is because both of these extensions
are separate processes.


16
00:00:52,786 --> 00:00:54,588 line:-1
You can use the Xcode debug menu


17
00:00:54,655 --> 00:00:57,157 line:-2
to attach to multiple processes
at the same time.


18
00:00:57,624 --> 00:01:00,360 line:-2
So, you implemented SiriKit support
in your app


19
00:01:00,427 --> 00:01:02,996 line:-2
but you're getting,
"Sorry there was a problem with the app"


20
00:01:03,063 --> 00:01:04,897 line:-1
when you execute your intent in Siri.


21
00:01:04,965 --> 00:01:07,167 line:-1
Now what can you do about this?


22
00:01:07,234 --> 00:01:10,270 line:-2
First, make sure that
you call your completion handlers


23
00:01:10,337 --> 00:01:14,341 line:-2
of your intent handling protocol methods
before the 10-second time-out.


24
00:01:15,375 --> 00:01:19,646 line:-2
You also need to make sure that you
call the completion handlers only once,


25
00:01:19,713 --> 00:01:22,382 line:-2
otherwise an exception will be thrown
in your process.


26
00:01:23,217 --> 00:01:26,053 line:-2
You should also
verify that your process is not crashing


27
00:01:26,119 --> 00:01:27,521 line:-1
in the middle of the request.


28
00:01:27,588 --> 00:01:33,160 line:-2
Open Devices and Simulators in Xcode
and click the "View Device Logs" button


29
00:01:33,227 --> 00:01:35,562 line:-1
and scan it for crashes in your processes.


30
00:01:36,864 --> 00:01:39,733 line:-2
Using os_log statements
and the Console.app


31
00:01:39,800 --> 00:01:43,036 line:-2
can help you understand
how multiple processes work together.


32
00:01:44,304 --> 00:01:48,342 line:-2
When composing your os_log statements
you can prefix them with an emoji


33
00:01:48,408 --> 00:01:50,611 line:-1
or some other unique keyword


34
00:01:50,677 --> 00:01:54,882 line:-2
and then use the Console.app
to filter by your unique keyword


35
00:01:54,948 --> 00:01:58,719 line:-2
to get an accurate timeline of events
in all processes involved.


36
00:01:59,286 --> 00:02:00,521 line:-1
Thanks for watching.

