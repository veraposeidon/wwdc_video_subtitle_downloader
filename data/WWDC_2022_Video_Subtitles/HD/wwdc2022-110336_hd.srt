2
00:00:00.334 --> 00:00:07.341 line:-1 align:center
♪ ♪


3
00:00:09.743 --> 00:00:12.546 line:-2 align:center
Hello, everyone,
my name is MaryAshley Etefia,


4
00:00:12.579 --> 00:00:15.349 line:-2 align:center
and I'm a software engineer
for Screen Time.


5
00:00:15,382 --> 00:00:18,886 line:-2
The COVID-19 pandemic put
a lot of pressure on our industry


6
00:00:18.919 --> 00:00:23.624 line:-2 align:center
to respond to the growing demand for
digital health and productivity resources.


7
00:00:23.657 --> 00:00:26.527 line:-2 align:center
The pandemic reinforced
society's need for balance


8
00:00:26.560 --> 00:00:29.796 line:-2 align:center
and has put everyone's ability
to successfully manage their own space


9
00:00:29.830 --> 00:00:31.565 line:-1 align:center
to the test.


10
00:00:31,598 --> 00:00:34,935 line:-2
Last year, we introduced to you all
the Screen Time API,


11
00:00:34,968 --> 00:00:37,538 line:-2
which allowed you to build
new apps to help your users


12
00:00:37.571 --> 00:00:40.607 line:-2 align:center
manage their child's relationship
with their device.


13
00:00:40.641 --> 00:00:43.410 line:-2 align:center
We were very pleased to see
the creative and productive ways


14
00:00:43.443 --> 00:00:45.579 line:-1 align:center
that you all have made use of our product.


15
00:00:45.612 --> 00:00:49.583 line:-2 align:center
It excites us to see you embracing
our culture of thinking differently.


16
00:00:49,616 --> 00:00:53,487 line:-2
We are also very thankful for the feedback
we have received in the past year.


17
00:00:53,520 --> 00:00:57,558 line:-2
Before I introduce to you all
what's new in iOS 16's ScreenTime API,


18
00:00:57.591 --> 00:01:01.828 line:-2 align:center
I would first like to recap
some highlights from our iOS 15 release.


19
00:01:01.862 --> 00:01:05.299 line:-2 align:center
Last year's Screen Time API
introduced three new frameworks:


20
00:01:05,332 --> 00:01:09,570 line:-2
Family Controls,
Managed Settings, and Device Activity.


21
00:01:09,603 --> 00:01:12,806 line:-2
In iOS 15, these frameworks
brought new capabilities


22
00:01:12,840 --> 00:01:14,975 line:-1
to your parental control apps.


23
00:01:15.008 --> 00:01:18.145 line:-2 align:center
To jog your memory,
let's take quick look at all three.


24
00:01:18.178 --> 00:01:20.447 line:-1 align:center
Family Controls is essentially a gateway


25
00:01:20,480 --> 00:01:23,350 line:-2
since it authorizes access
to the Screen Time API.


26
00:01:23.383 --> 00:01:25.719 line:-2 align:center
This framework allowed you
to prevent removal


27
00:01:25.752 --> 00:01:29.022 line:-2 align:center
of your parental control app,
and it protected user privacy


28
00:01:29.056 --> 00:01:33.694 line:-2 align:center
by providing opaque tokens
used to identify apps and websites.


29
00:01:33.727 --> 00:01:36.997 line:-2 align:center
With ManagedSettings,
your app could apply restrictions,


30
00:01:37.030 --> 00:01:40.567 line:-2 align:center
filter web traffic, and shield activity,
much like Screen Time does,


31
00:01:40.601 --> 00:01:43.837 line:-2 align:center
but customized with your app's
branding and functionality.


32
00:01:43,871 --> 00:01:47,241 line:-2
The Device Activity framework
allowed you to execute code on the start


33
00:01:47.274 --> 00:01:49.943 line:-2 align:center
and end of timing windows,
as well as whenever usage


34
00:01:49.977 --> 00:01:52.145 line:-1 align:center
of an app or website exceeded a threshold.


35
00:01:52.179 --> 00:01:56.950 line:-2 align:center
Each of these three frameworks have had
some exciting new updates in iOS 16.


36
00:01:56.984 --> 00:02:00.754 line:-2 align:center
These updates are not only going to make
our API easier for you to use


37
00:02:00.787 --> 00:02:04.858 line:-2 align:center
but are also going to enhance
the experience of our users.


38
00:02:04,892 --> 00:02:08,962 line:-2
I'll walk you through the details
using our demo application, Worklog.


39
00:02:08.996 --> 00:02:12.633 line:-2 align:center
Worklog encourages good habits
for new professionals by restricting


40
00:02:12,666 --> 00:02:16,737 line:-2
access to certain apps
until a certain usage metric is met.


41
00:02:16.770 --> 00:02:20.107 line:-2 align:center
I would like to show you how Aniyah,
the owner of this iPhone,


42
00:02:20.140 --> 00:02:24.978 line:-2 align:center
can impose these restrictions on herself
using iOS 16's ScreenTime API.


43
00:02:25.012 --> 00:02:27.614 line:-1 align:center
Lets start with Family Controls.


44
00:02:27.648 --> 00:02:31.485 line:-2 align:center
If you remember from iOS 15,
Family Controls was only capable


45
00:02:31,518 --> 00:02:35,455 line:-2
of authorizing child devices
via iCloud authentication.


46
00:02:35.489 --> 00:02:39.693 line:-2 align:center
We are happy to inform you that in iOS 16,
Family Controls is now capable


47
00:02:39.726 --> 00:02:43.330 line:-2 align:center
of authorizing independent users
from their own device.


48
00:02:43.363 --> 00:02:47.167 line:-2 align:center
This new authorization method
means the Screen Time API can be


49
00:02:47,201 --> 00:02:50,070 line:-2
used to build more than
just parental controls apps.


50
00:02:50,103 --> 00:02:52,873 line:-2
Unlike the existing
parental control authorization,


51
00:02:52,906 --> 00:02:57,344 line:-2
individual authorization can be
used by any number of apps per device.


52
00:02:57,377 --> 00:03:02,182 line:-2
Also, since individual authorization
is not for parental control use cases,


53
00:03:02.216 --> 00:03:06.854 line:-2 align:center
implicit restrictions for iCloud sign-out
and deletion of an app do not apply.


54
00:03:06.887 --> 00:03:09.389 line:-2 align:center
Let's look at how to use
the new authorization.


55
00:03:09,423 --> 00:03:13,160 line:-2
The first thing your app needs to do
on launch is request authorization


56
00:03:13,193 --> 00:03:14,862 line:-1
for FamilyControls.


57
00:03:14.895 --> 00:03:17.130 line:-1 align:center
I will use a shared Authorization Center


58
00:03:17.164 --> 00:03:20.434 line:-2 align:center
to make this request
when Worklog first launches.


59
00:03:20,467 --> 00:03:23,937 line:-2
The request can either result
in updating the authorization status


60
00:03:23.971 --> 00:03:26.139 line:-1 align:center
or throwing an error.


61
00:03:26,173 --> 00:03:28,876 line:-2
Since this app has never been
run on this iPhone before,


62
00:03:28.909 --> 00:03:32.913 line:-2 align:center
requestAuthorization will ask
for Aniyah's approval with an alert.


63
00:03:32,946 --> 00:03:36,149 line:-2
Tapping on Allow will then prompt
the user to authenticate


64
00:03:36,183 --> 00:03:40,287 line:-2
with Face ID, Touch ID,
or device passcode to continue.


65
00:03:40.320 --> 00:03:42.656 line:-2 align:center
Once the user
has successfully authenticated,


66
00:03:42.689 --> 00:03:46.426 line:-2 align:center
calling requestAuthorization again
will not prompt with an alert again,


67
00:03:46,460 --> 00:03:48,529 line:-1
but instead silently succeed.


68
00:03:48.562 --> 00:03:51.265 line:-2 align:center
Once an app has
authorized with Family Controls,


69
00:03:51.298 --> 00:03:54.468 line:-2 align:center
two switches are added
in Settings for the app.


70
00:03:54,501 --> 00:03:57,804 line:-2
One in Screen Time, under
the Apps with Screen Time Access List


71
00:03:57.838 --> 00:04:01.675 line:-2 align:center
and one in per app settings,
labeled as Screen Time Restrictions.


72
00:04:01,708 --> 00:04:04,845 line:-2
Parents and individual users can
choose to deauthorize the app


73
00:04:04.878 --> 00:04:07.581 line:-2 align:center
from Family Controls
via either of these switches.


74
00:04:07.614 --> 00:04:10.751 line:-2 align:center
As you can see,
using the new individual authorization


75
00:04:10.784 --> 00:04:13.887 line:-2 align:center
is just as simple as using
the parental controls authorization,


76
00:04:13.921 --> 00:04:17.558 line:-2 align:center
and we've made some nice improvements
to both with our use of async.


77
00:04:17.591 --> 00:04:20.527 line:-2 align:center
Now, lets look at the new changes
to Managed Settings.


78
00:04:20.561 --> 00:04:24.364 line:-2 align:center
Managed Settings has been revamped
to make developer use a lot more easy,


79
00:04:24,398 --> 00:04:27,401 line:-2
particularly in the use
of Managed Settings Store.


80
00:04:27.434 --> 00:04:31.471 line:-2 align:center
For those of you who are unfamiliar,
a Managed Settings Store is a data store


81
00:04:31.505 --> 00:04:34.474 line:-2 align:center
that applies settings
to the current user or device.


82
00:04:34,508 --> 00:04:39,580 line:-2
In iOS 15, you could only have
one Managed Settings Store per process.


83
00:04:39,613 --> 00:04:42,115 line:-2
Also, your app
and device activity extensions


84
00:04:42.149 --> 00:04:44.818 line:-2 align:center
had to have
different Managed Settings Stores.


85
00:04:44.852 --> 00:04:48.822 line:-2 align:center
This made it difficult to change settings
in response to device activity.


86
00:04:48,856 --> 00:04:53,493 line:-2
Now, in iOS 16, you can create
up to 50 Managed Settings Stores


87
00:04:53,527 --> 00:04:56,964 line:-2
per process,
each with their own unique name.


88
00:04:56.997 --> 00:04:59.800 line:-2 align:center
These named stores are also
automatically shared between


89
00:04:59.833 --> 00:05:02.636 line:-1 align:center
your app and all your app extensions.


90
00:05:02.669 --> 00:05:07.341 line:-2 align:center
Also, you can now remove all the settings
in any given named store all at once.


91
00:05:07,374 --> 00:05:10,844 line:-2
I'd like to show you
how Worklog uses named stores.


92
00:05:10.878 --> 00:05:14.348 line:-2 align:center
When Worklog launches for the first time
and Aniyah's device has


93
00:05:14.381 --> 00:05:18.852 line:-2 align:center
been successfully authorized,
we create a Gaming ManagedSettingsStore.


94
00:05:18,886 --> 00:05:21,255 line:-2
This store will contain
our gaming restrictions,


95
00:05:21,288 --> 00:05:25,792 line:-2
which, in Worklog's case, includes
shielding for all gaming websites.


96
00:05:25,826 --> 00:05:29,596 line:-2
Worklog also has a store named "Social"
which shields social media


97
00:05:29.630 --> 00:05:33.734 line:-2 align:center
apps and websites as soon as
the app is launched for the first time.


98
00:05:33,767 --> 00:05:35,402 align:center
However, when using Worklog,


99
00:05:35,435 --> 00:05:38,138 line:0
Aniyah can click
the Allow for Evenings button,


100
00:05:38,172 --> 00:05:40,340 line:0
which will create
a Device Activity Schedule


101
00:05:40,374 --> 00:05:44,545 line:0
that only allows social media
between 5:00 and 8:00 p.m.


102
00:05:44,578 --> 00:05:47,948 line:0
Once it's 5:00 p.m.,
our Device Activity Monitor un-restricts


103
00:05:47,981 --> 00:05:49,883 line:0
the corresponding named store.


104
00:05:49,917 --> 00:05:53,153 line:0
When the timing window ends at 8:00 p.m.,
we re-apply restrictions


105
00:05:53,187 --> 00:05:56,190 align:center
to social media apps and websites
on Aniyah's device.


106
00:05:56,223 --> 00:05:58,225 line:-1
Now, some of you may be wondering,


107
00:05:58.258 --> 00:06:00.827 line:-2 align:center
"Didn't our Gaming store
restrict gaming websites?"


108
00:06:00.861 --> 00:06:03.197 line:-2 align:center
"Won't clearing all the settings
in our Social store


109
00:06:03.230 --> 00:06:05.799 line:-2 align:center
conflict with our settings
from our Gaming store?"


110
00:06:05.832 --> 00:06:07.134 line:-1 align:center
The answer is no.


111
00:06:07.167 --> 00:06:11.104 line:-2 align:center
The most restrictive setting always wins,
therefore Gaming websites will


112
00:06:11,138 --> 00:06:13,774 line:-2
still remain restricted
on Aniyah's device.


113
00:06:13,807 --> 00:06:16,743 line:-2
We feel that these new named stores
are extremely powerful


114
00:06:16.777 --> 00:06:20.814 line:-2 align:center
and will make it a lot simpler for you
to develop apps using Managed Settings.


115
00:06:20,848 --> 00:06:22,449 line:-1
But we're not done yet.


116
00:06:22,482 --> 00:06:26,386 line:-2
We've also added a very exciting feature
to the Device Activity framework.


117
00:06:26,420 --> 00:06:30,057 line:-2
In iOS 15,
Device Activity allowed your app


118
00:06:30.090 --> 00:06:32.726 line:-2 align:center
to respond to the start and end
of timing windows,


119
00:06:32.759 --> 00:06:35.596 line:-2 align:center
as well as usage thresholds
for apps and websites.


120
00:06:35.629 --> 00:06:40.067 line:-2 align:center
In iOS 16, Device Activity has
a new reporting service which enables


121
00:06:40.100 --> 00:06:45.005 line:-2 align:center
your app to create completely custom
usage reports using SwiftUI.


122
00:06:45,038 --> 00:06:49,076 line:-2
The usage data is provided to a new
extension point where you can customize


123
00:06:49,109 --> 00:06:53,080 line:-2
which data is shown to the user,
as well as how it's rendered on screen.


124
00:06:53.113 --> 00:06:56.116 line:-2 align:center
These device activity reports
allow for you to completely


125
00:06:56,149 --> 00:06:58,285 line:-1
customize your user's experience,


126
00:06:58,318 --> 00:07:02,222 line:-2
whilst providing the end user
with complete privacy.


127
00:07:02.256 --> 00:07:06.059 line:-2 align:center
In Worklog, you can see us establish
a DeviceActivityReport.Context


128
00:07:06,093 --> 00:07:08,762 line:-1
and a DeviceActivityFilter.


129
00:07:08.795 --> 00:07:11.064 line:-2 align:center
You can think
of a DeviceActivityReport.Context


130
00:07:11,098 --> 00:07:13,500 line:-2
as a customizable type
that tells your report


131
00:07:13,534 --> 00:07:17,604 line:-2
what type of view to draw
based on DeviceActivity Data.


132
00:07:17.638 --> 00:07:20.841 line:-2 align:center
You can customize the timing windows
of whichever report context


133
00:07:20.874 --> 00:07:23.177 line:-1 align:center
by specifying a DeviceActivityFilter.


134
00:07:23,210 --> 00:07:27,047 line:-2
We will then set the definition
of our device activity report context


135
00:07:27,080 --> 00:07:29,516 line:-1
inside of our DeviceActivityReportScene


136
00:07:29.550 --> 00:07:32.286 line:-2 align:center
in order to tell the scene
what to represent.


137
00:07:32,319 --> 00:07:37,191 line:-2
Our content defines our custom
configuration, PieChartView.Configuration,


138
00:07:37,224 --> 00:07:40,661 line:-2
as well as the resulting
SwiftUI view for this report.


139
00:07:40,694 --> 00:07:45,432 line:-2
Then, inside of makeConfiguration, we will
map over Aniyah's DeviceActivity Data,


140
00:07:45.465 --> 00:07:48.969 line:-2 align:center
in order to hydrate
our pie chart view's configuration.


141
00:07:49.002 --> 00:07:50.938 line:-2 align:center
The framework will invoke
makeConfiguration


142
00:07:50.971 --> 00:07:56.176 line:-2 align:center
whenever new usage data is fetched
so you do not need to invoke it yourself.


143
00:07:56.210 --> 00:07:59.546 line:-2 align:center
Here, you can see
how PieChartView.Configuration


144
00:07:59,580 --> 00:08:01,782 line:-2
serves as a view model
for our pie chart view


145
00:08:01,815 --> 00:08:05,219 line:-2
by providing the view
with Aniyah's device activity data.


146
00:08:05.252 --> 00:08:08.455 line:-2 align:center
Finally, we are able to render
our custom SwiftUI report


147
00:08:08.488 --> 00:08:12.259 line:-2 align:center
by defining it in the body
of our DeviceActivityReport extension.


148
00:08:12.292 --> 00:08:15.429 line:-2 align:center
The pie chart report that we created
for Worklog is just one


149
00:08:15.462 --> 00:08:19.132 line:-2 align:center
of the exciting ways that you can
customize device activity reports.


150
00:08:19.166 --> 00:08:24.104 line:-2 align:center
That concludes our briefing
of what's new to iOS 16's Screen Time API.


151
00:08:24.137 --> 00:08:27.407 line:-2 align:center
As you can see,
the Screen Time API continues to support


152
00:08:27.441 --> 00:08:30.410 line:-2 align:center
features like core restrictions
and device activity monitoring


153
00:08:30.444 --> 00:08:34.114 line:-2 align:center
in the same secure yet privacy-preserving
way that we first launched it.


154
00:08:34.147 --> 00:08:35.315 line:-1 align:center
To recap,


155
00:08:35,349 --> 00:08:38,819 line:-2
independent users can now authorize
with Family Controls with the option


156
00:08:38,852 --> 00:08:42,623 line:-2
of authorizing multiple third party
applications per device,


157
00:08:42.656 --> 00:08:46.159 line:-2 align:center
Managed Settings Stores now
locally share settings between apps


158
00:08:46.193 --> 00:08:47.461 line:-1 align:center
and their app extensions,


159
00:08:47.494 --> 00:08:49.563 line:-2 align:center
and as a result,
you are now allowed to manage


160
00:08:49.596 --> 00:08:51.999 line:-1 align:center
multiple named stores in your application,


161
00:08:52,032 --> 00:08:57,004 line:-2
and finally, the Device Activity framework
is introducing a new privacy-preserving UI


162
00:08:57,037 --> 00:09:01,074 line:-2
that reveals usage data to users
and is customizable.


163
00:09:01,108 --> 00:09:03,944 line:-2
We believe that these new enhancements
and additions will broaden


164
00:09:03,977 --> 00:09:07,047 line:-2
the amount of users capable
of engaging with your application.


165
00:09:07.080 --> 00:09:09.516 line:-1 align:center
Thank you for inspiring this new release


166
00:09:09.550 --> 00:09:11.385 line:-2 align:center
and thank you
for your future contributions


167
00:09:11.418 --> 00:09:13.921 line:-2 align:center
to the digital health
and productivity space.


168
00:09:13.954 --> 00:09:16.757 line:-2 align:center
We cannot wait to see the new
and exciting ways that you make use


169
00:09:16.790 --> 00:09:18.325 line:-1 align:center
of the Screen Time API.


170
00:09:18.358 --> 00:09:22.362 line:-2 align:center
We welcome any feedback that you have
and we will continue working to make this


171
00:09:22.396 --> 00:09:25.566 line:-2 align:center
technology more accessible
for you as well as our users.


172
00:09:25.599 --> 00:09:26.700 line:-1 align:center
Thank you.

