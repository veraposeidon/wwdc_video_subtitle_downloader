2
00:00:00.200 --> 00:00:03.370 line:-1 position:50%
♪ Mellow instrumental
hip-hop music ♪


3
00:00:03,370 --> 00:00:09,643 align:right size:2% line:1
♪


4
00:00:09.643 --> 00:00:13.347 line:-1 position:50%
Hello and welcome to the session
"Meet Transferable."


5
00:00:13,347 --> 00:00:16,717 line:-1
My name is Julia.
I am a SwiftUI engineer,


6
00:00:16.717 --> 00:00:19.152 line:-1 position:50%
and I am excited to introduce
Transferable,


7
00:00:19,152 --> 00:00:21,889 line:-1
a declarative way
to support drag and drop,


8
00:00:21,889 --> 00:00:26,226 line:-1
copy/paste, and other
functionality in your app.


9
00:00:26.226 --> 00:00:29.997 line:-1 position:50%
Apart from SwiftUI and
developing applications for Mac,


10
00:00:29.997 --> 00:00:32.566 line:-1 position:50%
I'm also interested
in the story of women


11
00:00:32,566 --> 00:00:34,601 line:-1
in computer science.


12
00:00:34.601 --> 00:00:38.538 line:-1 position:50%
I think it's important
that we know our heroes.


13
00:00:38,538 --> 00:00:41,208 line:-1
So I decided to create
a catalog application


14
00:00:41,208 --> 00:00:46,580 line:-1
where I can view, add, and edit
a list of the female inventors',


15
00:00:46,580 --> 00:00:50,484 line:-1
engineers',
and scientists' profiles.


16
00:00:50,484 --> 00:00:54,187 line:-1
I want this application to
seamlessly support drag and drop


17
00:00:54.187 --> 00:00:58.659 line:-1 position:50%
of the scientists' portraits
to and from the app,


18
00:00:58.659 --> 00:01:01.528 line:-1 position:50%
being able to use
the clipboard content


19
00:01:01,528 --> 00:01:04,798 line:-1
to paste interesting facts.


20
00:01:04,798 --> 00:01:06,366 line:-1
And for the first time,


21
00:01:06.366 --> 00:01:10.003 line:-1 position:50%
my app can support sharing
on watchOS!


22
00:01:10,003 --> 00:01:12,606 line:-1
My potential users say
that they would love


23
00:01:12,606 --> 00:01:15,208 line:-1
to be able to share
a personality profile


24
00:01:15,208 --> 00:01:17,577 line:-1
from their watch.


25
00:01:17.577 --> 00:01:23.884 line:-1 position:50%
Also, via SwiftUI, sharing is
now available on iOS and Mac,


26
00:01:23,884 --> 00:01:29,523 line:-1
which also got this brand-new
design for ShareSheet this year.


27
00:01:29.523 --> 00:01:32.726 line:-1 position:50%
Under the hood,
enabling all these features


28
00:01:32,726 --> 00:01:35,829 line:-1
require the models
that we already have


29
00:01:35,829 --> 00:01:39,599 line:-1
to support being sent over
to a receiver inside our app


30
00:01:39,599 --> 00:01:42,336 line:-1
or even in other applications.


31
00:01:42.336 --> 00:01:46.039 line:-1 position:50%
The profile structure
contains all the information


32
00:01:46.039 --> 00:01:49.476 line:-1 position:50%
that we have
about a single personality.


33
00:01:49,476 --> 00:01:52,212 line:-1
All the profiles
packed in an archive


34
00:01:52,212 --> 00:01:54,982 line:-1
can be shared among friends.


35
00:01:54.982 --> 00:01:58.685 line:-1 position:50%
We store fun facts
about the personality in strings


36
00:01:58,685 --> 00:02:01,455 line:-1
and even can attach videos.


37
00:02:01.455 --> 00:02:06.059 line:-1 position:50%
And there's a great new easy way
to make all these model types


38
00:02:06,059 --> 00:02:07,828 line:-1
to be shared.


39
00:02:07.828 --> 00:02:09.863 line:-1 position:50%
Meet Transferable!


40
00:02:09,863 --> 00:02:14,401 line:-1
It is a Swift-first declarative
way to describe how your models


41
00:02:14.401 --> 00:02:17.571 line:-1 position:50%
can be serialized
and deserialized


42
00:02:17.571 --> 00:02:20.240 line:-1 position:50%
for sharing and data transfer.


43
00:02:20,240 --> 00:02:22,809 line:-1
Today, we are going
to be talking about


44
00:02:22.809 --> 00:02:24.611 line:-1 position:50%
what Transferable is


45
00:02:24,611 --> 00:02:28,448 line:-1
and what is going on behind
the scenes when we use it;


46
00:02:28,448 --> 00:02:32,786 line:-1
how to conform custom types;
and at the end,


47
00:02:32.786 --> 00:02:35.188 line:-1 position:50%
I'll share some
advanced tips and tricks


48
00:02:35.188 --> 00:02:37.657 line:-1 position:50%
that can help
to customize Transferable


49
00:02:37.657 --> 00:02:40.827 line:-1 position:50%
to do exactly what you need.


50
00:02:40,827 --> 00:02:43,196 line:-1
Let's start!


51
00:02:43,196 --> 00:02:46,633 line:-1
Say there are
two applications running,


52
00:02:46,633 --> 00:02:50,337 line:-1
and the user wants to pass
some information from one app


53
00:02:50.337 --> 00:02:54.975 line:-1 position:50%
to another via copy/paste,
ShareSheet, just drag,


54
00:02:54.975 --> 00:02:58.578 line:-1 position:50%
or use some other app feature.


55
00:02:58,578 --> 00:03:02,149 line:-1
When you send something
between two different apps,


56
00:03:02,149 --> 00:03:05,986 line:-1
there's all this binary data
that goes across.


57
00:03:05.986 --> 00:03:08.755 line:-1 position:50%
An important part
of sending this data


58
00:03:08,755 --> 00:03:12,225 line:-1
is determining
what it corresponds to.


59
00:03:12,225 --> 00:03:15,662 line:-1
It could be text, a video,


60
00:03:15.662 --> 00:03:21.234 line:-1 position:50%
my favorite female engineer
profile, or whole archive.


61
00:03:21,234 --> 00:03:26,073 line:-1
And there's the UTType that
describes what the data is for.


62
00:03:26,073 --> 00:03:31,144 line:-1
Let's take a closer look at how
apps generate this binary data.


63
00:03:31,144 --> 00:03:34,448 line:-1
All the types that can be
shared with other apps,


64
00:03:34,448 --> 00:03:36,750 line:-1
or even within
a single application,


65
00:03:36.750 --> 00:03:40.253 line:-1 position:50%
have to provide
two pieces of information:


66
00:03:40.253 --> 00:03:45.525 line:-1 position:50%
ways to convert them
to and from binary data,


67
00:03:45,525 --> 00:03:48,562 line:-1
and the content type that
corresponds to the structure


68
00:03:48,562 --> 00:03:55,001 line:-1
of the binary data and tells the
receiver what they actually got.


69
00:03:55.001 --> 00:03:56.536 line:-1 position:50%
The content type --


70
00:03:56.536 --> 00:03:59.606 line:-1 position:50%
otherwise known as
uniform type identifiers --


71
00:03:59,606 --> 00:04:03,276 line:-1
is an Apple-specific technology
that describes identifiers


72
00:04:03.276 --> 00:04:07.814 line:-1 position:50%
for different binary structures
as well as abstract concepts.


73
00:04:07.814 --> 00:04:09.983 line:-1 position:50%
The identifiers form a tree,


74
00:04:09,983 --> 00:04:13,453 line:-1
and we can also define
custom identifiers.


75
00:04:13,453 --> 00:04:18,959 line:-1
For example, one for the binary
structure used by our profiles.


76
00:04:18.959 --> 00:04:21.828 line:-1 position:50%
In order to declare
a custom identifier,


77
00:04:21,828 --> 00:04:26,366 line:-1
first, add its declaration
to the Info.plist file.


78
00:04:26.366 --> 00:04:30.303 line:-1 position:50%
It is also a good idea
to add a file extension.


79
00:04:30.303 --> 00:04:32.739 line:-1 position:50%
If the data is saved on disk,


80
00:04:32.739 --> 00:04:37.110 line:-1 position:50%
the system will know that
your app can open that file.


81
00:04:37,110 --> 00:04:40,981 line:-1
Secondly, declare it in code.


82
00:04:40,981 --> 00:04:43,483 position:50%
To learn more about
content types,


83
00:04:43,483 --> 00:04:45,585 position:50%
I invite you to watch a video:


84
00:04:45,585 --> 00:04:49,422 line:1
"Uniform Type Identifiers
-- A reintroduction."


85
00:04:49,422 --> 00:04:53,593 line:1
Personally, I love it,
and it gives a clear idea


86
00:04:53,593 --> 00:04:58,899 line:1
what are uniform type
identifiers and how to use them.


87
00:04:58,899 --> 00:05:01,835 line:-1
Good news is that
many standard types


88
00:05:01,835 --> 00:05:04,237 line:-1
already conform to Transferable;


89
00:05:04,237 --> 00:05:10,744 line:-1
for example, string, data, URL,
attributed string, image.


90
00:05:10.744 --> 00:05:14.981 line:-1 position:50%
You need only a couple of lines
of code to paste fun facts


91
00:05:14,981 --> 00:05:20,053 line:-1
to a profile with the new
SwiftUI paste button interface,


92
00:05:20,053 --> 00:05:23,089 line:-1
support dragging images
from a view,


93
00:05:23.089 --> 00:05:27.794 line:-1 position:50%
or receiving a dropped image
from Finder or other apps.


94
00:05:27,794 --> 00:05:29,963 line:-1
Using the br and-new ShareLink,


95
00:05:29.963 --> 00:05:34.100 line:-1 position:50%
we can now implement sharing
experience from the watch.


96
00:05:34,100 --> 00:05:37,871 line:-1
We covered the basics,
and now you have an idea


97
00:05:37.871 --> 00:05:40.941 line:-1 position:50%
how to use Transferable
and what it is.


98
00:05:40,941 --> 00:05:43,476 line:-1
Let's see how to add
Transferable conformance


99
00:05:43.476 --> 00:05:47.514 line:-1 position:50%
to the models
in our application.


100
00:05:47.514 --> 00:05:51.885 line:-1 position:50%
As I mentioned earlier, there
are four model types in our app


101
00:05:51,885 --> 00:05:54,821 line:-1
that are going to be shared.


102
00:05:54,821 --> 00:05:58,959 position:50%
One of them -- string -- already
conforms to Transferable;


103
00:05:58,959 --> 00:06:01,728 position:50%
we don't need to do
anything more.


104
00:06:01,728 --> 00:06:05,165 line:1
But what about the single
profile, ProfilesArchive,


105
00:06:05,165 --> 00:06:09,135 line:1
and the video that
I want to share as well?


106
00:06:09,135 --> 00:06:11,938 line:-1
To conform a type
to Transferable,


107
00:06:11.938 --> 00:06:15.141 line:-1 position:50%
there's only one property
to implement:


108
00:06:15.141 --> 00:06:17.510 line:-1 position:50%
TransferRepresentation.


109
00:06:17,510 --> 00:06:22,048 line:-1
It describes how the model
is going to get transferred.


110
00:06:22,048 --> 00:06:25,785 line:-1
There are three important
representations to be aware of:


111
00:06:25.785 --> 00:06:27.520 line:-1 position:50%
CodableRepresentation,


112
00:06:27,520 --> 00:06:29,256 line:-1
DataRepresentation,


113
00:06:29.256 --> 00:06:31.358 line:-1 position:50%
and FileRepresentation.


114
00:06:31.358 --> 00:06:34.094 line:-1 position:50%
We'll talk about each of them.


115
00:06:34,094 --> 00:06:39,065 line:-1
But first, meet our central
model, Profile structure.


116
00:06:39.065 --> 00:06:43.069 line:-1 position:50%
It has an id, a name, a bio,
maybe some fun facts,


117
00:06:43.069 --> 00:06:46.106 line:-1 position:50%
a portrait, and a video.


118
00:06:46,106 --> 00:06:48,742 line:-1
It already conforms to Codable.


119
00:06:48.742 --> 00:06:52.112 line:-1 position:50%
Because of that, we can include
CodableRepresentation


120
00:06:52.112 --> 00:06:56.049 line:-1 position:50%
in our Transferable conformance.


121
00:06:56.049 --> 00:06:59.019 line:-1 position:50%
Codable representation
uses an encoder


122
00:06:59.019 --> 00:07:02.022 line:-1 position:50%
to convert the profile
into binary data,


123
00:07:02.022 --> 00:07:05.158 line:-1 position:50%
and a decoder
to convert it back.


124
00:07:05,158 --> 00:07:09,162 line:-1
By default, it uses JSON,
but you can also provide


125
00:07:09,162 --> 00:07:12,565 line:-1
your own encoder/decoder pair.


126
00:07:12,565 --> 00:07:15,168 line:1
To learn more
about the Codable protocol


127
00:07:15,168 --> 00:07:18,004 line:1
and how encoders
and decoders work,


128
00:07:18,004 --> 00:07:22,275 position:50%
I invite you to watch a WWDC
session where this protocol


129
00:07:22,275 --> 00:07:26,413 line:1
was first introduced:
"Data you can trust."


130
00:07:26.413 --> 00:07:28.348 line:-1 position:50%
Back to our profile.


131
00:07:28,348 --> 00:07:31,017 line:-1
The only thing Codable requires


132
00:07:31,017 --> 00:07:34,254 line:-1
is knowing
the desired content type.


133
00:07:34,254 --> 00:07:37,123 line:-1
Since this is going to be
a custom format,


134
00:07:37.123 --> 00:07:41.561 line:-1 position:50%
we will use a custom declared
uniform type identifier.


135
00:07:41.561 --> 00:07:45.665 line:-1 position:50%
After adding the profile
content type, we're good to go.


136
00:07:45.665 --> 00:07:49.602 line:-1 position:50%
Profile now conforms
to Transferable!


137
00:07:49.602 --> 00:07:54.441 line:-1 position:50%
Now, let's take look at another
case: ProfilesArchive.


138
00:07:54,441 --> 00:07:58,078 line:-1
It already supports
converting to CSV data.


139
00:07:58,078 --> 00:08:02,749 line:-1
I can export the list of
the women profiles in CSV files


140
00:08:02.749 --> 00:08:08.521 line:-1 position:50%
and then share with friends or
import it on another computer.


141
00:08:08,521 --> 00:08:13,760 line:-1
The archive can be converted
to and from data,


142
00:08:13.760 --> 00:08:18.431 line:-1 position:50%
and it means that we can use
the DataRepresentation.


143
00:08:18.431 --> 00:08:20.433 line:-1 position:50%
If we peek inside, we'll see


144
00:08:20,433 --> 00:08:23,737 line:-1
that DataRepresentation uses
the conversion functions


145
00:08:23.737 --> 00:08:26.740 line:-1 position:50%
to directly create
binary representation


146
00:08:26.740 --> 00:08:30.677 line:-1 position:50%
and to reconstruct
the value for the receiver.


147
00:08:30,677 --> 00:08:34,114 line:-1
This is how easy it is
to conform to Transferable


148
00:08:34.114 --> 00:08:36.583 line:-1 position:50%
using the DataRepresentation.


149
00:08:36.583 --> 00:08:41.388 line:-1 position:50%
All it takes is calling the two
functions that we already have:


150
00:08:41,388 --> 00:08:46,559 line:-1
the initializer
and the converter to CSV.


151
00:08:46.559 --> 00:08:50.163 line:-1 position:50%
If a personality profile
has a video attached,


152
00:08:50.163 --> 00:08:53.867 line:-1 position:50%
I want to be able to drag
or share it as well.


153
00:08:53.867 --> 00:08:55.568 line:-1 position:50%
But videos can be large;


154
00:08:55.568 --> 00:08:58.471 line:-1 position:50%
I don't want to load it
into memory.


155
00:08:58.471 --> 00:09:02.108 line:-1 position:50%
This is where
FileRepresentation comes in.


156
00:09:02,108 --> 00:09:04,310 line:-1
And again,
if we lift the curtain,


157
00:09:04.310 --> 00:09:06.780 line:-1 position:50%
we'll see that
FileRepresentation


158
00:09:06.780 --> 00:09:09.983 line:-1 position:50%
passes the provided URL
to the receiver


159
00:09:09,983 --> 00:09:14,821 line:-1
and uses it to reconstruct
the Transferable item for them.


160
00:09:14,821 --> 00:09:18,024 line:-1
FileRepresentation
allows us to share items


161
00:09:18.024 --> 00:09:21.861 line:-1 position:50%
backed by a binary
representation written to disk:


162
00:09:21,861 --> 00:09:23,596 line:-1
file.


163
00:09:23.596 --> 00:09:25.131 line:-1 position:50%
Let's summarize.


164
00:09:25,131 --> 00:09:27,734 position:50%
If you want to pick just
a single representation


165
00:09:27,734 --> 00:09:29,569 line:1
for a simple use case,


166
00:09:29,569 --> 00:09:32,839 position:50%
first check if the model
has the Codable conformance


167
00:09:32,839 --> 00:09:37,076 position:50%
and doesn't have any specific
binary format requirements.


168
00:09:37,076 --> 00:09:40,580 line:1
Use CodableRepresentation
if it is the case.


169
00:09:40,580 --> 00:09:45,051 position:50%
If not, check if it is stored
in memory or on disk.


170
00:09:45,051 --> 00:09:48,188 position:50%
DataRepresentation
works best for the former,


171
00:09:48,188 --> 00:09:51,558 line:1
and FileRepresetnation
for the latter.


172
00:09:51,558 --> 00:09:54,961 line:-1
Transferable is meant to cover
not only simple use cases,


173
00:09:54.961 --> 00:09:57.397 line:-1 position:50%
but also complex ones.


174
00:09:57,397 --> 00:10:01,401 line:-1
And most of the time,
with just a few lines of code.


175
00:10:01.401 --> 00:10:04.337 line:-1 position:50%
See it for yourself!


176
00:10:04,337 --> 00:10:07,040 line:-1
Previously, we have added
Transferable conformance


177
00:10:07,040 --> 00:10:10,710 line:-1
to the profile,
but let's go further.


178
00:10:10.710 --> 00:10:13.379 line:-1 position:50%
When the profile is copied
to the pasteboard


179
00:10:13,379 --> 00:10:16,483 line:-1
and pasted into any text field,


180
00:10:16.483 --> 00:10:19.686 line:-1 position:50%
I want to paste
the profile's name.


181
00:10:19,686 --> 00:10:23,523 line:-1
This means we need to add
another representation.


182
00:10:23,523 --> 00:10:27,360 line:-1
ProxyRepresentation allows
other Transferable types


183
00:10:27.360 --> 00:10:29.929 line:-1 position:50%
to represent our model.


184
00:10:29.929 --> 00:10:34.968 line:-1 position:50%
One line, and Profile can be
pasted as text.


185
00:10:34.968 --> 00:10:37.770 line:-1 position:50%
Notice that I added
the ProxyRepresentation


186
00:10:37,770 --> 00:10:41,474 line:-1
after Codable;
the order is important.


187
00:10:41,474 --> 00:10:44,143 line:-1
The receiver will use
the first representation


188
00:10:44,143 --> 00:10:47,013 line:-1
with the content type
they support.


189
00:10:47.013 --> 00:10:50.984 line:-1 position:50%
If the receiver is aware of
our custom content type Profile,


190
00:10:50,984 --> 00:10:52,552 line:-1
they should use it.


191
00:10:52,552 --> 00:10:55,555 line:-1
If not, but they support text,


192
00:10:55,555 --> 00:11:00,760 line:-1
let them use the
ProxyRepresentation instead.


193
00:11:00.760 --> 00:11:04.697 line:-1 position:50%
Now, Profile supports both
encoder/decoder conversions


194
00:11:04,697 --> 00:11:07,500 line:-1
and a conversion to text.


195
00:11:07.500 --> 00:11:09.602 line:-1 position:50%
The ProxyRepresentation
in this case


196
00:11:09.602 --> 00:11:12.038 line:-1 position:50%
describes only
exporting to text,


197
00:11:12,038 --> 00:11:15,441 line:-1
but not reconstructing
the profile from it.


198
00:11:15.441 --> 00:11:20.713 line:-1 position:50%
Any representation can describe
both conversions, or just one.


199
00:11:20.713 --> 00:11:24.551 line:-1 position:50%
Now, when we know about
ProxyRepresentations,


200
00:11:24.551 --> 00:11:26.953 line:-1 position:50%
do we really need
the FileRepresentation


201
00:11:26,953 --> 00:11:28,621 line:-1
for the video?


202
00:11:28,621 --> 00:11:31,491 line:-1
We could have proxy with a URL.


203
00:11:31.491 --> 00:11:33.760 line:-1 position:50%
The difference is subtle.


204
00:11:33.760 --> 00:11:37.063 line:-1 position:50%
FileRepresentation is intended
to work with the URLs


205
00:11:37.063 --> 00:11:38.431 line:-1 position:50%
written to disk,


206
00:11:38.431 --> 00:11:42.569 line:-1 position:50%
and ensure receivers'
access to this file or its copy


207
00:11:42.569 --> 00:11:46.105 line:-1 position:50%
by granting a temporary
sandbox extension.


208
00:11:46,105 --> 00:11:49,375 line:-1
ProxyRepresentation
treats URLs the same way


209
00:11:49,375 --> 00:11:53,146 line:-1
as any other Transferable items,
like strings.


210
00:11:53,146 --> 00:11:55,982 line:-1
It doesn't have any
of these additional capabilities


211
00:11:55.982 --> 00:11:58.484 line:-1 position:50%
that we need for files.


212
00:11:58,484 --> 00:12:01,087 line:-1
It means that we can have both.


213
00:12:01.087 --> 00:12:04.190 line:-1 position:50%
The first one,
FileRepresentation,


214
00:12:04.190 --> 00:12:06.926 line:-1 position:50%
allows the receiver
to access the movie file


215
00:12:06.926 --> 00:12:08.928 line:-1 position:50%
with its contents.


216
00:12:08,928 --> 00:12:11,664 line:-1
The second one will work
when I paste the copied video


217
00:12:11.664 --> 00:12:15.268 line:-1 position:50%
in a text field.


218
00:12:15,268 --> 00:12:18,304 line:-1
So the URL is treated
very differently


219
00:12:18.304 --> 00:12:21.107 line:-1 position:50%
by file and proxy
representations.


220
00:12:21,107 --> 00:12:26,713 position:50%
In the first case, the actual
payload is the asset on disk,


221
00:12:26,713 --> 00:12:31,217 position:50%
and in the second, the payload
is the URL structure itself


222
00:12:31,217 --> 00:12:35,421 position:50%
that can point
to a remote website.


223
00:12:35,421 --> 00:12:39,993 line:-1
Another model that I'd like to
upgrade is the ProfilesArchive.


224
00:12:39.993 --> 00:12:43.830 line:-1 position:50%
There are cases when it doesn't
support converting to CSV,


225
00:12:43,830 --> 00:12:46,933 line:-1
and I'd like to reflect that
in code.


226
00:12:46,933 --> 00:12:48,167 line:-1
Let's see.


227
00:12:48.167 --> 00:12:52.972 line:-1 position:50%
We add a Boolean property that
tells us if we can export to CSV


228
00:12:52.972 --> 00:12:57.877 line:-1 position:50%
and conversion functions
to and from data.


229
00:12:57.877 --> 00:13:03.016 line:-1 position:50%
To express this idea in code,
we can use .exportingCondition.


230
00:13:03,016 --> 00:13:05,785 line:-1
If given archive
doesn't support CSV,


231
00:13:05.785 --> 00:13:09.489 line:-1 position:50%
it won't be exported
in this format.


232
00:13:09.489 --> 00:13:11.991 line:-1 position:50%
With this API,
you can even build


233
00:13:11.991 --> 00:13:14.227 line:-1 position:50%
custom TransferRepresentation,


234
00:13:14.227 --> 00:13:16.929 line:-1 position:50%
just like custom Views
in SwiftUI.


235
00:13:16,929 --> 00:13:20,299 line:-1
The only requirement is
to provide the body property


236
00:13:20.299 --> 00:13:22.502 line:-1 position:50%
where you can have
other representations


237
00:13:22.502 --> 00:13:24.904 line:-1 position:50%
configured the way you need.


238
00:13:24,904 --> 00:13:27,106 line:-1
It is useful
if you want to reuse


239
00:13:27,106 --> 00:13:29,475 line:-1
a combination of
representations,


240
00:13:29.475 --> 00:13:32.045 line:-1 position:50%
or you have some
private data representation


241
00:13:32.045 --> 00:13:35.248 line:-1 position:50%
that you don't want
to expose publicly.


242
00:13:35,248 --> 00:13:38,685 line:-1
Transferable helped me to
quickly build this application


243
00:13:38.685 --> 00:13:42.722 line:-1 position:50%
with all the functionality
that I wanted to have.


244
00:13:42,722 --> 00:13:46,459 line:-1
I hope it is going to help you
building feature-rich apps


245
00:13:46.459 --> 00:13:49.462 line:-1 position:50%
in less time than ever before.


246
00:13:49,462 --> 00:13:51,664 line:-1
Thank you for joining me
for this session


247
00:13:51.664 --> 00:13:54.200 line:-1 position:50%
and keep building amazing apps!


248
00:13:54,200 --> 00:13:58,471 position:90% line:1 size:2%
♪

