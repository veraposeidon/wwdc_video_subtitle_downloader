2
00:00:00,334 --> 00:00:07,341 line:-1
â™ª â™ª


3
00:00:09,877 --> 00:00:12,379 line:-2
Brady Eidson: Hello.
My name is Brady Eidson.


4
00:00:12.412 --> 00:00:15.082 line:-2 align:center
I'm an engineer
on the WebKit Architecture team.


5
00:00:15,115 --> 00:00:19,019 line:-2
I am thrilled to introduce you
to Web Push in Safari.


6
00:00:19.052 --> 00:00:21.955 line:-2 align:center
Web Push lets you
remotely send notifications


7
00:00:21.989 --> 00:00:24.358 line:-1 align:center
to your web application's users.


8
00:00:24,391 --> 00:00:28,161 line:-2
Here, a notification displays
from webkit.org


9
00:00:28.195 --> 00:00:30.364 line:-1 align:center
in the upper-right of the screen.


10
00:00:30.397 --> 00:00:34.601 line:-2 align:center
Clicking the notification opens
a WebKit blog post in a new window.


11
00:00:34.635 --> 00:00:37.971 line:-2 align:center
Before I get into other details
on how this works,


12
00:00:38,005 --> 00:00:41,708 line:-2
I want to answer a few questions
up front I know many of you will have.


13
00:00:43.043 --> 00:00:47.848 line:-2 align:center
Web Push is supported in Mac Safari
beginning with macOS Ventura.


14
00:00:47,881 --> 00:00:52,052 line:-2
And Web Push will be coming
to iOS and iPadOS next year.


15
00:00:53,320 --> 00:00:56,723 line:-2
Apple's Safari Push Notifications
have been an option


16
00:00:56.757 --> 00:00:59.660 line:-2 align:center
for reaching Mac Safari users
for quite a while.


17
00:00:59,693 --> 00:01:02,596 line:-2
While it will continue to work,
today I'm happy to announce


18
00:01:02,629 --> 00:01:04,631 line:-1
that we have added support for Web Push,


19
00:01:04,665 --> 00:01:08,402 line:-1
and this really is Web Push!


20
00:01:08.435 --> 00:01:11.238 line:-2 align:center
The same combination
of various web standards


21
00:01:11,271 --> 00:01:13,774 line:-1
as implemented in other browsers.


22
00:01:13.807 --> 00:01:16.343 line:-2 align:center
We'll go over those standards
more later, butâ€¦


23
00:01:16,376 --> 00:01:18,412 line:-1
the most important takeaway


24
00:01:18.445 --> 00:01:22.182 line:-2 align:center
is that if you've coded
your application to web standards,


25
00:01:22,216 --> 00:01:25,219 line:-2
you won't need to make any changes
for it to work in Safari.


26
00:01:25.252 --> 00:01:28.689 line:-2 align:center
Of course, if you exclude Safari
through browser detection,


27
00:01:28.722 --> 00:01:30.257 line:-1 align:center
then you have some work ahead of you.


28
00:01:30.290 --> 00:01:35.062 line:-2 align:center
Now would be a great time to switch from
browser detection to feature detection,


29
00:01:35,095 --> 00:01:37,731 line:-1
which has always been the best practice.


30
00:01:37,764 --> 00:01:40,133 line:-2
We're using the same
Apple Push Notification service


31
00:01:40,167 --> 00:01:44,071 line:-2
that powers native push
on all Macs and iOS devices,


32
00:01:44,104 --> 00:01:48,609 line:-2
but no Apple Developer account
is required to reach Safari users.


33
00:01:48,642 --> 00:01:52,145 line:-2
We are using new
end point URLs for Web Push,


34
00:01:52.179 --> 00:01:57.084 line:-2 align:center
which brings up another thing you might be
doing to unintentionally exclude Safari.


35
00:01:57.117 --> 00:02:00.053 line:-2 align:center
If you tightly manage
push end points on your server,


36
00:02:00.087 --> 00:02:05.058 line:-2 align:center
make sure you allow URLs
from any subdomain of push.apple.com.


37
00:02:05,092 --> 00:02:08,161 line:-2
Moving beyond answers
to those important questions,


38
00:02:08.195 --> 00:02:10.130 line:-1 align:center
let's get into more detail.


39
00:02:10,163 --> 00:02:13,233 line:-2
First, we'll look at
the Web Push experience in Safari


40
00:02:13,267 --> 00:02:15,869 line:-1
from a user's perspective.


41
00:02:15,903 --> 00:02:19,873 line:-2
Then we'll cover the entire Web Push flow,
from asking for permission


42
00:02:19.907 --> 00:02:23.710 line:-2 align:center
to handling a click on an entry
in Notification Center.


43
00:02:23,744 --> 00:02:29,216 line:-2
Finally, we'll see what it takes to add
Web Push to an existing web app.


44
00:02:29.249 --> 00:02:32.586 line:-1 align:center
But first, the Mac Safari user experience.


45
00:02:32.619 --> 00:02:36.757 line:-2 align:center
And I can think of no better way
to cover that than with a demo.


46
00:02:36.790 --> 00:02:39.793 line:-1 align:center
Here's Safari on macOS Ventura.


47
00:02:39.826 --> 00:02:43.363 line:-2 align:center
I have webkit.org
open in this browser tab.


48
00:02:43,397 --> 00:02:46,266 line:-2
I need to keep up-to-date
with the WebKit open source project,


49
00:02:46,300 --> 00:02:49,069 line:-1
and Web Push is a great way to do that.


50
00:02:49.102 --> 00:02:53.040 line:-2 align:center
webkit.org is not allowed
to request permission to push


51
00:02:53.073 --> 00:02:56.109 line:-2 align:center
without the user asking
with a user gesture.


52
00:02:56.143 --> 00:03:01.181 line:-2 align:center
So I'll click this bell-shaped button here
to subscribe for notifications.


53
00:03:01.215 --> 00:03:04.885 line:-2 align:center
What you see here is
the system notifications promptâ€“


54
00:03:04,918 --> 00:03:07,888 line:-2
the same one you'd see for
any other application.


55
00:03:07,921 --> 00:03:11,525 line:-2
In this case,
it's on behalf of webkit.org.


56
00:03:11,558 --> 00:03:15,162 line:-1
I will click "allow," and I'm all set.


57
00:03:15.195 --> 00:03:20.200 line:-2 align:center
webkit.org is giving me the option
to be notified about new blog posts


58
00:03:20.234 --> 00:03:23.070 line:-2 align:center
as well as new commits
to the source code repository.


59
00:03:23.103 --> 00:03:27.508 line:-2 align:center
I know being notified for every commit
will distract me from important work,


60
00:03:27.541 --> 00:03:31.545 line:-2 align:center
but I absolutely want to be
notified about new blog posts.


61
00:03:31,578 --> 00:03:33,614 line:-1
So I'll check that box now.


62
00:03:33.647 --> 00:03:37.417 line:-2 align:center
Coincidentally, somebody must've
just published the WebKit blog post


63
00:03:37.451 --> 00:03:39.152 line:-1 align:center
about Web Push.


64
00:03:39.186 --> 00:03:41.855 line:-2 align:center
This notification looks
just like any other


65
00:03:41,889 --> 00:03:44,525 line:-1
and is attributed to webkit.org.


66
00:03:44,558 --> 00:03:47,060 line:-1
I can click it to activate,


67
00:03:47,094 --> 00:03:50,163 line:-2
and there is the blog post,
open in Safari.


68
00:03:50.197 --> 00:03:53.367 line:-2 align:center
Once a user has
granted permissions to a website,


69
00:03:53.400 --> 00:03:56.270 line:-2 align:center
they maintain control
over that permission.


70
00:03:56.303 --> 00:03:59.873 line:-2 align:center
As a macOS user, I'm used
to managing Notification preferences


71
00:03:59,907 --> 00:04:03,243 line:-2
inside System Settings,
and that's where I can go


72
00:04:03.277 --> 00:04:07.281 line:-1 align:center
to configure webkit.org's notifications.


73
00:04:07.314 --> 00:04:12.486 line:-2 align:center
The same rich configuration
as I'd find for any other app or service.


74
00:04:12,519 --> 00:04:16,089 line:-2
As a Safari user,
I'm used to managing website settings


75
00:04:16,123 --> 00:04:18,225 line:-1
from inside Safari preferences.


76
00:04:18,258 --> 00:04:24,031 line:-2
I can also go there to turn
webkit.org's permissions on or off.


77
00:04:24,064 --> 00:04:28,035 line:-2
And that's how Web Push works
for users in Mac Safari.


78
00:04:28.068 --> 00:04:32.606 line:-2 align:center
Before we move on, I want to reiterate
a few things covered in that demo.


79
00:04:32.639 --> 00:04:36.243 line:-2 align:center
First, we don't want users
to be spammed by subscription requests


80
00:04:36.276 --> 00:04:37.978 line:-1 align:center
they haven't asked for.


81
00:04:38,011 --> 00:04:41,081 line:-2
So a website may only request
a push subscription


82
00:04:41,114 --> 00:04:44,651 line:-2
in response to a mouse click
or a keystroke.


83
00:04:44.685 --> 00:04:48.222 line:-2 align:center
Once a website has permission
to show notifications to the user,


84
00:04:48,255 --> 00:04:50,224 line:-1
the user controls that permission.


85
00:04:50.257 --> 00:04:54.328 line:-2 align:center
They can choose to manage it in
Safari's preferences or System Settings.


86
00:04:54.361 --> 00:04:57.998 line:-2 align:center
And the setting will stay in sync
if they happen to manage it in both.


87
00:04:58.031 --> 00:05:01.935 line:-2 align:center
Finally, if you provide notifications
for different types of events,


88
00:05:01.969 --> 00:05:05.372 line:-2 align:center
it is a best practice to provide
fine-grained controls


89
00:05:05,405 --> 00:05:07,808 line:-2
for notification types
within your web app,


90
00:05:07,841 --> 00:05:09,409 line:-1
just like other apps do.


91
00:05:09.443 --> 00:05:11.912 line:-1 align:center
Now that you've seen Web Push in action,


92
00:05:11.945 --> 00:05:14.815 line:-2 align:center
let's dig in to what's happening
at each step.


93
00:05:14.848 --> 00:05:17.951 line:-2 align:center
Some of you are already
intimately familiar with this.


94
00:05:17.985 --> 00:05:21.722 line:-2 align:center
But for those of you new to Web Push,
I'll go step by step,


95
00:05:21.755 --> 00:05:25.459 line:-2 align:center
referring you to the relevant standards
and documentation along the way.


96
00:05:25.492 --> 00:05:30.063 line:-2 align:center
The first thing that happens is a user
visits your website in a browser tab.


97
00:05:30.097 --> 00:05:33.133 line:-1 align:center
Here's webkit.org open in Safari.


98
00:05:33,166 --> 00:05:37,638 line:-2
Since it is open in a tab,
it can install a Service Worker.


99
00:05:37.671 --> 00:05:40.807 line:-2 align:center
A Service Worker is
a unit of JavaScript that operates


100
00:05:40.841 --> 00:05:45.913 line:-2 align:center
on behalf of an entire domain, separate
from a currently open browser tab.


101
00:05:45.946 --> 00:05:48.582 line:-2 align:center
Once the Service Worker script
is installed,


102
00:05:48.615 --> 00:05:52.152 line:-2 align:center
your web app is eligible
to request a push subscription.


103
00:05:52,186 --> 00:05:56,823 line:-2
As already mentioned, this request
must be tied to a user gesture.


104
00:05:56.857 --> 00:06:01.161 line:-2 align:center
webkit.org requests permission
when clicking this bell-shaped button,


105
00:06:01.195 --> 00:06:04.097 line:-2 align:center
which fulfills
the user gesture requirement.


106
00:06:04,131 --> 00:06:07,000 line:-2
When your site asks
for a push subscription,


107
00:06:07,034 --> 00:06:09,436 line:-1
the user sees this system prompt.


108
00:06:09.469 --> 00:06:11.338 line:-1 align:center
Here is where they can make the final call


109
00:06:11,371 --> 00:06:13,941 line:-2
on granting your website
this powerful ability.


110
00:06:15.142 --> 00:06:18.078 line:-2 align:center
It is possible
the user might deny the request.


111
00:06:18.111 --> 00:06:21.181 line:-2 align:center
Your JavaScript should be
prepared to handle that.


112
00:06:21.215 --> 00:06:23.483 line:-1 align:center
But assuming the user grants permission,


113
00:06:23.517 --> 00:06:26.854 line:-2 align:center
your JavaScript gets back
a PushSubscription object.


114
00:06:26.887 --> 00:06:30.324 line:-2 align:center
This includes everything your server needs
to send a push message


115
00:06:30,357 --> 00:06:32,459 line:-1
to this user in this browser.


116
00:06:32,492 --> 00:06:36,096 line:-2
Information like
the exact URL end point to use.


117
00:06:36,129 --> 00:06:39,833 line:-2
You send this PushSubscription
payload back to your server


118
00:06:39.867 --> 00:06:42.669 line:-2 align:center
in whatever manner
works best for your web app.


119
00:06:42,703 --> 00:06:47,541 line:-2
Many popular server packages have
Web Push support to manage subscriptions,


120
00:06:47.574 --> 00:06:49.543 line:-1 align:center
or you can roll your own.


121
00:06:49.576 --> 00:06:53.714 line:-2 align:center
The same pertains to how and when
to actually send a push message


122
00:06:53,747 --> 00:06:56,416 line:-2
to the URL end points
your server knows about.


123
00:06:56,450 --> 00:07:00,454 line:-2
I can't tell you when to do so.
That's up to you and your website.


124
00:07:00,487 --> 00:07:03,023 line:-2
But once you've decided
to send that push message,


125
00:07:03,056 --> 00:07:05,125 line:-1
I can help with what happens next.


126
00:07:05,158 --> 00:07:09,329 line:0
Remember how push requires
an installed Service Worker?


127
00:07:09,363 --> 00:07:13,300 align:center
Once your server has sent
a push message and Safari receives it,


128
00:07:13,333 --> 00:07:18,238 align:center
Safari wakes up your Service Worker
and sends it a JavaScript push event.


129
00:07:18,272 --> 00:07:21,675 align:center
Showing a notification to the user
in Notification Center


130
00:07:21,708 --> 00:07:25,379 align:center
is a requirement
while handling the push event.


131
00:07:25.412 --> 00:07:29.183 line:-2 align:center
Receiving the push event
and displaying the notification happens


132
00:07:29,216 --> 00:07:32,319 line:-2
if your website is currently open
in a browser tab.


133
00:07:32.352 --> 00:07:36.557 line:-2 align:center
It also happens if your website is
not currently open in a browser tab.


134
00:07:36,590 --> 00:07:39,226 line:-1
In the case of Safari on macOS Ventura,


135
00:07:39,259 --> 00:07:43,263 line:-2
this happens even if Safari
is not currently running.


136
00:07:43,297 --> 00:07:47,234 line:0
The final step: If your user clicks
on that notification,


137
00:07:47,267 --> 00:07:50,838 align:center
a notificationclick event is sent
to your Service Worker


138
00:07:50,871 --> 00:07:53,106 line:0
so it can respond appropriately.


139
00:07:53,140 --> 00:07:55,809 line:-1
For example, by opening a new window


140
00:07:55.843 --> 00:07:58.979 line:-2 align:center
to the URL associated
with that notification.


141
00:07:59.012 --> 00:08:03.016 line:-2 align:center
With that understanding
of the Web Push flow under our belt,


142
00:08:03.050 --> 00:08:05.252 line:-1 align:center
it's time to get into even more detail


143
00:08:05,285 --> 00:08:09,089 line:-2
by actually adding Web Push support
to an existing web app.


144
00:08:09.122 --> 00:08:13.126 line:-2 align:center
Besides webkit.org,
Browser Pets is the most


145
00:08:13,160 --> 00:08:17,097 line:-2
mission critical internal tool
for the Safari and WebKit teams.


146
00:08:17,130 --> 00:08:20,367 line:-2
Keeping everyone in the department
up-to-date on their favorite WebKittens


147
00:08:20.400 --> 00:08:24.404 line:-2 align:center
and Pups on Safari has always been
the mission statement of Browser Pets,


148
00:08:24.438 --> 00:08:27.207 line:-2 align:center
and Web Push has made that
easier than ever.


149
00:08:27.241 --> 00:08:31.178 line:-2 align:center
Our internal BrowserPets domain
already had a ServiceWorker script


150
00:08:31.211 --> 00:08:35.983 line:-2 align:center
registered to speed up page loads
and synchronize between multiple tabs.


151
00:08:36.016 --> 00:08:40.287 line:-2 align:center
At a high level, a ServiceWorker script
looks a lot like this.


152
00:08:40.320 --> 00:08:44.157 line:-2 align:center
When an engineer visits
the Browser Pets page in a tab,


153
00:08:44.191 --> 00:08:47.861 line:-2 align:center
this JavaScript excerpt either determines
if the Service Worker script


154
00:08:47.895 --> 00:08:51.932 line:-2 align:center
has already been registered,
or registers it if necessary.


155
00:08:51.965 --> 00:08:55.302 line:-2 align:center
Notice we're practicing
feature detection here,


156
00:08:55.335 --> 00:08:57.871 line:-1 align:center
previously mentioned as a best practice.


157
00:08:57.905 --> 00:09:01.341 line:-2 align:center
With the Service Worker prerequisite
taken care of,


158
00:09:01,375 --> 00:09:03,877 line:-1
we're ready to subscribe for push.


159
00:09:03.911 --> 00:09:07.314 line:-2 align:center
Remember, you cannot request
a push subscription


160
00:09:07,347 --> 00:09:10,250 line:-1
without an explicit user gesture.


161
00:09:10,284 --> 00:09:13,387 line:-2
Running this script in response
to a button's onclick handler


162
00:09:13.420 --> 00:09:16.490 line:-2 align:center
is one of many ways
to satisfy that requirement.


163
00:09:16.523 --> 00:09:18.926 line:-1 align:center
Once the user clicks that button,


164
00:09:18,959 --> 00:09:22,062 line:-2
here's code to request
a push subscription.


165
00:09:22.095 --> 00:09:24.831 line:-2 align:center
I'll go into each of these points
in more detail.


166
00:09:24,865 --> 00:09:29,236 line:-2
First, we need to configure
the request for a push subscription.


167
00:09:29.269 --> 00:09:32.673 line:-2 align:center
An important bit for that is
the public key our server uses


168
00:09:32.706 --> 00:09:36.510 line:-2 align:center
to identify themselves
to Apple's push servers.


169
00:09:36,543 --> 00:09:41,815 line:-2
Here we use the standard technology
called VAPID, the same as other browsers.


170
00:09:41.849 --> 00:09:45.485 line:-2 align:center
I won't go over the sometimes
complex details of VAPID here,


171
00:09:45,519 --> 00:09:47,654 line:-2
but there are resources on the web
to help you


172
00:09:47.688 --> 00:09:51.391 line:-2 align:center
with the best solution
for your server's setup.


173
00:09:51.425 --> 00:09:56.163 line:-2 align:center
With the VAPID key set, we're ready
to configure the subscription request.


174
00:09:56.196 --> 00:09:59.132 line:-1 align:center
Notice we are explicitly stating


175
00:09:59.166 --> 00:10:03.070 line:-2 align:center
that we promise to always
make pushes user visible.


176
00:10:03.103 --> 00:10:06.406 line:-2 align:center
While the standard
for the JavaScript Push API


177
00:10:06.440 --> 00:10:09.676 line:-2 align:center
optionally accommodates
silent JavaScript runtime


178
00:10:09,710 --> 00:10:13,914 line:-2
in response to a push,
most browsers do not support that.


179
00:10:13.947 --> 00:10:16.216 line:-1 align:center
Safari does not support that.


180
00:10:16.250 --> 00:10:20.821 line:-2 align:center
And like most websites,
Browser Pets does not need that.


181
00:10:20,854 --> 00:10:23,924 line:-1
Then we request permission to push.


182
00:10:23,957 --> 00:10:26,660 line:-2
This line of JavaScript results
in the permission prompt


183
00:10:26.693 --> 00:10:30.063 line:-1 align:center
for the user to either approve or reject.


184
00:10:30,097 --> 00:10:32,032 line:-1
Assuming the user grants permissionâ€“


185
00:10:32,065 --> 00:10:34,568 line:-2
which all Safari team members do
for Browser Petsâ€“


186
00:10:34,601 --> 00:10:37,237 line:-1
this gives us a PushSubscription object


187
00:10:37.271 --> 00:10:40.374 line:-2 align:center
with the details on how to reach
this user in their browser.


188
00:10:40.407 --> 00:10:44.244 line:-2 align:center
Things like the URL end point
and the key used to encrypt


189
00:10:44,278 --> 00:10:47,114 line:-1
the push message for transit.


190
00:10:47.147 --> 00:10:51.218 line:-2 align:center
Finally, we need to send
all of those details to our server.


191
00:10:51,251 --> 00:10:54,955 line:-2
As mentioned before,
the specifics of this will vary


192
00:10:54.988 --> 00:10:57.391 line:-1 align:center
based on your exact application.


193
00:10:57.424 --> 00:11:00.961 line:-2 align:center
Our BrowserPets server uses WordPress,
which already has


194
00:11:00,994 --> 00:11:04,097 line:-2
a few plugins to support
standard Web Push.


195
00:11:04.131 --> 00:11:07.334 line:-2 align:center
It's likely you'll find the same is true
for your backend,


196
00:11:07.367 --> 00:11:10.337 line:-2 align:center
and there are resources on the web
to help find the right solution


197
00:11:10.370 --> 00:11:12.139 line:-1 align:center
for just about any setup.


198
00:11:12,172 --> 00:11:16,009 line:-2
Now we need to go back
to our Service Worker JavaScript code.


199
00:11:16.043 --> 00:11:20.681 line:-2 align:center
It will need to handle a few new events,
starting with the push event.


200
00:11:20.714 --> 00:11:25.118 line:-2 align:center
When a push message makes its way from
the Browser Pets server to this browser,


201
00:11:25,152 --> 00:11:28,655 line:-2
this Service Worker has
a push event sent to it.


202
00:11:28.689 --> 00:11:32.092 line:-2 align:center
That event contains
a PushMessageData object


203
00:11:32.125 --> 00:11:35.929 line:-2 align:center
which has multiple ways of accessing
the data sent by your server.


204
00:11:35,963 --> 00:11:39,066 line:-1
We use the JSON accessor here.


205
00:11:39,099 --> 00:11:41,468 line:-1
Remember how when we subscribed for push,


206
00:11:41.502 --> 00:11:45.005 line:-2 align:center
our JavaScript promised
they would always be user visible?


207
00:11:45.038 --> 00:11:48.408 line:-2 align:center
That means we must always
show a platform native notification


208
00:11:48.442 --> 00:11:50.744 line:-1 align:center
in response to each push.


209
00:11:50.777 --> 00:11:55.249 line:-2 align:center
It is best to do this as early as possible
in your push event handler.


210
00:11:55,282 --> 00:11:57,818 line:-2
We're pulling everything
we need out of that JSON blob


211
00:11:57.851 --> 00:12:02.656 line:-2 align:center
to configure the notification,
including setting up an action with a URL.


212
00:12:02.689 --> 00:12:05.325 line:-1 align:center
That will come in handy in just a moment.


213
00:12:05.359 --> 00:12:09.897 line:-2 align:center
After the notification is shown,
we need to handle the user clicking on it.


214
00:12:09,930 --> 00:12:13,333 line:-2
One more event
for our Service Worker script to handle.


215
00:12:13,367 --> 00:12:18,005 line:-2
In this notificationclick handler,
BrowserPets will take the URL


216
00:12:18.038 --> 00:12:21.408 line:-2 align:center
from the notification that was clicked
to open a new window.


217
00:12:21,441 --> 00:12:24,178 line:-1
Take note: This is a very common pattern.


218
00:12:24,211 --> 00:12:28,782 line:-2
That's all the JavaScript
we need to write to support Web Push.


219
00:12:28,815 --> 00:12:31,818 line:-2
Of course, it's best to have
some help while developing.


220
00:12:31.852 --> 00:12:35.556 line:-2 align:center
As usual,
that's where Web Inspector comes in.


221
00:12:35,589 --> 00:12:39,059 line:-2
In addition to helping debug
your website open in a browser tab,


222
00:12:39.092 --> 00:12:42.629 line:-2 align:center
Web Inspector can also inspect
Service Worker instances


223
00:12:42.663 --> 00:12:45.365 line:-1 align:center
and set breakpoints on event handlers.


224
00:12:45.399 --> 00:12:48.836 line:-2 align:center
All of this together will let you
inspect and debug the JavaScript


225
00:12:48.869 --> 00:12:52.206 line:-2 align:center
that subscribes for push
as well as the service worker code


226
00:12:52.239 --> 00:12:55.776 line:-2 align:center
that handles the push event
and notification events.


227
00:12:55.809 --> 00:12:59.012 line:-2 align:center
Additionally,
the Apple Push Notification servers


228
00:12:59.046 --> 00:13:01.682 line:-2 align:center
will give you human readable errors
if something goes wrong


229
00:13:01,715 --> 00:13:04,384 line:-2
when you attempt
to publish a push message.


230
00:13:04,418 --> 00:13:08,789 line:-2
Check out the links associated with
this session for further documentation.


231
00:13:08,822 --> 00:13:12,492 line:-2
I'd also like to get into more detail
on a few points that came up


232
00:13:12.526 --> 00:13:14.828 line:-2 align:center
while writing that code,
with direct regards


233
00:13:14,862 --> 00:13:17,931 line:-1
to user privacy and power usage.


234
00:13:17.965 --> 00:13:20.868 line:-2 align:center
Importantlyâ€“and this is
not the first time I've said thisâ€“


235
00:13:20,901 --> 00:13:24,538 line:-2
subscribing for push requires
a user gesture.


236
00:13:24,571 --> 00:13:28,041 line:-2
As with other privileged features
of the web platform,


237
00:13:28.075 --> 00:13:30.410 line:-1 align:center
it's the right thing for user trust


238
00:13:30.444 --> 00:13:34.481 line:-2 align:center
to require that the user actually asked
to enable Web Push.


239
00:13:34.515 --> 00:13:38.986 line:-2 align:center
As mentioned when I showed you the code
on how to request a push subscription,


240
00:13:39,019 --> 00:13:42,856 line:-2
you must promise
that pushes will be user visible.


241
00:13:42,890 --> 00:13:46,393 line:-2
Handling a push event is not
an invitation for your JavaScript


242
00:13:46,426 --> 00:13:48,662 line:-1
to get silent background runtime.


243
00:13:48,695 --> 00:13:53,534 line:-2
Doing so would violate both a user's trust
and a user's battery life.


244
00:13:53.567 --> 00:13:56.837 line:-2 align:center
When handling a push event,
you are in fact required


245
00:13:56.870 --> 00:13:59.773 line:-2 align:center
to post a notification
to Notification Center.


246
00:13:59.806 --> 00:14:03.744 line:-2 align:center
Other browsers all have countermeasures
against violating the promise


247
00:14:03.777 --> 00:14:07.181 line:-2 align:center
to make pushes user visible,
and so does Safari.


248
00:14:07.214 --> 00:14:10.984 line:-2 align:center
In the beta build of macOS Ventura,
after three push events


249
00:14:11.018 --> 00:14:14.188 line:-2 align:center
where you fail to post a notification
in a timely manner,


250
00:14:14,221 --> 00:14:16,857 line:-2
your site's push subscription
will be revoked.


251
00:14:16.890 --> 00:14:19.893 line:-2 align:center
You will need to go through
the permission workflow again.


252
00:14:19.927 --> 00:14:21.695 line:-1 align:center
That's all.


253
00:14:21,728 --> 00:14:26,466 line:-2
We're genuinely proud to support Web Push
and excited that any site can use it,


254
00:14:26,500 --> 00:14:29,203 line:-1
no Apple Developer account required.


255
00:14:29,236 --> 00:14:33,073 line:-2
As long as you've coded to the standards
and use feature detection,


256
00:14:33.106 --> 00:14:37.010 line:-2 align:center
so you don't unwittingly exclude Safari,
your users will already get


257
00:14:37.044 --> 00:14:41.448 line:-2 align:center
the benefit of Web Push
in Safari 16 on macOS Ventura.


258
00:14:41.481 --> 00:14:45.652 line:-4 align:center
As usual, we've added tons of other
new stuff to Safari and WebKit this year,


259
00:14:45,686 --> 00:14:48,455 line:-4
and I hope you'll check out
that session to learn more.


260
00:14:48.488 --> 00:14:50.090 line:-1 align:center
Thank you for watching.


261
00:14:50,123 --> 00:14:53,727 line:-1
I hope you have a great rest of WWDC 2022.

