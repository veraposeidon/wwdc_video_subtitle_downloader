2
00:00:00,334 --> 00:00:07,341 line:-1
♪ ♪


3
00:00:09,943 --> 00:00:11,111 line:-1
Ahmed Badr: Hello and welcome.


4
00:00:11,144 --> 00:00:14,348 line:-2
My name is Ahmed and I am part
of the Display and Color Technologies team


5
00:00:14,381 --> 00:00:15,415 line:-1
at Apple.


6
00:00:15,449 --> 00:00:19,620 line:-2
Today, I would like to talk about some of
the new features and enhancements we made


7
00:00:19.653 --> 00:00:23.824 line:-2 align:center
in the Advanced Video Quality Tool,
or short AVQT.


8
00:00:23,857 --> 00:00:26,693 line:-1
Let me start with a quick recap.


9
00:00:26,727 --> 00:00:28,762 line:-1
So what's AVQT?


10
00:00:28.795 --> 00:00:34.268 line:-2 align:center
AVQT is a command line executable
that we first released in WWDC 2021.


11
00:00:34,301 --> 00:00:38,105 line:-2
It's a full reference video quality metric
that assesses the quality of videos


12
00:00:38,138 --> 00:00:41,208 line:-2
with potential compression
and scaling artifacts.


13
00:00:41.241 --> 00:00:45.212 line:-2 align:center
It attempts to mimic
how people rate the quality of videos.


14
00:00:45.245 --> 00:00:51.218 line:-2 align:center
AVQT supports all AVFoundation-based
video formats, both SDR and HDR.


15
00:00:51,251 --> 00:00:56,023 line:-2
This includes HDR10, HLG,
and Dolby Vision.


16
00:00:56.056 --> 00:00:59.860 line:-2 align:center
There are three key attributes
that are unique to AVQT.


17
00:00:59,893 --> 00:01:04,531 line:-2
First, AVQT achieves high correlation
with how people rate videos.


18
00:01:04.565 --> 00:01:06.266 line:-1 align:center
This applies to all content types


19
00:01:06.300 --> 00:01:09.603 line:-2 align:center
such as animation, natural scenes,
and sports.


20
00:01:09,636 --> 00:01:13,340 line:-2
Second, AVQT comes with
impressive processing speeds,


21
00:01:13,373 --> 00:01:16,743 line:-2
thanks to AVFoundation and Metal
that AVQT relies on


22
00:01:16,777 --> 00:01:19,146 line:-1
for video decoding and processing.


23
00:01:19.179 --> 00:01:23.650 line:-2 align:center
Third, AVQT is designed to accommodate
different viewing setups.


24
00:01:23,684 --> 00:01:26,286 line:-2
The same video can result
in different experiences


25
00:01:26.320 --> 00:01:28.121 line:-1 align:center
depending on the viewing setup.


26
00:01:28,155 --> 00:01:30,657 line:-2
This can be configured
in AVQT through factors


27
00:01:30,691 --> 00:01:34,461 line:-2
such as display resolution,
display size, and viewing distance.


28
00:01:35,329 --> 00:01:39,566 line:0
To learn more about AVQT,
please check our 2021 video


29
00:01:39,600 --> 00:01:43,637 line:0
titled "Evaluate videos
with Advanced Video Quality Tool."


30
00:01:43.670 --> 00:01:47.574 line:-2 align:center
In the WWDC 2021 video
where AVQT was announced,


31
00:01:47.608 --> 00:01:51.311 line:-2 align:center
we presented the impressive
processing speeds it achieves on M1 Macs.


32
00:01:51,345 --> 00:01:56,984 line:-2
Since then, Apple processors
got more capable and AVQT got faster.


33
00:01:57,017 --> 00:02:01,054 line:-2
Here are the processing speeds
on the new family of M1 processors.


34
00:02:01.088 --> 00:02:04.691 line:-1 align:center
On M1 Ultra, AVQT evaluates a 2-hour,


35
00:02:04,725 --> 00:02:08,862 line:-1
HEVC-compressed 4K movie in 20 minutes.


36
00:02:08.896 --> 00:02:11.598 line:-1 align:center
This is six times faster than real time.


37
00:02:11,632 --> 00:02:14,268 line:-2
For a full HD movie
with a similar duration,


38
00:02:14,301 --> 00:02:17,938 line:-2
AVQT processes the video
in less than 11 minutes.


39
00:02:17.971 --> 00:02:21.675 line:-2 align:center
This is more than ten times faster
than real time.


40
00:02:21,708 --> 00:02:25,279 line:-2
You can now evaluate more videos
in the same amount of time.


41
00:02:26.513 --> 00:02:29.650 line:-2 align:center
Next, let me introduce
the new features and enhancements


42
00:02:29.683 --> 00:02:32.986 line:-1 align:center
that we added to AVQT this year.


43
00:02:33,020 --> 00:02:36,590 line:-2
You can now visualize
the quality of your video using AVQT


44
00:02:36.623 --> 00:02:38.825 line:-1 align:center
without any extra steps.


45
00:02:38,859 --> 00:02:42,329 line:-2
The latest version of AVQT produces
HTML-based reports


46
00:02:42.362 --> 00:02:44.765 line:-1 align:center
with interactive plots and diagrams


47
00:02:44.798 --> 00:02:47.968 line:-2 align:center
showing analysis of the quality
of your videos.


48
00:02:48.001 --> 00:02:52.072 line:-2 align:center
These reports can easily be generated
by adding the new ‘visualize’ flag.


49
00:02:53.006 --> 00:02:55.576 line:-2 align:center
You can easily identify
sections in your video


50
00:02:55,609 --> 00:02:58,545 line:-2
where quality did not meet
the expectation.


51
00:02:58,579 --> 00:03:01,882 line:-2
You can also share AVQT reports
with other colleagues.


52
00:03:01,915 --> 00:03:05,152 line:-2
They don't need to have AVQT
or any other tool installed.


53
00:03:05.185 --> 00:03:07.321 line:-1 align:center
They can just open the report in Safari.


54
00:03:09.056 --> 00:03:11.792 line:-2 align:center
So let me show you how to create
an interactive report


55
00:03:11,825 --> 00:03:14,061 line:-1
and how to use some of its features.


56
00:03:15.996 --> 00:03:18.365 line:-1 align:center
I will start by showing the help menu.


57
00:03:18.398 --> 00:03:20.501 line:-1 align:center
We added a new argument, ‘visualize,’


58
00:03:20,534 --> 00:03:22,970 line:-1
which you can use to create reports.


59
00:03:23,003 --> 00:03:27,608 line:-2
Here's an AVQT command that evaluates
the quality of a test video that I created


60
00:03:27,641 --> 00:03:32,045 line:-2
by compressing a segment
from last year's WWDC presentation.


61
00:03:32,079 --> 00:03:36,984 line:-2
You can then add the visualize argument
and it will also create a report.


62
00:03:37.017 --> 00:03:39.319 line:-1 align:center
Once it's done, you will see the location


63
00:03:39,353 --> 00:03:42,756 line:-2
of the HTML report file
printed to standard out.


64
00:03:42.789 --> 00:03:45.259 line:-1 align:center
This file can simply be opened in Safari.


65
00:03:46,126 --> 00:03:50,364 line:-2
The table on the left shows information
about the analyzed videos.


66
00:03:50,397 --> 00:03:53,133 line:-2
The one on the right includes
settings and parameters used


67
00:03:53.166 --> 00:03:55.102 line:-1 align:center
while evaluating the videos.


68
00:03:57,905 --> 00:04:02,943 line:-2
This figure shows both frame-level
and segment-level AVQT scores over time.


69
00:04:05,946 --> 00:04:08,015 line:-2
If you're interested
in a specific interval,


70
00:04:08,048 --> 00:04:10,784 line:-2
you can simply zoom in
to get more details.


71
00:04:12,252 --> 00:04:15,756 line:-2
Hovering over the plot will give you
more information about that point,


72
00:04:15.789 --> 00:04:19.459 line:-2 align:center
such as time,
AVQT score, and index of the frame


73
00:04:19.493 --> 00:04:21.361 line:-1 align:center
or segment that this score belongs to.


74
00:04:23,263 --> 00:04:27,267 line:-2
To zoom out to the home view, you can
double-click anywhere in the figure.


75
00:04:30.537 --> 00:04:33.540 line:-2 align:center
A pie chart is also included
that shows the distribution


76
00:04:33,574 --> 00:04:37,010 line:-2
of the AVQT frame scores
of the analyzed video.


77
00:04:37.044 --> 00:04:39.479 line:-2 align:center
It shows the percentage
and number of frames


78
00:04:39,513 --> 00:04:44,184 line:-2
in each of the five quality categories,
"Bad," "Poor," "Fair,"


79
00:04:44.218 --> 00:04:46.286 line:-1 align:center
"Good," and "Excellent".


80
00:04:48.155 --> 00:04:50.824 line:-2 align:center
The figures on the bottom
are similar to those on the top


81
00:04:50,858 --> 00:04:53,293 line:-1
except that they show PSNR scores.


82
00:04:57.497 --> 00:05:01.034 line:-2 align:center
We hope this feature will help
summarize the quality of your videos


83
00:05:01,068 --> 00:05:03,704 line:-1
as well as identify issues, if any.


84
00:05:03.737 --> 00:05:06.707 line:-2 align:center
Here's another feature that I am
excited to tell you about.


85
00:05:06.740 --> 00:05:09.376 line:-2 align:center
You can now specify the time windows
from your reference


86
00:05:09,409 --> 00:05:11,945 line:-1
and test videos to be evaluated.


87
00:05:11,979 --> 00:05:16,416 line:-2
This enables focusing on a specific scene
or multiple scenes in your video.


88
00:05:16.450 --> 00:05:20.754 line:-2 align:center
It also allows for comparing videos
that are not temporally aligned.


89
00:05:20.787 --> 00:05:24.992 line:-2 align:center
We added four new command-line
arguments to help you accurately specify


90
00:05:25.025 --> 00:05:28.862 line:-2 align:center
the beginning and end of the video
sections you are interested in analyzing.


91
00:05:30.063 --> 00:05:34.001 line:-2 align:center
Let me show you an example
of how to use the time window feature.


92
00:05:35,035 --> 00:05:37,971 line:-2
Here's the video
I evaluated in the previous demo.


93
00:05:38,005 --> 00:05:42,075 line:-2
This time, I am interested
in evaluating a single scene of the video.


94
00:05:42,109 --> 00:05:44,745 line:-1
Here's how I can accomplish this.


95
00:05:44,778 --> 00:05:48,749 line:-2
In Quicktime Player, I will start
by seeking to that scene.


96
00:05:48,782 --> 00:05:51,318 line:-1
It's this one.


97
00:05:51,351 --> 00:05:54,221 line:-1
Clicking here shows the frame index.


98
00:05:54,254 --> 00:05:58,659 line:-2
I will use the arrow keys
to get to the first frame in the scene.


99
00:05:58,692 --> 00:06:00,394 line:-1
It's 270.


100
00:06:00,427 --> 00:06:04,531 line:-2
I will repeat the same steps to find
the last frame in the scene.


101
00:06:04.565 --> 00:06:07.267 line:-1 align:center
It's frame 486.


102
00:06:07,301 --> 00:06:10,971 line:-1
Now, let's evaluate this scene in AVQT.


103
00:06:11,004 --> 00:06:13,707 line:-2
The first part of the command
is the same as before.


104
00:06:13,740 --> 00:06:18,011 line:-2
I will then add the start and end frame
indices I got from QuickTime Player


105
00:06:18.045 --> 00:06:21.415 line:-2 align:center
using these four newly-added
command line arguments.


106
00:06:23,951 --> 00:06:26,887 line:-1
I now have the AVQT score for this scene.


107
00:06:28.922 --> 00:06:31.892 line:-2 align:center
Running this command is faster
than processing the whole video


108
00:06:31.925 --> 00:06:34.494 line:-2 align:center
and then only looking
at the scores of that scene.


109
00:06:34,528 --> 00:06:37,831 line:-2
We believe this adds
to the flexibility of AVQT.


110
00:06:37,865 --> 00:06:41,235 line:-2
Speaking of flexibility,
we also extended the support


111
00:06:41,268 --> 00:06:44,371 line:-1
of raw YUV formats in this version.


112
00:06:44,404 --> 00:06:47,508 line:-2
AVQT supports
all AVFoundation video formats.


113
00:06:47,541 --> 00:06:51,578 line:-2
Besides that,
it also supports raw YUV videos.


114
00:06:51.612 --> 00:06:54.214 line:-2 align:center
This enables scoring videos
that were never compressed,


115
00:06:54,248 --> 00:06:56,183 line:-1
such as a raw camera feed.


116
00:06:56,216 --> 00:06:59,152 line:-2
It's also useful when evaluating
videos that are compressed


117
00:06:59.186 --> 00:07:02.456 line:-1 align:center
and decoded outside the ecosystem.


118
00:07:02,489 --> 00:07:06,293 line:-2
This year, we extended the support
for raw YUV to include a total


119
00:07:06.326 --> 00:07:11.398 line:-2 align:center
of 20 formats with a wide range
of chroma sub-samplings and bit depths.


120
00:07:11,431 --> 00:07:13,567 line:0
It's worth noting that `reference-fourcc`


121
00:07:13,600 --> 00:07:16,570 align:center
and `test-fourcc` flags
are now deprecated.


122
00:07:16,603 --> 00:07:19,706 line:0
We replaced them
with two separate sets of flags,


123
00:07:19,740 --> 00:07:22,709 line:0
one for chroma-subsampling
and another for bit-depth.


124
00:07:24,111 --> 00:07:26,880 line:0
This feature will allow you
to evaluate more videos


125
00:07:26,914 --> 00:07:28,982 align:center
without the need of pre-processing.


126
00:07:31.084 --> 00:07:34.755 line:-2 align:center
Since AVQT was
first released in WWDC 2021,


127
00:07:34,788 --> 00:07:37,724 line:-2
there has been
a growing interest in the tool.


128
00:07:37,758 --> 00:07:40,160 line:-2
We received
numerous comments and requests.


129
00:07:40,194 --> 00:07:44,097 line:-2
One of the most common requests
is to add support for Linux.


130
00:07:44.131 --> 00:07:48.702 line:-2 align:center
Today, we are glad to announce
that AVQT is now available on Linux.


131
00:07:50,571 --> 00:07:54,808 line:-2
We understand that this will allow people
to evaluate content stored in the cloud


132
00:07:54.842 --> 00:07:59.780 line:-2 align:center
or compressed in Linux-based servers
without the need to move the videos.


133
00:07:59.813 --> 00:08:03.851 line:-2 align:center
Together with the macOS version,
we are also releasing a beta version


134
00:08:03.884 --> 00:08:07.988 line:-2 align:center
of AVQT for Linux that supports
a wide range of Linux distributions.


135
00:08:08,021 --> 00:08:12,492 line:-2
It can be easily deployed as it doesn't
require any external dependencies.


136
00:08:12.526 --> 00:08:15.229 line:-1 align:center
It's essentially plug and play.


137
00:08:15,262 --> 00:08:18,198 line:-2
To learn more about the supported
Linux distributions and versions,


138
00:08:18.232 --> 00:08:21.468 line:-2 align:center
please refer to the README file
in the AVQT package.


139
00:08:22,903 --> 00:08:25,806 line:-2
The Linux version of AVQT is
designed to have the same look


140
00:08:25,839 --> 00:08:28,208 line:-1
and feel of the macOS version.


141
00:08:28,242 --> 00:08:31,211 line:-2
It uses the same naming
of the command line flags


142
00:08:31.245 --> 00:08:34.648 line:-2 align:center
and produces output files
of the same format.


143
00:08:34,681 --> 00:08:38,118 line:-2
The Linux version supports
all 20 raw formats that are included


144
00:08:38,151 --> 00:08:41,221 line:-1
in the latest version of the macOS tool.


145
00:08:41.255 --> 00:08:44.858 line:-2 align:center
The viewing conditions parameters are not
available in the Linux beta version


146
00:08:44,892 --> 00:08:46,793 line:-1
but will be enabled in the future.


147
00:08:48,295 --> 00:08:51,331 line:-2
To wrap up,
here are a few important takeaways.


148
00:08:51,365 --> 00:08:56,570 line:-2
AVQT is a perceptual video quality tool
that we released in WWDC 2021.


149
00:08:56,603 --> 00:08:59,840 line:-2
It's available for download
on the developers’ portal.


150
00:08:59,873 --> 00:09:03,177 line:-2
If you haven't tried the tool,
go ahead and use it.


151
00:09:03.210 --> 00:09:06.613 line:-2 align:center
This year,
we added several enhancements to AVQT.


152
00:09:06,647 --> 00:09:10,684 line:-2
You can now visualize AVQT scores
of your videos in an interactive


153
00:09:10.717 --> 00:09:14.688 line:-2 align:center
HTML-based report that you can
share with your colleagues.


154
00:09:14.721 --> 00:09:17.324 line:-2 align:center
You can also use the new
‘Time Window’ feature to focus


155
00:09:17.357 --> 00:09:20.160 line:-2 align:center
on the quality
of specific scenes in your video.


156
00:09:20,194 --> 00:09:23,864 line:-2
And finally, for those of you
who have videos in the cloud


157
00:09:23.897 --> 00:09:28.702 line:-2 align:center
or use Linux-based video encoders,
AVQT is now available on Linux.


158
00:09:28.735 --> 00:09:31.305 line:-1 align:center
Thank you very much.

