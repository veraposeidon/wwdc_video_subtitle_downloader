2
00:00:00.067 --> 00:00:03.170 line:-1 position:50%
♪ instrumental hip hop music ♪


3
00:00:03,170 --> 00:00:09,676 line:0 size:2% position:90%
♪


4
00:00:09,676 --> 00:00:11,378 line:-1
Hi, I'm Sarah McClanahan,


5
00:00:11.378 --> 00:00:14.882 line:-1 position:50%
and I'm a designer
on the Evangelism team.


6
00:00:14.882 --> 00:00:18.085 line:-1 position:50%
Today, I'm going to share
practical tips, guidance,


7
00:00:18,085 --> 00:00:21,021 line:-1
and best practices
for how to improve navigation


8
00:00:21,021 --> 00:00:22,890 line:-1
on your iOS apps.


9
00:00:22.890 --> 00:00:26.827 line:-1 position:50%
When apps have great navigation,
it's often unnoticed


10
00:00:26.827 --> 00:00:31.064 line:-1 position:50%
because people are able to focus
on the content and experience.


11
00:00:31.064 --> 00:00:33.734 line:-1 position:50%
Navigation involves
teaching people about


12
00:00:33.734 --> 00:00:36.270 line:-1 position:50%
how things behave,


13
00:00:36.270 --> 00:00:38.238 line:-1 position:50%
where things belong,


14
00:00:38.238 --> 00:00:40.674 line:-1 position:50%
and how things work in your app.


15
00:00:40.674 --> 00:00:43.543 line:-1 position:50%
The goal of navigation
is to provide enough


16
00:00:43.543 --> 00:00:46.980 line:-1 position:50%
of a foundation of familiarity
so that people can easily


17
00:00:46.980 --> 00:00:50.384 line:-1 position:50%
discover your content
and interact with your app.


18
00:00:50.384 --> 00:00:53.587 line:-1 position:50%
When navigation deviates
too far from our expectations


19
00:00:53.587 --> 00:00:57.291 line:-1 position:50%
or doesn't match our natural
understanding of the world,


20
00:00:57,291 --> 00:00:59,760 line:-1
we often feel frustrated
and sense that an app


21
00:00:59.760 --> 00:01:01.228 line:-1 position:50%
is hard to use.


22
00:01:01,228 --> 00:01:05,198 line:-1
But getting navigation right
requires focus and intention.


23
00:01:05,198 --> 00:01:08,502 line:-1
And although the concepts
I'm covering today are not new,


24
00:01:08.502 --> 00:01:10.370 line:-1 position:50%
they are fundamental,


25
00:01:10.370 --> 00:01:14.074 line:-1 position:50%
and they're essential to having
a successful app on iOS.


26
00:01:14,074 --> 00:01:16,710 line:-1
So whether you're new to
the platform or looking for ways


27
00:01:16.710 --> 00:01:20.347 line:-1 position:50%
to improve your app experience,
then this session is for you.


28
00:01:20.347 --> 00:01:23.016 line:-1 position:50%
Today, we're going
to discuss tab bars,


29
00:01:23,016 --> 00:01:27,220 line:-1
a common form
of navigation on iOS.


30
00:01:27,220 --> 00:01:30,691 line:-1
Then we'll discuss interactions
for moving between screens


31
00:01:30,691 --> 00:01:34,127 line:-1
by exploring
hierarchical navigation


32
00:01:34.127 --> 00:01:36.496 line:-1 position:50%
and modal presentations.


33
00:01:36.496 --> 00:01:39.466 line:-1 position:50%
As you can see, we'll only
be covering a subset


34
00:01:39.466 --> 00:01:42.369 line:-1 position:50%
of the large topic area
of navigation.


35
00:01:42,369 --> 00:01:44,905 line:-1
But we'll start here
because these core patterns


36
00:01:44.905 --> 00:01:49.042 line:-1 position:50%
represent a foundation
which we often see misused,


37
00:01:49,042 --> 00:01:51,979 line:-1
and understanding them
can set you up for success


38
00:01:51,979 --> 00:01:56,016 line:-1
as your app evolves
or supports other devices.


39
00:01:56,016 --> 00:01:58,485 line:-1
Let's get started with tab bars.


40
00:01:58,485 --> 00:02:01,121 line:-1
Tab bars are a global
navigation control


41
00:02:01.121 --> 00:02:02.956 line:-1 position:50%
that sit at the bottom
of the screen,


42
00:02:02.956 --> 00:02:06.793 line:-1 position:50%
categorizing an app's content
into different sections.


43
00:02:06,793 --> 00:02:08,895 line:-1
Think of tabs
as a control to reflect


44
00:02:08,895 --> 00:02:12,199 line:-1
your information hierarchy.


45
00:02:12,199 --> 00:02:14,267 line:-1
The UI control itself
should translate


46
00:02:14,267 --> 00:02:17,337 line:-1
an already-clear grouping
and establish relationship


47
00:02:17.337 --> 00:02:20.407 line:-1 position:50%
between different areas
of your app.


48
00:02:20,407 --> 00:02:23,543 line:-1
So the Tab bar represents
your top-level content,


49
00:02:23,543 --> 00:02:26,446 line:-1
which should be the top
of your app's hierarchy.


50
00:02:26.446 --> 00:02:29.783 line:-1 position:50%
Each tab communicates
your app's menu of options,


51
00:02:29.783 --> 00:02:33.720 line:-1 position:50%
and these sections should be
meaningful and descriptive.


52
00:02:33,720 --> 00:02:36,156 line:-1
This likely sounds
really straightforward,


53
00:02:36.156 --> 00:02:39.159 line:-1 position:50%
but in practice
and for various reasons,


54
00:02:39,159 --> 00:02:42,996 line:-1
it can be easy to lose sight of
in your app.


55
00:02:42.996 --> 00:02:45.098 line:-1 position:50%
Let's look at
some good examples.


56
00:02:45,098 --> 00:02:47,968 line:-1
Without seeing any
of the content of these apps,


57
00:02:47,968 --> 00:02:51,138 line:-1
notice how the tabs
hint at functionality.


58
00:02:51,138 --> 00:02:53,874 line:-1
They tell a story about
what the app can do


59
00:02:53,874 --> 00:02:56,843 line:-1
just by displaying
concise labels.


60
00:02:56.843 --> 00:03:00.881 line:-1 position:50%
Listen Now and Radio indicate
that this is a content-based app


61
00:03:00.881 --> 00:03:04.084 line:-1 position:50%
with auditory media.


62
00:03:04,084 --> 00:03:08,789 line:-1
For this app, Library and Albums
hint at a content-rich app


63
00:03:08,789 --> 00:03:13,927 line:-1
with a For You tab that signals
strong personalization.


64
00:03:13.927 --> 00:03:17.597 line:-1 position:50%
This app has tabs that are so
focused that their functionality


65
00:03:17.597 --> 00:03:20.467 line:-1 position:50%
is self-evident and tell me
exactly what I can do


66
00:03:20.467 --> 00:03:23.403 line:-1 position:50%
in those content areas.


67
00:03:23,403 --> 00:03:26,373 line:-1
What we see often
is that the first tab of apps


68
00:03:26,373 --> 00:03:29,409 line:-1
tend to be loaded
heaviest with features.


69
00:03:29.409 --> 00:03:31.311 line:-1 position:50%
Try to create balance
in your interface


70
00:03:31,311 --> 00:03:34,381 line:-1
by distributing functionality
throughout your tabs.


71
00:03:34.381 --> 00:03:36.149 line:-1 position:50%
Let's go through this
with an example


72
00:03:36,149 --> 00:03:39,486 line:-1
to explore how tabs can
oftentimes be misguiding


73
00:03:39.486 --> 00:03:41.822 line:-1 position:50%
or confusing.


74
00:03:41.822 --> 00:03:45.058 line:-1 position:50%
Imagine I have a fake app
that lets people discover


75
00:03:45.058 --> 00:03:48.695 line:-1 position:50%
curated routes in cities
just like a local cyclist.


76
00:03:48.695 --> 00:03:51.531 line:-1 position:50%
And if you're traveling,
moving to a new city,


77
00:03:51,531 --> 00:03:54,334 line:-1
or just getting into the sport,
then there's an easy way


78
00:03:54,334 --> 00:03:57,571 line:-1
to save routes
and create itineraries.


79
00:03:57.571 --> 00:03:58.939 line:-1 position:50%
Here it is.


80
00:03:58,939 --> 00:04:01,708 line:-1
Since this app is about
finding routes to bike,


81
00:04:01,708 --> 00:04:07,247 line:-1
the first thing you'll see is a
map view with filters for rides.


82
00:04:07.247 --> 00:04:10.183 line:-1 position:50%
Then, there's a section
with an upcoming itinerary


83
00:04:10.183 --> 00:04:12.853 line:-1 position:50%
that I can interact with
by editing the content


84
00:04:12,853 --> 00:04:15,822 line:-1
or inviting friends.


85
00:04:15,822 --> 00:04:17,557 line:0
And then there are routes
grouped together


86
00:04:17,557 --> 00:04:19,092 line:0
in collection views.


87
00:04:19,092 --> 00:04:22,762 position:50%
It can be tempting to add all
your functionality into one tab


88
00:04:22,762 --> 00:04:26,366 position:50%
just like this, because
it's available at a glance.


89
00:04:26,366 --> 00:04:28,668 position:50%
Or maybe your app
has evolved over time


90
00:04:28,668 --> 00:04:31,204 line:0
and you've lost sight of
grouping your functionality


91
00:04:31,204 --> 00:04:33,573 position:50%
into sections on the tab bar.


92
00:04:33.573 --> 00:04:38.145 line:-1 position:50%
Well today, I invite you
to reconsider this in your app.


93
00:04:38,145 --> 00:04:41,148 line:-1
In this design,
people may have to scroll a lot


94
00:04:41,148 --> 00:04:43,817 line:-1
for what they're looking for,
and it takes effort


95
00:04:43,817 --> 00:04:47,687 line:-1
to mentally parse unrelated,
disparate features.


96
00:04:47,687 --> 00:04:50,590 line:-1
Filtering a map view
and editing an itinerary


97
00:04:50.590 --> 00:04:54.060 line:-1 position:50%
are two very different
features -- and mindsets --


98
00:04:54.060 --> 00:04:56.863 line:-1 position:50%
when someone opens
this app to use it.


99
00:04:56,863 --> 00:04:59,966 line:-1
Be cautious of combining your
app's functionality in this way


100
00:04:59,966 --> 00:05:02,169 line:-1
or doing it out of fear
that people won't interact


101
00:05:02.169 --> 00:05:03.904 line:-1 position:50%
with the rest of your app.


102
00:05:03.904 --> 00:05:06.973 line:-1 position:50%
It's much easier to understand
an app's functionality


103
00:05:06,973 --> 00:05:11,011 line:-1
when it's well organized
and clearly communicated.


104
00:05:11,011 --> 00:05:15,015 line:-1
One way to do this is to take
a step back and ask yourself,


105
00:05:15,015 --> 00:05:17,417 line:-1
Why do people use your app?


106
00:05:17,417 --> 00:05:20,353 line:-1
Remember, great apps
have focused solutions.


107
00:05:20.353 --> 00:05:22.956 line:-1 position:50%
They aim to do
a few things really well,


108
00:05:22.956 --> 00:05:25.892 line:-1 position:50%
opposed to trying to solve
everything in one app.


109
00:05:25.892 --> 00:05:28.962 line:-1 position:50%
Let's reconsider the tab bar
on this cycling app.


110
00:05:28.962 --> 00:05:30.997 line:-1 position:50%
People use this app
to find routes


111
00:05:30.997 --> 00:05:34.034 line:-1 position:50%
in the places they care about,
that are right for their level.


112
00:05:34.034 --> 00:05:36.403 line:-1 position:50%
This is one of the most
important views in the app,


113
00:05:36.403 --> 00:05:39.973 line:-1 position:50%
as it represents the content
that people care about the most.


114
00:05:39.973 --> 00:05:43.210 line:-1 position:50%
So let's take a step back
and reassess the tab bar


115
00:05:43,210 --> 00:05:45,845 line:-1
to understand how a route
may be used


116
00:05:45.845 --> 00:05:48.415 line:-1 position:50%
and how that content can be
represented in the app


117
00:05:48,415 --> 00:05:51,885 line:-1
in a way that feels
more balanced.


118
00:05:51.885 --> 00:05:54.421 line:-1 position:50%
This is a route detail.


119
00:05:54.421 --> 00:05:56.590 line:-1 position:50%
Someone would expect
to see an overview,


120
00:05:56.590 --> 00:06:00.026 line:-1 position:50%
like distance
and elevation gain,


121
00:06:00.026 --> 00:06:02.729 line:-1 position:50%
as well as access to the map
and road surfaces


122
00:06:02.729 --> 00:06:06.099 line:-1 position:50%
throughout the route,
like sidewalks or roads.


123
00:06:06,099 --> 00:06:09,836 line:-1
Seeing specific callouts
for steep climbs or descents


124
00:06:09.836 --> 00:06:13.473 line:-1 position:50%
could help me understand if this
route is right for my level.


125
00:06:13.473 --> 00:06:15.675 line:-1 position:50%
And finally, food stops
along the route


126
00:06:15,675 --> 00:06:17,844 line:-1
are great for planning.


127
00:06:17.844 --> 00:06:22.549 line:-1 position:50%
OK. So, how do people make sense
of this core functionality


128
00:06:22.549 --> 00:06:24.484 line:-1 position:50%
of viewing routes?


129
00:06:24.484 --> 00:06:29.723 line:-1 position:50%
Well, a route is only helpful
if you know where it is located.


130
00:06:29,723 --> 00:06:32,292 line:-1
Routes should likely
have a relationship


131
00:06:32.292 --> 00:06:35.929 line:-1 position:50%
with the city
they're associated with.


132
00:06:35.929 --> 00:06:38.265 line:-1 position:50%
That may lead me
to have a city overview


133
00:06:38.265 --> 00:06:41.768 line:-1 position:50%
that tells me helpful
information about cycling there.


134
00:06:41,768 --> 00:06:43,203 line:-1
And if you scroll down the view,


135
00:06:43.203 --> 00:06:47.007 line:-1 position:50%
you'd have that list of all
the routes you can ride.


136
00:06:47.007 --> 00:06:50.944 line:-1 position:50%
But this app also supports
routes in different cities,


137
00:06:50.944 --> 00:06:56.316 line:-1 position:50%
which means each city should go
back to a list of all places.


138
00:06:56,316 --> 00:06:59,185 line:-1
Places can become the top level
of the hierarchy


139
00:06:59.185 --> 00:07:01.454 line:-1 position:50%
when navigating to routes.


140
00:07:01,454 --> 00:07:04,791 line:0
As you can see, there's a lot of
content in this workflow alone,


141
00:07:04,791 --> 00:07:09,162 line:0
and it's really key to the value
that this app provides.


142
00:07:09,162 --> 00:07:12,232 position:50%
This is great justification
for a tab-bar item.


143
00:07:12,232 --> 00:07:14,901 line:0
Notice now how
it's self-contained.


144
00:07:14,901 --> 00:07:17,570 line:0
It wouldn't make sense
to put anything in this tab


145
00:07:17,570 --> 00:07:20,674 position:50%
that isn't about a place.


146
00:07:20,674 --> 00:07:24,878 line:-1
Part of designing great tab
bars is organizing your content.


147
00:07:24,878 --> 00:07:28,081 line:-1
Look for these natural ways
to address relationships.


148
00:07:28,081 --> 00:07:30,850 line:-1
I can go through this exercise
with other key features


149
00:07:30.850 --> 00:07:34.321 line:-1 position:50%
in the app, like itineraries,
and I can ask myself,


150
00:07:34.321 --> 00:07:35.889 line:-1 position:50%
What is an itinerary?


151
00:07:35,889 --> 00:07:37,524 line:-1
How will people use it?


152
00:07:37,524 --> 00:07:41,127 line:-1
And where can I dedicate
a place for them in my app?


153
00:07:41.127 --> 00:07:44.564 line:-1 position:50%
Even if people are unfamiliar
with the content of your app,


154
00:07:44.564 --> 00:07:46.999 line:-1 position:50%
and perhaps
especially if they are,


155
00:07:46,999 --> 00:07:49,302 line:-1
it's best to communicate
your functionality


156
00:07:49,302 --> 00:07:51,004 line:-1
and content clearly,


157
00:07:51,004 --> 00:07:53,206 line:-1
assess where it belongs
in your hierarchy,


158
00:07:53,206 --> 00:07:55,408 line:-1
and how people engage with it.


159
00:07:55.408 --> 00:07:58.678 line:-1 position:50%
Then, this app can improve
from having all of the features


160
00:07:58,678 --> 00:08:02,349 line:-1
crammed into the first tab,
to a much clearer


161
00:08:02,349 --> 00:08:05,385 line:-1
and straightforward form
of navigation.


162
00:08:05.385 --> 00:08:09.155 line:-1 position:50%
Now, the core functionality
is more balanced on the tab bar


163
00:08:09.155 --> 00:08:11.891 line:-1 position:50%
because these sections
hold up on their own.


164
00:08:11.891 --> 00:08:12.826 line:-1 position:50%
They are related,


165
00:08:12.826 --> 00:08:16.863 line:-1 position:50%
yet distinctly different
content areas and workflows.


166
00:08:16,863 --> 00:08:21,000 line:-1
This makes navigation
so much more intuitive.


167
00:08:21,000 --> 00:08:24,237 line:-1
Next, I want to discuss
a slightly related topic,


168
00:08:24.237 --> 00:08:26.573 line:-1 position:50%
but we see it
expressed differently.


169
00:08:26.573 --> 00:08:28.675 line:-1 position:50%
Avoid duplicating
your functionality


170
00:08:28,675 --> 00:08:32,746 line:-1
and consolidating it
into a single tab.


171
00:08:32,746 --> 00:08:34,814 position:50%
In content-rich apps
like this one,


172
00:08:34,814 --> 00:08:38,451 line:0
a tab titled Home, may seem
like an attractive catchall


173
00:08:38,451 --> 00:08:40,954 line:0
to showcase functionality
throughout an app


174
00:08:40,954 --> 00:08:43,757 line:0
in a single place.


175
00:08:43.757 --> 00:08:46.860 line:-1 position:50%
For example, maybe it seems like
people aren't engaging


176
00:08:46.860 --> 00:08:49.763 line:-1 position:50%
with the Itineraries feature,
and you may be worried


177
00:08:49.763 --> 00:08:52.766 line:-1 position:50%
it's because they don't know
the functionality exists.


178
00:08:54,434 --> 00:08:57,303 line:-1
So it may seem logical
to encourage engagement


179
00:08:57,303 --> 00:09:00,740 line:-1
by repeating actions in
the tab bar for more visibility,


180
00:09:00,740 --> 00:09:04,811 line:-1
such as New Itinerary
on the Places cards


181
00:09:04.811 --> 00:09:07.547 line:-1 position:50%
and maybe creating a version
of an itinerary view


182
00:09:07.547 --> 00:09:09.749 line:-1 position:50%
that has the features
front and center,


183
00:09:09,749 --> 00:09:12,485 line:-1
such as inviting friends;


184
00:09:12,485 --> 00:09:17,323 position:50%
or listing the stops
with an easy action to add.


185
00:09:17,323 --> 00:09:19,325 position:50%
It might be tempting to do
this out of fear


186
00:09:19,325 --> 00:09:23,062 line:0
that some functionality won't be
discovered throughout your app.


187
00:09:23.062 --> 00:09:27.233 line:-1 position:50%
And to clarify, this isn't
about duplicating content.


188
00:09:27,233 --> 00:09:29,302 line:-1
In many scenarios,
it can make sense


189
00:09:29.302 --> 00:09:33.406 line:-1 position:50%
to have similar types of
content, like songs or photos,


190
00:09:33,406 --> 00:09:36,976 line:-1
exist on many tabs, but organized
in a different way.


191
00:09:36.976 --> 00:09:38.711 line:-1 position:50%
But when it's your app's
functionality,


192
00:09:38,711 --> 00:09:41,848 line:-1
which are the actions people
can take to achieve things,


193
00:09:41,848 --> 00:09:45,785 line:-1
the redundancy
creates confusion.


194
00:09:45.785 --> 00:09:49.856 line:-1 position:50%
And in practice, Home tabs
disrupt an app's hierarchy.


195
00:09:49.856 --> 00:09:54.027 line:-1 position:50%
If functionality from different
tabs or areas throughout an app


196
00:09:54,027 --> 00:09:57,464 line:-1
are duplicated and added
to a single screen


197
00:09:57.464 --> 00:09:59.332 line:-1 position:50%
without sufficient context,


198
00:09:59.332 --> 00:10:02.202 line:-1 position:50%
it creates redundancy
and confusion.


199
00:10:02.202 --> 00:10:04.771 line:-1 position:50%
Home becomes the tab
where every feature


200
00:10:04.771 --> 00:10:07.474 line:-1 position:50%
is fighting for real estate,
because the tab


201
00:10:07.474 --> 00:10:10.610 line:-1 position:50%
is trying to solve a problem
of discoverability.


202
00:10:10,610 --> 00:10:13,446 line:-1
But in reality, it creates
a dissociation


203
00:10:13.446 --> 00:10:16.883 line:-1 position:50%
between understanding content
and how to act on it.


204
00:10:16.883 --> 00:10:18.017 line:-1 position:50%
If this is your app,


205
00:10:18.017 --> 00:10:20.687 line:-1 position:50%
consider removing
the Home tab altogether.


206
00:10:20.687 --> 00:10:23.122 line:-1 position:50%
The redundancy of features
prohibits people


207
00:10:23,122 --> 00:10:26,960 line:-1
from understanding where
things belong and why.


208
00:10:26.960 --> 00:10:28.628 line:-1 position:50%
Another concern about Home tabs


209
00:10:28,628 --> 00:10:30,597 line:-1
is that the repeated
functionality


210
00:10:30,597 --> 00:10:33,433 line:-1
may cause someone to tab-jump
because the action exists


211
00:10:33,433 --> 00:10:35,835 line:-1
in another tab too.


212
00:10:35,835 --> 00:10:39,005 line:-1
Transporting someone to another
tab by tapping on an element


213
00:10:39,005 --> 00:10:42,242 line:-1
within a view is jarring
and disorienting.


214
00:10:42.242 --> 00:10:46.746 line:-1 position:50%
Never force someone
to change tabs automatically.


215
00:10:46,746 --> 00:10:50,283 line:-1
Next, one of the biggest selling
points of a tabbed navigation


216
00:10:50.283 --> 00:10:53.386 line:-1 position:50%
is access to multiple
top-level hierarchies,


217
00:10:53,386 --> 00:10:55,655 line:-1
so avoid hiding
or removing the tab bar


218
00:10:55,655 --> 00:10:58,658 line:-1
throughout your navigation.


219
00:10:58.658 --> 00:11:01.961 line:-1 position:50%
Persistent access to the tab
bar gives someone the ability


220
00:11:01,961 --> 00:11:03,963 line:-1
to toggle between
different levels


221
00:11:03,963 --> 00:11:05,732 line:-1
of your information hierarchy


222
00:11:05.732 --> 00:11:08.167 line:-1 position:50%
while maintaining context
in each.


223
00:11:08,167 --> 00:11:11,437 position:50%
For example, I can look at a new
route I'm considering riding


224
00:11:11,437 --> 00:11:15,508 position:50%
in the Places tab


225
00:11:15,508 --> 00:11:17,510 position:50%
and compare it to an itinerary
I'm building


226
00:11:17,510 --> 00:11:20,613 line:0
in the Itinerary tab


227
00:11:20,613 --> 00:11:23,383 position:50%
with routes I've already saved


228
00:11:23,383 --> 00:11:26,686 position:50%
that are two levels deep
into my hierarchy.


229
00:11:26,686 --> 00:11:30,189 position:50%
This only works well
if tabs have defined purpose


230
00:11:30,189 --> 00:11:34,727 position:50%
and represent specific
categories of content.


231
00:11:34,727 --> 00:11:36,996 line:-1
Finally, all of the work
you invest


232
00:11:36,996 --> 00:11:39,198 line:-1
in a solid information
architecture


233
00:11:39.198 --> 00:11:42.235 line:-1 position:50%
should be honored
with clear and concise labels.


234
00:11:42.235 --> 00:11:43.670 line:-1 position:50%
Let's look at
an Apple Design winner


235
00:11:43.670 --> 00:11:46.272 line:-1 position:50%
from the Interaction category
this year.


236
00:11:46,272 --> 00:11:48,207 position:50%
This is the Slopes app.


237
00:11:48,207 --> 00:11:50,643 line:0
I think it's so great
that when you launch the app,


238
00:11:50,643 --> 00:11:53,012 line:0
you land on the middle tab,
which is your Logbook


239
00:11:53,012 --> 00:11:55,915 line:0
with your season stats.


240
00:11:55.915 --> 00:11:57.817 line:-1 position:50%
The other tabs are specific.


241
00:11:57,817 --> 00:12:01,254 line:-1
They're easy to understand,
and I have an immediate sense


242
00:12:01,254 --> 00:12:03,990 line:-1
of what the app does
and how to use it.


243
00:12:03.990 --> 00:12:07.260 line:-1 position:50%
At a glance, this is because
the labels are representative


244
00:12:07.260 --> 00:12:08.795 line:-1 position:50%
of the content.


245
00:12:08,795 --> 00:12:11,097 line:-1
Record a ski day,
browse resorts,


246
00:12:11.097 --> 00:12:13.967 line:-1 position:50%
compare stats with friends;
they all represent


247
00:12:13,967 --> 00:12:18,438 line:-1
core functionality
with a succinct label.


248
00:12:18.438 --> 00:12:21.674 line:-1 position:50%
Tab bars are a powerful control
for navigation.


249
00:12:21.674 --> 00:12:24.310 line:-1 position:50%
Let's recap everything
we've learned.


250
00:12:24,310 --> 00:12:28,748 line:-1
Use tabs to reflect
your information hierarchy.


251
00:12:28,748 --> 00:12:31,184 line:-1
Organize your features
in a way that balances them


252
00:12:31.184 --> 00:12:33.319 line:-1 position:50%
across your tabs.


253
00:12:33.319 --> 00:12:38.491 line:-1 position:50%
Avoid duplicating features and
merging them into a single tab.


254
00:12:38.491 --> 00:12:42.395 line:-1 position:50%
Always keep the tab bar
persistent throughout your app.


255
00:12:42.395 --> 00:12:46.933 line:-1 position:50%
Finally, use clear and concise
labels for each tab.


256
00:12:46.933 --> 00:12:49.969 line:-1 position:50%
All right,
let's dive into interactions.


257
00:12:49.969 --> 00:12:52.972 line:-1 position:50%
When it comes to navigating
between screens of an app,


258
00:12:52.972 --> 00:12:55.475 line:-1 position:50%
there are two very common
forms of transition:


259
00:12:55.475 --> 00:12:57.543 line:-1 position:50%
you can navigate through
an app's hierarchy


260
00:12:57.543 --> 00:13:00.246 line:-1 position:50%
with a term we sometimes
refer to as a "push,"


261
00:13:00,246 --> 00:13:02,715 line:-1
such as pushing
into more detail.


262
00:13:02,715 --> 00:13:06,452 line:-1
Or, you can transition
with a modal presentation.


263
00:13:06.452 --> 00:13:09.055 line:-1 position:50%
These are nonintrusive
and familiar ways


264
00:13:09,055 --> 00:13:12,125 line:-1
to traverse an app's hierarchy
and transition between views.


265
00:13:12.125 --> 00:13:14.160 line:-1 position:50%
Let me show you both.


266
00:13:14.160 --> 00:13:17.096 line:-1 position:50%
When you transition
through hierarchical navigation,


267
00:13:17.096 --> 00:13:19.332 line:-1 position:50%
a view pushes,
which means a person


268
00:13:19,332 --> 00:13:21,834 line:-1
has tapped on an element
and the next screen


269
00:13:21,834 --> 00:13:24,804 line:-1
slides into view
from right to left.


270
00:13:24.804 --> 00:13:27.640 line:-1 position:50%
A push transition
is an expected default


271
00:13:27.640 --> 00:13:30.810 line:-1 position:50%
when drilling further
into an app's hierarchy.


272
00:13:30.810 --> 00:13:33.279 line:-1 position:50%
Pushing is great
because it directly reflects


273
00:13:33.279 --> 00:13:35.081 line:-1 position:50%
your information hierarchy.


274
00:13:35,081 --> 00:13:38,284 line:-1
It's a literal representation
of moving through content


275
00:13:38,284 --> 00:13:41,421 line:-1
from a high level
and drilling into more detail.


276
00:13:41.421 --> 00:13:43.790 line:-1 position:50%
On the other hand,
a modal is reserved


277
00:13:43,790 --> 00:13:46,526 line:-1
for a self-contained task
in an interface.


278
00:13:46.526 --> 00:13:49.462 line:-1 position:50%
Modals work great for workflows
that are independent,


279
00:13:49,462 --> 00:13:52,331 line:-1
meaning someone has enough
information in that view


280
00:13:52.331 --> 00:13:55.168 line:-1 position:50%
to make decisions
and complete a task.


281
00:13:55,168 --> 00:13:57,937 line:-1
Modals are unique
because they create focus


282
00:13:57.937 --> 00:14:01.774 line:-1 position:50%
by separating people
from the information hierarchy.


283
00:14:01,774 --> 00:14:04,377 line:-1
For example,
creating a new itinerary


284
00:14:04.377 --> 00:14:07.714 line:-1 position:50%
is presented in a modal view.


285
00:14:07,714 --> 00:14:11,984 line:-1
Someone can make selections
or input data such as a title,


286
00:14:11,984 --> 00:14:16,255 line:-1
a city, a range of dates,
and even invite friends.


287
00:14:16,255 --> 00:14:18,858 line:-1
This is suitable for a modal
because the UI is intended


288
00:14:18,858 --> 00:14:22,428 line:-1
to be edited and completed
before dismissing the view


289
00:14:22,428 --> 00:14:24,764 line:-1
or navigating around
the rest of the app.


290
00:14:24.764 --> 00:14:28.301 line:-1 position:50%
Since it's all user input,
the rest of the app isn't needed


291
00:14:28.301 --> 00:14:31.037 line:-1 position:50%
as a reference
to complete the fields.


292
00:14:31,037 --> 00:14:33,372 line:-1
Now that you're familiar
with these interactions,


293
00:14:33.372 --> 00:14:35.274 line:-1 position:50%
let's dive deep on both.


294
00:14:35.274 --> 00:14:37.810 line:-1 position:50%
Starting
with hierarchical navigation.


295
00:14:37.810 --> 00:14:40.480 line:-1 position:50%
Here are a couple
of guidelines to consider.


296
00:14:40,480 --> 00:14:42,648 line:-1
Use a push transition
to navigate between


297
00:14:42,648 --> 00:14:46,119 line:-1
different levels
of your app's hierarchy.


298
00:14:46,119 --> 00:14:49,689 line:-1
Hierarchical navigation
reinforces the relationship


299
00:14:49,689 --> 00:14:52,825 line:-1
between top-level
and secondary content.


300
00:14:52,825 --> 00:14:55,862 line:-1
The top-level content
is higher in the hierarchy.


301
00:14:55.862 --> 00:14:59.532 line:-1 position:50%
As I want more detail,
I access the supplemental views


302
00:14:59,532 --> 00:15:03,002 line:-1
by drilling into the hierarchy.


303
00:15:03.002 --> 00:15:05.938 line:-1 position:50%
As I make selections,
I narrow my options


304
00:15:05,938 --> 00:15:09,575 line:-1
and eliminate access
to the rest of the hierarchy.


305
00:15:09,575 --> 00:15:11,577 line:-1
This is how it should be.


306
00:15:11.577 --> 00:15:14.080 line:-1 position:50%
Content should become
increasingly more specific


307
00:15:14,080 --> 00:15:16,983 line:-1
and there should be
fewer options as I push in


308
00:15:16.983 --> 00:15:20.186 line:-1 position:50%
and drill into detail.


309
00:15:20.186 --> 00:15:21.788 line:-1 position:50%
When using a push transition,


310
00:15:21,788 --> 00:15:23,589 line:-1
it's really important
that the tab bar


311
00:15:23,589 --> 00:15:27,860 line:-1
remains persistently anchored
to the bottom of the screen.


312
00:15:27,860 --> 00:15:29,595 line:-1
As we talked about before,


313
00:15:29.595 --> 00:15:31.230 line:-1 position:50%
this is one of the biggest
selling points


314
00:15:31.230 --> 00:15:32.799 line:-1 position:50%
of a tabbed navigation.


315
00:15:32.799 --> 00:15:34.133 line:-1 position:50%
It's consistent.


316
00:15:34.133 --> 00:15:36.602 line:-1 position:50%
It gives access
to core areas of your app


317
00:15:36.602 --> 00:15:38.704 line:-1 position:50%
because it's always available.


318
00:15:38,704 --> 00:15:40,540 line:-1
This means people
can explore content


319
00:15:40.540 --> 00:15:42.608 line:-1 position:50%
at different hierarchies.


320
00:15:42.608 --> 00:15:44.977 line:-1 position:50%
As views push in,
it feels natural


321
00:15:44,977 --> 00:15:48,614 line:-1
to swipe left to right to go
back to where you came from


322
00:15:48.614 --> 00:15:50.583 line:-1 position:50%
without losing access
to hierarchies


323
00:15:50,583 --> 00:15:54,887 line:-1
in other tabs where your state
should be preserved.


324
00:15:54.887 --> 00:15:57.456 line:-1 position:50%
Next, it's important to use
the navigation bar


325
00:15:57.456 --> 00:16:00.193 line:-1 position:50%
at the top of the screen
with appropriate labels


326
00:16:00.193 --> 00:16:02.428 line:-1 position:50%
to orient people
in your hierarchy.


327
00:16:02.428 --> 00:16:04.931 line:-1 position:50%
Let me show you.


328
00:16:04,931 --> 00:16:06,532 line:-1
As I drill into content


329
00:16:06.532 --> 00:16:08.601 line:-1 position:50%
and move through
my information hierarchy,


330
00:16:08,601 --> 00:16:12,004 line:-1
notice how the back button
in the navigation bar changes


331
00:16:12,004 --> 00:16:16,375 line:-1
to reflect the title
of the screen I just came from.


332
00:16:16.375 --> 00:16:19.745 line:-1 position:50%
This is helpful as I navigate
further into an app


333
00:16:19.745 --> 00:16:22.448 line:-1 position:50%
by scrolling screens
and drilling in,


334
00:16:22,448 --> 00:16:24,851 line:-1
so I never have to remember
where I came from


335
00:16:24.851 --> 00:16:27.453 line:-1 position:50%
or how to get back there,
because the back button


336
00:16:27,453 --> 00:16:31,958 line:-1
can indicate the level up
in the hierarchy.


337
00:16:31,958 --> 00:16:34,794 line:-1
The other place to use
hierarchical navigation


338
00:16:34.794 --> 00:16:40.032 line:-1 position:50%
is in all instances when
a disclosure indicator is used.


339
00:16:40.032 --> 00:16:41.434 line:-1 position:50%
A disclosure indicator,


340
00:16:41.434 --> 00:16:43.903 line:-1 position:50%
which is also
referred to as a chevron,


341
00:16:43.903 --> 00:16:47.840 line:-1 position:50%
points in the direction you're
expected to transition to.


342
00:16:47,840 --> 00:16:50,243 line:-1
When a chevron initiates
a different transition,


343
00:16:50,243 --> 00:16:52,812 line:-1
there's a disconnect
between what the UI represents


344
00:16:52.812 --> 00:16:55.414 line:-1 position:50%
and the interaction
that follows.


345
00:16:55.414 --> 00:16:59.886 line:-1 position:50%
The concept of pushing maps to
our mental model of progression.


346
00:16:59.886 --> 00:17:02.989 line:-1 position:50%
In western cultures,
we read left to right,


347
00:17:02,989 --> 00:17:05,324 line:-1
and that direction
indicates progress.


348
00:17:05.324 --> 00:17:08.828 line:-1 position:50%
But in right to left languages,
such as Arabic and Hebrew,


349
00:17:08,828 --> 00:17:13,266 line:-1
the mental model of progress is
flowing in the other direction.


350
00:17:13.266 --> 00:17:15.835 line:-1 position:50%
If your app supports
right to left languages,


351
00:17:15.835 --> 00:17:17.970 line:-1 position:50%
then the transition
of pushing is flipped


352
00:17:17.970 --> 00:17:22.975 line:-1 position:50%
to create an association
with the flow of content.


353
00:17:22,975 --> 00:17:26,545 line:-1
The last consideration for when
to use hierarchical navigation


354
00:17:26,545 --> 00:17:28,748 line:-1
is about the context
of the workflow,


355
00:17:28.748 --> 00:17:31.017 line:-1 position:50%
such as when someone
is navigating frequently


356
00:17:31,017 --> 00:17:33,753 line:-1
between content.


357
00:17:33.753 --> 00:17:36.155 line:-1 position:50%
If you're presenting a workflow
that you expect people


358
00:17:36.155 --> 00:17:40.059 line:-1 position:50%
to interact with frequently
by toggling between views often,


359
00:17:40.059 --> 00:17:41.928 line:-1 position:50%
app switching
during the workflow,


360
00:17:41,928 --> 00:17:45,898 line:-1
or spending significant time
in the view, then use a push.


361
00:17:45.898 --> 00:17:48.267 line:-1 position:50%
A familiar example
is the Messages app.


362
00:17:48,267 --> 00:17:50,636 line:-1
Even though the hierarchy
is relatively flat,


363
00:17:50.636 --> 00:17:53.205 line:-1 position:50%
I can easily move
in and out of the messages


364
00:17:53.205 --> 00:17:55.308 line:-1 position:50%
with a push transition.


365
00:17:55.308 --> 00:17:58.711 line:-1 position:50%
If each message wasn't a push,
but instead a modal,


366
00:17:58.711 --> 00:18:00.546 line:-1 position:50%
it would be difficult
to seamlessly move


367
00:18:00,546 --> 00:18:02,415 line:-1
between different chats.


368
00:18:02,415 --> 00:18:05,651 line:-1
Messaging should feel fluid,
but dismissing a modal


369
00:18:05.651 --> 00:18:08.487 line:-1 position:50%
when it's not relevant
makes people have to think about


370
00:18:08.487 --> 00:18:11.657 line:-1 position:50%
leaving the screen,
and that feels overcomplicated.


371
00:18:11.657 --> 00:18:13.993 line:-1 position:50%
Pushing allows
frictionless transition


372
00:18:13,993 --> 00:18:17,263 line:-1
between core areas of an app.


373
00:18:17.263 --> 00:18:20.433 line:-1 position:50%
That is an overview
of hierarchical navigation.


374
00:18:20.433 --> 00:18:21.701 line:-1 position:50%
Let's review.


375
00:18:21.701 --> 00:18:24.437 line:-1 position:50%
Primarily, push transitions
are used to traverse


376
00:18:24.437 --> 00:18:26.806 line:-1 position:50%
an app's hierarchy.


377
00:18:26.806 --> 00:18:29.208 line:-1 position:50%
Always keep the tab bar
persistently anchored


378
00:18:29.208 --> 00:18:31.911 line:-1 position:50%
to the bottom of the screen.


379
00:18:31.911 --> 00:18:34.280 line:-1 position:50%
Use the navigation bar
of each screen to reflect


380
00:18:34,280 --> 00:18:38,918 line:-1
a clear title and back label to
orient people in your hierarchy.


381
00:18:38,918 --> 00:18:42,455 line:-1
Use a push when a disclosure
indicator is present.


382
00:18:42,455 --> 00:18:44,890 line:-1
And when workflows require
navigating frequently


383
00:18:44.890 --> 00:18:47.326 line:-1 position:50%
between content.


384
00:18:47,326 --> 00:18:49,695 line:-1
Hierarchical navigation
is a very common


385
00:18:49.695 --> 00:18:51.797 line:-1 position:50%
and a relatively
simple interaction,


386
00:18:51.797 --> 00:18:56.635 line:-1 position:50%
so this transition is likely to
be used frequently in your app.


387
00:18:56.635 --> 00:19:00.773 line:-1 position:50%
However, modal presentations
are more about a context shift.


388
00:19:00.773 --> 00:19:03.809 line:-1 position:50%
It's about isolating someone
into a focused workflow


389
00:19:03,809 --> 00:19:05,711 line:-1
or self-contained task.


390
00:19:05.711 --> 00:19:07.713 line:-1 position:50%
When using modals on iOS,


391
00:19:07,713 --> 00:19:11,150 line:-1
always present them
from the bottom of the screen.


392
00:19:11.150 --> 00:19:13.552 line:-1 position:50%
A modal interrupts
information hierarchy.


393
00:19:13,552 --> 00:19:17,823 line:-1
It comes from the bottom of the
screen to cover your tab bar.


394
00:19:17,823 --> 00:19:20,526 line:-1
This prevents people from
drilling further into your app.


395
00:19:20,526 --> 00:19:23,262 line:-1
And it's an intentional
disruption because the purpose


396
00:19:23,262 --> 00:19:27,400 line:-1
is to reinforce focus.


397
00:19:27.400 --> 00:19:30.736 line:-1 position:50%
So now you may be wondering,
what is a self-contained task?


398
00:19:30.736 --> 00:19:34.073 line:-1 position:50%
Let's talk about
three broad examples.


399
00:19:34.073 --> 00:19:37.543 line:-1 position:50%
You can use modal presentations
for a simple task,


400
00:19:37,543 --> 00:19:41,447 line:-1
a multi-step task,
or for full-screen content.


401
00:19:41,447 --> 00:19:45,551 line:-1
I'll share an example of each.


402
00:19:45,551 --> 00:19:47,987 line:-1
First, use modality
for a workflow


403
00:19:47.987 --> 00:19:50.523 line:-1 position:50%
that requires accomplishing
a simple task,


404
00:19:50.523 --> 00:19:53.926 line:-1 position:50%
such as creating an event
or setting a reminder.


405
00:19:53,926 --> 00:19:55,628 line:-1
Creating a reminder requires


406
00:19:55.628 --> 00:19:58.564 line:-1 position:50%
I edit and modify
the entry fields.


407
00:19:58,564 --> 00:20:00,833 line:-1
Locking in focus
while doing this helps someone


408
00:20:00.833 --> 00:20:03.669 line:-1 position:50%
achieve this task
without distraction.


409
00:20:03.669 --> 00:20:06.372 line:-1 position:50%
It also minimizes
the possibility of accidentally


410
00:20:06.372 --> 00:20:11.911 line:-1 position:50%
abandoning the flow by tapping
on another element or tab.


411
00:20:11,911 --> 00:20:14,880 line:-1
Second, use modality
for a workflow that accommodates


412
00:20:14.880 --> 00:20:16.749 line:-1 position:50%
a complicated task.


413
00:20:16.749 --> 00:20:18.784 line:-1 position:50%
This is potentially
multiple steps


414
00:20:18,784 --> 00:20:21,987 line:-1
such as adding
a transit card to the wallet.


415
00:20:21,987 --> 00:20:24,256 line:-1
It may seem counterintuitive
to use a modal


416
00:20:24.256 --> 00:20:27.293 line:-1 position:50%
for a complicated task,
but remember,


417
00:20:27,293 --> 00:20:30,763 line:-1
the purpose is to reinforce
focus by hiding the tab bar


418
00:20:30.763 --> 00:20:33.365 line:-1 position:50%
and preventing people
from moving around the app


419
00:20:33.365 --> 00:20:37.336 line:-1 position:50%
before the task is complete
or canceled.


420
00:20:37,336 --> 00:20:40,973 position:50%
And third, use a modal
when viewing an article, video,


421
00:20:40,973 --> 00:20:43,909 position:50%
or full-screen content
that requires minimal


422
00:20:43,909 --> 00:20:45,811 position:50%
additional navigation.


423
00:20:45,811 --> 00:20:48,214 position:50%
When in the Fitness app
starting a workout,


424
00:20:48,214 --> 00:20:50,116 line:0
which is presented as a video,


425
00:20:50,116 --> 00:20:54,720 position:50%
is a great scenario
for a modal presentation.


426
00:20:54.720 --> 00:20:57.456 line:-1 position:50%
In the hierarchical section,
we talked about the importance


427
00:20:57,456 --> 00:20:59,992 line:-1
of the navigation bar
to orient people.


428
00:20:59.992 --> 00:21:03.996 line:-1 position:50%
It's equally important
with modal presentations.


429
00:21:03,996 --> 00:21:06,098 line:-1
When looking at
the anatomy of a modal,


430
00:21:06.098 --> 00:21:09.702 line:-1 position:50%
think about the navigation bar
as a guide for wayfinding.


431
00:21:09.702 --> 00:21:13.105 line:-1 position:50%
The use of labels and actions
can make people feel confident


432
00:21:13,105 --> 00:21:15,908 line:-1
about where they are
and what actions they can take


433
00:21:15,908 --> 00:21:19,145 line:-1
to go other places.


434
00:21:19,145 --> 00:21:22,581 line:-1
A title helps orient people
to the content of the screen,


435
00:21:22,581 --> 00:21:25,618 line:-1
such as "New Itinerary."


436
00:21:25,618 --> 00:21:28,487 line:-1
The right label is intended
to be the preferred action,


437
00:21:28.487 --> 00:21:33.225 line:-1 position:50%
so it's often seen in a bolder
font to emphasize importance.


438
00:21:33.225 --> 00:21:36.095 line:-1 position:50%
The label itself is a concise,
affirmative verb


439
00:21:36,095 --> 00:21:39,431 line:-1
that tells me exactly
what to expect when tapped.


440
00:21:39,431 --> 00:21:41,634 line:-1
The preferred action
dismisses the modal


441
00:21:41.634 --> 00:21:45.571 line:-1 position:50%
and the previous state
of the app should be preserved.


442
00:21:45,571 --> 00:21:48,607 line:-1
If there is not yet input
or interaction on the modal,


443
00:21:48.607 --> 00:21:51.377 line:-1 position:50%
then having the preferred
action be inactive


444
00:21:51,377 --> 00:21:53,779 line:-1
is a good way to clarify
that fields are required


445
00:21:53.779 --> 00:21:57.983 line:-1 position:50%
in order to save or continue.


446
00:21:57.983 --> 00:22:00.786 line:-1 position:50%
If you have a preferred action,
then using the left action


447
00:22:00,786 --> 00:22:03,322 line:-1
to dismiss the modal
with "Cancel"


448
00:22:03.322 --> 00:22:06.025 line:-1 position:50%
clearly indicates that I'm
abandoning the workflow.


449
00:22:06,025 --> 00:22:08,994 line:0
If I've entered any information
before tapping Cancel,


450
00:22:08,994 --> 00:22:12,097 position:50%
this is a good time to display
an alert, or an action sheet


451
00:22:12,097 --> 00:22:14,200 position:50%
as you see here.


452
00:22:14,200 --> 00:22:16,735 position:50%
Letting someone know that
they will lose the data


453
00:22:16,735 --> 00:22:18,804 line:0
if continuing to cancel.


454
00:22:18,804 --> 00:22:21,240 position:50%
But if I haven't
interacted with the UI,


455
00:22:21,240 --> 00:22:25,711 position:50%
tapping Cancel should simply
dismiss the modal.


456
00:22:25.711 --> 00:22:29.248 line:-1 position:50%
Use close symbols sparingly and
only when modal presentations


457
00:22:29.248 --> 00:22:33.452 line:-1 position:50%
require minimal interaction
and no text input.


458
00:22:33.452 --> 00:22:36.121 line:-1 position:50%
Sometimes,
you'll see an "X" in a modal


459
00:22:36,121 --> 00:22:38,857 line:-1
as the primary way to dismiss,
such as this article


460
00:22:38.857 --> 00:22:41.360 line:-1 position:50%
from the Today tab
in the App Store.


461
00:22:41.360 --> 00:22:44.797 line:-1 position:50%
The close symbol works here
because there is no user input,


462
00:22:44.797 --> 00:22:46.532 line:-1 position:50%
so the subtle dismiss action


463
00:22:46.532 --> 00:22:49.134 line:-1 position:50%
helps someone focus
on the content.


464
00:22:49.134 --> 00:22:52.104 line:-1 position:50%
Here's an example of how the
close symbol can be problematic


465
00:22:52.104 --> 00:22:55.741 line:-1 position:50%
in a modal that requires
input and interaction.


466
00:22:55.741 --> 00:22:58.811 line:-1 position:50%
After I select a filter,
if I tap close,


467
00:22:58,811 --> 00:23:01,614 line:-1
will the selections be
applied or canceled?


468
00:23:01.614 --> 00:23:04.750 line:-1 position:50%
Without a clearly labeled
action, people will wonder,


469
00:23:04.750 --> 00:23:07.219 line:-1 position:50%
"What happens if I tap close?"


470
00:23:07,219 --> 00:23:10,389 line:-1
So keep in mind that using
labels in the navigation bar


471
00:23:10,389 --> 00:23:12,958 line:-1
is usually preferred,
as it's more affirming


472
00:23:12.958 --> 00:23:15.995 line:-1 position:50%
and the actions
are more explicit.


473
00:23:15,995 --> 00:23:19,465 line:-1
Lastly, we try to limit
modals over modals


474
00:23:19,465 --> 00:23:23,602 line:-1
because it can feel
jarring and overcomplicated.


475
00:23:23,602 --> 00:23:25,904 line:-1
It's worth calling out,
that a modal view itself


476
00:23:25,904 --> 00:23:29,375 line:-1
can support subviews
and transitions when relevant.


477
00:23:29,375 --> 00:23:31,977 line:-1
I mentioned earlier
that this is an edit view,


478
00:23:31.977 --> 00:23:35.314 line:-1 position:50%
meaning that the text fields
and table cells have selections


479
00:23:35,314 --> 00:23:37,416 line:-1
and input which are intended


480
00:23:37,416 --> 00:23:41,120 line:-1
to be interacted with
and not just viewed.


481
00:23:41.120 --> 00:23:43.722 line:-1 position:50%
For example,
I can tap on a table cell


482
00:23:43.722 --> 00:23:46.859 line:-1 position:50%
of one of my friends
I've added to the itinerary.


483
00:23:46,859 --> 00:23:50,262 line:-1
You expect this to push because
it has a chevron, remember?


484
00:23:50.262 --> 00:23:53.465 line:-1 position:50%
When I push in, this view may
show information about Kate


485
00:23:53.465 --> 00:23:57.903 line:-1 position:50%
and give me the option to remove
her from the itinerary.


486
00:23:57.903 --> 00:24:01.240 line:-1 position:50%
But the labels "Add People"
and "Upload Photo" are in


487
00:24:01,240 --> 00:24:05,811 line:-1
tint color, which indicates
that these actions are tappable.


488
00:24:05.811 --> 00:24:07.146 line:-1 position:50%
In each of these scenarios,


489
00:24:07,146 --> 00:24:09,448 line:-1
they're workflows
within workflows.


490
00:24:09.448 --> 00:24:11.483 line:-1 position:50%
I started by adding
an itinerary,


491
00:24:11,483 --> 00:24:15,287 line:-1
now I'm adding
a photo to the itinerary.


492
00:24:15.287 --> 00:24:17.723 line:-1 position:50%
Uploading a photo
is a workflow that includes


493
00:24:17,723 --> 00:24:19,725 line:-1
quite a bit of interaction,


494
00:24:19.725 --> 00:24:23.796 line:-1 position:50%
like scrolling through my camera
roll and selecting a new photo.


495
00:24:23.796 --> 00:24:27.066 line:-1 position:50%
I would also define
this as a self-contained task.


496
00:24:27,066 --> 00:24:30,102 line:-1
Once a photo is chosen,
that modal is dismissed


497
00:24:30.102 --> 00:24:34.073 line:-1 position:50%
and I'm back to the first modal
of the new itinerary.


498
00:24:34,073 --> 00:24:36,575 line:-1
Try to limit
multiple modality stacks,


499
00:24:36,575 --> 00:24:38,210 line:-1
but sometimes they're required


500
00:24:38,210 --> 00:24:42,381 line:-1
to drive consistency
and focus in subviews.


501
00:24:42.381 --> 00:24:46.385 line:-1 position:50%
That is an overview
of modal presentation on iOS.


502
00:24:46,385 --> 00:24:49,388 line:-1
Modals should present
from the bottom of the screen.


503
00:24:49.388 --> 00:24:51.824 line:-1 position:50%
They can be used
for three types of tasks:


504
00:24:51.824 --> 00:24:55.260 line:-1 position:50%
simple, multi-step,
or full-screen.


505
00:24:55.260 --> 00:25:00.132 line:-1 position:50%
Use the preferred and cancel
actions in the navigation bar.


506
00:25:00.132 --> 00:25:04.036 line:-1 position:50%
Use the close symbol for content
with minimal interaction.


507
00:25:04.036 --> 00:25:06.972 line:-1 position:50%
And limit modals over modals.


508
00:25:06.972 --> 00:25:09.341 line:-1 position:50%
I hope this deep dive
was helpful for you.


509
00:25:09,341 --> 00:25:12,044 line:-1
When designing navigation
for your iOS apps,


510
00:25:12.044 --> 00:25:14.580 line:-1 position:50%
think about how
content is organized,


511
00:25:14.580 --> 00:25:16.582 line:-1 position:50%
how people interact
with your functionality,


512
00:25:16,582 --> 00:25:20,185 line:-1
and how best to represent it
in relation to your hierarchy.


513
00:25:20.185 --> 00:25:23.255 line:-1 position:50%
This way, people can easily
access and interact


514
00:25:23.255 --> 00:25:25.691 line:-1 position:50%
with all of your app's
amazing features.


515
00:25:25.691 --> 00:25:26.792 line:-1 position:50%
Thanks for listening.


516
00:25:26,792 --> 00:25:30,529 align:right line:0 position:90%
♪

