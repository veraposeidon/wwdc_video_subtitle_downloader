2
00:00:01.134 --> 00:00:07.140 line:-1 align:center
[spacey music]


3
00:00:10,077 --> 00:00:13,614 line:-2
David Duncan: Hi, Iâ€™m David Duncan,
and in this video,


4
00:00:13.647 --> 00:00:17.384 line:-2 align:center
Iâ€™ll be introducing you
to desktop class iPad.


5
00:00:18.151 --> 00:00:24.992 line:-2 align:center
iOS 16 brings advances to the tools
used to design and build great apps,


6
00:00:25,025 --> 00:00:28,829 line:-2
apps that bring more and better tools
to the forefront


7
00:00:28.862 --> 00:00:34.368 line:-2 align:center
and take advantage of all the hardware,
both built in and attached.


8
00:00:34,401 --> 00:00:39,506 line:-2
UIKit adds many tools to help you
meet these goals for your apps.


9
00:00:39.540 --> 00:00:43.677 line:-2 align:center
Updates to UINavigationBar allow you
to take better advantage


10
00:00:43.710 --> 00:00:48.348 line:-2 align:center
of screen real estate and build
a great experience on all Apple platforms.


11
00:00:49.583 --> 00:00:54.288 line:-2 align:center
The new Find and Replace UI
is a snap to enable on built-in views


12
00:00:54.321 --> 00:00:57.291 line:-1 align:center
and easy to add to custom ones.


13
00:00:57,324 --> 00:01:01,828 line:-2
The Edit menu has been overhauled,
with a new interaction-based API


14
00:01:01.862 --> 00:01:03.897 line:-1 align:center
that integrates with the menu system.


15
00:01:04.665 --> 00:01:08.268 line:-2 align:center
And collection view improvements
make it easier than ever


16
00:01:08.302 --> 00:01:13.574 line:-2 align:center
to build interfaces that let your users
select and act on their content.


17
00:01:15,475 --> 00:01:19,546 align:center
For more information
on Find and Replace and Edit Menu,


18
00:01:19,580 --> 00:01:24,451 align:center
watch "Adopt desktop
class editing interactions."


19
00:01:24,484 --> 00:01:27,888 line:0
And to see how all these features
work together,


20
00:01:27,921 --> 00:01:30,991 line:0
watch "Build a desktop class iPad app."


21
00:01:32,059 --> 00:01:35,395 line:0
In this video, I'll discuss changes
to navigation


22
00:01:35,429 --> 00:01:38,899 line:-2
that impact how you design
your app for iOS 16.


23
00:01:40,901 --> 00:01:47,508 line:-2
First are new features that make it easy
to build more discoverable interfaces.


24
00:01:47.541 --> 00:01:53.914 line:-2 align:center
Then features that are especially powerful
for document based apps.


25
00:01:53.947 --> 00:01:59.219 line:-2 align:center
And, finally, updates to Search to help
accelerate and polish the experience.


26
00:02:00,821 --> 00:02:05,759 line:-2
UINavigationBar is used
for many different purposes on iOS,


27
00:02:05,792 --> 00:02:08,362 line:-1
and iOS 16 acknowledges that


28
00:02:08.395 --> 00:02:13.033 line:-2 align:center
by providing
new optimized UI for many of these cases.


29
00:02:13.066 --> 00:02:16.803 line:-1 align:center
UINavigationItem adds a style property,


30
00:02:16.837 --> 00:02:22.843 line:-2 align:center
used to select from these styles:
navigator, browser, and editor.


31
00:02:22,876 --> 00:02:25,712 line:-1
I'll dive into each of these styles now.


32
00:02:26,580 --> 00:02:30,017 line:-1
The default style, navigator,


33
00:02:30,050 --> 00:02:34,021 line:-2
behaves exactly
as a traditional UINavigationBar.


34
00:02:35.389 --> 00:02:40.494 line:-2 align:center
The title is centered, there are
leading and trailing bar button items,


35
00:02:40.527 --> 00:02:45.532 line:-2 align:center
and a back button appears when
there is more than 1 item on the stack.


36
00:02:45,566 --> 00:02:50,938 line:-2
The browser style rearranges contents
to be better optimized for interfaces


37
00:02:50.971 --> 00:02:56.076 line:-2 align:center
where history matters as much as location,
like in Files or Safari.


38
00:02:57.144 --> 00:02:59.913 line:-2 align:center
The title is moved to the leading position
in this styling.


39
00:03:00,948 --> 00:03:04,651 line:0
The editor style is optimized for
when the primary function


40
00:03:04,685 --> 00:03:06,486 line:0
is document editing.


41
00:03:06,520 --> 00:03:10,724 align:center
Just like the browser style,
the title is leading aligned.


42
00:03:10,757 --> 00:03:15,462 align:center
Editor UIs are often a destination,
such as after selecting a document


43
00:03:15,495 --> 00:03:17,164 align:center
with a document picker,


44
00:03:17,197 --> 00:03:21,201 line:0
and so present
a back button for easy access to that UI.


45
00:03:23,103 --> 00:03:27,908 line:-2
The browser and editor styles both free up
a lot of space in the center of the bar.


46
00:03:29,543 --> 00:03:33,547 line:0
iOS 16 takes advantage
of this liberated space


47
00:03:33,580 --> 00:03:37,050 align:center
by allowing you to place
additional controls in this region.


48
00:03:38,852 --> 00:03:41,655 line:0
Center items are part
of a suite of changes


49
00:03:41,688 --> 00:03:44,925 align:center
to take better advantage
of screen real estate,


50
00:03:44,958 --> 00:03:48,428 align:center
and include support for
UIBarButtonItemGroup,


51
00:03:48,462 --> 00:03:51,265 align:center
customization support, and overflow.


52
00:03:52,666 --> 00:03:55,936 line:0
Overflow support is available
in all modes,


53
00:03:55,969 --> 00:03:58,605 align:center
and allows the navigator style


54
00:03:58,639 --> 00:04:01,175 align:center
to indirectly support
center items as well.


55
00:04:02.676 --> 00:04:07.981 line:-2 align:center
Individual controls continue
to be specified as UIBarButtonItems,


56
00:04:08.015 --> 00:04:11.785 line:-2 align:center
but now are organized
as UIBarButtonItemGroups.


57
00:04:12,519 --> 00:04:17,257 line:-2
This allows for denser presentation
when space is at a premium.


58
00:04:17.291 --> 00:04:23.997 line:-2 align:center
In this example, there are 5 items
in the bar, consisting of 4 groups.


59
00:04:26.633 --> 00:04:30.904 line:-2 align:center
The first group contains
a single bar button item,


60
00:04:30.938 --> 00:04:34.041 line:-1 align:center
so this example uses a convenience method


61
00:04:34.074 --> 00:04:39.046 line:-2 align:center
of UIBarButtonItem,
creatingFixedGroup(), to create it.


62
00:04:40.447 --> 00:04:43.350 line:-2 align:center
If you need
a fixed group with more than 1 item,


63
00:04:43.383 --> 00:04:46.653 line:-2 align:center
you can use
the UIBarButtonItemGroup method instead.


64
00:04:47,788 --> 00:04:50,958 line:-2
Fixed groups
always appear first in the bar,


65
00:04:50.991 --> 00:04:54.795 line:-2 align:center
and cannot be removed
or moved by customization.


66
00:04:54.828 --> 00:04:58.866 line:-1 align:center
The draw group contains a single item,


67
00:04:58.899 --> 00:05:02.169 line:-1 align:center
so it also uses a convenience API,


68
00:05:02,202 --> 00:05:06,840 line:-2
creatingMovableGroup
(customizationIdentifier).


69
00:05:06,874 --> 00:05:11,912 line:-2
Like fixed groups, movable groups
cannot be removed, but can be moved.


70
00:05:13.113 --> 00:05:16.583 line:-2 align:center
Because of this,
they require a customizationIdentifier


71
00:05:16,617 --> 00:05:20,220 line:-2
so their position
can be tracked and saved.


72
00:05:20,254 --> 00:05:22,756 line:-2
If you need a group
with more than one item,


73
00:05:22.789 --> 00:05:25.726 line:-2 align:center
you can use the UIBarButtonItemGroup
method instead.


74
00:05:28.395 --> 00:05:32.499 line:-2 align:center
The shapes group contains multiple items,
and so uses


75
00:05:32.533 --> 00:05:35.836 line:-2 align:center
the UIBarButtonItemGroup API
to create the group.


76
00:05:37,437 --> 00:05:39,706 line:-2
This group
should be movable within the bar,


77
00:05:39,740 --> 00:05:43,810 line:-2
as well as removable,
and so is created as an optional group.


78
00:05:45,012 --> 00:05:48,582 line:-2
This group also specifies
a representativeItem,


79
00:05:48,615 --> 00:05:52,486 line:-2
allowing UIKit to collapse the group
to save space when necessary.


80
00:05:53.820 --> 00:05:58.592 line:-2 align:center
The representativeItem does not specify
an action, further allowing UIKit


81
00:05:58.625 --> 00:06:02.496 line:-2 align:center
to synthesize a menu allowing selection
of the items in the group.


82
00:06:05,499 --> 00:06:10,370 line:-2
When the customization UI is invoked,
UIKit automatically applies


83
00:06:10,404 --> 00:06:15,342 line:-2
the rules you've specified based
on how you've created your groups.


84
00:06:15,375 --> 00:06:18,912 line:-2
While fixed and movable groups
must stay in the bar,


85
00:06:18,946 --> 00:06:22,282 line:-2
optional groups can be added
or removed in any number.


86
00:06:23.450 --> 00:06:25.719 line:-1 align:center
UIKit will try collapsing groups


87
00:06:25,752 --> 00:06:29,189 line:-2
to keep as much functionality as possible
in the bar,


88
00:06:29.223 --> 00:06:33.427 line:-2 align:center
but if space isn't available,
extra items will be moved to overflow.


89
00:06:34,328 --> 00:06:40,067 line:-2
The overflow menu contains any items
that are part of the customization


90
00:06:40,100 --> 00:06:42,302 line:-1
but could not be fit into the bar,


91
00:06:42.336 --> 00:06:44.671 line:-2 align:center
as well as the option
to customize the bar.


92
00:06:45.839 --> 00:06:50.978 line:-2 align:center
While UIKit will synthesize default
menu elements for each bar button item,


93
00:06:51.011 --> 00:06:55.916 line:-2 align:center
you have the option to customize
the menuRepresentation if you wish.


94
00:06:55,949 --> 00:06:59,887 line:-2
Finally, this example
enables customization


95
00:06:59,920 --> 00:07:01,688 line:-1
and adds the centerItemGroups.


96
00:07:02.823 --> 00:07:08.295 line:-2 align:center
You enable customization by setting
UINavigationItem.customizationIdentifier.


97
00:07:09,363 --> 00:07:14,101 line:-2
The customizationIdentifier
defines a unique customization of the bar,


98
00:07:14.134 --> 00:07:18.272 line:-2 align:center
so pick a string that won't conflict
with other customizations within your app.


99
00:07:19,840 --> 00:07:24,745 line:-2
UIKit automatically saves and restores
customizations based on this identifier.


100
00:07:25.779 --> 00:07:30.450 line:-2 align:center
Next, provide
the centerItemGroups themselves.


101
00:07:30,484 --> 00:07:33,253 line:-2
The first four groups
I've already covered.


102
00:07:34,621 --> 00:07:40,494 line:-2
The format group is an optional group
that isn't in the default customization,


103
00:07:40,527 --> 00:07:44,198 line:-2
and so this code
overrides the default value


104
00:07:44,231 --> 00:07:48,569 line:-2
of the isInDefaultCustomization
parameter to exclude it.


105
00:07:49,169 --> 00:07:52,573 line:-2
You can still use centerItemGroups
without setting


106
00:07:52,606 --> 00:07:59,546 line:-2
UINavigationItem.customizationIdentifier,
but customization will not be available.


107
00:07:59.580 --> 00:08:02.583 line:-1 align:center
In Mac Catalyst, the UINavigationBar


108
00:08:02.616 --> 00:08:06.019 line:-2 align:center
automatically translates its content
to NSToolbar.


109
00:08:06.954 --> 00:08:10.123 line:-2 align:center
The leading, center,
and trailing item groups


110
00:08:10,157 --> 00:08:14,561 line:-2
are added in order,
and the customization properties


111
00:08:14.595 --> 00:08:19.800 line:-2 align:center
of the center item groups are respected
when using NSToolbar customization.


112
00:08:21,101 --> 00:08:25,272 line:-2
All of the expected NSToolbar behaviors
are available,


113
00:08:25.305 --> 00:08:29.443 line:-2 align:center
as well as other properties
such as the title & window proxy.


114
00:08:30.544 --> 00:08:35.249 line:-2 align:center
All of this occurs by default
when you optimize for the Mac.


115
00:08:35,282 --> 00:08:40,120 line:-2
Next, letâ€™s focus in
on interactions that are powerful,


116
00:08:40.153 --> 00:08:43.056 line:-1 align:center
specifically when dealing with documents.


117
00:08:43.090 --> 00:08:47.828 line:-2 align:center
UINavigationBar now supports
adding a menu to the title view,


118
00:08:47.861 --> 00:08:54.134 line:-2 align:center
giving a central location to add actions
that operate on the content as a whole.


119
00:08:54.168 --> 00:08:57.538 line:-2 align:center
Additionally, you can add support
for the share sheet


120
00:08:57,571 --> 00:08:59,606 line:-1
and drag & drop from this menu.


121
00:09:00,374 --> 00:09:04,011 align:center
First, Iâ€™ll focus
on the menu items themselves.


122
00:09:04.044 --> 00:09:08.282 line:-2 align:center
Once enabled,
the default title menu offers 5 commands:


123
00:09:08,315 --> 00:09:13,854 line:-2
duplicate, move, rename, export,
and print.


124
00:09:13,887 --> 00:09:15,656 line:-1
These items are filtered


125
00:09:15,689 --> 00:09:20,027 line:-2
based on specific methods
in your responder chain.


126
00:09:20,060 --> 00:09:23,864 line:-2
UINavigationBar
has specific support for renaming,


127
00:09:23,897 --> 00:09:27,868 line:-2
and so it will also be included
if youâ€™ve implemented a renameDelegate.


128
00:09:30,103 --> 00:09:34,708 line:-2
To enable the title menu,
set the titleMenuProvider,


129
00:09:34.741 --> 00:09:38.078 line:-2 align:center
a closure that returns
the final menu to be displayed.


130
00:09:39.446 --> 00:09:43.383 line:-2 align:center
The closure is passed
an array of suggested elements.


131
00:09:43.417 --> 00:09:48.422 line:-2 align:center
You can use these as is,
filter them, or add your own.


132
00:09:48,455 --> 00:09:53,927 line:-2
In our example, we're adding
a single additional action to the menu.


133
00:09:53,961 --> 00:09:56,763 line:-1
Finally, you return the composed UIMenu.


134
00:09:58.398 --> 00:10:02.936 line:-2 align:center
The title menu also allows
sharing via the activity view controller


135
00:10:02.970 --> 00:10:04.671 line:-1 align:center
and support for drag & drop.


136
00:10:06.106 --> 00:10:10.711 line:-2 align:center
To enable these features, you provide
a UIDocumentProperties instance


137
00:10:10.744 --> 00:10:12.546 line:-1 align:center
that describes your document.


138
00:10:14.248 --> 00:10:18.585 line:-2 align:center
UIDocumentProperties represents
metadata about your document,


139
00:10:18,619 --> 00:10:21,121 line:-1
including a preview.


140
00:10:21.154 --> 00:10:23.924 line:-1 align:center
This example creates one with a URL,


141
00:10:23,957 --> 00:10:27,995 line:-2
allowing UIKit to fetch
the necessary metadata automatically.


142
00:10:29.329 --> 00:10:32.266 line:-2 align:center
To enable additional features,
this example creates


143
00:10:32.299 --> 00:10:34.968 line:-2 align:center
an NSItemProvider
to represent the document.


144
00:10:36.570 --> 00:10:40.607 line:-2 align:center
Set a dragItemsProvider
to enable drag & drop.


145
00:10:40.641 --> 00:10:47.181 line:-2 align:center
This closure is past a UIDragSession,
and returns an array of UIDragItems.


146
00:10:47.214 --> 00:10:50.417 line:-2 align:center
This example returns a single item
representing the document.


147
00:10:52,219 --> 00:10:56,123 line:-2
Setting a activityViewControllerProvider
enables sharing.


148
00:10:56.156 --> 00:11:00.360 line:-2 align:center
This closure configures and returns
a UIActivityViewController.


149
00:11:01,628 --> 00:11:04,164 line:-1
Finally, assign the filled-out object


150
00:11:04,198 --> 00:11:09,102 line:-2
to UINavigationItem.documentProperties,
and when the title is tapped,


151
00:11:09,136 --> 00:11:13,006 line:-2
UIKit presents the header
alongside other titleMenu items.


152
00:11:15,843 --> 00:11:18,745 line:-1
On Mac Catalyst, the suggested items


153
00:11:18,779 --> 00:11:22,082 line:-2
that would be passed
to the titleMenuProvider


154
00:11:22.115 --> 00:11:25.252 line:-1 align:center
already exist in the File menu.


155
00:11:25.285 --> 00:11:28.789 line:-2 align:center
Any items that you would have added
to the title menu


156
00:11:28.822 --> 00:11:31.158 line:-2 align:center
will need to be made available
by other means.


157
00:11:32.359 --> 00:11:36.630 line:-2 align:center
You can use
the UIMenuBuilder API to add these items,


158
00:11:36.663 --> 00:11:39.266 line:-1 align:center
or filter existing items as necessary.


159
00:11:40.267 --> 00:11:44.304 line:-2 align:center
If you specify document properties,
UIKit will automatically use


160
00:11:44.338 --> 00:11:48.041 line:-2 align:center
the URL provided
to manage the macOS proxy icon.


161
00:11:49.142 --> 00:11:53.180 line:-2 align:center
If you set the representedURL
for your windowScene manually,


162
00:11:53,213 --> 00:11:55,749 line:-1
that will supersede UIKit's management.


163
00:11:57,217 --> 00:12:01,588 line:-2
UIKit provides
two mechanisms to enable Rename.


164
00:12:01.622 --> 00:12:07.261 line:-2 align:center
Inline Rename is provided by setting
UINavigationItem.renameDelegate,


165
00:12:07,294 --> 00:12:11,732 line:-2
and provides a dedicated UI
for editing the title on all platforms.


166
00:12:12.966 --> 00:12:16.403 line:-2 align:center
When completed, the resulting name
is passed to the delegate.


167
00:12:17,504 --> 00:12:22,342 line:-2
Alternatively you can take full control
over the rename experience


168
00:12:22.376 --> 00:12:28.649 line:-2 align:center
by implementing UIResponder.rename(_:)
and providing whatever UI you prefer.


169
00:12:30,150 --> 00:12:34,655 line:-2
On iOS, the UINavigationBar
provides the rename UI


170
00:12:34,688 --> 00:12:37,257 line:-1
directly within the title view.


171
00:12:37,291 --> 00:12:41,428 line:-2
On macOS, the rename UI is provided
by the window's title


172
00:12:41.461 --> 00:12:44.464 line:-2 align:center
when the navigation bar is hosted
in an NSToolbar.


173
00:12:45.432 --> 00:12:50.470 line:-2 align:center
To implement inline rename, conform
to the UINavigationItemRenameDelegate


174
00:12:50.504 --> 00:12:56.076 line:-2 align:center
protocol and set
the navigation item's renameDelegate.


175
00:12:56,109 --> 00:13:01,815 line:-2
There is only one required method,
navigationItem(_:didEndRenamingWith:),


176
00:13:01.849 --> 00:13:04.985 line:-2 align:center
that is used to receive
the title accepted by the user.


177
00:13:06,253 --> 00:13:09,556 line:-2
For file based apps,
UIDocumentBrowserViewController


178
00:13:09,590 --> 00:13:11,258 line:-1
now offers a renamed API.


179
00:13:12.459 --> 00:13:16.864 line:-2 align:center
Search is how many users
find their most important data,


180
00:13:16.897 --> 00:13:23.170 line:-2 align:center
and advances in iOS 16 make it easier
to provide an excellent search experience.


181
00:13:23.203 --> 00:13:27.307 line:-2 align:center
The first thing to note is that search
now takes up less space


182
00:13:27.341 --> 00:13:31.111 line:-2 align:center
by being in line in the navigation bar
on iPadOS


183
00:13:31.144 --> 00:13:33.881 line:-1 align:center
and the toolbar on macOS.


184
00:13:33,914 --> 00:13:36,984 line:-2
On iPadOS,
you can restore the old behavior


185
00:13:37,017 --> 00:13:40,954 line:-2
with UINavigationItem
.preferredSearchBarPlacement.


186
00:13:40.988 --> 00:13:44.358 line:-2 align:center
Additionally,
the search bar can collapse to a button


187
00:13:44,391 --> 00:13:46,994 line:-1
to grant more space for other controls.


188
00:13:47,728 --> 00:13:51,298 line:-2
When search is activated,
search suggestions appear,


189
00:13:51,331 --> 00:13:55,736 line:-2
and they can be updated
alongside the updating search query,


190
00:13:55.769 --> 00:14:00.007 line:-2 align:center
allowing you the opportunity
to assist your users in their search.


191
00:14:00.807 --> 00:14:04.211 line:-2 align:center
Next, I'll describe the code
needed to setup search suggestions.


192
00:14:06,013 --> 00:14:11,685 line:-2
To manage search suggestions,
conform to UISearchResultsUpdating


193
00:14:11.718 --> 00:14:16.056 line:-2 align:center
and set your searchController's
searchResultsUpdater.


194
00:14:16.089 --> 00:14:19.927 line:-2 align:center
This allows you to update
suggestions as the query changes


195
00:14:19.960 --> 00:14:22.663 line:-2 align:center
and to act
on a selected search suggestion.


196
00:14:24,097 --> 00:14:29,303 line:-2
When the query changes,
updateSearchResults(for:) is called,


197
00:14:29.336 --> 00:14:31.805 line:-1 align:center
allowing you to update search suggestions.


198
00:14:33,040 --> 00:14:36,643 line:-1
What suggestions to provide is up to you.


199
00:14:36.677 --> 00:14:39.780 line:-2 align:center
Setting an empty array
will clear the suggestions UI.


200
00:14:41.114 --> 00:14:46.486 line:-2 align:center
UIKit provides UISearchSuggestionItem
to specify suggestion content.


201
00:14:48.021 --> 00:14:51.491 line:-2 align:center
To respond
to the selection of a suggestion,


202
00:14:51,525 --> 00:14:55,996 line:-2
implement
updateSearchResults(for:selecting:).


203
00:14:56,029 --> 00:14:59,333 line:-2
This method passes
the selected search suggestion,


204
00:14:59.366 --> 00:15:02.369 line:-1 align:center
so you may react to it appropriately.


205
00:15:02.402 --> 00:15:07.007 line:-2 align:center
In this example I update the search
by replacing the current query


206
00:15:07,040 --> 00:15:10,444 line:-2
with the one specified
by the search suggestion.


207
00:15:10.477 --> 00:15:13.947 line:-2 align:center
UISearchTextField also has
searchSuggestions,


208
00:15:13.981 --> 00:15:16.850 line:-2 align:center
so if you prefer to use that class
on its own,


209
00:15:16.884 --> 00:15:19.753 line:-2 align:center
you can still implement
search suggestions.


210
00:15:19.786 --> 00:15:24.558 line:-2 align:center
But if you are using UISearchController,
you should use its property instead.


211
00:15:25,759 --> 00:15:29,463 line:-1
In iOS 16, UIKit provides new API


212
00:15:29.496 --> 00:15:33.233 line:-2 align:center
to help you
bring more productivity to your users.


213
00:15:33,267 --> 00:15:36,570 line:-2
Bring more discoverability
to your advanced features


214
00:15:36,603 --> 00:15:38,772 line:-1
with center items and the title menu.


215
00:15:39,940 --> 00:15:43,177 line:-2
Improve your document support
by providing drag & drop


216
00:15:43.210 --> 00:15:46.113 line:-2 align:center
and sharing directly
from the navigation bar.


217
00:15:46.980 --> 00:15:52.920 line:-2 align:center
Make it easier and faster to search
by providing search suggestions


218
00:15:52.953 --> 00:15:56.190 line:-2 align:center
and get a great Mac experience
right out of the box,


219
00:15:56.223 --> 00:15:58.192 line:-1 align:center
with nearly zero effort.


220
00:15:58.225 --> 00:15:59.927 line:-1 align:center
Thanks for watching this video.


221
00:15:59.960 --> 00:16:03.864 line:-2 align:center
I can't wait to see how you
enhance your apps to be desktop class!


222
00:16:03,897 --> 00:16:05,966 line:-1
[spacey music]

