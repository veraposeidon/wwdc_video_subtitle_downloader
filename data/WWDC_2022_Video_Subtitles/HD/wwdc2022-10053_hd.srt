2
00:00:00.000 --> 00:00:03.070 line:-1 position:50%
♪ instrumental hip hop music ♪


3
00:00:03,070 --> 00:00:09,543 line:0 size:2% align:right
♪


4
00:00:09,543 --> 00:00:11,612 line:-1
Hello.
My name is Ashwath


5
00:00:11,612 --> 00:00:14,548 line:-1
and I am an engineer
with the Education team.


6
00:00:14.548 --> 00:00:16.283 line:-1 position:50%
Today I am excited
to talk to you


7
00:00:16,283 --> 00:00:19,419 line:-1
about Sign in with Apple
at Work & School.


8
00:00:19.419 --> 00:00:20.988 line:-1 position:50%
In this presentation,
I will be covering


9
00:00:20.988 --> 00:00:24.825 line:-1 position:50%
the key features that we are
introducing this fall.


10
00:00:24,825 --> 00:00:25,993 line:-1
I will first walk you through


11
00:00:25.993 --> 00:00:30.631 line:-1 position:50%
what Sign in with Apple at Work
& School is and how it works.


12
00:00:30.631 --> 00:00:32.432 line:-1 position:50%
Then I will talk
about the Roster API


13
00:00:32,432 --> 00:00:36,169 line:-1
and specifics about
how you can make use of it.


14
00:00:36.169 --> 00:00:39.139 line:-1 position:50%
And finally, I will be talking
about access management,


15
00:00:39,139 --> 00:00:42,876 line:-1
where I discuss how IT admins
can manage access


16
00:00:42.876 --> 00:00:45.245 line:-1 position:50%
to Sign in with Apple
at Work & School


17
00:00:45,245 --> 00:00:49,182 line:-1
and the Roster API
on behalf of their organization.


18
00:00:49.182 --> 00:00:51.785 line:-1 position:50%
Let me begin
by covering two concepts


19
00:00:51,785 --> 00:00:54,488 line:-1
you may be familiar with
but are important to review


20
00:00:54,488 --> 00:00:56,156 line:-1
for this session.


21
00:00:56,156 --> 00:00:58,425 line:-1
The first is Sign in with Apple.


22
00:00:58.425 --> 00:01:00.827 line:-1 position:50%
Sign in with Apple
is a fast and easy way


23
00:01:00,827 --> 00:01:04,731 line:-1
for users to sign in to apps
with their Apple ID.


24
00:01:04.731 --> 00:01:07.000 line:-1 position:50%
Users are able to create
an account within your app


25
00:01:07.000 --> 00:01:10.037 line:-1 position:50%
with a simple tap.


26
00:01:10.037 --> 00:01:12.739 line:-1 position:50%
The second concept
is Managed Apple IDs.


27
00:01:12,739 --> 00:01:14,675 line:-1
Like Apple IDs,
Managed Apple IDs


28
00:01:14,675 --> 00:01:16,810 line:-1
are used to personalize
a device.


29
00:01:16,810 --> 00:01:20,881 line:-1
They're also used to access
Apple apps and services.


30
00:01:20.881 --> 00:01:23.183 line:-1 position:50%
Unlike Apple IDs,
Managed Apple IDs


31
00:01:23.183 --> 00:01:26.453 line:-1 position:50%
are owned by an organization
and managed through


32
00:01:26.453 --> 00:01:30.023 line:-1 position:50%
Apple School Manager
or Apple Business Manager.


33
00:01:30,023 --> 00:01:31,525 line:-1
With those definitions in mind,


34
00:01:31,525 --> 00:01:34,061 line:-1
I am excited to share
that Sign in with Apple


35
00:01:34.061 --> 00:01:37.297 line:-1 position:50%
has now been extended
to support Managed Apple IDs.


36
00:01:37.297 --> 00:01:39.999 line:-1 position:50%
Now you can get the benefits
of a fast and easy


37
00:01:39,999 --> 00:01:42,269 line:-1
sign-in experience
of Sign in with Apple,


38
00:01:42.269 --> 00:01:44.237 line:-1 position:50%
but with the management
capabilities


39
00:01:44,237 --> 00:01:46,006 line:-1
of Managed Apple IDs.


40
00:01:46.006 --> 00:01:47.407 line:-1 position:50%
To showcase the user experience


41
00:01:47,407 --> 00:01:49,509 line:-1
of Sign in with Apple
at Work & School,


42
00:01:49.509 --> 00:01:52.379 line:-1 position:50%
let us take a look
at an example.


43
00:01:52,379 --> 00:01:54,915 position:50%
Here is the login screen
for Slack.


44
00:01:54,915 --> 00:01:56,149 line:0
To use Sign in with Apple,


45
00:01:56,149 --> 00:01:59,953 position:50%
a user can just tap
Continue with Apple.


46
00:01:59,953 --> 00:02:03,190 line:0
When using an Apple ID,
they will then see


47
00:02:03,190 --> 00:02:06,193 line:0
this welcome screen
for Sign in with Apple.


48
00:02:06,193 --> 00:02:09,663 line:0
On the other hand, if they are
using a Managed Apple ID,


49
00:02:09,663 --> 00:02:11,198 position:50%
they will see
the welcome screen


50
00:02:11,198 --> 00:02:15,102 position:50%
for Sign in with Apple
at Work & School.


51
00:02:15,102 --> 00:02:18,038 position:50%
You will notice a difference
in the welcome screen.


52
00:02:18,038 --> 00:02:19,639 line:0
What do we mean when we say


53
00:02:19,639 --> 00:02:23,610 position:50%
we make it easy for apps
to provide access control?


54
00:02:23,610 --> 00:02:26,747 line:-1
Let's take a look at an example.


55
00:02:26,747 --> 00:02:28,415 line:0
When using their personal
Apple ID


56
00:02:28,415 --> 00:02:29,950 position:50%
with Sign in with Apple,


57
00:02:29,950 --> 00:02:32,619 line:0
the user sees
the account creation screen


58
00:02:32,619 --> 00:02:34,855 line:0
where they may
edit their name


59
00:02:34,855 --> 00:02:38,825 position:50%
and choose whether to share
or hide their email.


60
00:02:38,825 --> 00:02:41,094 line:0
But in an organizational
context,


61
00:02:41,094 --> 00:02:44,965 line:0
it is important for the app
to understand who is logging in


62
00:02:44,965 --> 00:02:47,968 line:0
and what level of access
to provide them.


63
00:02:47,968 --> 00:02:50,437 position:50%
In the example
shown on this screen,


64
00:02:50,437 --> 00:02:53,907 position:50%
the user is signing in
to Slack at work.


65
00:02:53,907 --> 00:02:55,542 line:0
In order to know
which Slack channels


66
00:02:55,542 --> 00:02:58,045 line:0
this employee should be
allowed to join,


67
00:02:58,045 --> 00:03:01,448 line:0
Slack needs to know
which user is signing in.


68
00:03:01,448 --> 00:03:05,685 position:50%
So this is an example of Slack
providing access control


69
00:03:05,685 --> 00:03:09,022 position:50%
using the name and email
shared with their app


70
00:03:09,022 --> 00:03:12,392 position:50%
when using Sign in with Apple
at Work & School.


71
00:03:12,392 --> 00:03:16,463 line:-1
So this is what the user sees,
but what does this mean for you?


72
00:03:16.463 --> 00:03:17.831 line:-1 position:50%
It means when a user


73
00:03:17.831 --> 00:03:20.400 line:-1 position:50%
uses Sign in with Apple
at Work & School,


74
00:03:20,400 --> 00:03:25,272 line:-1
the name and email fields
will always be accessible.


75
00:03:25.272 --> 00:03:29.076 line:-1 position:50%
If you are a developer
working on a client-side app,


76
00:03:29.076 --> 00:03:31.244 line:-1 position:50%
here's a look
at some example code


77
00:03:31,244 --> 00:03:34,281 line:-1
showing the authorization
controller.


78
00:03:34,281 --> 00:03:37,417 line:-1
On a successful authorization,
the highlighted statements


79
00:03:37.417 --> 00:03:42.355 line:-1 position:50%
indicate the full name and email
received by your app.


80
00:03:42.355 --> 00:03:45.025 line:-1 position:50%
This assumes that
the request for authorization


81
00:03:45.025 --> 00:03:49.696 line:-1 position:50%
included the scopes
for the full name and email.


82
00:03:49.696 --> 00:03:51.164 line:-1 position:50%
If you are a developer


83
00:03:51.164 --> 00:03:54.000 line:-1 position:50%
supporting Sign in with Apple
on the web,


84
00:03:54,000 --> 00:03:56,236 line:-1
here's a look
at some example code


85
00:03:56,236 --> 00:04:01,241 line:-1
that uses the signIn method to
start the authorization process.


86
00:04:01,241 --> 00:04:03,310 line:-1
Upon successful authorization,


87
00:04:03,310 --> 00:04:07,114 line:-1
the server returns the response
to the data object.


88
00:04:07.114 --> 00:04:11.084 line:-1 position:50%
That data object
looks like this.


89
00:04:11.084 --> 00:04:13.753 line:-1 position:50%
The highlighted fields
contain the email


90
00:04:13.753 --> 00:04:18.258 line:-1 position:50%
and full name
of the user signing in.


91
00:04:18.258 --> 00:04:21.461 line:-1 position:50%
It is important to note
a few points here.


92
00:04:21.461 --> 00:04:24.564 line:-1 position:50%
In this release, Sign in
with Apple at Work & School


93
00:04:24,564 --> 00:04:27,400 line:-1
uses the primary
Managed Apple ID


94
00:04:27.400 --> 00:04:30.770 line:-1 position:50%
that is signed in on the device.


95
00:04:30.770 --> 00:04:33.373 line:-1 position:50%
Even though the example screens
that we showed you


96
00:04:33.373 --> 00:04:36.243 line:-1 position:50%
were for the login flow
on the device,


97
00:04:36,243 --> 00:04:39,212 line:-1
the web flow is supported
as well.


98
00:04:39,212 --> 00:04:42,716 line:-1
Some accounts may not have
email addresses provided.


99
00:04:42,716 --> 00:04:45,919 line:-1
For example, schools may not
assign email addresses


100
00:04:45.919 --> 00:04:47.787 line:-1 position:50%
to younger students.


101
00:04:47.787 --> 00:04:50.790 line:-1 position:50%
Let's see what the account
creation screen looks like


102
00:04:50,790 --> 00:04:54,895 line:-1
in this scenario where
an email address is not present.


103
00:04:54,895 --> 00:04:59,099 position:50%
This user, Fatima Silva,
does not have an email address,


104
00:04:59,099 --> 00:05:01,201 line:0
so only their full name
is present


105
00:05:01,201 --> 00:05:04,004 position:50%
on the account creation screen.


106
00:05:04,004 --> 00:05:06,439 line:-1
If you have already implemented
Sign in with Apple,


107
00:05:06.439 --> 00:05:08.742 line:-1 position:50%
there is no work
needed from your end


108
00:05:08,742 --> 00:05:11,378 line:-1
to add support
for Managed Apple IDs.


109
00:05:11,378 --> 00:05:13,480 position:50%
If you haven't implemented
support yet,


110
00:05:13,480 --> 00:05:15,949 position:50%
I would highly suggest
taking a look


111
00:05:15,949 --> 00:05:18,952 position:50%
at the "Get the most out
of Sign in with Apple" session


112
00:05:18,952 --> 00:05:21,021 position:50%
from WWDC2020


113
00:05:21,021 --> 00:05:24,491 line:0
and the "Enhance your Sign in
with Apple experience" session


114
00:05:24,491 --> 00:05:26,493 line:0
from this year.


115
00:05:26,493 --> 00:05:29,196 line:-1
That was Sign in with Apple
at Work & School,


116
00:05:29,196 --> 00:05:31,998 line:-1
which brings the fast and easy
sign-in experience


117
00:05:31.998 --> 00:05:35.202 line:-1 position:50%
of Sign in with Apple
to Managed Apple IDs.


118
00:05:35,202 --> 00:05:37,804 line:-1
Now let's dive into
the Roster API.


119
00:05:37,804 --> 00:05:39,706 line:-1
But before jumping into
any specifics,


120
00:05:39.706 --> 00:05:42.609 line:-1 position:50%
let's consider
the following scenario.


121
00:05:42.609 --> 00:05:45.412 line:-1 position:50%
You're a developer
in the education space.


122
00:05:45,412 --> 00:05:48,048 line:-1
Your app is being used
by school districts.


123
00:05:48,048 --> 00:05:51,851 line:-1
You have implemented support for
Sign in with Apple in your app.


124
00:05:51.851 --> 00:05:52.919 line:-1 position:50%
That's great!


125
00:05:52,919 --> 00:05:56,590 line:-1
Students, teachers, and staff
can use their Managed Apple IDs


126
00:05:56,590 --> 00:05:58,625 line:-1
to log in to your app.


127
00:05:58,625 --> 00:06:01,161 line:-1
In this scenario,
your app allows teachers


128
00:06:01,161 --> 00:06:02,929 line:-1
to share assignments
and announcements


129
00:06:02,929 --> 00:06:04,297 line:-1
with their students.


130
00:06:04,297 --> 00:06:06,566 line:-1
To support this,
IT administrators


131
00:06:06.566 --> 00:06:10.570 line:-1 position:50%
need to enter students,
teachers, and classes


132
00:06:10,570 --> 00:06:14,908 line:-1
into your app prior to the start
of the school year.


133
00:06:14,908 --> 00:06:18,178 line:-1
For a school with hundreds
or thousands of students,


134
00:06:18,178 --> 00:06:20,180 line:-1
creating these records by hand


135
00:06:20.180 --> 00:06:22.549 line:-1 position:50%
would quickly become
a time-consuming


136
00:06:22.549 --> 00:06:24.718 line:-1 position:50%
and tedious process.


137
00:06:24,718 --> 00:06:28,355 line:-1
We've created the Roster API
to address this problem.


138
00:06:28,355 --> 00:06:31,591 line:-1
The Roster API provides
programmatic access


139
00:06:31,591 --> 00:06:34,194 line:-1
to resources
like users and classes


140
00:06:34.194 --> 00:06:36.196 line:-1 position:50%
in Apple School Manager.


141
00:06:36,196 --> 00:06:39,165 line:-1
This allows an IT admin
to automate the process


142
00:06:39,165 --> 00:06:42,669 line:-1
of importing this information
to your app.


143
00:06:42.669 --> 00:06:47.374 line:-1 position:50%
These resources are defined
in the form of REST endpoints.


144
00:06:47,374 --> 00:06:50,377 line:-1
This data can be
accessed by your app


145
00:06:50.377 --> 00:06:53.346 line:-1 position:50%
after the IT admin
has granted permission


146
00:06:53.346 --> 00:06:57.350 line:-1 position:50%
through a successful OAuth 2.0
authorization.


147
00:06:57,350 --> 00:07:00,120 line:-1
The Administrator
and Site Manager accounts


148
00:07:00,120 --> 00:07:01,521 line:-1
in Apple School Manager


149
00:07:01,521 --> 00:07:06,993 line:-1
can manage which apps
are able to access the data.


150
00:07:06.993 --> 00:07:08.328 line:-1 position:50%
As part of this release,


151
00:07:08.328 --> 00:07:10.730 line:-1 position:50%
we have created
a standardized way


152
00:07:10.730 --> 00:07:14.834 line:-1 position:50%
for apps to request access
to organizational data.


153
00:07:14,834 --> 00:07:18,305 line:-1
We call this
Organizational Data Sharing.


154
00:07:18,305 --> 00:07:20,507 line:-1
We wanted to follow
industry standards


155
00:07:20,507 --> 00:07:23,476 line:-1
when it comes
to UI design patterns


156
00:07:23,476 --> 00:07:28,214 line:-1
and choice of technology
so developer adoption is easy.


157
00:07:28,214 --> 00:07:32,519 line:-1
So we created an authorization
flow using OAuth 2.0,


158
00:07:32,519 --> 00:07:37,023 line:-1
which includes using scopes
and asking the IT admin


159
00:07:37,023 --> 00:07:40,527 line:-1
to consent to sharing
their organizational data.


160
00:07:40,527 --> 00:07:43,330 line:-1
Here is what it looks like.


161
00:07:43.330 --> 00:07:46.999 line:-1 position:50%
The consent screen provides
information on which app


162
00:07:46.999 --> 00:07:50.303 line:-1 position:50%
is requesting access
to the organization's data


163
00:07:50,303 --> 00:07:54,107 line:-1
and what data the app
is requesting access to.


164
00:07:54.107 --> 00:07:57.110 line:-1 position:50%
Looking more closely,
the consent screen


165
00:07:57.110 --> 00:08:00.213 line:-1 position:50%
contains information
on the requestor --


166
00:08:00.213 --> 00:08:04.050 line:-1 position:50%
which represents the app
requesting access to the data


167
00:08:04.050 --> 00:08:06.486 line:-1 position:50%
made available by
Apple School Manager;


168
00:08:06,486 --> 00:08:08,888 line:-1
in this case, the requesting app
is Quizzler --


169
00:08:08.888 --> 00:08:11.624 line:-1 position:50%
and the scopes,
which represent the data


170
00:08:11.624 --> 00:08:14.327 line:-1 position:50%
that the app
will have access to.


171
00:08:14.327 --> 00:08:17.097 line:-1 position:50%
In this case,
once the IT admin consents,


172
00:08:17,097 --> 00:08:19,165 line:-1
Quizzler will be able to access


173
00:08:19.165 --> 00:08:24.738 line:-1 position:50%
all user and class information
for this organization.


174
00:08:24.738 --> 00:08:27.240 line:-1 position:50%
What does your implementation
journey look like?


175
00:08:27.240 --> 00:08:30.643 line:-1 position:50%
The first step is to register
in the developer portal,


176
00:08:30,643 --> 00:08:33,279 line:-1
which involves
requesting scopes.


177
00:08:33.279 --> 00:08:37.050 line:-1 position:50%
The next step is to request
consent from the IT admin


178
00:08:37,050 --> 00:08:39,352 line:-1
to share the data with your app


179
00:08:39,352 --> 00:08:42,689 line:-1
through the OAuth 2.0
authorization flow.


180
00:08:42.689 --> 00:08:46.259 line:-1 position:50%
Finally, your app queries
the Roster API endpoints


181
00:08:46,259 --> 00:08:48,395 line:-1
to fetch the data.


182
00:08:48,395 --> 00:08:51,464 line:-1
Let us take a look
at each of these steps.


183
00:08:51,464 --> 00:08:55,034 line:-1
To request scopes,
visit the Developer portal.


184
00:08:55,034 --> 00:08:58,638 line:-1
Under the Certificates,
Identifiers & Profiles page,


185
00:08:58,638 --> 00:09:00,540 line:-1
click on Configure


186
00:09:00,540 --> 00:09:03,843 line:-1
under Account & Organizational
Data Sharing.


187
00:09:03,843 --> 00:09:08,815 line:-1
In the next step, click on
"Set up a configuration."


188
00:09:08,815 --> 00:09:12,218 line:-1
Choose the primary app ID
from the drop-down


189
00:09:12,218 --> 00:09:15,955 line:-1
and hit Continue.


190
00:09:15,955 --> 00:09:18,691 line:-1
In the additional configuration
details page,


191
00:09:18,691 --> 00:09:21,928 line:-1
under Organizational Data
Sharing Scopes,


192
00:09:21.928 --> 00:09:24.063 line:-1 position:50%
choose the scopes desired.


193
00:09:24,063 --> 00:09:28,735 line:-1
Right now, we offer two:
user access and class access.


194
00:09:28,735 --> 00:09:32,405 line:-1
Ensure return URLs
are configured for your app.


195
00:09:32.405 --> 00:09:35.942 line:-1 position:50%
This step is important
as the return URLs will be used


196
00:09:35.942 --> 00:09:39.045 line:-1 position:50%
in the OAuth 2.0
authorization flow.


197
00:09:39.045 --> 00:09:41.414 line:-1 position:50%
Hit Continue.


198
00:09:41.414 --> 00:09:44.150 line:-1 position:50%
Finally, confirm
your configuration.


199
00:09:44,150 --> 00:09:47,320 line:-1
Now we're ready
for the next step.


200
00:09:47,320 --> 00:09:49,823 line:-1
The second step
in the implementation journey


201
00:09:49,823 --> 00:09:53,193 line:-1
is getting the access token
through the OAuth 2.0


202
00:09:53,193 --> 00:09:55,094 line:-1
authorization flow.


203
00:09:55,094 --> 00:09:57,797 line:-1
Let us look at this in detail.


204
00:09:57.797 --> 00:10:00.900 line:-1 position:50%
The IT admin
first logs in to your app.


205
00:10:00,900 --> 00:10:02,969 line:-1
The IT admin then
interacts with your app


206
00:10:02,969 --> 00:10:05,371 line:-1
to initiate
the authorization flow --


207
00:10:05,371 --> 00:10:07,941 line:-1
for example,
by clicking a button


208
00:10:07,941 --> 00:10:10,577 line:-1
named "Connect to Apple
School Manager."


209
00:10:10,577 --> 00:10:12,946 line:-1
This starts a sequence of events


210
00:10:12,946 --> 00:10:16,015 line:-1
following the OAuth 2.0
standard.


211
00:10:16.015 --> 00:10:19.118 line:-1 position:50%
The first step is
to execute a GET API call


212
00:10:19.118 --> 00:10:20.854 line:-1 position:50%
to the authorize endpoint.


213
00:10:20,854 --> 00:10:24,824 line:-1
Let us take a look
at the details of this request.


214
00:10:24,824 --> 00:10:28,061 line:-1
The request takes in
a few query parameters:


215
00:10:28.061 --> 00:10:30.530 line:-1 position:50%
the client_id,
the redirect_uri,


216
00:10:30,530 --> 00:10:34,167 line:-1
the state, response_type,
and scopes.


217
00:10:34,167 --> 00:10:36,102 line:-1
The response will be a redirect


218
00:10:36,102 --> 00:10:38,338 line:-1
to the Apple OAuth
consent screen


219
00:10:38.338 --> 00:10:41.875 line:-1 position:50%
to request access
from the IT admin.


220
00:10:41.875 --> 00:10:45.078 line:-1 position:50%
In this diagram,
we assume that the IT admin


221
00:10:45.078 --> 00:10:48.381 line:-1 position:50%
has authenticated
with their Managed Apple ID.


222
00:10:48.381 --> 00:10:49.449 line:-1 position:50%
If they have not,


223
00:10:49.449 --> 00:10:52.785 line:-1 position:50%
they would be prompted
to authenticate first.


224
00:10:52.785 --> 00:10:56.022 line:-1 position:50%
The IT admin is presented
with the consent screen


225
00:10:56.022 --> 00:10:58.224 line:-1 position:50%
to confirm that they
would like to share


226
00:10:58.224 --> 00:11:01.427 line:-1 position:50%
their organizational data
with your app.


227
00:11:01.427 --> 00:11:04.531 line:-1 position:50%
This is the same consent screen
that we saw earlier.


228
00:11:04,531 --> 00:11:08,735 line:-1
As a reminder,
it looks like this.


229
00:11:08,735 --> 00:11:11,671 line:-1
Once they click Allow,
your app is provided


230
00:11:11,671 --> 00:11:14,774 line:-1
with an authorization code
at your return URL


231
00:11:14.774 --> 00:11:19.112 line:-1 position:50%
that you registered
in the developer portal.


232
00:11:19.112 --> 00:11:23.016 line:-1 position:50%
The final step involves a POST
request to the token endpoint


233
00:11:23,016 --> 00:11:26,252 line:-1
to retrieve your app's
access token.


234
00:11:26,252 --> 00:11:29,589 line:-1
Let us see what this request
looks like.


235
00:11:29.589 --> 00:11:33.660 line:-1 position:50%
The request body is composed
of standard OAuth parameters


236
00:11:33,660 --> 00:11:38,998 line:-1
including the authorization code
received on your return URL.


237
00:11:38,998 --> 00:11:41,734 position:50%
The response would have
the access token,


238
00:11:41,734 --> 00:11:44,571 line:0
its expiration,
and the refresh token


239
00:11:44,571 --> 00:11:49,275 line:0
that is used to create a new
access token when it expires.


240
00:11:49,275 --> 00:11:51,644 line:-1
Let us take a look
at the request details


241
00:11:51.644 --> 00:11:55.949 line:-1 position:50%
to generate a new access token
using a refresh token.


242
00:11:55.949 --> 00:11:59.652 line:-1 position:50%
The request body is composed of
the standard OAuth parameters,


243
00:11:59.652 --> 00:12:02.655 line:-1 position:50%
including the refresh token,
and the response would have


244
00:12:02.655 --> 00:12:06.326 line:-1 position:50%
the access token
and its expiration.


245
00:12:06,326 --> 00:12:07,894 line:-1
After successfully completing


246
00:12:07.894 --> 00:12:10.296 line:-1 position:50%
the OAuth 2.0
authorization flow,


247
00:12:10.296 --> 00:12:12.632 line:-1 position:50%
your app now has
the access token,


248
00:12:12,632 --> 00:12:16,169 line:-1
which can be used to fetch
user and class information


249
00:12:16.169 --> 00:12:18.705 line:-1 position:50%
from the Roster API.


250
00:12:18.705 --> 00:12:20.673 line:-1 position:50%
As part of our current release,


251
00:12:20,673 --> 00:12:22,542 line:-1
we are introducing
five endpoints


252
00:12:22.542 --> 00:12:24.477 line:-1 position:50%
that the apps can query.


253
00:12:24,477 --> 00:12:27,814 line:-1
These include
fetching a list of classes,


254
00:12:27.814 --> 00:12:30.516 line:-1 position:50%
a list of users,
a specific class,


255
00:12:30,516 --> 00:12:34,320 line:-1
a specific user,
users in a class.


256
00:12:34,320 --> 00:12:36,656 line:-1
Let's walk through
a simple example flow


257
00:12:36,656 --> 00:12:40,793 line:-1
to demonstrate how you can
fetch users and classes.


258
00:12:40.793 --> 00:12:42.929 line:-1 position:50%
Your app server
can first retrieve


259
00:12:42.929 --> 00:12:46.466 line:-1 position:50%
the list of students,
teachers, and staff


260
00:12:46,466 --> 00:12:49,369 line:-1
by querying the users endpoint.


261
00:12:49,369 --> 00:12:53,973 line:-1
Let us take a look at the
request and response in detail.


262
00:12:53.973 --> 00:12:57.477 line:-1 position:50%
The users endpoint takes in
three query parameters.


263
00:12:57,477 --> 00:13:01,547 line:-1
The pageToken and limit
are pagination parameters,


264
00:13:01.547 --> 00:13:03.116 line:-1 position:50%
and an optional role parameter


265
00:13:03.116 --> 00:13:07.520 line:-1 position:50%
lets you query for students,
instructors, or staff.


266
00:13:07.520 --> 00:13:10.189 line:-1 position:50%
The request requires
the authorization header


267
00:13:10,189 --> 00:13:11,724 line:-1
with the access token


268
00:13:11.724 --> 00:13:14.227 line:-1 position:50%
generated from
the authorization flow.


269
00:13:14,227 --> 00:13:18,931 line:0
The response is a JSON payload
that includes a "users" key,


270
00:13:18,931 --> 00:13:20,967 line:0
which has the list of users;


271
00:13:20,967 --> 00:13:22,402 line:0
the "nextPageToken" key


272
00:13:22,402 --> 00:13:25,004 line:0
that is used to fetch
the next set of records,


273
00:13:25,004 --> 00:13:28,408 position:50%
and a "moreToFollow"
Boolean key that indicates


274
00:13:28,408 --> 00:13:32,712 position:50%
if there are any more records
to query.


275
00:13:32.712 --> 00:13:35.715 line:-1 position:50%
Let's take a look
at an example request.


276
00:13:35,715 --> 00:13:39,252 line:-1
The API call here is retrieving
a list of students


277
00:13:39.252 --> 00:13:42.622 line:-1 position:50%
with a maximum of 10 students
in the response.


278
00:13:42,622 --> 00:13:44,957 line:-1
This is the first API request,


279
00:13:44,957 --> 00:13:49,162 line:-1
so the pageToken query
parameter is not specified.


280
00:13:49,162 --> 00:13:51,831 line:-1
The response has
standard user information


281
00:13:51.831 --> 00:13:54.901 line:-1 position:50%
such as givenName,
familyName, etcetera,


282
00:13:54.901 --> 00:13:57.103 line:-1 position:50%
but I would like
to draw your attention


283
00:13:57.103 --> 00:14:00.239 line:-1 position:50%
to the stable unique identifier
for the user.


284
00:14:00,239 --> 00:14:03,242 line:-1
This is the same identifier
your app receives


285
00:14:03,242 --> 00:14:06,913 line:-1
when the user authenticates
with Sign in with Apple.


286
00:14:06.913 --> 00:14:09.082 line:-1 position:50%
The email address of the user


287
00:14:09,082 --> 00:14:12,952 line:-1
and their roles in the
organization are also included.


288
00:14:12,952 --> 00:14:15,088 position:50%
The nextPageToken
needs to be used


289
00:14:15,088 --> 00:14:18,291 line:0
in the subsequent API request
as a query parameter


290
00:14:18,291 --> 00:14:20,093 line:0
to fetch the next
set of students,


291
00:14:20,093 --> 00:14:24,330 line:0
since the moreToFollow key
is set to true.


292
00:14:24.330 --> 00:14:26.332 line:-1 position:50%
After querying
the users endpoint,


293
00:14:26,332 --> 00:14:30,002 line:-1
your app server can now query
the classes endpoint,


294
00:14:30,002 --> 00:14:32,371 line:-1
which gives you
the list of classes


295
00:14:32,371 --> 00:14:34,140 line:-1
for that particular
school district


296
00:14:34,140 --> 00:14:37,977 line:-1
and the relationship between
the class and the students


297
00:14:37,977 --> 00:14:40,780 line:-1
and teachers associated
with that class.


298
00:14:40.780 --> 00:14:45.985 line:-1 position:50%
Let us take a look at the
request and response in detail.


299
00:14:45,985 --> 00:14:48,187 line:-1
As part of
the get classes request,


300
00:14:48.187 --> 00:14:51.157 line:-1 position:50%
the request takes in
two query parameters:


301
00:14:51.157 --> 00:14:53.793 line:-1 position:50%
the pageToken
and the limit parameter,


302
00:14:53,793 --> 00:14:56,095 line:-1
both of which we saw before.


303
00:14:56,095 --> 00:14:59,799 line:-1
The headers are the same
as when querying users.


304
00:14:59.799 --> 00:15:02.101 line:-1 position:50%
The response is a JSON payload


305
00:15:02.101 --> 00:15:07.240 line:-1 position:50%
in which the "classes" key
holds the list of classes.


306
00:15:07,240 --> 00:15:10,143 line:-1
Let us take a look
at an example request.


307
00:15:10,143 --> 00:15:12,845 line:-1
This request retrieves
a list of classes


308
00:15:12,845 --> 00:15:17,416 line:-1
with a maximum of 200
to be included in the response.


309
00:15:17,416 --> 00:15:20,453 line:-1
The API request also has
the pageToken parameter,


310
00:15:20,453 --> 00:15:25,191 line:-1
which means it is in the middle
of fetching all classes.


311
00:15:25,191 --> 00:15:27,994 line:-1
The response has
standard class information


312
00:15:27,994 --> 00:15:31,130 line:-1
such as the name,
the class identifier, etcetera,


313
00:15:31.130 --> 00:15:33.232 line:-1 position:50%
but I would like
to draw your attention


314
00:15:33,232 --> 00:15:36,702 line:-1
to the list of instructor IDs
and student IDs


315
00:15:36,702 --> 00:15:38,838 line:-1
that belong to the class.


316
00:15:38.838 --> 00:15:40.773 line:-1 position:50%
That was the Roster API.


317
00:15:40.773 --> 00:15:42.742 line:-1 position:50%
With these endpoints,
your app can now


318
00:15:42,742 --> 00:15:45,178 line:-1
programmatically query
users and classes


319
00:15:45.178 --> 00:15:47.280 line:-1 position:50%
from Apple School Manager.


320
00:15:47.280 --> 00:15:51.484 line:-1 position:50%
Finally, I would like to talk
to you about access management.


321
00:15:51,484 --> 00:15:54,120 line:-1
It is vital to provide
management capabilities


322
00:15:54,120 --> 00:15:57,523 line:-1
to organizations using
Organizational Data Sharing


323
00:15:57.523 --> 00:16:00.359 line:-1 position:50%
and Sign in with Apple
at Work & School.


324
00:16:00,359 --> 00:16:04,163 line:-1
Let me explain what this means
in more detail.


325
00:16:04.163 --> 00:16:05.798 line:-1 position:50%
When using Sign in with Apple,


326
00:16:05.798 --> 00:16:09.335 line:-1 position:50%
users manage their own account
and it's solely up to them


327
00:16:09,335 --> 00:16:12,905 line:-1
to decide which apps
they choose to sign in to.


328
00:16:12.905 --> 00:16:15.741 line:-1 position:50%
But when using Sign in
with Apple at Work & School,


329
00:16:15,741 --> 00:16:20,179 line:-1
the IT admin at the organization
centrally manages access


330
00:16:20,179 --> 00:16:24,317 line:-1
on behalf of all the users
at that organization.


331
00:16:24,317 --> 00:16:27,687 line:-1
This is because the IT admin
is responsible for ensuring


332
00:16:27.687 --> 00:16:31.490 line:-1 position:50%
the safety and security
of the organization's data.


333
00:16:31,490 --> 00:16:34,894 line:-1
So, they must be empowered
to manage which apps


334
00:16:34,894 --> 00:16:38,998 line:-1
users are allowed to use Sign in
with Apple at Work & School,


335
00:16:38,998 --> 00:16:43,269 line:-1
and which apps are allowed to
use Organizational Data Sharing.


336
00:16:43,269 --> 00:16:46,772 line:-1
These access management
capabilities can be configured


337
00:16:46.772 --> 00:16:50.743 line:-1 position:50%
in Apple School Manager
and Apple Business Manager.


338
00:16:50.743 --> 00:16:53.045 line:-1 position:50%
For Sign in with Apple
at Work & School,


339
00:16:53.045 --> 00:16:54.947 line:-1 position:50%
we offer two modes.


340
00:16:54,947 --> 00:16:58,551 line:-1
The first mode
is "Allow all apps."


341
00:16:58,551 --> 00:17:01,587 line:-1
Let us see what this mode
looks like.


342
00:17:01.587 --> 00:17:05.892 line:-1 position:50%
Here, the IT admin is logged in
to Apple Business Manager.


343
00:17:05.892 --> 00:17:08.594 line:-1 position:50%
On selecting Access Management
from the sidebar


344
00:17:08,594 --> 00:17:10,863 line:-1
and choosing Sign in with Apple,


345
00:17:10,863 --> 00:17:13,566 line:-1
they are presented
with the two modes.


346
00:17:13,566 --> 00:17:17,737 line:-1
The "Allow all apps" mode lets
all users of the organization


347
00:17:17,737 --> 00:17:21,207 line:-1
log in to all apps that support
Sign in with Apple.


348
00:17:21,207 --> 00:17:25,211 line:-1
The second mode
is "Allow only certain apps."


349
00:17:25,211 --> 00:17:28,214 line:-1
Let us see what this mode
looks like.


350
00:17:28.214 --> 00:17:31.350 line:-1 position:50%
The "Allow only certain apps"
mode lets the IT admin


351
00:17:31,350 --> 00:17:34,353 line:-1
search for apps that support
Sign in with Apple


352
00:17:34.353 --> 00:17:36.355 line:-1 position:50%
to add to the list.


353
00:17:36.355 --> 00:17:39.258 line:-1 position:50%
Users will only be able
to use Sign in with Apple


354
00:17:39.258 --> 00:17:42.161 line:-1 position:50%
with the apps that have been
added to the list.


355
00:17:42.161 --> 00:17:45.765 line:-1 position:50%
If a user tries to log in to
an app that is not on the list,


356
00:17:45,765 --> 00:17:48,067 line:-1
they will see
an error message.


357
00:17:48,067 --> 00:17:50,336 line:-1
It is important to note
that this functionality


358
00:17:50.336 --> 00:17:52.772 line:-1 position:50%
is the same
for Apple School Manager,


359
00:17:52.772 --> 00:17:54.140 line:-1 position:50%
Apple Business Manager,


360
00:17:54,140 --> 00:17:56,709 line:-1
and Business Essentials
customers.


361
00:17:56,709 --> 00:17:59,278 line:-1
Similar to Sign in with Apple
at Work & School,


362
00:17:59,278 --> 00:18:02,848 line:-1
Organizational Data Sharing
also has the same two modes.


363
00:18:02,848 --> 00:18:04,917 line:-1
Let's take a look.


364
00:18:04,917 --> 00:18:08,220 line:-1
The "Allow only certain apps"
mode lets the IT admin


365
00:18:08.220 --> 00:18:11.390 line:-1 position:50%
search for supported apps
to add to the list.


366
00:18:11.390 --> 00:18:15.361 line:-1 position:50%
It is these apps that can access
user and class information


367
00:18:15,361 --> 00:18:17,196 line:-1
using the Roster API.


368
00:18:17.196 --> 00:18:19.165 line:-1 position:50%
In addition
to the consent screen,


369
00:18:19,165 --> 00:18:22,468 line:-1
this is a second layer
of control for the IT admin


370
00:18:22.468 --> 00:18:26.806 line:-1 position:50%
to manage which apps
can access organizational data.


371
00:18:26,806 --> 00:18:29,508 line:-1
With the release of Sign in
with Apple at Work & School,


372
00:18:29,508 --> 00:18:33,412 line:-1
now users in any environment
can use an Apple ID


373
00:18:33.412 --> 00:18:36.549 line:-1 position:50%
or a Managed Apple ID
to log in to your app.


374
00:18:36,549 --> 00:18:39,518 line:-1
If you haven't already
implemented Sign in with Apple,


375
00:18:39,518 --> 00:18:42,355 line:-1
I encourage you to do so.


376
00:18:42.355 --> 00:18:45.257 line:-1 position:50%
I would also highly encourage
you to adopt the Roster API


377
00:18:45.257 --> 00:18:47.626 line:-1 position:50%
if you are
in the education space.


378
00:18:47.626 --> 00:18:49.628 line:-1 position:50%
Implementing support
for Roster API


379
00:18:49.628 --> 00:18:52.298 line:-1 position:50%
will provide a seamless
onboarding experience


380
00:18:52.298 --> 00:18:57.870 line:-1 position:50%
for IT administrators, staff,
teachers, and students.


381
00:18:57,870 --> 00:19:00,072 line:-1
As always,
we love hearing from you.


382
00:19:00,072 --> 00:19:03,242 line:-1
So please submit
any feedback you may have.


383
00:19:03,242 --> 00:19:05,911 line:0
If you'd like to learn more,
I would highly suggest


384
00:19:05,911 --> 00:19:09,582 line:0
the "Get the most out of Sign in
with Apple" session from 2020


385
00:19:09,582 --> 00:19:13,052 line:0
and the "Enhance your Sign in
with Apple experience" session


386
00:19:13,052 --> 00:19:14,186 line:0
this year.


387
00:19:14,186 --> 00:19:15,588 line:-1
Thank you so much for watching


388
00:19:15,588 --> 00:19:17,823 line:-1
and we hope you enjoy
this year's WWDC.


389
00:19:17,823 --> 00:19:24,597 size:2% position:90% line:0
♪

