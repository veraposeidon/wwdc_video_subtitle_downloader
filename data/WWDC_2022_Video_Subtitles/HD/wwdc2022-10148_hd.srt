2
00:00:00.334 --> 00:00:06.340 line:-1 align:center
[upbeat music]


3
00:00:09.810 --> 00:00:12.346 line:-1 align:center
Justin Rennell: Hello and welcome to WWDC.


4
00:00:12,379 --> 00:00:16,350 line:-2
My name is Justin, and I'm an engineer
on the Apple Music development team.


5
00:00:16,383 --> 00:00:19,553 line:-2
Today I’m going to give an introduction
to MusicKit with a focus


6
00:00:19,586 --> 00:00:22,322 line:-2
on the fundamentals
of using Apple Music API.


7
00:00:22.356 --> 00:00:25.759 line:-2 align:center
In this session, I’ll provide an overview
of MusicKit client frameworks


8
00:00:25.792 --> 00:00:29.096 line:-2 align:center
and how they integrate
with the Apple Music API web service.


9
00:00:29.129 --> 00:00:32.566 line:-2 align:center
I'll explain how to get access
as a developer and specific details


10
00:00:32.599 --> 00:00:34.768 line:-1 align:center
about using Apple Music API, including:


11
00:00:34,801 --> 00:00:36,904 line:-1
Requesting content and resources,


12
00:00:36.937 --> 00:00:40.174 line:-2 align:center
using limits and pagination to work
with large resource collections,


13
00:00:40.207 --> 00:00:43.777 line:-2 align:center
and how to find content in the catalog
with the search endpoint.


14
00:00:43.810 --> 00:00:46.847 line:-2 align:center
Finally, I'll provide a look
at some personalized features available


15
00:00:46.880 --> 00:00:50.851 line:-2 align:center
for Apple Music subscribers and how
to provide access to them in your apps.


16
00:00:51,885 --> 00:00:55,689 line:-2
I'll start with a brief introduction
to MusicKit and Apple Music API.


17
00:00:55,722 --> 00:01:00,160 line:-2
MusicKit was first announced
at WWDC in 2017.


18
00:01:00,194 --> 00:01:02,796 line:-2
Since then, we have made improvements
that make integrating


19
00:01:02.829 --> 00:01:04.865 line:-1 align:center
with Apple Music easier and continue


20
00:01:04.898 --> 00:01:07.868 line:-2 align:center
to add support
for additional functionality.


21
00:01:07,901 --> 00:01:10,437 line:-2
MusicKit is a combination
of client frameworks


22
00:01:10.470 --> 00:01:12.439 line:-1 align:center
and the Apple Music API.


23
00:01:12,472 --> 00:01:14,541 line:-2
Used together,
they make it possible to add


24
00:01:14.575 --> 00:01:17.444 line:-1 align:center
Apple Music functionality to your apps.


25
00:01:17,477 --> 00:01:20,147 line:-2
You can discover
and fetch content from Apple Music,


26
00:01:20.180 --> 00:01:23.917 line:-2 align:center
including artists, albums,
playlists, and more,


27
00:01:23.951 --> 00:01:28.021 line:-2 align:center
with functionality to search the catalog
and browse popularity charts.


28
00:01:28,055 --> 00:01:31,692 line:-2
With the user’s consent,
MusicKit and Apple Music API let you


29
00:01:31.725 --> 00:01:34.328 line:-2 align:center
authenticate subscribers
to play available content


30
00:01:34.361 --> 00:01:36.263 line:-2 align:center
and provide access
to personalized features,


31
00:01:36.296 --> 00:01:38.799 line:-2 align:center
including their music library,
recommendations,


32
00:01:38.832 --> 00:01:41.435 line:-1 align:center
and recently played history.


33
00:01:41,468 --> 00:01:44,238 line:-2
MusicKit client frameworks
provide the APIs needed


34
00:01:44.271 --> 00:01:45.772 line:-1 align:center
to authenticate subscribers


35
00:01:45.806 --> 00:01:48.775 line:-2 align:center
and start and control
playback on a device.


36
00:01:48,809 --> 00:01:52,145 line:-2
Client frameworks are available
for apps on Apple platforms,


37
00:01:52,179 --> 00:01:54,748 line:-1
web applications using JavaScript,


38
00:01:54.781 --> 00:01:57.918 line:-2 align:center
and Android applications
using the available SDK.


39
00:01:59,253 --> 00:02:01,889 line:-2
MusicKit on Apple platforms
has everything you need


40
00:02:01,922 --> 00:02:04,291 line:-1
to integrate Apple Music into your apps.


41
00:02:04,324 --> 00:02:07,227 line:-2
Subscribers can authenticate
or sign up within your app


42
00:02:07.261 --> 00:02:11.265 line:-2 align:center
to start and control playback
and access other personalized features.


43
00:02:11,298 --> 00:02:15,235 line:-2
Available APIs accelerate calls
to discover and access content


44
00:02:15.269 --> 00:02:19.806 line:-2 align:center
from Apple Music with native support
for resources and pagination.


45
00:02:19,840 --> 00:02:23,277 line:-2
Many of the topics covered later
about accessing and making requests


46
00:02:23.310 --> 00:02:26.213 line:-2 align:center
to Apple Music API directly
are handled by MusicKit


47
00:02:26.246 --> 00:02:28.949 line:-1 align:center
on Apple platforms automatically.


48
00:02:28,982 --> 00:02:31,919 line:-2
Developers writing apps
for Apple platforms are encouraged


49
00:02:31,952 --> 00:02:34,721 align:center
to watch the session
"Meet MusicKit for Swift"


50
00:02:34,755 --> 00:02:36,790 align:center
for an introduction to those APIs


51
00:02:36,823 --> 00:02:39,459 align:center
and the session
"Explore more content with MusicKit"


52
00:02:39,493 --> 00:02:41,495 line:0
for more functionality.


53
00:02:42,629 --> 00:02:45,232 line:-2
MusicKit on the Web makes it easy
to bring Apple Music


54
00:02:45.265 --> 00:02:47.568 line:-1 align:center
to your applications using JavaScript.


55
00:02:47.601 --> 00:02:49.670 line:-1 align:center
You can discover Apple Music content,


56
00:02:49,703 --> 00:02:52,973 line:-2
let subscribers sign in
to access personalized features


57
00:02:53,006 --> 00:02:55,742 line:-1
and play content directly on your website.


58
00:02:55.776 --> 00:02:58.378 line:-2 align:center
Full access to Apple Music API
gives you the power


59
00:02:58.412 --> 00:03:01.215 line:-1 align:center
to create unique music experiences.


60
00:03:01,248 --> 00:03:03,851 line:-2
MusicKit provides a collection
of built-in web components,


61
00:03:03,884 --> 00:03:06,186 line:-1
including a full-featured media player.


62
00:03:06,220 --> 00:03:08,455 align:center
These components
make it easy to get started


63
00:03:08,488 --> 00:03:11,291 align:center
and have the flexibility
to customize for your experience.


64
00:03:12.960 --> 00:03:15.262 line:-2 align:center
MusicKit for Android
lets you integrate Apple Music


65
00:03:15.295 --> 00:03:17.130 line:-1 align:center
into your Android applications.


66
00:03:17.164 --> 00:03:19.833 line:-2 align:center
Support for authenticating
Apple Music subscribers,


67
00:03:19,867 --> 00:03:21,401 line:-1
controlling content playback,


68
00:03:21.435 --> 00:03:25.572 line:-2 align:center
and full access to Apple Music API allows
you to build a rich music experience.


69
00:03:27.541 --> 00:03:31.345 line:-2 align:center
Apple Music API is the common
JSON web service that provides access


70
00:03:31.378 --> 00:03:34.715 line:-2 align:center
to discovery features
and Apple Music catalog content.


71
00:03:34.748 --> 00:03:37.518 line:-2 align:center
Authenticated subscribers can
access personalized features,


72
00:03:37.551 --> 00:03:40.020 line:-2 align:center
including their Music Library,
Recommendations,


73
00:03:40,053 --> 00:03:41,922 line:-1
and Recently Played history.


74
00:03:42,656 --> 00:03:46,126 line:-1
Next, I'll explain how to get access.


75
00:03:46.159 --> 00:03:50.264 line:-2 align:center
To make requests to Apple Music API,
you will need a Developer Token.


76
00:03:50.297 --> 00:03:52.332 line:-1 align:center
For applications on Apple platforms,


77
00:03:52.366 --> 00:03:54.801 line:-2 align:center
you can take advantage
of automatic token management


78
00:03:54.835 --> 00:03:58.038 line:-2 align:center
by enabling the MusicKit service
for your app.


79
00:03:58,071 --> 00:04:00,474 line:-2
This service can be found
in the App ID section


80
00:04:00,507 --> 00:04:03,377 line:-1
of the Apple Developer portal shown here.


81
00:04:04.711 --> 00:04:06.713 line:-1 align:center
For applications on other platforms,


82
00:04:06.747 --> 00:04:10.150 line:-2 align:center
you can obtain a Developer Token
by enrolling as a MusicKit developer


83
00:04:10.184 --> 00:04:12.119 line:-1 align:center
on the Apple Developer portal.


84
00:04:12.152 --> 00:04:15.556 line:-2 align:center
From there, you can request
and download a private key.


85
00:04:15.589 --> 00:04:18.425 line:-2 align:center
You will need to generate
a JSON Web Token and sign it


86
00:04:18.458 --> 00:04:20.727 line:-1 align:center
with your downloaded private key.


87
00:04:20,761 --> 00:04:23,864 line:-1
A JSON Web Token is split in two parts.


88
00:04:23.897 --> 00:04:25.432 line:-1 align:center
The first part is required headers,


89
00:04:25.465 --> 00:04:30.137 line:-2 align:center
including the signing algorithm "alg,"
which must be ES256,


90
00:04:30.170 --> 00:04:32.272 line:-1 align:center
and the key identifier "kid,"


91
00:04:32.306 --> 00:04:35.509 line:-2 align:center
which is included as part
of your private key download.


92
00:04:35.542 --> 00:04:38.078 line:-1 align:center
The second part of the token is claims.


93
00:04:38.111 --> 00:04:40.981 line:-1 align:center
Apple Music API has three required claims:


94
00:04:41.014 --> 00:04:43.116 line:-1 align:center
issuer ID “iss,”


95
00:04:43.150 --> 00:04:45.986 line:-2 align:center
which is your team ID that can be found
in the memberships section


96
00:04:46.019 --> 00:04:47.955 line:-1 align:center
of the Apple Developer portal,


97
00:04:47.988 --> 00:04:50.090 line:-1 align:center
issued at time "iat,"


98
00:04:50.123 --> 00:04:53.160 line:-2 align:center
which is represented by the number
of seconds since the Epoch,


99
00:04:53.193 --> 00:04:55.529 line:-1 align:center
and an expiration time "exp."


100
00:04:55,562 --> 00:04:58,599 line:-2
This is in the same time format
as the issued time.


101
00:04:58,632 --> 00:05:01,702 line:-2
Tokens can be generated
to expire a maximum of six months


102
00:05:01.735 --> 00:05:04.037 line:-1 align:center
from when they were issued.


103
00:05:04,071 --> 00:05:07,107 line:0
For web applications,
we encourage providing an origin claim,


104
00:05:07,140 --> 00:05:10,010 line:0
which will issue a token valid
for your website only.


105
00:05:11,879 --> 00:05:14,314 align:center
A valid,
signed token must be supplied


106
00:05:14,348 --> 00:05:18,352 line:-2
in the authorization header
for all requests to Apple Music API.


107
00:05:18,385 --> 00:05:21,955 line:-2
With the MusicKit service enabled
for your applications on Apple platforms,


108
00:05:21,989 --> 00:05:23,924 line:-1
this will be done automatically.


109
00:05:23,957 --> 00:05:26,860 line:-2
MusicKit on the web must be configured
with a token you generate


110
00:05:26,894 --> 00:05:29,563 line:-1
to make requests to Apple Music API.


111
00:05:29.596 --> 00:05:32.833 line:-2 align:center
More information about generating
JSON Web Tokens can be found


112
00:05:32.866 --> 00:05:36.036 line:-1 align:center
in the Apple Music API documentation.


113
00:05:36,069 --> 00:05:40,974 line:-2
Now I will show you how to request
resources using Apple Music API.


114
00:05:41.008 --> 00:05:43.010 line:-1 align:center
Resources model Apple Music content,


115
00:05:43.043 --> 00:05:46.747 line:-2 align:center
such as artists, albums,
songs, playlists and more.


116
00:05:46,780 --> 00:05:49,416 line:-1
Each has its own corresponding type.


117
00:05:49.449 --> 00:05:52.219 line:-2 align:center
Resources can be fetched
from Apple Music API endpoints


118
00:05:52.252 --> 00:05:56.657 line:-2 align:center
through discovery features like search
or by using their identifiers.


119
00:05:56,690 --> 00:05:59,960 line:-2
Here is an example request URL
to fetch a playlist resource


120
00:05:59,993 --> 00:06:02,763 line:-1
from the API using its identifier.


121
00:06:02,796 --> 00:06:07,701 line:-2
Apple Music API
is hosted at api.music.apple.com.


122
00:06:07,734 --> 00:06:10,404 line:-2
The path of the URL
uses a RESTful pattern


123
00:06:10.437 --> 00:06:13.874 line:-2 align:center
and represents the location
for a resource or feature.


124
00:06:13.907 --> 00:06:16.977 line:-2 align:center
The first element in the location
is the version of the API,


125
00:06:17.010 --> 00:06:18.779 line:-1 align:center
which is currently version 1.


126
00:06:18.812 --> 00:06:22.816 line:-2 align:center
New versions may become available
when significant changes are introduced.


127
00:06:22,850 --> 00:06:25,953 line:-2
Versions maintain backwards compatibility
with existing calls,


128
00:06:25,986 --> 00:06:30,490 line:-2
even as enhancements to resources
and new features are made available.


129
00:06:30.524 --> 00:06:33.026 line:-2 align:center
For requests
within the Apple Music catalog,


130
00:06:33,060 --> 00:06:34,661 line:-1
the next section in the location


131
00:06:34.695 --> 00:06:37.798 line:-2 align:center
represents the specific catalog
to fetch from.


132
00:06:37,831 --> 00:06:40,200 line:-2
Apple Music is
a worldwide streaming service,


133
00:06:40.234 --> 00:06:44.438 line:-2 align:center
and content can differ between regions,
which we refer to as storefronts.


134
00:06:45.772 --> 00:06:48.709 line:-3 align:center
For information about storefronts
and content availability,


135
00:06:48,742 --> 00:06:53,614 line:-3
watch the session titled "Cross reference
content with the Apple Music API."


136
00:06:53,647 --> 00:06:56,550 line:-3
In this example, I will fetch
a playlist from the catalog


137
00:06:56.583 --> 00:06:58.318 line:-2 align:center
in the United States storefront,


138
00:06:58,352 --> 00:07:01,855 line:-3
denoted
by the two-letter country code “us.”


139
00:07:01.889 --> 00:07:05.125 line:-2 align:center
The final part of this location
is the resource’s identity,


140
00:07:05,158 --> 00:07:08,996 line:-2
represented by its type "playlists"
followed by its identifier.


141
00:07:10.163 --> 00:07:12.466 line:-2 align:center
Since Apple Music is available
in many regions,


142
00:07:12.499 --> 00:07:14.434 line:-1 align:center
support for localization is possible


143
00:07:14,468 --> 00:07:18,005 line:-2
using the optional language
tag query parameter "L."


144
00:07:18.038 --> 00:07:22.409 line:-2 align:center
Here, I am specifying
the language tag "en-US" for English.


145
00:07:22.442 --> 00:07:28.081 line:-2 align:center
To fetch content localized in Spanish,
I could specify the tag “es-MX.”


146
00:07:28.115 --> 00:07:29.249 line:-1 align:center
To keep things simple,


147
00:07:29,283 --> 00:07:31,718 line:-2
I will not specify a language tag
in these examples,


148
00:07:31.752 --> 00:07:34.821 line:-2 align:center
which results
in the storefront’s default localization.


149
00:07:34,855 --> 00:07:36,957 line:-2
The storefronts
that Apple Music is available in


150
00:07:36.990 --> 00:07:38.592 line:-1 align:center
and their supported localizations


151
00:07:38.625 --> 00:07:41.862 line:-2 align:center
can be found by accessing
the storefronts reference endpoint.


152
00:07:41.895 --> 00:07:45.399 line:-2 align:center
More detail can be found
in the Apple Music API documentation.


153
00:07:46.500 --> 00:07:49.269 line:-2 align:center
Here's a look at making
a GET request for a playlist.


154
00:07:49.303 --> 00:07:51.271 line:-2 align:center
This returns
a resource collection response


155
00:07:51,305 --> 00:07:54,441 line:-2
with a "data" array
containing the playlist resource.


156
00:07:54.474 --> 00:07:59.146 line:-2 align:center
Resource objects indicate the identity
of the content with an ID value and type.


157
00:07:59.179 --> 00:08:03.851 line:-2 align:center
The combination of ID and type represent
the unique identity of a resource.


158
00:08:03.884 --> 00:08:08.388 line:-2 align:center
The href value indicates the location in
the API where the resource may be fetched.


159
00:08:08.422 --> 00:08:12.960 line:-2 align:center
In this case, note the location
is the same as the path we requested.


160
00:08:12,993 --> 00:08:17,331 line:-2
The metadata values for the content are
found in the resource's attributes map.


161
00:08:17.364 --> 00:08:21.702 line:-2 align:center
Direct connections to other resources,
such as this playlist curator and tracks,


162
00:08:21,735 --> 00:08:23,804 line:-1
are found in the relationships map.


163
00:08:24,905 --> 00:08:26,940 line:-2
Here is a closer look
at the attributes map,


164
00:08:26.974 --> 00:08:29.676 line:-2 align:center
which contains the metadata values
for the playlist.


165
00:08:29.710 --> 00:08:32.312 line:-2 align:center
I'll walk through an example
of using some of these attributes


166
00:08:32.346 --> 00:08:34.314 line:-1 align:center
in the widget on the right,


167
00:08:34,348 --> 00:08:39,887 line:-2
which uses the playlist's name,
curator name, and description attributes.


168
00:08:39.920 --> 00:08:42.823 line:-2 align:center
playParams is a common attribute
on many resource types


169
00:08:42.856 --> 00:08:46.426 line:-2 align:center
that indicates when the content is
available to stream for subscribers.


170
00:08:46,460 --> 00:08:49,296 line:-2
This can be used to determine
if play control should be enabled,


171
00:08:49.329 --> 00:08:53.634 line:-2 align:center
as content without playParams is
not available for playback.


172
00:08:53,667 --> 00:08:56,537 line:-2
Artwork is another common attribute
for many resource types


173
00:08:56,570 --> 00:08:59,806 line:-2
that contains values for the maximum width
and height for the image,


174
00:08:59.840 --> 00:09:02.776 line:-2 align:center
alongside a url
where the image can be loaded from.


175
00:09:05.078 --> 00:09:07.581 line:-2 align:center
At Apple,
developer feedback is very important


176
00:09:07,614 --> 00:09:10,651 line:-2
and helps us improve our APIs
and services for everyone.


177
00:09:10,684 --> 00:09:12,786 line:-2
This year,
we're happy to announce the addition


178
00:09:12,819 --> 00:09:15,389 line:-1
of one of our most requested features.


179
00:09:15,422 --> 00:09:18,258 line:-2
Artist artwork is now available
in Apple Music API,


180
00:09:18.292 --> 00:09:20.994 line:-2 align:center
making plain silhouettes
a thing of the past.


181
00:09:21.028 --> 00:09:23.864 line:-2 align:center
All new and existing apps
can add support for these images


182
00:09:23,897 --> 00:09:27,634 line:-2
by looking for the artwork attribute
added to artist resources.


183
00:09:27,668 --> 00:09:31,905 line:-2
Artist artwork can be loaded the same way
as artwork for other content types.


184
00:09:31.939 --> 00:09:35.209 line:-2 align:center
Here is an abbreviated example
of an artwork url for the playlist


185
00:09:35.242 --> 00:09:37.010 line:-1 align:center
we were looking at earlier.


186
00:09:37,044 --> 00:09:42,482 line:-2
Artwork urls contain "w," width and "h,"
height tokens, highlighted in blue.


187
00:09:42.516 --> 00:09:45.586 line:-2 align:center
To load artwork using this URL,
replace these tokens


188
00:09:45.619 --> 00:09:48.388 line:-2 align:center
with the desired resolution
for your display.


189
00:09:48.422 --> 00:09:51.825 line:-2 align:center
Since playlist artwork is square,
I will use the same resolution


190
00:09:51.859 --> 00:09:53.994 line:-1 align:center
for both width and height.


191
00:09:54,027 --> 00:09:57,998 align:center
Here is an example of requesting
a resolution of 400 by 400,


192
00:09:58,031 --> 00:10:02,469 line:0
at 300 by 300, and at 200 by 200.


193
00:10:02,503 --> 00:10:05,072 align:center
The images scale for display
at each resolution,


194
00:10:05,105 --> 00:10:07,941 align:center
and the file sizes are reduced
for smaller images.


195
00:10:09,109 --> 00:10:11,745 line:-2
All resource types have a set
of default attributes


196
00:10:11.778 --> 00:10:15.415 line:-2 align:center
that represent the common
or basic metadata for that resource.


197
00:10:15.449 --> 00:10:18.118 line:-2 align:center
Some resources have additional attributes
that may be fetched,


198
00:10:18,151 --> 00:10:20,454 line:-1
known as "extended attributes."


199
00:10:20.487 --> 00:10:24.658 line:-2 align:center
These extended attributes can be requested
by using the extend query parameter.


200
00:10:24.691 --> 00:10:27.227 line:-2 align:center
For instance,
tracks on Apple Music playlists


201
00:10:27.261 --> 00:10:29.329 line:-1 align:center
are either songs or music videos.


202
00:10:29.363 --> 00:10:32.232 line:-2 align:center
If you'd like to know the types
of tracks a playlist contains,


203
00:10:32.266 --> 00:10:35.702 line:-2 align:center
you can request
the trackTypes extended attribute.


204
00:10:35.736 --> 00:10:38.438 line:-2 align:center
Extended attributes appear
in the resource’s attributes map


205
00:10:38.472 --> 00:10:41.175 line:-1 align:center
alongside their default attributes.


206
00:10:41.208 --> 00:10:44.611 line:-2 align:center
If a playlist's tracks are music videos
rather than songs,


207
00:10:44.645 --> 00:10:48.215 line:-2 align:center
perhaps you would customize
the play button to inform the viewer.


208
00:10:49.683 --> 00:10:52.319 line:-2 align:center
Taking a look now
at the relationships map shows a couple


209
00:10:52.352 --> 00:10:55.489 line:-2 align:center
of direct connections
from this playlist to other resources.


210
00:10:55,522 --> 00:10:57,658 line:-2
Many resources have
automatic relationships


211
00:10:57.691 --> 00:11:00.761 line:-2 align:center
that will be returned
when requesting some content directly.


212
00:11:00.794 --> 00:11:06.033 line:-2 align:center
The automatic relationships
for a playlist are its curator and tracks.


213
00:11:06.066 --> 00:11:09.102 line:-2 align:center
Relationships are named
to indicate what the connection is,


214
00:11:09,136 --> 00:11:11,538 line:-1
such as the curator for this playlist.


215
00:11:11.572 --> 00:11:15.209 line:-2 align:center
They have an href location where
the relationship may be fetched directly


216
00:11:15.242 --> 00:11:18.579 line:-2 align:center
and a data array
for the related resource collection.


217
00:11:18.612 --> 00:11:22.216 line:-2 align:center
For playlists, the curator relationship
is automatically related,


218
00:11:22,249 --> 00:11:25,953 line:-2
meaning only the identity
of the related resources will be present.


219
00:11:25,986 --> 00:11:30,824 line:-2
This allows for easily linking to
this resource using its identity or href.


220
00:11:30,858 --> 00:11:34,094 line:-2
Since a playlist already contains
the curator's name as an attribute,


221
00:11:34,127 --> 00:11:36,263 line:-2
there may be no need
to include other metadata


222
00:11:36,296 --> 00:11:38,198 line:-1
for the related curator resource.


223
00:11:38.232 --> 00:11:41.768 line:-2 align:center
The identity of the resource could be used
to make the curator name a link,


224
00:11:41.802 --> 00:11:45.772 line:-2 align:center
letting people navigate to the curator to
discover additional content if they wish.


225
00:11:45.806 --> 00:11:49.009 line:-2 align:center
If you want to show additional information
for the curator with the playlist,


226
00:11:49.042 --> 00:11:52.713 line:-2 align:center
such as its artwork, you will need
to fetch the curator's metadata.


227
00:11:52.746 --> 00:11:55.415 line:-2 align:center
Use the include parameter
to specify the relationships


228
00:11:55,449 --> 00:11:58,218 line:-1
you want related resource metadata for.


229
00:11:58,252 --> 00:12:00,888 line:-2
Some resource types have
additional relationships not included


230
00:12:00,921 --> 00:12:04,057 line:-2
by default that can also be requested
with this parameter.


231
00:12:04.091 --> 00:12:07.294 line:-2 align:center
Note that including relationships
can increase the size of responses


232
00:12:07.327 --> 00:12:09.830 line:-2 align:center
and negatively impact
the speed of your app.


233
00:12:09.863 --> 00:12:12.900 line:-2 align:center
Many useful values that may
be desired from related resources


234
00:12:12,933 --> 00:12:16,403 line:-2
can be found directly as attributes
on the original resource.


235
00:12:16.436 --> 00:12:18.739 line:-2 align:center
For the best performance,
we recommend including


236
00:12:18,772 --> 00:12:22,910 line:-2
only the relationships
and metadata needed in the response.


237
00:12:22,943 --> 00:12:26,079 line:-3
Detailed information for resource types
and their available attributes


238
00:12:26.113 --> 00:12:30.150 line:-3 align:center
and relationships can be found
in the Apple Music API documentation.


239
00:12:30.184 --> 00:12:32.819 line:-3 align:center
For more about extended attributes,
relationships,


240
00:12:32,853 --> 00:12:35,189 line:-2
and special relationships called views,


241
00:12:35,222 --> 00:12:39,626 line:-3
watch the session “Explore the catalog
with the Apple Music API.”


242
00:12:39,660 --> 00:12:42,529 line:-2
Revisiting the relationships
for the example playlist,


243
00:12:42,563 --> 00:12:45,566 line:-2
the tracks for the playlist
are automatically included,


244
00:12:45.599 --> 00:12:48.602 line:-2 align:center
meaning the attribute metadata
for the related track resources


245
00:12:48,635 --> 00:12:50,904 line:-1
appear in the response.


246
00:12:50.938 --> 00:12:54.274 line:-2 align:center
The attributes for the related tracks
can be used to display a track list


247
00:12:54.308 --> 00:12:57.010 line:-2 align:center
for the playlist using their artwork
and other metadata


248
00:12:57,044 --> 00:12:58,946 line:-1
shown in the widget on the right.


249
00:12:58.979 --> 00:13:01.215 line:-2 align:center
In the previous section,
I showed an example


250
00:13:01.248 --> 00:13:04.518 line:-2 align:center
of fetching a playlist resource
from the catalog with its tracks.


251
00:13:04,551 --> 00:13:07,621 line:-2
In this section,
I'll explain how to handle relationships


252
00:13:07.654 --> 00:13:09.590 line:-1 align:center
with a large number of resources.


253
00:13:09,623 --> 00:13:13,594 line:-2
The related resources for a relationship
appear in its data array.


254
00:13:13,627 --> 00:13:16,129 line:-2
When the number
of related resources is small,


255
00:13:16.163 --> 00:13:19.233 line:-2 align:center
all of the resources will appear
in a single response.


256
00:13:19.266 --> 00:13:22.436 line:-2 align:center
Relationships with more related resources
than appear in a single response


257
00:13:22,469 --> 00:13:25,305 line:-2
must be fetched
in multiple parts called pages.


258
00:13:26.907 --> 00:13:30.511 line:-2 align:center
I'll use the tracks relationship
for a large playlist as an example.


259
00:13:30,544 --> 00:13:34,915 line:-2
Only the first 100 tracks
of a playlist are included by default.


260
00:13:34.948 --> 00:13:37.117 line:-1 align:center
If a playlist has more than 100 tracks,


261
00:13:37.150 --> 00:13:41.355 line:-2 align:center
then the additional tracks
must be fetched in subsequent pages.


262
00:13:41.388 --> 00:13:45.192 line:-2 align:center
Here is an example response
for a playlist with over 100 tracks.


263
00:13:45,225 --> 00:13:48,262 line:-2
The href and resource collection data
for the tracks relationship appear


264
00:13:48,295 --> 00:13:51,532 line:-1
in the response as was seen earlier.


265
00:13:51.565 --> 00:13:54.735 line:-2 align:center
Since this playlist has more tracks
than were included in the response,


266
00:13:54.768 --> 00:13:57.871 line:-2 align:center
a next location appears
as a sibling to the data.


267
00:13:57,905 --> 00:14:00,307 line:-2
The next location represents
where the remaining resources


268
00:14:00.340 --> 00:14:03.043 line:-1 align:center
in the collection can be fetched.


269
00:14:03.076 --> 00:14:05.879 line:-2 align:center
Fetching the next location
makes a direct relationship fetch


270
00:14:05.913 --> 00:14:08.448 line:-2 align:center
and returns the relationship's
resource collection data


271
00:14:08,482 --> 00:14:10,551 line:-1
starting from the provided offset.


272
00:14:10.584 --> 00:14:14.121 line:-2 align:center
The default limit for the relationship
will apply to each page.


273
00:14:14.154 --> 00:14:17.891 line:-2 align:center
You may select your own page size
by supplying a limit parameter.


274
00:14:17.925 --> 00:14:19.893 line:-2 align:center
The page size limit
can be between one


275
00:14:19,927 --> 00:14:22,329 line:-2
and the specific relationship's
maximum page size,


276
00:14:22.362 --> 00:14:25.132 line:-1 align:center
which can be found in the documentation.


277
00:14:25.165 --> 00:14:27.067 line:-2 align:center
If the resource collection
for the relationship


278
00:14:27.100 --> 00:14:30.137 line:-2 align:center
contains additional resources
past the ones returned in the page,


279
00:14:30,170 --> 00:14:33,974 line:-2
a next location will continue
to appear as a sibling to the data.


280
00:14:34.007 --> 00:14:38.512 line:-2 align:center
When the resource collection is exhausted,
a next location will not be present.


281
00:14:38.545 --> 00:14:42.683 line:-2 align:center
Note that next locations do not reflect
the selected page size for the request.


282
00:14:42.716 --> 00:14:45.853 line:-2 align:center
You will need to supply a limit parameter
on each request if you wish


283
00:14:45.886 --> 00:14:48.655 line:-2 align:center
to use a different page size
than the default.


284
00:14:48.689 --> 00:14:50.824 line:-2 align:center
Always use the next location
from the response


285
00:14:50.858 --> 00:14:52.659 line:-1 align:center
to page over resource collections.


286
00:14:52,693 --> 00:14:55,262 line:-2
Trying to calculate your own offset
can result in issues


287
00:14:55,295 --> 00:14:58,098 line:-2
with invalid locations
or duplicate results.


288
00:14:58.131 --> 00:15:00.701 line:-2 align:center
In the next section,
I will show how to search fof content


289
00:15:00.734 --> 00:15:03.937 line:-2 align:center
in the Apple Music catalog
using Apple Music API.


290
00:15:03,971 --> 00:15:07,674 line:-2
Apple Music API provides functionality
to find content in the catalog


291
00:15:07.708 --> 00:15:09.243 line:-1 align:center
using a search term.


292
00:15:09.276 --> 00:15:11.845 line:-2 align:center
A search request resembles
a catalog resource request


293
00:15:11,879 --> 00:15:15,916 line:-2
with /search as the location
and the search term as a parameter.


294
00:15:15.949 --> 00:15:19.920 line:-2 align:center
You can specify which content types you're
interested in with the types parameter


295
00:15:19.953 --> 00:15:23.991 line:-2 align:center
and the maximum number of results
to include for each type using a limit.


296
00:15:24.024 --> 00:15:26.493 line:-2 align:center
When more results are found
past the requested limit,


297
00:15:26,527 --> 00:15:29,463 line:-2
pagination can be used
to continue the search.


298
00:15:29.496 --> 00:15:33.667 line:-2 align:center
Here's the response to a search
for albums and songs with the term “pop."


299
00:15:33,700 --> 00:15:37,538 line:-2
The search endpoint returns a response
with a results object containing a group


300
00:15:37,571 --> 00:15:40,240 line:-2
for each requested type
with matching content.


301
00:15:40.274 --> 00:15:43.911 line:-2 align:center
For this request,
matches were found for albums and songs.


302
00:15:45.345 --> 00:15:48.849 line:-2 align:center
The response also includes a meta object
containing a recommended order


303
00:15:48.882 --> 00:15:51.285 line:-1 align:center
for the result groups based on relevancy.


304
00:15:51,318 --> 00:15:53,487 line:-2
This may be helpful
if you're building a search experience


305
00:15:53.520 --> 00:15:56.957 line:-2 align:center
that handles
multiple content types at once.


306
00:15:56.990 --> 00:16:00.294 line:-2 align:center
Each result group has and href
where the results were fetched from


307
00:16:00,327 --> 00:16:03,263 line:-2
and a resource collection data array
containing the matching resources


308
00:16:03,297 --> 00:16:05,866 line:-2
of the relevant type
for the search term.


309
00:16:05,899 --> 00:16:08,435 line:-2
If more matches for
a result group are available,


310
00:16:08,468 --> 00:16:12,873 line:-2
the group will contain a next location
where additional matches may be fetched.


311
00:16:12,906 --> 00:16:16,276 line:-2
Requesting the next location
returns more results for the selected type


312
00:16:16,310 --> 00:16:18,378 line:-1
starting from the offset.


313
00:16:18.412 --> 00:16:20.614 line:-2 align:center
In the last section,
I’ll discuss accessing


314
00:16:20.647 --> 00:16:23.150 line:-1 align:center
personalized features in Apple Music API.


315
00:16:24.351 --> 00:16:26.954 line:-2 align:center
Apple Music API and MusicKit
provide access


316
00:16:26.987 --> 00:16:29.523 line:-2 align:center
to features personalized
to a specific user.


317
00:16:29,556 --> 00:16:32,192 line:-2
These features let you add support
for subscribers to view


318
00:16:32.226 --> 00:16:34.862 line:-2 align:center
and search for content
in their Apple Music library,


319
00:16:34,895 --> 00:16:39,499 line:-2
including the ability to add content
they enjoy and create new playlists.


320
00:16:39,533 --> 00:16:41,602 line:-2
Personalized Recommendations
can be surfaced


321
00:16:41,635 --> 00:16:43,937 line:-1
based on individual music tastes.


322
00:16:43,971 --> 00:16:47,107 line:-2
And you can let people rediscover
music they've been listening to recently


323
00:16:47.140 --> 00:16:50.511 line:-2 align:center
to pick up where they left off
or provide entirely new experiences.


324
00:16:52.212 --> 00:16:54.114 line:-2 align:center
Personalized features are available
for people


325
00:16:54,147 --> 00:16:56,650 line:-2
with an active subscription
to Apple Music.


326
00:16:56.683 --> 00:16:59.586 line:-2 align:center
To support these features,
you must first authenticate the person


327
00:16:59.620 --> 00:17:02.155 line:-2 align:center
with your app using MusicKit
and request permission


328
00:17:02,189 --> 00:17:04,658 line:-1
to access their music data.


329
00:17:04.691 --> 00:17:09.162 line:-2 align:center
When permission is granted,
a Music User Token will be available.


330
00:17:09,196 --> 00:17:13,867 line:-2
This token is added to Apple Music API
requests in the music-user-token header


331
00:17:13,901 --> 00:17:17,271 line:-2
and is used to authenticate access
to personalized data.


332
00:17:18.338 --> 00:17:23.110 line:-2 align:center
A Music User Token is specific to your app
and the device the user authenticated on.


333
00:17:23.143 --> 00:17:25.245 line:-2 align:center
This token must not be shared
across devices,


334
00:17:25.279 --> 00:17:28.782 line:-2 align:center
as permission is granted
for a single device at a time.


335
00:17:28,815 --> 00:17:31,985 line:-2
A token may become invalid based
on changes to a person’s subscription


336
00:17:32.019 --> 00:17:34.888 line:-2 align:center
or password,
or if they revoke access to your app.


337
00:17:34.922 --> 00:17:37.191 line:-1 align:center
It may also expire with time.


338
00:17:37.224 --> 00:17:40.427 line:-2 align:center
Authentication can be refreshed
by prompting them to sign back in


339
00:17:40.460 --> 00:17:42.796 line:-1 align:center
and grant permission for your app.


340
00:17:42.829 --> 00:17:45.299 line:-2 align:center
Note that this token is managed
automatically by MusicKit


341
00:17:45.332 --> 00:17:47.968 line:-2 align:center
on Apple platforms
and MusicKit on the Web.


342
00:17:48.001 --> 00:17:50.304 line:-2 align:center
Please see the documentation
for the framework you're using


343
00:17:50,337 --> 00:17:51,872 line:-1
for more details.


344
00:17:51.905 --> 00:17:55.008 line:-2 align:center
In today's session,
I showed how you can integrate Apple Music


345
00:17:55.042 --> 00:17:58.078 line:-2 align:center
into your apps using MusicKit
and Apple Music API,


346
00:17:58.111 --> 00:18:01.315 line:-2 align:center
a quick look at the platforms with support
for MusicKit client frameworks,


347
00:18:01.348 --> 00:18:05.152 line:-2 align:center
and how to use Apple Music API to access
and find content in the catalog,


348
00:18:05.185 --> 00:18:08.555 line:-2 align:center
and some personalized features
available for subscribers.


349
00:18:08,589 --> 00:18:11,558 line:-2
For more on this year's updates
to MusicKit on Apple platforms,


350
00:18:11,592 --> 00:18:14,761 line:-2
check out the session
"Explore more content with MusicKit.”


351
00:18:14.795 --> 00:18:15.829 line:-1 align:center
Thank you for watching,


352
00:18:15.863 --> 00:18:18.398 line:-2 align:center
and we hope you enjoy the rest
of this year's WWDC.


353
00:18:18,432 --> 00:18:23,103 align:center
[upbeat music]

