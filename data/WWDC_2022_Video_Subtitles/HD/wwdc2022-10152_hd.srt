2
00:00:00,501 --> 00:00:08,509 line:-1
♪ ♪


3
00:00:09.309 --> 00:00:11.745 line:-2 align:center
Drew Haas: Hi there.
My name is Drew Haas,


4
00:00:11.778 --> 00:00:14.681 line:-2 align:center
and I'm an engineer
on the Accessibility team.


5
00:00:14,715 --> 00:00:19,086 line:-2
I'm here to talk about how to create
accessible Single App Mode experiences.


6
00:00:19,119 --> 00:00:22,523 line:-2
Single App Modes let you
as a developer serve your users


7
00:00:22,556 --> 00:00:25,993 line:-2
in really unique ways
by restricting certain behaviors


8
00:00:26,026 --> 00:00:28,829 line:-1
on iOS and iPadOS devices.


9
00:00:28,862 --> 00:00:33,400 line:-2
Namely, these modes let you
lock the device to a single app.


10
00:00:33.433 --> 00:00:34.601 line:-1 align:center
Depending on the mode,


11
00:00:34,635 --> 00:00:37,838 line:-2
the restrictions are either initiated
by the system


12
00:00:37.871 --> 00:00:39.740 line:-1 align:center
or by your app.


13
00:00:39.773 --> 00:00:43.677 line:-2 align:center
This is great because you get to control
the timing between a restricted state


14
00:00:43.710 --> 00:00:46.046 line:-1 align:center
and an unrestricted state.


15
00:00:46.079 --> 00:00:50.150 line:-2 align:center
You're also able to apply additional
restrictions on top of single app mode,


16
00:00:50.184 --> 00:00:52.753 line:-1 align:center
like whether auto-lock is enabled or not.


17
00:00:54,121 --> 00:00:57,357 line:-2
Let's remember to consider
accessibility use cases.


18
00:00:57,391 --> 00:01:01,028 line:-2
You should make sure people
who rely using on accessibility features


19
00:01:01,061 --> 00:01:03,063 line:-1
have the ability to turn them on


20
00:01:03,096 --> 00:01:06,934 line:-2
so they can use them,
even if the device is restricted.


21
00:01:06,967 --> 00:01:11,071 line:-2
This ensures your app is inclusive
to people using assistive technologies.


22
00:01:11,104 --> 00:01:15,609 line:-2
I want to talk about some examples
of when to use Single App Mode.


23
00:01:15.642 --> 00:01:19.546 line:-2 align:center
Let's say you're developing an app
where customers order food or drinks


24
00:01:19.580 --> 00:01:21.181 line:-1 align:center
at a restaurant or event.


25
00:01:21,215 --> 00:01:24,051 line:-2
Or an app that will be used
in a medical office,


26
00:01:24.084 --> 00:01:27.221 line:-2 align:center
where patients are handling a device
shared by the medical staff


27
00:01:27,254 --> 00:01:29,223 line:-1
to fill out their information.


28
00:01:29,256 --> 00:01:33,560 line:-2
Or even an app that helps facilitate
a test for students in a classroom.


29
00:01:33,594 --> 00:01:36,697 line:-2
These are all scenarios
where Single App Mode restrictions


30
00:01:36.730 --> 00:01:40.200 line:-2 align:center
help create a focused environment
for the user.


31
00:01:40.234 --> 00:01:43.270 line:-2 align:center
And did you know your app
might be used in Single App Mode


32
00:01:43.303 --> 00:01:45.806 line:-1 align:center
even if you didn't write code for it?


33
00:01:45,839 --> 00:01:49,309 line:0
That's right,
Guided Access is an accessibility feature


34
00:01:49,343 --> 00:01:53,113 align:center
that lets users put any app
in Single App Mode.


35
00:01:53,146 --> 00:01:55,282 line:-1
First, I'll talk about Guided Access


36
00:01:55,315 --> 00:01:57,784 line:-2
and go over some considerations
you should have


37
00:01:57,818 --> 00:02:01,054 line:-2
for when people use your app
during this mode.


38
00:02:01,088 --> 00:02:04,525 line:-2
Next, I'll talk about single app modes
that you initiate programmatically


39
00:02:04.558 --> 00:02:08.929 line:-2 align:center
from within your app,
by adopting certain APIs and frameworks.


40
00:02:08,962 --> 00:02:11,765 line:-1
And finally, we provide accessibility API


41
00:02:11.798 --> 00:02:15.202 line:-2 align:center
designed for use
specifically during Single App Mode.


42
00:02:15,235 --> 00:02:19,006 line:-2
Use this API to turn on or off
certain accessibility features


43
00:02:19,039 --> 00:02:22,509 line:-2
to create a seamless
and accessible experience.


44
00:02:22.543 --> 00:02:24.978 line:-1 align:center
Let's dive in first with Guided Access.


45
00:02:25.012 --> 00:02:28.081 line:-2 align:center
To start Guided Access,
first make sure it's turned on


46
00:02:28.115 --> 00:02:32.653 line:-2 align:center
in accessibility settings,
then open the app you want to lock on to.


47
00:02:32,686 --> 00:02:37,024 line:-2
Triple click the side button
to perform the accessibility shortcut.


48
00:02:37.057 --> 00:02:42.262 line:-2 align:center
This shows the guided access workspace,
where you configure system restrictions.


49
00:02:42.296 --> 00:02:43.931 line:-1 align:center
Then tap Start to begin.


50
00:02:45,432 --> 00:02:48,101 line:-1
Now the device is in a restricted state.


51
00:02:48,135 --> 00:02:49,970 line:-1
It's locked to the frontmost app,


52
00:02:50.003 --> 00:02:53.841 line:-2 align:center
and the restrictions I configured
in the options menu are applied.


53
00:02:53.874 --> 00:02:59.379 line:-2 align:center
This helps creates a guided experience
for people with cognitive disabilities.


54
00:02:59.413 --> 00:03:01.682 line:-2 align:center
To exit Guided Access,
all you need to do


55
00:03:01.715 --> 00:03:04.484 line:-2 align:center
is perform the accessibility shortcut
again.


56
00:03:04.518 --> 00:03:09.056 line:-2 align:center
The options menu lets you restrict
touch interaction, display motion,


57
00:03:09.089 --> 00:03:12.759 line:-2 align:center
and the software keyboard,
as well as hardware button events,


58
00:03:12,793 --> 00:03:16,697 line:-2
like the volume buttons,
and the sleep/wake button.


59
00:03:16,730 --> 00:03:20,000 line:-2
Having a controlled environment in
this way is especially helpful


60
00:03:20.033 --> 00:03:21.935 line:-1 align:center
for people with cognitive disabilities,


61
00:03:21,969 --> 00:03:24,938 line:-2
but this feature is also enjoyed
by a range of users,


62
00:03:24,972 --> 00:03:28,008 line:-2
from accessibility users
to parents of young kids


63
00:03:28,041 --> 00:03:32,446 line:-2
who could all benefit from having
easy access to these device restrictions.


64
00:03:32,479 --> 00:03:33,981 line:-1
This is where you come in!


65
00:03:34.014 --> 00:03:37.551 line:-2 align:center
UIAccessibility API lets you
create custom restrictions


66
00:03:37.584 --> 00:03:41.722 line:-2 align:center
to tailor the experience
of your app during Guided Access.


67
00:03:41,755 --> 00:03:46,059 line:-2
Use this an opportunity
to restrict or adjust areas of your app


68
00:03:46.093 --> 00:03:48.495 line:-2 align:center
where someone with a cognitive disability
might feel lost


69
00:03:48.529 --> 00:03:50.264 line:-1 align:center
or overwhelmed with options.


70
00:03:50,297 --> 00:03:54,735 line:-2
I want to share some design considerations
for cognitive accessibility.


71
00:03:54.768 --> 00:03:57.871 line:-2 align:center
These are principles you should follow
all the time if possible,


72
00:03:57,905 --> 00:04:02,242 line:-2
but you should especially follow them
in your app during Guided Access.


73
00:04:02,276 --> 00:04:04,878 line:-1
First is to be forgiving of errors.


74
00:04:04.912 --> 00:04:07.014 line:-1 align:center
Try to mitigate errors before they happen,


75
00:04:07,047 --> 00:04:11,552 line:-2
by warning users before they perform
significant or irreversible actions,


76
00:04:11.585 --> 00:04:16.156 line:-2 align:center
like deleting or modifying account
information or payment information.


77
00:04:16.190 --> 00:04:18.392 line:-2 align:center
You should aim to reduce
dependence on timing


78
00:04:18,425 --> 00:04:20,561 line:-1
to act on certain things in your app,


79
00:04:20,594 --> 00:04:24,831 line:-2
because not everybody
processes information at the same speed.


80
00:04:24.865 --> 00:04:28.101 line:-2 align:center
Using timed alerts
or automatically performing actions


81
00:04:28,135 --> 00:04:31,338 line:-2
after a short time-out
makes your app harder to use.


82
00:04:31.371 --> 00:04:35.175 line:-2 align:center
And you should always, always,
give the user a chance to confirm


83
00:04:35,209 --> 00:04:36,944 line:-1
before making a payment,


84
00:04:36,977 --> 00:04:40,781 line:-2
this includes apps
that have one-tap purchases.


85
00:04:40,814 --> 00:04:44,218 line:-2
Designing your app with these
considerations promotes independence


86
00:04:44,251 --> 00:04:46,520 line:-1
for accessibility users.


87
00:04:46,553 --> 00:04:48,689 line:-1
I want to show you an example.


88
00:04:48.722 --> 00:04:51.191 line:-2 align:center
I'm working on an app
called Reading Observatory


89
00:04:51,225 --> 00:04:54,928 line:-2
which helps people keep track of how much
they've read during the week.


90
00:04:54.962 --> 00:04:58.599 line:-2 align:center
The home page of my app shows
reading progress and has two buttons:


91
00:04:58,632 --> 00:05:02,035 line:-2
account settings,
and a continue reading button.


92
00:05:02,069 --> 00:05:06,173 line:-2
I've added a custom restriction for my app
that will lock the Account Settings button


93
00:05:06.206 --> 00:05:08.876 line:-1 align:center
while Guided Access is active.


94
00:05:08,909 --> 00:05:12,546 line:-2
This gives my app a unique experience
under this restriction,


95
00:05:12,579 --> 00:05:14,915 line:-2
to help prevent users from getting lost
somewhere else,


96
00:05:14,948 --> 00:05:19,620 line:-2
like buried in account settings,
where they may make unintended changes.


97
00:05:19.653 --> 00:05:22.189 line:-2 align:center
This will also reduce the amount of times
someone may get stuck


98
00:05:22.222 --> 00:05:25.692 line:-2 align:center
and need help getting back on track
with the primary purpose of my app,


99
00:05:25,726 --> 00:05:27,294 line:-1
which is reading.


100
00:05:27,327 --> 00:05:30,397 line:-1
To do this, first conform your AppDelegate


101
00:05:30.430 --> 00:05:33.634 line:-2 align:center
to the UIGuidedAccessRestrictionDelegate
protocol.


102
00:05:33,667 --> 00:05:36,637 line:-2
You need to let Guided Access know
about each restriction


103
00:05:36,670 --> 00:05:39,139 line:-1
by providing an array of identifiers.


104
00:05:39,173 --> 00:05:41,375 line:-1
I've got just one.


105
00:05:41,408 --> 00:05:44,745 line:-2
You're also required to give
a user-facing title for each,


106
00:05:44,778 --> 00:05:49,116 line:-2
as well as an optional description
if you need to provide additional detail.


107
00:05:49,149 --> 00:05:52,085 line:-2
These strings will show up
in the options menu.


108
00:05:52,119 --> 00:05:53,520 line:-1
Finally, implement the


109
00:05:53,554 --> 00:05:56,890 line:-2
guidedAccessRestriction
(withIdentifier:didChange:) method


110
00:05:56,924 --> 00:06:00,961 line:-2
to receive a callback
when a restriction is toggled.


111
00:06:00,994 --> 00:06:04,431 line:-2
This is where your app could post
a notification to perform logic


112
00:06:04,464 --> 00:06:06,300 line:-2
which would accommodate
the restriction,


113
00:06:06,333 --> 00:06:09,069 line:-2
like turning off user interaction
for certain buttons


114
00:06:09,102 --> 00:06:12,706 line:-2
or introducing some of those
design principles from earlier.


115
00:06:13.440 --> 00:06:16.844 line:-2 align:center
Check if a custom restriction
is enabled at any time by calling


116
00:06:16,877 --> 00:06:21,381 line:-2
guidedAccessRestrictionState
(forIdentifier:) on UIAccessibility.


117
00:06:21,415 --> 00:06:25,652 line:-2
All of the system provided restrictions
and your custom app-based restrictions


118
00:06:25,686 --> 00:06:28,455 line:-1
make Guided Access extremely configurable,


119
00:06:28.488 --> 00:06:32.359 line:-2 align:center
which is why it is a fantastic
accessibility feature.


120
00:06:32,392 --> 00:06:35,996 line:-2
Guided Access can be found
in Accessibility Settings.


121
00:06:36.029 --> 00:06:39.566 line:-2 align:center
Other Single App Modes are available
for you to programmatically enter


122
00:06:39,600 --> 00:06:41,802 line:-1
a restricted session on device.


123
00:06:41,835 --> 00:06:44,838 line:-2
They share similarities with
Guided Access, but the key difference


124
00:06:44,872 --> 00:06:48,809 line:-2
is just that: you're programmatically
entering this mode.


125
00:06:48.842 --> 00:06:51.378 line:-2 align:center
This means there's plenty to talk about
for setting up,


126
00:06:51,411 --> 00:06:54,748 line:-2
starting, and customizing
your Single App Mode session.


127
00:06:54.781 --> 00:06:57.417 line:-2 align:center
Remember each of those scenarios
from earlier?


128
00:06:57.451 --> 00:07:00.220 line:-1 align:center
An iPad being used as a restaurant kiosk,


129
00:07:00,254 --> 00:07:03,357 line:-2
at a medical office, in a testing
environment–


130
00:07:03,390 --> 00:07:07,594 line:-2
single App Modes are the right solution
for all of these situations.


131
00:07:07,628 --> 00:07:10,330 line:-2
Even though each may have
slightly different needs,


132
00:07:10,364 --> 00:07:14,101 line:-2
they all benefit from locking the device
to a single app.


133
00:07:14.134 --> 00:07:16.737 line:-2 align:center
This prevents people from swiping
to go home,


134
00:07:16.770 --> 00:07:21.842 line:-2 align:center
modifying things in Settings,
or even looking something up in Safari.


135
00:07:21,875 --> 00:07:25,212 line:-2
Let's go through each of these
and I'll recommend a Single App Mode


136
00:07:25.245 --> 00:07:27.214 line:-1 align:center
based on the restrictions we'll need.


137
00:07:28,448 --> 00:07:32,252 line:-2
The first mode is the most basic,
and it's the easiest to deploy.


138
00:07:32.286 --> 00:07:35.055 line:-1 align:center
It's simply called Single App Mode.


139
00:07:35,088 --> 00:07:37,391 line:-2
This is the right solution
for when you have a device


140
00:07:37,424 --> 00:07:41,995 line:-2
that you intend to stay in a single app
pretty much in perpetuity.


141
00:07:42,029 --> 00:07:44,798 line:-1
It remains locked in-app after reboot,


142
00:07:44,831 --> 00:07:48,202 line:-2
and there is no manual intervention
needed for upkeep.


143
00:07:48,235 --> 00:07:51,004 line:-1
Great for a low-involvement approach.


144
00:07:51.038 --> 00:07:52.773 line:-1 align:center
A few considerations, though!


145
00:07:52.806 --> 00:07:54.975 line:-1 align:center
The device must be supervised.


146
00:07:55,008 --> 00:07:58,078 line:-2
Supervision tools
let you lock a high volume of devices


147
00:07:58.111 --> 00:08:00.047 line:-1 align:center
into Single App Mode at once,


148
00:08:00,080 --> 00:08:04,484 line:-2
so this is a very scalable solution
if you're working with a lot of devices.


149
00:08:04,518 --> 00:08:08,355 line:-2
Apple Configurator lets you manage
supervised devices in many ways,


150
00:08:08.388 --> 00:08:11.825 line:-1 align:center
including putting them in Single App Mode.


151
00:08:11,859 --> 00:08:17,231 line:-2
Select a supervised device, then under
Advanced, select Start Single App Mode.


152
00:08:19,466 --> 00:08:22,736 line:-2
The last thing you need to do
is select an app.


153
00:08:22.769 --> 00:08:25.005 line:-1 align:center
Once you do, it will launch automatically,


154
00:08:25.038 --> 00:08:26.707 line:-1 align:center
and lock into the foreground.


155
00:08:28,675 --> 00:08:30,844 line:-1
There is no other way to exit this mode.


156
00:08:30.878 --> 00:08:34.181 line:-2 align:center
As I mentioned, it will stay locked
to this app even upon reboot


157
00:08:34,214 --> 00:08:37,618 line:-2
unless you end Single App Mode
through your management software.


158
00:08:38,452 --> 00:08:41,588 line:-2
Autonomous Single App Mode
is better suited for situations


159
00:08:41.622 --> 00:08:45.058 line:-2 align:center
where a restricted state
is entered and exited often.


160
00:08:45.092 --> 00:08:48.395 line:-2 align:center
For example, at a medical office
where a new patient fills in


161
00:08:48,428 --> 00:08:52,299 line:-2
their information on an iPad,
and then hands it back to the staff.


162
00:08:52,332 --> 00:08:55,702 line:-2
This means there is manual intervention
between restrictions.


163
00:08:55.736 --> 00:08:57.905 line:-1 align:center
Your app gets to do this by itself,


164
00:08:57.938 --> 00:09:01.708 line:-2 align:center
by using a single API method call
to get in and out.


165
00:09:01,742 --> 00:09:05,279 line:-2
Again, considerations–
the device must be supervised,


166
00:09:05.312 --> 00:09:08.916 line:-2 align:center
and the app that wants to use this API
must be allow listed


167
00:09:08.949 --> 00:09:11.185 line:-1 align:center
on the device's configuration profile,


168
00:09:11,218 --> 00:09:14,588 line:-2
or the request to lock will fail
because it's not privileged.


169
00:09:14.621 --> 00:09:16.557 line:-1 align:center
The all-powerful method is


170
00:09:16,590 --> 00:09:21,828 line:-2
requestGuidedAccessSession(enabled:complet
ionHandler:) on UIAccessibility.


171
00:09:21,862 --> 00:09:23,931 line:-1
Hey, that looks familiar! Right?


172
00:09:23.964 --> 00:09:27.134 line:-2 align:center
This API taps right into the roots
of Guided Access.


173
00:09:27.167 --> 00:09:30.904 line:-2 align:center
You're essentially programmatically
entering and exiting this feature


174
00:09:30,938 --> 00:09:32,005 line:-1
with this code.


175
00:09:32,039 --> 00:09:33,674 line:-1
Isn't that cool?


176
00:09:33,707 --> 00:09:36,710 line:-2
That's because Guided Access
serves as the foundation


177
00:09:36,743 --> 00:09:38,679 line:-1
for other single app modes to exist.


178
00:09:38,712 --> 00:09:40,581 line:-1
Bet you didn't know that!


179
00:09:40.614 --> 00:09:43.617 line:-2 align:center
Let's see how this code might work
in action.


180
00:09:43,650 --> 00:09:46,453 line:-2
I have a method each for entering
and exiting this mode


181
00:09:46.486 --> 00:09:48.055 line:-1 align:center
that I'll call when I'm ready.


182
00:09:48,088 --> 00:09:51,525 line:-2
They're performing different actions
like starting a new patient sign-up sheet


183
00:09:51.558 --> 00:09:53.660 line:-1 align:center
when we enter a restricted state


184
00:09:53.694 --> 00:09:57.164 line:-2 align:center
and then bookkeep their information
upon exiting.


185
00:09:57,197 --> 00:10:00,467 line:-2
Of course, you'll want to properly address
the result of the completion handler


186
00:10:00.501 --> 00:10:02.035 line:-1 align:center
to know if something goes wrong.


187
00:10:02,069 --> 00:10:04,705 line:-2
If so, you may want to give
an alert to the user


188
00:10:04,738 --> 00:10:08,375 line:-2
and hold off on continuing the experience
forward, so they can try again.


189
00:10:08,408 --> 00:10:11,678 line:-2
Check if Autonomous Single App Mode
is enabled at any time


190
00:10:11,712 --> 00:10:16,250 line:-2
by calling isGuidedAccessEnabled
on UIAccessibility.


191
00:10:16,283 --> 00:10:19,753 line:-2
Also observe the
guidedAccessStatusDidChangeNotification


192
00:10:19,786 --> 00:10:23,524 line:-2
to trigger any additional code
when entering or exiting this mode.


193
00:10:23.557 --> 00:10:26.560 line:-2 align:center
And remember that the app which wants
to use this API must


194
00:10:26.593 --> 00:10:29.229 line:-2 align:center
have the proper supervision and
management,


195
00:10:29,263 --> 00:10:33,433 line:-2
including allowlisting the app's bundle ID
as an allowed application


196
00:10:33.467 --> 00:10:36.270 line:-1 align:center
for Autonomous Single App Mode.


197
00:10:36.303 --> 00:10:38.906 line:-1 align:center
And finally, assessment mode.


198
00:10:38,939 --> 00:10:42,576 line:-2
This is the right mode when your app aims
to prevent unfair advantages,


199
00:10:42,609 --> 00:10:45,846 line:-2
by restricting certain features
during testing.


200
00:10:45.879 --> 00:10:48.048 line:-1 align:center
Turn off autocorrect, spellcheck,


201
00:10:48,081 --> 00:10:50,217 line:-1
and single app mode locks to the app


202
00:10:50,250 --> 00:10:54,454 line:-2
so the test taker can't access
outside notes or resources.


203
00:10:54.488 --> 00:10:58.525 line:-2 align:center
Recently these frameworks
have been unified for iOS and macOS,


204
00:10:58.559 --> 00:11:02.129 line:-2 align:center
when we introduced the Automatic
Assessment Configuration framework!


205
00:11:02,162 --> 00:11:06,166 line:-2
To use this, the device does not need
to be supervised like the previous modes,


206
00:11:06.200 --> 00:11:10.337 line:-2 align:center
but you do need to apply to Apple for
an assessment entitlement for your app.


207
00:11:10.370 --> 00:11:13.240 line:-2 align:center
More information about applying
for the entitlement can be found


208
00:11:13.273 --> 00:11:15.042 line:-1 align:center
in the developer documentation.


209
00:11:15,075 --> 00:11:18,278 line:-2
My colleague Josh has
a fantastic WWDC session


210
00:11:18,312 --> 00:11:22,149 line:-2
that explains how to use the Automatic
Assessment Configuration framework,


211
00:11:22,182 --> 00:11:25,752 align:center
including tons of code examples
and documentation resources.


212
00:11:25,786 --> 00:11:27,487 line:0
Please go check it out.


213
00:11:27,521 --> 00:11:30,657 line:-2
Once you know which single app
mode solution is right for you,


214
00:11:30,691 --> 00:11:33,327 line:-1
or if you already have a solution working,


215
00:11:33,360 --> 00:11:37,931 line:-2
remember to keep in mind that people using
assistive technologies do use your apps.


216
00:11:37,965 --> 00:11:41,935 line:-2
There may be extra steps you need to take
to make this experience accessible.


217
00:11:42.736 --> 00:11:46.940 line:-2 align:center
In our classic example of an iPad
being used as a restaurant kiosk,


218
00:11:46,974 --> 00:11:51,144 line:-2
Let's consider that a blind customer
comes by to order.


219
00:11:51.178 --> 00:11:55.949 line:-2 align:center
If the device is plainly locked into
Single App Mode, then we have a problem.


220
00:11:55.983 --> 00:11:58.719 line:-2 align:center
You wouldn't be able to open Settings,
head to Accessibility,


221
00:11:58.752 --> 00:12:00.854 line:-1 align:center
and turn on VoiceOver for this customer.


222
00:12:00.888 --> 00:12:02.489 line:-1 align:center
So what can you do?


223
00:12:03,657 --> 00:12:06,493 line:-2
Apple Configurator and other
device management software


224
00:12:06,527 --> 00:12:10,464 line:-2
help you configure options
for Single App Mode.


225
00:12:10.497 --> 00:12:15.769 line:-2 align:center
A handful of accessibility features are
available for you to have always enabled,


226
00:12:15.802 --> 00:12:19.840 line:-2 align:center
and the Accessibility Shortcut,
also known as "triple-click" menu,


227
00:12:19,873 --> 00:12:23,610 line:-2
is configurable to let users
quickly toggle accessibility features


228
00:12:23,644 --> 00:12:25,546 line:-1
like VoiceOver, Zoom,


229
00:12:25,579 --> 00:12:29,283 line:-2
Invert Colors,
AssistiveTouch, and Voice Control.


230
00:12:29,316 --> 00:12:31,185 line:-1
When these features are always on,


231
00:12:31,218 --> 00:12:34,087 line:-2
or when they're assigned
to the accessibility shortcut,


232
00:12:34,121 --> 00:12:36,523 line:-2
you enable people who rely on these
technologies


233
00:12:36,557 --> 00:12:39,159 line:-1
to use them while they navigate your app.


234
00:12:39,193 --> 00:12:43,063 line:-2
It's pretty easy to set this up,
so don't miss your chance to do so.


235
00:12:44,965 --> 00:12:48,735 line:-2
But those options have to be configured
before entering Single App Mode.


236
00:12:48.769 --> 00:12:51.572 line:-1 align:center
So what about during Single App Mode?


237
00:12:51.605 --> 00:12:55.843 line:-2 align:center
Use API on UIAccessibility
to toggle certain accessibility features


238
00:12:55.876 --> 00:12:57.511 line:-1 align:center
directly with code.


239
00:12:57,544 --> 00:13:01,682 line:-2
It's a great alternative to toggling
a feature with the accessibility shortcut,


240
00:13:01.715 --> 00:13:05.152 line:-2 align:center
which is helpful when device is encased
in a kiosk enclosure


241
00:13:05,185 --> 00:13:07,588 line:-1
that blocks off hardware buttons.


242
00:13:07.621 --> 00:13:11.925 line:-2 align:center
We made this API so it's easy for you
to turn off accessibility features,


243
00:13:11,959 --> 00:13:16,230 line:-2
so you can do some housekeeping
and reset state between users.


244
00:13:16,263 --> 00:13:20,501 line:-2
To do this, call configureForGuidedAccess
on UIAccessibility.


245
00:13:20,534 --> 00:13:23,270 line:-2
You must pass in
a compatible accessibility feature,


246
00:13:23,303 --> 00:13:25,539 line:-1
and whether you want it enabled or not.


247
00:13:25.572 --> 00:13:29.510 line:-2 align:center
This works for Zoom,
VoiceOver, Invert Colors,


248
00:13:29,543 --> 00:13:32,713 line:-1
AssistiveTouch, and Grayscale.


249
00:13:32.746 --> 00:13:36.283 line:-2 align:center
So whether your app has custom
restrictions for Guided Access


250
00:13:36,316 --> 00:13:39,953 line:-2
or you build your entire experience
around Single App Modes,


251
00:13:39.987 --> 00:13:43.457 line:-2 align:center
it's important to know how to make sure
it's accessible.


252
00:13:43.490 --> 00:13:47.394 line:-2 align:center
The wrong kind of restrictions
make something less accessible to use,


253
00:13:47.427 --> 00:13:52.232 line:-2 align:center
so always consider the experience of
someone with a disability using your app.


254
00:13:52.266 --> 00:13:57.337 line:-2 align:center
I've shown you the APIs you need to create
an accessible Single App Mode experience.


255
00:13:57.371 --> 00:14:01.308 line:-2 align:center
Now go make something great,
and accessible!

