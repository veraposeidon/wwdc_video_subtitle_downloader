2
00:00:00.334 --> 00:00:06.340 line:-1 align:center
[upbeat music]


3
00:00:09.676 --> 00:00:12.546 line:-2 align:center
Hey there,
I'm Justin from Privacy Engineering,


4
00:00:12,579 --> 00:00:15,415 line:-2
and welcome to
"What's new in privacy."


5
00:00:15,449 --> 00:00:19,686 line:-2
At Apple, we believe
that privacy is a fundamental human right,


6
00:00:19.720 --> 00:00:24.758 line:-2 align:center
and protecting people's privacy
is at the center of everything we do.


7
00:00:24.791 --> 00:00:29.029 line:-2 align:center
You want people to love your app
and make it part of their life.


8
00:00:29,062 --> 00:00:32,699 line:-2
Building a great feature
is how you get their attention,


9
00:00:32,733 --> 00:00:36,436 line:-2
and building with privacy
is how you maintain their trust


10
00:00:36.470 --> 00:00:39.239 line:-1 align:center
and your place in their life.


11
00:00:39.273 --> 00:00:44.111 line:-2 align:center
When people understand what data is
collected about them and how it's used,


12
00:00:44.144 --> 00:00:46.513 line:-1 align:center
they're more likely to fully engage


13
00:00:46,547 --> 00:00:50,450 line:-2
with your app or service
instead of choosing an alternative.


14
00:00:51,618 --> 00:00:55,856 line:-2
At Apple, we've prioritized
great features and great privacy


15
00:00:55.889 --> 00:00:57.891 line:-1 align:center
for the people who use our products,


16
00:00:57,925 --> 00:01:01,161 line:-2
and we want to help you deliver
this to your customers too.


17
00:01:01,195 --> 00:01:06,567 align:center
At Apple, we approach this goal
of great features and great privacy


18
00:01:06,600 --> 00:01:10,971 line:0
with a set of actionable patterns,
the privacy pillars.


19
00:01:11,004 --> 00:01:15,742 line:0
These are a great guide for you as well
on how build privacy into your app.


20
00:01:15,776 --> 00:01:18,912 align:center
The first is data minimization.


21
00:01:18,946 --> 00:01:23,083 line:0
Use only the data needed
to build the feature.


22
00:01:23,116 --> 00:01:25,719 line:0
Next is on-device processing.


23
00:01:25,752 --> 00:01:28,889 line:0
If the feature requires sensitive data,


24
00:01:28,922 --> 00:01:33,260 line:0
use the power of the device
to avoid sharing it with the server.


25
00:01:33,293 --> 00:01:36,964 line:0
Third is transparency and control.


26
00:01:36,997 --> 00:01:39,800 line:0
If sensitive data is sent off device,


27
00:01:39,833 --> 00:01:43,670 align:center
make sure people understand what is sent,
how it's used,


28
00:01:43,704 --> 00:01:46,206 line:0
and give them control.


29
00:01:46,240 --> 00:01:48,976 line:0
Finally, security protections.


30
00:01:49,009 --> 00:01:52,579 line:0
Protect sensitive data
in transit and at rest,


31
00:01:52,613 --> 00:01:55,682 align:center
both on and off the device.


32
00:01:56,683 --> 00:02:01,989 line:-2
In this video, I'll talk about some
platform changes that will impact you,


33
00:02:02.022 --> 00:02:06.093 line:-2 align:center
some new privacy-enhancing features
that you should adopt,


34
00:02:06,126 --> 00:02:10,430 line:-2
and an important new feature
with privacy impact.


35
00:02:12,199 --> 00:02:17,571 line:-2
First, I'll talk about some changes coming
to the platform that will impact your app.


36
00:02:17,604 --> 00:02:23,744 line:-2
iOS 16 and macOS Ventura
include several important changes:


37
00:02:23,777 --> 00:02:28,115 line:-2
a new device name entitlement
that restricts access to the device name;


38
00:02:29,349 --> 00:02:34,221 line:-2
the location indicator now
shows app attribution in Control Center;


39
00:02:35,789 --> 00:02:39,159 line:-2
improvements to Gatekeeper
that verify the integrity


40
00:02:39.193 --> 00:02:42.262 line:-1 align:center
of notarized apps in more places;


41
00:02:43.764 --> 00:02:47.301 line:-2 align:center
launching Mac apps at login
now notifies people of additions


42
00:02:47.334 --> 00:02:49.803 line:-1 align:center
and has a simplified API;


43
00:02:51,371 --> 00:02:55,042 line:-2
legacy Pasteboard access
now requires permission.


44
00:02:55.976 --> 00:03:00.581 line:-2 align:center
I'll start with changes
to device name access.


45
00:03:00,614 --> 00:03:03,016 line:0
To make it easier to identify devices,


46
00:03:03,050 --> 00:03:05,919 line:0
the user's name
from their Apple ID account


47
00:03:05,953 --> 00:03:11,225 align:center
is included by default as part
of the device name on iOS.


48
00:03:11,258 --> 00:03:15,495 line:0
Before iOS 16,
the UIDevice API allowed apps


49
00:03:15,529 --> 00:03:18,832 line:0
to access the user-assigned device name.


50
00:03:18,866 --> 00:03:23,604 line:0
To better align app access
of this value with user expectations,


51
00:03:23,637 --> 00:03:27,741 align:center
the UIDevice.name API will
return the model of the device


52
00:03:27,774 --> 00:03:32,980 align:center
rather than the user-assigned name,
regardless of how people customize it.


53
00:03:34,915 --> 00:03:38,852 line:-2
We understand that some apps
have multi-device experiences


54
00:03:38.886 --> 00:03:40.687 line:-1 align:center
that utilize the device name,


55
00:03:40,721 --> 00:03:44,324 line:-2
like making it clear to people
where a document was last edited.


56
00:03:45.492 --> 00:03:51.331 line:-2 align:center
If your app uses multi-device features
and makes this visible in your app's UI,


57
00:03:51.365 --> 00:03:55.469 line:-2 align:center
you can request the entitlement
to access the device name.


58
00:03:55.502 --> 00:04:00.073 line:-2 align:center
Even with this entitlement,
sharing the device name with third parties


59
00:04:00,107 --> 00:04:04,411 line:-2
other than cloud-hosting service providers
is not permitted.


60
00:04:06,113 --> 00:04:10,417 line:-2
Next is updates
to attribution for location use.


61
00:04:11.485 --> 00:04:16.390 line:-2 align:center
When apps use location,
iOS displays an arrow in the status bar.


62
00:04:17.824 --> 00:04:21.361 line:-2 align:center
In iOS 16,
swiping down from the Control Center


63
00:04:21.395 --> 00:04:25.065 line:-1 align:center
indicates which app is using location.


64
00:04:25.098 --> 00:04:28.202 line:-2 align:center
Make sure that your app
only uses location when expected


65
00:04:28,235 --> 00:04:30,504 line:-1
to avoid surprising people.


66
00:04:32.873 --> 00:04:34.942 line:-1 align:center
Now I'd like to talk about the Mac.


67
00:04:34,975 --> 00:04:38,679 line:-2
Gatekeeper checks the integrity
of newly-downloaded apps.


68
00:04:38.712 --> 00:04:41.481 line:-2 align:center
In macOS Ventura,
Gatekeeper will now check


69
00:04:41,515 --> 00:04:45,853 line:-2
the integrity of all notarized apps,
not just quarantined apps.


70
00:04:46,920 --> 00:04:49,756 line:-1
First, apps need to be properly signed.


71
00:04:49,790 --> 00:04:51,525 line:-1
Starting with macOS Ventura,


72
00:04:51,558 --> 00:04:54,761 line:-2
if your notarized app is
no longer validly signed,


73
00:04:54,795 --> 00:04:58,298 line:-2
it will be blocked
by Gatekeeper on first launch.


74
00:04:58.332 --> 00:05:01.001 line:-2 align:center
You should sign
all your executables and bundles


75
00:05:01.034 --> 00:05:05.706 line:-2 align:center
and ensure that their signatures stay
valid when you make changes to your apps.


76
00:05:05,739 --> 00:05:09,943 line:-2
In addition to an integrity check,
Gatekeeper will also prevent


77
00:05:09,977 --> 00:05:12,713 line:-2
your app from being modified
in certain ways.


78
00:05:14.181 --> 00:05:17.885 line:-2 align:center
The most common way
apps are modified is for updates.


79
00:05:17,918 --> 00:05:23,090 line:-2
Apps validly signed by the same
developer account or team will continue


80
00:05:23,123 --> 00:05:24,424 line:-1
to be able to update each other.


81
00:05:24.458 --> 00:05:26.159 line:-1 align:center
This will just work.


82
00:05:26,960 --> 00:05:29,563 align:center
To allow another development team
to update your app


83
00:05:29,596 --> 00:05:32,833 align:center
or restrict updates to only your updater,


84
00:05:32,866 --> 00:05:35,936 align:center
you can update your info-plist.


85
00:05:35,969 --> 00:05:39,540 align:center
For example, here,
Unrelated App can allow Pal About


86
00:05:39,573 --> 00:05:42,376 align:center
to update it with just a plist change.


87
00:05:44,745 --> 00:05:49,850 line:-2
Simply add the NSUpdateSecurityPolicy
you want to allow.


88
00:05:49,883 --> 00:05:55,489 line:-2
Within NSUpdateSecurityPolicy,
add “AllowProcesses”, a dictionary


89
00:05:55.522 --> 00:06:00.194 line:-2 align:center
mapping team identifiers
to an array of signing identifiers.


90
00:06:00.227 --> 00:06:03.664 line:-2 align:center
In this example,
the policy allows any process


91
00:06:03,697 --> 00:06:09,036 line:-2
with the signing identifier
com.example.pal.about


92
00:06:09.069 --> 00:06:13.774 line:-2 align:center
signed by Pal About's team identifier
to update your app.


93
00:06:13.807 --> 00:06:16.710 line:-2 align:center
If an app is modified
by something that isn't signed


94
00:06:16,743 --> 00:06:19,246 line:-2
by the same development team
and isn't allowed


95
00:06:19,279 --> 00:06:23,617 line:-1
by an NSUpdateSecurityPolicy,


96
00:06:23.650 --> 00:06:26.119 line:-1 align:center
macOS will block the modification


97
00:06:26,153 --> 00:06:31,058 line:-2
and notify the user that an app wants
to manage other apps.


98
00:06:31,091 --> 00:06:35,062 line:-2
Clicking on the notification
sends people to System Settings,


99
00:06:35,095 --> 00:06:39,499 line:-2
where they can allow an app
to update and modify other apps.


100
00:06:41,235 --> 00:06:44,805 line:-2
To prepare for macOS Ventura,
you should sign the executables


101
00:06:44.838 --> 00:06:47.307 line:-1 align:center
and bundles for your app and make sure


102
00:06:47.341 --> 00:06:50.777 line:-2 align:center
those signatures remain valid
after updates.


103
00:06:50,811 --> 00:06:57,050 line:-2
Enumerate any updaters you use
and adopt an NSUpdateSecurityPolicy.


104
00:06:57.084 --> 00:07:02.523 line:-2 align:center
Remember that if your app tries
to modify other apps outside the policy,


105
00:07:02,556 --> 00:07:04,992 line:-1
users will need to allow this.


106
00:07:07,027 --> 00:07:11,765 line:-2
Next, I'll talk about launching apps
at login on the Mac.


107
00:07:11.798 --> 00:07:16.203 line:-2 align:center
In macOS Monterey and earlier,
when someone logs into their Mac,


108
00:07:16.236 --> 00:07:20.474 line:-2 align:center
apps can run at login
using launch agents or daemons.


109
00:07:20.507 --> 00:07:24.111 line:-2 align:center
This is convenient as it allows apps
to run menu helpers,


110
00:07:24.144 --> 00:07:26.547 line:-2 align:center
check for software updates
in the background


111
00:07:26,580 --> 00:07:29,950 line:-1
or synchronize data across multiple apps.


112
00:07:31,051 --> 00:07:33,921 line:-1
Sometimes when a user logs into their Mac,


113
00:07:33.954 --> 00:07:37.424 line:-2 align:center
apps that aren't relevant open
and may be in their way.


114
00:07:37.457 --> 00:07:43.463 line:-2 align:center
In addition, apps or other software
can access sensors or data like location.


115
00:07:43.497 --> 00:07:46.166 line:-2 align:center
It is not always clear to people
that this is happening,


116
00:07:46.200 --> 00:07:49.236 line:-1 align:center
as what's running may not be visible.


117
00:07:49.269 --> 00:07:50.737 line:-1 align:center
And for developers,


118
00:07:50,771 --> 00:07:54,174 line:-2
it's not always clear which mechanism
to use to launch at login:


119
00:07:54,208 --> 00:07:58,045 line:-1
daemons, agents, service management…?


120
00:07:58.078 --> 00:08:01.815 line:-1 align:center
With macOS Ventura, this is much simpler.


121
00:08:03,250 --> 00:08:08,255 line:-2
In macOS Ventura, you can use
a new, single API to launch your app,


122
00:08:08,288 --> 00:08:11,191 line:-1
launch agent or daemon at login.


123
00:08:11,225 --> 00:08:14,361 line:-2
Your app will be allowed
to launch at login by default,


124
00:08:14.394 --> 00:08:16.763 line:-1 align:center
and users will be notified.


125
00:08:16.797 --> 00:08:19.867 line:-2 align:center
If your app requires a daemon
with elevated permissions,


126
00:08:19.900 --> 00:08:22.736 line:-1 align:center
it will require admin approval to enable.


127
00:08:25.339 --> 00:08:28.709 line:-2 align:center
Clicking on the notification
opens the Login Items pane


128
00:08:28,742 --> 00:08:33,280 line:-2
in System Settings, where people can
manage apps that launch on their system.


129
00:08:33.313 --> 00:08:36.550 line:-2 align:center
The top portion
controls apps that run at login,


130
00:08:36,583 --> 00:08:40,487 line:-2
and the bottom portion controls
other items that run at login.


131
00:08:40.521 --> 00:08:44.324 line:-2 align:center
This pane now controls different ways
apps can run at login,


132
00:08:44.358 --> 00:08:48.362 line:-2 align:center
including agents,
daemons, SMLoginItems,


133
00:08:48.395 --> 00:08:51.331 line:-2 align:center
and apps that add themselves
to open at login.


134
00:08:51.365 --> 00:08:53.967 line:-1 align:center
Here's how you can use this new API.


135
00:08:55,569 --> 00:08:58,605 line:-2
The service management framework
makes it easy for you


136
00:08:58.639 --> 00:09:00.574 line:-1 align:center
to launch resources at login.


137
00:09:00.607 --> 00:09:04.444 line:-2 align:center
Since all agents and daemons
live inside your app bundle,


138
00:09:04,478 --> 00:09:07,481 line:-2
you don't need to use an installer
to write launch agents


139
00:09:07,514 --> 00:09:12,986 line:-2
or create cleanup scripts anymore,
and this works in Mac App Store apps too.


140
00:09:13,020 --> 00:09:17,891 line:-2
Call the SMAppService API
from your app to control when people


141
00:09:17,925 --> 00:09:22,229 line:-2
get the notification and what
your app icon looks like in Settings.


142
00:09:24,398 --> 00:09:27,634 line:-1
Next is pasteboard access.


143
00:09:29.736 --> 00:09:34.107 line:-2 align:center
Previously, a transparency notice
let people know when apps accessed


144
00:09:34.141 --> 00:09:38.045 line:-2 align:center
the pasteboard when they had
not pressed paste in the edit options.


145
00:09:39,613 --> 00:09:44,985 line:-2
In iOS 16, the system confirms intent
for all access to pasteboard items


146
00:09:45,018 --> 00:09:47,688 line:-1
written by other apps.


147
00:09:47.721 --> 00:09:51.425 line:-2 align:center
If your app continues
to access values for pasteboard items


148
00:09:51.458 --> 00:09:57.130 line:-2 align:center
using the UIPasteboard API,
the system will display a modal prompt.


149
00:09:57.164 --> 00:10:00.801 line:-2 align:center
There are three ways to avoid
this prompt appearing in your app.


150
00:10:00.834 --> 00:10:03.904 line:-1 align:center
The first is to use the edit options menu.


151
00:10:03.937 --> 00:10:07.074 line:-2 align:center
The second is
to use the keyboard shortcut.


152
00:10:07,107 --> 00:10:10,244 line:-2
In the “Features to adopt” section,
I'll talk about the third option,


153
00:10:10,277 --> 00:10:13,180 line:-1
the new UIKit paste controls.


154
00:10:14,448 --> 00:10:16,984 line:-2
Those are the privacy changes
coming to the platform


155
00:10:17.017 --> 00:10:18.886 line:-1 align:center
that you need to know about.


156
00:10:18.919 --> 00:10:22.856 line:-2 align:center
In addition, there are a few new
privacy-enhancing technologies


157
00:10:22.890 --> 00:10:26.159 line:-2 align:center
that make it easier for you
to build seamless experiences


158
00:10:26,193 --> 00:10:28,595 line:-1
with privacy into your app.


159
00:10:29,730 --> 00:10:33,767 line:-2
I'll start by talking
about UIKit paste controls.


160
00:10:35,169 --> 00:10:38,605 line:-2
Add UIKit paste controls
to your app experience


161
00:10:38.639 --> 00:10:44.144 line:-2 align:center
so people can intuitively provide access
to their pasteboard by pressing a button.


162
00:10:44.178 --> 00:10:48.549 line:-2 align:center
Adopting UIKit paste controls
allows pasting without an edit menu,


163
00:10:48.582 --> 00:10:50.984 line:-1 align:center
keyboard shortcut or system prompt.


164
00:10:51,018 --> 00:10:54,821 line:-2
The system confirms intent
by verifying the button was


165
00:10:54.855 --> 00:10:57.958 line:-1 align:center
visibly displayed and tapped.


166
00:10:57,991 --> 00:11:00,594 line:-2
Customize these buttons
to fit with your app's interface.


167
00:11:00,627 --> 00:11:02,362 line:-1
Change the rounded corners


168
00:11:02.396 --> 00:11:06.500 line:-2 align:center
or change the color of the text,
icon or background.


169
00:11:06.533 --> 00:11:09.536 line:-2 align:center
Just be sure
the button has enough contrast


170
00:11:09.570 --> 00:11:11.872 line:-1 align:center
and isn't hidden behind other elements


171
00:11:11,905 --> 00:11:13,740 line:-1
or it won't work.


172
00:11:13.774 --> 00:11:17.678 line:-2 align:center
Make sure to test that your paste buttons
work as you expect.


173
00:11:19.680 --> 00:11:22.416 line:-2 align:center
Another tool to create
a seamless experience


174
00:11:22,449 --> 00:11:27,421 line:-2
while minimizing data access
is media device discovery.


175
00:11:27.454 --> 00:11:30.557 line:-2 align:center
Apps today use a wide range
of streaming protocols,


176
00:11:30.591 --> 00:11:33.994 line:-2 align:center
with custom discovery
and communication logic.


177
00:11:35,295 --> 00:11:38,165 line:-2
To stream media using one
of those protocols before,


178
00:11:38.198 --> 00:11:41.101 line:-2 align:center
apps needed permission
to access the local network,


179
00:11:41.134 --> 00:11:43.770 line:-1 align:center
and often Bluetooth.


180
00:11:43,804 --> 00:11:47,174 line:-2
This permission is needed
because knowledge of all devices


181
00:11:47,207 --> 00:11:49,676 line:-1
is required to manage device selection


182
00:11:49.710 --> 00:11:53.380 line:-2 align:center
but this provides access
to more information than is necessary


183
00:11:53,413 --> 00:11:56,817 line:-1
and poses a fingerprinting risk.


184
00:11:56.850 --> 00:12:01.388 line:-2 align:center
Media device discovery lets
your app stream to selected devices


185
00:12:01.421 --> 00:12:05.659 line:-2 align:center
without having to present network
or Bluetooth access prompts.


186
00:12:05,692 --> 00:12:09,263 line:-2
Streaming devices appear right
in the same picker as AirPlay,


187
00:12:09,296 --> 00:12:13,767 line:-2
and apps only see
the device picked to stream to.


188
00:12:13.800 --> 00:12:17.638 line:-2 align:center
This works thanks
to DeviceDiscovery extensions.


189
00:12:19,239 --> 00:12:23,143 line:0
This extension can search
for local network and Bluetooth devices


190
00:12:23,177 --> 00:12:28,549 line:0
but is sandboxed separately from the app,
so it can't send scan results back.


191
00:12:28,582 --> 00:12:33,120 line:0
This means no broad permission is needed
for the app to access the local network


192
00:12:33,153 --> 00:12:38,125 align:center
or Bluetooth since the app
doesn't see the whole network.


193
00:12:38,158 --> 00:12:42,129 line:0
Instead, the extension can
only send the discovered accessories


194
00:12:42,162 --> 00:12:45,666 line:0
to the DeviceDiscoveryExtension framework.


195
00:12:46,633 --> 00:12:50,304 align:center
The DeviceDiscoveryExtension
framework presents the list


196
00:12:50,337 --> 00:12:54,508 align:center
of discovered devices in the picker,
and after a selection is made,


197
00:12:54,541 --> 00:12:58,011 line:0
the system enables communication
with the selected device.


198
00:12:58,045 --> 00:13:01,081 line:0
No other permissions are needed.


199
00:13:02,549 --> 00:13:06,019 line:0
Protocol providers should
create an app extension


200
00:13:06,053 --> 00:13:08,889 line:0
with DeviceDiscoveryExtension,


201
00:13:08,922 --> 00:13:14,194 align:center
extend AVRoutePickerView
to handle user selection callbacks,


202
00:13:14,228 --> 00:13:18,432 align:center
handle user-selected networking devices
in your protocol,


203
00:13:18,465 --> 00:13:22,569 align:center
download the sample
app and extension to learn more.


204
00:13:22,603 --> 00:13:26,306 align:center
App developers should contact
their streaming protocol provider


205
00:13:26,340 --> 00:13:30,310 align:center
to implement a DeviceDiscoveryExtension.


206
00:13:30.344 --> 00:13:34.414 line:-2 align:center
Media device discovery is
an opportunity to build great features


207
00:13:34.448 --> 00:13:36.250 line:-1 align:center
with great privacy.


208
00:13:36.283 --> 00:13:40.254 line:-2 align:center
Your app gets to access exactly
the data it needs to stream -


209
00:13:40,287 --> 00:13:45,292 line:-2
discovery is simple and prompt-free,
and people get great network privacy.


210
00:13:45,325 --> 00:13:48,328 line:-1
This is a win for everyone.


211
00:13:48.362 --> 00:13:51.932 line:-2 align:center
Just like media device discovery
provides permission to access only


212
00:13:51,965 --> 00:13:54,334 line:-1
the devices needed without prompts,


213
00:13:54.368 --> 00:13:57.137 line:-1 align:center
the PHPicker API provides permission


214
00:13:57.171 --> 00:14:01.408 line:-2 align:center
to access only the photos needed
without prompts.


215
00:14:01,441 --> 00:14:04,978 line:-2
PHPicker is on the Mac now
with macOS Ventura


216
00:14:05.012 --> 00:14:08.282 line:-1 align:center
and the watch with watchOS 9.


217
00:14:08.315 --> 00:14:12.219 line:-2 align:center
Update your Mac and watch apps
to access photos without prompting users


218
00:14:12.252 --> 00:14:14.922 line:-1 align:center
for access to all photos.


219
00:14:17.224 --> 00:14:21.962 line:-2 align:center
Next is private access tokens,
which are a powerful tool to prevent fraud


220
00:14:21,995 --> 00:14:24,398 line:-1
without CAPTCHAs getting in the way.


221
00:14:26,166 --> 00:14:30,704 line:0
Private Access Tokens replace CAPTCHAs
and are built using blinded tokens


222
00:14:30,737 --> 00:14:34,241 align:center
that allow website
or API developers to recognize


223
00:14:34,274 --> 00:14:38,679 line:0
legitimate devices without being able
to track those devices.


224
00:14:38,712 --> 00:14:42,783 line:0
Apple doesn't know what websites
a device fetches tokens for,


225
00:14:42,816 --> 00:14:46,119 align:center
and the servers receiving the tokens
don't learn the identity


226
00:14:46,153 --> 00:14:49,423 align:center
of the device sending the token.


227
00:14:49,456 --> 00:14:54,428 align:center
Private Access Tokens are part
of the Privacy Pass IETF open standard


228
00:14:54,461 --> 00:14:58,398 align:center
and are the same technology we use
to verify the authenticity


229
00:14:58,432 --> 00:15:00,934 align:center
of Private Relay users.


230
00:15:00,968 --> 00:15:03,470 align:center
To learn more, check out the video,


231
00:15:03,504 --> 00:15:06,907 align:center
"Replace CAPTCHAs
with Private Access Tokens."


232
00:15:08,809 --> 00:15:11,778 line:-1
Now I'll go over Passkeys.


233
00:15:12,713 --> 00:15:15,949 line:-2
Passwords are at the center
of authenticating accounts


234
00:15:15.983 --> 00:15:20.687 line:-2 align:center
and keeping personal data secure
but they have serious issues.


235
00:15:20,721 --> 00:15:24,491 line:-2
They're hard to remember,
so people make them simpler


236
00:15:24.525 --> 00:15:27.227 line:-1 align:center
or reuse them across multiple sites.


237
00:15:27.261 --> 00:15:29.029 line:-1 align:center
And they can be phished.


238
00:15:30.464 --> 00:15:34.001 line:-2 align:center
Passkeys enable
a more robust authentication solution


239
00:15:34,034 --> 00:15:37,271 line:-2
and use the same
instantly familiar UI style


240
00:15:37,304 --> 00:15:41,275 line:-2
and biometric verification
as password autofill.


241
00:15:45,179 --> 00:15:48,882 line:0
Passkeys are
built on public key cryptography,


242
00:15:48,916 --> 00:15:51,952 line:0
so the value the server stores
can't be weak,


243
00:15:51,985 --> 00:15:53,453 line:0
and if it's revealed,


244
00:15:53,487 --> 00:15:57,524 align:center
it doesn't matter
because it's truly public.


245
00:15:57,558 --> 00:16:01,862 line:0
Because passkeys are inherently linked
to the website they correspond to,


246
00:16:01,895 --> 00:16:04,231 line:0
they can't be phished.


247
00:16:04,264 --> 00:16:07,034 align:center
For more information
on implementing passkeys,


248
00:16:07,067 --> 00:16:10,370 align:center
there's a full video, "Meet Passkeys.”


249
00:16:12.339 --> 00:16:17.044 line:-2 align:center
Those are the exciting and important
privacy updates for you to adopt!


250
00:16:18,412 --> 00:16:22,649 line:-2
One more important thing I want
to talk about is a new privacy tool


251
00:16:22.683 --> 00:16:26.286 line:-1 align:center
in iOS 16 called Safety Check.


252
00:16:26.320 --> 00:16:29.890 line:-2 align:center
Safety Check is designed
to help people in domestic


253
00:16:29.923 --> 00:16:35.095 line:-2 align:center
or intimate partner violence situations
review and reset access


254
00:16:35.128 --> 00:16:38.332 line:-2 align:center
they may have granted
to others previously.


255
00:16:39.533 --> 00:16:42.569 line:-1 align:center
Safety Check helps in the following ways:


256
00:16:42.603 --> 00:16:47.808 line:-2 align:center
It stops sharing data with people by
turning off location sharing in FindMy


257
00:16:47,841 --> 00:16:52,412 line:-2
and stopping sharing in Photos,
Notes and Calendar.


258
00:16:52.446 --> 00:16:56.884 line:-2 align:center
It stops sharing data with apps
by resetting system privacy permission


259
00:16:56,917 --> 00:16:59,186 line:-1
for all third-party apps.


260
00:16:59,219 --> 00:17:04,191 line:-2
It helps you sign out of FaceTime
and iMessage on your other iCloud devices


261
00:17:04.224 --> 00:17:09.530 line:-2 align:center
to ensure Messages and calls are
sent only to the device in your hand.


262
00:17:09,563 --> 00:17:13,700 line:-2
It walks you through signing
out of other iCloud devices to ensure


263
00:17:13.734 --> 00:17:18.639 line:-2 align:center
other devices can't receive updates
on location from FindMy, Photos,


264
00:17:18.672 --> 00:17:21.475 line:-1 align:center
calendars, etc.


265
00:17:21,508 --> 00:17:24,778 line:-2
It helps you change passwords
for both the device


266
00:17:24,811 --> 00:17:26,813 line:-1
and iCloud account.


267
00:17:26,847 --> 00:17:30,918 line:0
And trusted phone numbers
for iCloud two-factor auth.


268
00:17:30,951 --> 00:17:36,256 line:0
And it helps you manage emergency contacts
to make any changes as needed.


269
00:17:36,290 --> 00:17:40,727 align:center
All these things together help people
with threats to their personal safety


270
00:17:40,761 --> 00:17:43,630 align:center
control access to their data.


271
00:17:44,698 --> 00:17:47,334 line:0
There are two ways to use Safety Check.


272
00:17:47,367 --> 00:17:52,339 line:-2
The first is Emergency Reset,
for crisis situations when you need


273
00:17:52.372 --> 00:17:56.777 line:-2 align:center
to immediately reset access
across people and apps.


274
00:17:57.778 --> 00:18:01.215 line:-1 align:center
The second is Manage Sharing & Access,


275
00:18:01,248 --> 00:18:06,653 line:-2
which provides more fine-grained control
over each capability of Safety Check.


276
00:18:08.288 --> 00:18:14.795 line:-2 align:center
Emergency Reset lets you quickly
take action across all people and all apps


277
00:18:14.828 --> 00:18:20.133 line:-2 align:center
and disables access to FaceTime
and iMessage on your other devices.


278
00:18:20,167 --> 00:18:24,638 line:-2
Then you are walked through securing
your iCloud account to the device


279
00:18:24.671 --> 00:18:28.375 line:-2 align:center
in your hand
and reviewing your emergency contacts


280
00:18:28,408 --> 00:18:30,811 line:-1
and trusted devices.


281
00:18:30,844 --> 00:18:34,681 line:-2
Manage Sharing & Access
lets you review person by person


282
00:18:34.715 --> 00:18:39.119 line:-2 align:center
and app by app
to review who you're sharing with.


283
00:18:39,152 --> 00:18:43,724 line:-2
You can sort this by name or the type
of information you're sharing.


284
00:18:43,757 --> 00:18:47,528 line:-2
This is a great tool
to understand and control your sharing


285
00:18:47,561 --> 00:18:49,563 line:-1
with a particular person.


286
00:18:49,596 --> 00:18:52,499 line:-2
It also can help you find an app
with sensitive permissions


287
00:18:52.533 --> 00:18:55.669 line:-2 align:center
installed by someone
with access to your device.


288
00:18:58.238 --> 00:19:01.642 line:-2 align:center
Quick Exit is available
in all Safety Check flows


289
00:19:01,675 --> 00:19:03,877 line:-1
and quickly lets people exit the flow


290
00:19:03.911 --> 00:19:07.147 line:-2 align:center
if they're concerned
someone might see what they're doing.


291
00:19:07.181 --> 00:19:09.716 line:-2 align:center
Pressing it returns them
to the home screen,


292
00:19:09.750 --> 00:19:11.852 line:-1 align:center
and the next time they enter settings,


293
00:19:11.885 --> 00:19:13.754 line:-2 align:center
they'll be back
on the main settings page,


294
00:19:13,787 --> 00:19:16,523 line:-1
not in Safety Check.


295
00:19:16,557 --> 00:19:21,461 line:-2
Safety Check helps people in domestic
or intimate partner violence situations


296
00:19:21,495 --> 00:19:24,932 line:-1
take back control of their private data.


297
00:19:24,965 --> 00:19:29,436 line:-2
Privacy isn't just about making a decision
in the moment you share data,


298
00:19:29.469 --> 00:19:35.209 line:-2 align:center
but also being able to understand
and change that decision at any time.


299
00:19:35,242 --> 00:19:40,214 line:-2
This is just one example
of how Apple designs for privacy.


300
00:19:40,247 --> 00:19:44,918 line:-2
Designing for privacy in your app
will help you build and maintain trust


301
00:19:44,952 --> 00:19:46,887 line:-1
with your users.


302
00:19:46.920 --> 00:19:53.427 line:-2 align:center
iOS 16 and macOS Ventura bring many new
technologies to help you on this journey.


303
00:19:53,460 --> 00:19:57,297 line:-2
Prepare for new platform updates
like UI device name changes


304
00:19:57,331 --> 00:19:59,833 line:-1
and Gatekeeper improvements.


305
00:19:59,867 --> 00:20:02,569 line:-1
Adopt media device discovery extensions,


306
00:20:02.603 --> 00:20:05.038 line:-1 align:center
UIKit paste controls,


307
00:20:05.072 --> 00:20:09.243 line:-2 align:center
Private Access Tokens,
and Passkeys.


308
00:20:09,276 --> 00:20:10,811 line:-1
Thanks for joining me today.


309
00:20:10.844 --> 00:20:13.380 line:-2 align:center
We can't wait to see how
you build great features


310
00:20:13.413 --> 00:20:15.516 line:-1 align:center
and great privacy into your app.


311
00:20:15.549 --> 00:20:19.987 line:-1 align:center
[upbeat music]

