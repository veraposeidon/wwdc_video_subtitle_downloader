2
00:00:00,334 --> 00:00:06,340 line:-1
[upbeat music]


3
00:00:12.112 --> 00:00:13.180 line:-1 align:center
Andy: Hi there.


4
00:00:13,213 --> 00:00:17,117 line:-2
Welcome to "Adopt desktop class
editing interactions."


5
00:00:17.150 --> 00:00:20.654 line:-1 align:center
I'm Andy, a UIKit frameworks engineer,


6
00:00:20.687 --> 00:00:24.491 line:-2 align:center
and I will be joined later
by my colleague, James.


7
00:00:24.525 --> 00:00:27.027 line:-1 align:center
The iPad is continuously evolving,


8
00:00:27.060 --> 00:00:32.366 line:-2 align:center
without compromising the interactions
that make it simple and easy to use.


9
00:00:32,399 --> 00:00:36,670 line:-2
In this video, you'll learn about the
exciting new editing interactions


10
00:00:36.703 --> 00:00:41.642 line:-2 align:center
that will transform your app
to become more desktop class.


11
00:00:41,675 --> 00:00:48,282 line:-2
First, I'll go over the new edit menus,
which received a major facelift in iOS 16.


12
00:00:49,283 --> 00:00:55,322 line:-2
Later, James will dive into the new system
find and replace experience.


13
00:00:55.355 --> 00:00:59.860 line:-2 align:center
In iOS 16, the edit menu
features an all-new design


14
00:00:59.893 --> 00:01:03.063 line:-2 align:center
that remains familiar
but is more interactive


15
00:01:03.096 --> 00:01:05.799 line:-1 align:center
and is easier to discover actions.


16
00:01:06,733 --> 00:01:09,503 line:-2
The edit menu now
has alternate presentations


17
00:01:09.536 --> 00:01:12.673 line:-1 align:center
based on the input method used.


18
00:01:12.706 --> 00:01:13.974 line:-1 align:center
For touch interactions,


19
00:01:14,007 --> 00:01:17,811 line:-2
the edit menu still has
the familiar compact appearance,


20
00:01:17.845 --> 00:01:20.013 line:-1 align:center
but with an improved paging behavior,


21
00:01:20,047 --> 00:01:23,483 line:-2
allowing actions to be more
discoverable than before.


22
00:01:26,486 --> 00:01:29,423 line:-1
With the Magic Keyboard or a trackpad,


23
00:01:29.456 --> 00:01:33.160 line:-2 align:center
a context menu is presented
on secondary or right click


24
00:01:33.193 --> 00:01:38.966 line:-1 align:center
for a more desktop class experience.


25
00:01:38.999 --> 00:01:45.072 line:-2 align:center
Similarly, touch interaction on the iPhone
will display the new edit menu.


26
00:01:46.707 --> 00:01:48.809 line:-1 align:center
And for Mac Catalyst apps,


27
00:01:48,842 --> 00:01:53,647 line:-2
context menus that Mac users
are familiar with is presented.


28
00:01:53.680 --> 00:01:59.019 line:-2 align:center
In iOS 16, the text edit menu
gets a major power-up


29
00:01:59,052 --> 00:02:02,022 line:-1
with new data detectors integration.


30
00:02:02,055 --> 00:02:06,126 line:-2
This includes inline unit
and currency conversions,


31
00:02:06,159 --> 00:02:07,728 line:-1
as well as smart lookup


32
00:02:07,761 --> 00:02:13,467 line:-2
which displays contextual actions
depending on the selected text.


33
00:02:13.500 --> 00:02:14.868 line:-1 align:center
For example,


34
00:02:14,902 --> 00:02:17,404 line:-1
if you select an address in Safari,


35
00:02:17,437 --> 00:02:19,406 line:-1
you will get Maps-based actions,


36
00:02:19.439 --> 00:02:22.843 line:-1 align:center
like "Get Directions" or "Open in Maps,"


37
00:02:22.876 --> 00:02:27.114 line:-1 align:center
on top of the existing edit menu actions.


38
00:02:27.147 --> 00:02:31.118 line:-2 align:center
The best part is,
there is no adoption required!


39
00:02:31.151 --> 00:02:34.955 line:-2 align:center
These features are available
in every text edit menu,


40
00:02:34,988 --> 00:02:40,794 line:-2
including text interaction views,
WebKit and Safari, as well as PDFKit.


41
00:02:42,996 --> 00:02:48,302 line:-2
To insert actions into a text view's menu,
implement the new TextViewDelegate method


42
00:02:48.335 --> 00:02:51.705 line:-2 align:center
to customize the displayed menu
for text in the given range


43
00:02:51.738 --> 00:02:55.008 line:-1 align:center
with system provided actions.


44
00:02:55,042 --> 00:02:57,244 line:-1
If you don't need to customize anything,


45
00:02:57.277 --> 00:03:01.415 line:-2 align:center
return nil
to get the standard system menu.


46
00:03:01.448 --> 00:03:06.119 line:-2 align:center
There are also similar methods
on UITextFieldDelegate and UITextInput


47
00:03:06.153 --> 00:03:08.655 line:-1 align:center
to customize the menu there too.


48
00:03:08.689 --> 00:03:13.026 line:-2 align:center
Please note that inserting menu items
using UIMenuController


49
00:03:13.060 --> 00:03:15.896 line:-1 align:center
is now deprecated in iOS 16,


50
00:03:15,929 --> 00:03:18,365 line:-2
and you should instead
move to use the new methods


51
00:03:18.398 --> 00:03:21.802 line:-2 align:center
to add menu elements
into your text edit menus,


52
00:03:21,835 --> 00:03:26,673 line:-2
because where we're going,
we don't need menu controllers!


53
00:03:27.574 --> 00:03:31.979 line:-2 align:center
Here is an example of a text view
with some custom actions.


54
00:03:32.012 --> 00:03:35.182 line:-2 align:center
When a menu is presented
on some text selection,


55
00:03:35.215 --> 00:03:38.452 line:-2 align:center
a custom "Highlight" and
"Insert Photo" action is shown


56
00:03:38.485 --> 00:03:41.622 line:-1 align:center
after the system suggested actions.


57
00:03:41,655 --> 00:03:47,661 line:-2
Selecting the highlight action performs
a highlight on the text as expected.


58
00:03:47.694 --> 00:03:52.332 line:-2 align:center
Next, when the menu is presented
without any text selection


59
00:03:52.366 --> 00:03:54.568 line:-1 align:center
where there is nothing to highlight,


60
00:03:54,601 --> 00:03:57,404 line:-2
the menu only displays
the "Insert Photo" action


61
00:03:57.437 --> 00:04:01.008 line:-1 align:center
after the system suggested actions.


62
00:04:01,041 --> 00:04:05,612 line:-2
I'll show you how to add these actions
using the new API.


63
00:04:05.646 --> 00:04:09.616 line:-2 align:center
To insert actions into the menu
dynamically on presentation,


64
00:04:09.650 --> 00:04:12.753 line:-1 align:center
implement the UITextViewDelegate method


65
00:04:12.786 --> 00:04:17.758 line:-2 align:center
textView editMenuForTextIn range
suggestedActions


66
00:04:17,791 --> 00:04:21,228 line:-2
In this example,
I only want to add the "Highlight" action


67
00:04:21.261 --> 00:04:23.363 line:-1 align:center
when there is selected text,


68
00:04:23.397 --> 00:04:27.467 line:-2 align:center
so I can add the action dynamically
through this method.


69
00:04:29.803 --> 00:04:32.906 line:-1 align:center
The "Insert Photo" action is always valid,


70
00:04:32,940 --> 00:04:39,847 line:-2
so I can add it into the array
to always display the action in the menu.


71
00:04:39.880 --> 00:04:44.551 line:-2 align:center
Finally, I'll append my actions
to the system suggested actions,


72
00:04:44.585 --> 00:04:49.990 line:-2 align:center
which includes items like Cut, Copy,
and Paste, and return the menu.


73
00:04:50.023 --> 00:04:54.361 line:-1 align:center
And that's it!


74
00:04:54,394 --> 00:05:01,001 line:-2
UIEditMenuInteraction is the UIInteraction
API that powers the new edit menu.


75
00:05:02.002 --> 00:05:04.471 line:-2 align:center
The interaction allows you
to programmatically present


76
00:05:04,505 --> 00:05:07,541 line:-2
the lightweight edit menu
outside of text views


77
00:05:07,574 --> 00:05:09,977 line:-1
based on your own gesture,


78
00:05:10,010 --> 00:05:15,782 line:-2
and has native support to present
a context menu on secondary click.


79
00:05:15.816 --> 00:05:20.821 line:-2 align:center
In iOS 16, UIMenuController
and all of its related APIs


80
00:05:20,854 --> 00:05:24,124 line:-2
are replaced by the new edit menu
interaction.


81
00:05:25.425 --> 00:05:28.095 line:-1 align:center
To present an edit menu from scratch,


82
00:05:28,128 --> 00:05:33,700 line:-2
first, create the interaction
and add it to the view.


83
00:05:33,734 --> 00:05:39,006 line:-2
Next, configure a gesture recognizer
to present the menu from.


84
00:05:39.039 --> 00:05:42.009 line:-2 align:center
To ensure that the menu
only appears on direct touch


85
00:05:42.042 --> 00:05:44.678 line:-1 align:center
and not from indirect pointer clicks,


86
00:05:44.711 --> 00:05:46.947 line:-2 align:center
be sure to set
the allowedTouchTypes property


87
00:05:46.980 --> 00:05:50.784 line:-2 align:center
of the gesture recognizer
to be direct touch only.


88
00:05:50.817 --> 00:05:56.290 line:-2 align:center
Then, add the gesture recognizer
to the view.


89
00:05:56.323 --> 00:05:59.626 line:-2 align:center
Finally,
when the gesture recognizer fires,


90
00:05:59.660 --> 00:06:02.796 line:-2 align:center
determine if there is content
at the location of the gesture


91
00:06:02.829 --> 00:06:06.066 line:-1 align:center
that could display the menu.


92
00:06:06.099 --> 00:06:08.936 line:-1 align:center
Then, create an edit menu configuration


93
00:06:08.969 --> 00:06:12.773 line:-2 align:center
with a source point
at the gesture's location.


94
00:06:12.806 --> 00:06:16.009 line:-2 align:center
The source point is used to
determine performable actions


95
00:06:16,043 --> 00:06:20,180 line:-2
in the interaction's view
to display in the menu.


96
00:06:22.316 --> 00:06:26.453 line:-2 align:center
Once configured,
call presentEditMenu(with: configuration)


97
00:06:26.486 --> 00:06:28.789 line:-1 align:center
to show the menu.


98
00:06:30.891 --> 00:06:35.295 line:-2 align:center
When I right-click anywhere within
the selected "Jello there!" view,


99
00:06:35.329 --> 00:06:38.832 line:-2 align:center
a context menu is presented
with performable system actions


100
00:06:38,866 --> 00:06:41,535 line:-1
for the app's content.


101
00:06:41,568 --> 00:06:44,838 line:-2
Even more,
when I tap on the selected view,


102
00:06:44,872 --> 00:06:48,041 line:-2
the edit menu is presented
where my touch occurred,


103
00:06:48.075 --> 00:06:52.012 line:-2 align:center
showing the same actions
as the context menu.


104
00:06:52.045 --> 00:06:55.682 line:-1 align:center
This is good, but it can be better.


105
00:06:55,716 --> 00:06:58,752 line:-2
While it is nice that the menu appears
where the touch occurred,


106
00:06:58,785 --> 00:07:02,422 line:-2
it's actually blocking
the selected view's content.


107
00:07:02,456 --> 00:07:07,127 line:-2
Moreover, I want to insert
a new "Duplicate" action into the menu,


108
00:07:07.160 --> 00:07:10.397 line:-1 align:center
which is not a system default action.


109
00:07:10,430 --> 00:07:12,900 line:-1
Let's go back and change this.


110
00:07:12,933 --> 00:07:15,836 line:-1
To show the menu around the selected view,


111
00:07:15,869 --> 00:07:17,571 line:-1
implement the delegate method


112
00:07:17.604 --> 00:07:22.176 line:-2 align:center
editMenuInteraction
targetRectFor configuration


113
00:07:22.209 --> 00:07:27.014 line:-2 align:center
This method returns a CGRect used to
determine where to present the menu from


114
00:07:27,047 --> 00:07:32,819 line:-2
and is in the coordinate space
of the interaction's view.


115
00:07:32.853 --> 00:07:37.958 line:-2 align:center
If the method is not implemented
or a null CGRect is provided,


116
00:07:37,991 --> 00:07:42,896 line:-2
the menu will be presented from
the source point of the configuration.


117
00:07:42.930 --> 00:07:46.867 line:-2 align:center
In this case, to prevent the menu
from occluding the selected view,


118
00:07:46.900 --> 00:07:49.403 line:-1 align:center
return its frame.


119
00:07:49,436 --> 00:07:52,272 line:-1
Next, to add the "Duplicate" action,


120
00:07:52.306 --> 00:07:57.578 line:-2 align:center
implement editMenuInteraction
menuFor configuration suggestedActions


121
00:07:57.611 --> 00:08:01.515 line:-2 align:center
and append the custom action
after the system suggested actions,


122
00:08:01.548 --> 00:08:06.587 line:-2 align:center
similar to how you would insert actions
into a text view's menu before.


123
00:08:07,588 --> 00:08:10,791 line:-2
Now, when I tap again
on the selected view,


124
00:08:10.824 --> 00:08:15.562 line:-2 align:center
the menu no longer occludes "Jello there!"
and instead presents around it.


125
00:08:15.596 --> 00:08:19.900 line:-2 align:center
The new "Duplicate" action is also
included when the menu is presented,


126
00:08:19.933 --> 00:08:22.669 line:-1 align:center
all with just a few lines of code.


127
00:08:22,703 --> 00:08:23,871 line:-1
Brilliant!


128
00:08:25.906 --> 00:08:27.574 line:-1 align:center
For Mac Catalyst apps,


129
00:08:27.608 --> 00:08:30.644 line:-2 align:center
the edit menu bridges
to the familiar context menus


130
00:08:30.677 --> 00:08:32.479 line:-1 align:center
that users expect on the Mac


131
00:08:32.513 --> 00:08:36.216 line:-2 align:center
when they right click
on the interaction's view.


132
00:08:36.250 --> 00:08:38.719 line:-1 align:center
For iPad idiom Mac Catalyst apps,


133
00:08:38,752 --> 00:08:44,291 line:-2
programmatically presented edit menus
also bridge into context menus.


134
00:08:44.324 --> 00:08:48.262 line:-2 align:center
Please note that programmatic presentation
of the edit menu is not supported


135
00:08:48.295 --> 00:08:53.734 line:-1 align:center
for Mac idiom apps.


136
00:08:53,767 --> 00:08:57,437 line:-2
To offer seamless bridging
between different presentation styles,


137
00:08:57,471 --> 00:09:02,976 line:-2
UIEditMenuInteraction is built on top
of the UIMenuElement family of APIs.


138
00:09:03,010 --> 00:09:07,014 line:-2
These offer more flexibility
and customizability than before,


139
00:09:07,047 --> 00:09:10,651 line:-1
including support for submenus and images.


140
00:09:10.684 --> 00:09:13.086 line:-1 align:center
If this is your first time using UIMenus,


141
00:09:13.120 --> 00:09:19.993 line:-2 align:center
watch "Modernizing Your UI for iOS 13"
to learn more about menus and actions.


142
00:09:20,027 --> 00:09:22,930 line:-2
Building on top of UIMenuElement
also means that


143
00:09:22,963 --> 00:09:26,633 line:-2
the edit menu has access
to a wide variety of APIs,


144
00:09:26.667 --> 00:09:31.238 line:-2 align:center
like UIMenuSystem,
that support menus already.


145
00:09:31.271 --> 00:09:36.176 line:-2 align:center
The edit menu uses the existing
UIMenuSystem.context system


146
00:09:36.210 --> 00:09:38.445 line:-1 align:center
to build its menus.


147
00:09:38.478 --> 00:09:40.614 line:-1 align:center
To find out more about the menu builder,


148
00:09:40.647 --> 00:09:45.219 line:-2 align:center
as well as a deeper dive on responder
chain traversal and command validation,


149
00:09:45.252 --> 00:09:50.290 line:-2 align:center
watch "Taking your iPad apps
to the next level."


150
00:09:51.892 --> 00:09:57.598 line:-2 align:center
Speaking of menus, there are several
new enhancements to UIMenu in iOS 16.


151
00:09:57,631 --> 00:10:00,701 line:-2
UIMenu now has a preferred
element size property that allows


152
00:10:00,734 --> 00:10:06,106 line:-2
you to choose between different layouts
in the context menu.


153
00:10:06.139 --> 00:10:10.811 line:-2 align:center
The small size gives the menu
a more compact side-by-side appearance,


154
00:10:10.844 --> 00:10:15.148 line:-1 align:center
fitting more actions in a single row.


155
00:10:15.182 --> 00:10:19.086 line:-2 align:center
The medium size also displays actions
in a side-by-side appearance


156
00:10:19.119 --> 00:10:21.388 line:-1 align:center
but with a little more detail.


157
00:10:21.421 --> 00:10:26.894 line:-2 align:center
This is used by the text edit menu
to display the standard edit menu.


158
00:10:26,927 --> 00:10:30,764 line:-2
And finally, the large element size
gives the menu its default,


159
00:10:30.797 --> 00:10:34.334 line:-1 align:center
full-width appearance.


160
00:10:34,368 --> 00:10:38,005 line:-2
Additionally, there is a new
.keepsMenuPresented attribute


161
00:10:38,038 --> 00:10:41,074 line:-1
on UIMenuElement to keep menus presented


162
00:10:41,108 --> 00:10:44,211 line:-1
after an action is performed.


163
00:10:44.244 --> 00:10:48.048 line:-2 align:center
Use this attribute to allow actions
to be performed multiple times


164
00:10:48,081 --> 00:10:50,984 line:-1
without re-presenting the menu.


165
00:10:51.018 --> 00:10:55.189 line:-2 align:center
That's just the tip of the iceberg
for the new edit menu.


166
00:10:55,222 --> 00:11:00,627 line:-2
Extend text editing functionality
by customizing the text edit menu.


167
00:11:00,661 --> 00:11:03,463 line:-2
Make sure that your actions
have titles and images


168
00:11:03.497 --> 00:11:08.468 line:-2 align:center
so that the menus look complete
in different presentation styles.


169
00:11:08.502 --> 00:11:12.472 line:-2 align:center
Most importantly,
adopt the new UIEditMenuInteraction


170
00:11:12,506 --> 00:11:16,710 line:-2
for better customizability
and improved consistency across platforms


171
00:11:16.743 --> 00:11:19.046 line:-1 align:center
and different input methods.


172
00:11:19.079 --> 00:11:24.084 line:-2 align:center
Adding support for the new edit menu
is a great first step.


173
00:11:24,117 --> 00:11:27,154 line:-2
To complete the desktop class
editing experience,


174
00:11:27,187 --> 00:11:29,289 line:-1
I'll hand it over to James to talk about


175
00:11:29.323 --> 00:11:32.492 line:-2 align:center
the new system
find and replace experience.


176
00:11:34.194 --> 00:11:37.197 line:-1 align:center
James Magahern: Ah, there it is!


177
00:11:37.231 --> 00:11:41.201 line:-1 align:center
Hi, I'm James Magahern, a UIKit engineer,


178
00:11:41.235 --> 00:11:44.905 line:-2 align:center
and I'm here to talk about
find and replace.


179
00:11:44.938 --> 00:11:46.707 line:-1 align:center
New in iOS 16,


180
00:11:46.740 --> 00:11:51.912 line:-2 align:center
we introduced a new UI component
for finding and replacing text in apps.


181
00:11:51.945 --> 00:11:53.881 line:-1 align:center
It's standard across the system


182
00:11:53,914 --> 00:11:56,283 line:-2
and included with
many of the built-in apps,


183
00:11:56.316 --> 00:11:58.552 line:-2 align:center
and allows your users to flex their
muscle memory


184
00:11:58.585 --> 00:12:02.322 line:-2 align:center
with even more commonly used
editing shortcuts.


185
00:12:02,356 --> 00:12:06,493 line:-2
This is the new
find panel running on iPad.


186
00:12:06.527 --> 00:12:10.464 line:-2 align:center
We will automatically transition from
floating inline with the shortcut bar


187
00:12:10.497 --> 00:12:12.766 line:-1 align:center
when a hardware keyboard is attached,


188
00:12:12,799 --> 00:12:19,206 line:-2
to resting on top of the software keyboard
when used without a hardware keyboard.


189
00:12:19.239 --> 00:12:22.543 line:-2 align:center
On iPhone, we'll adapt
to the smaller screen size


190
00:12:22.576 --> 00:12:25.779 line:-1 align:center
by using a more compact layout.


191
00:12:25.812 --> 00:12:29.316 line:-2 align:center
Automatic dismissal, minimization,
and keyboard avoidance


192
00:12:29,349 --> 00:12:33,387 line:-1
are all taken care of by the system.


193
00:12:33.420 --> 00:12:35.222 line:-1 align:center
When running your app on a Mac,


194
00:12:35.255 --> 00:12:38.192 line:-2 align:center
we'll present the find panel inline
with your content,


195
00:12:38,225 --> 00:12:41,128 line:-1
behaving just like the AppKit find bar,


196
00:12:41.161 --> 00:12:44.965 line:-2 align:center
and using a familiar layout
that users expect on the Mac.


197
00:12:46,466 --> 00:12:51,471 line:-2
If you're using UITextView,
WKWebView, or PDFViews


198
00:12:51,505 --> 00:12:54,408 line:-1
to display text content in your apps,


199
00:12:54.441 --> 00:12:59.847 line:-2 align:center
all you need to do to get started is set
isFindInteractionEnabled to true


200
00:12:59.880 --> 00:13:02.182 line:-1 align:center
on the built-in find interaction.


201
00:13:02.216 --> 00:13:04.551 line:-1 align:center
It's that simple!


202
00:13:04.585 --> 00:13:08.922 line:-2 align:center
In addition, if you're using
QuickLook to display text content,


203
00:13:08.956 --> 00:13:12.626 line:-2 align:center
this will already be available
without any work from you.


204
00:13:14,795 --> 00:13:16,597 line:-1
With a hardware keyboard,


205
00:13:16.630 --> 00:13:20.534 line:-2 align:center
all of the standard system shortcuts
like command+F for find,


206
00:13:20.567 --> 00:13:22.269 line:-1 align:center
command+G for find next,


207
00:13:22.302 --> 00:13:28.442 line:-2 align:center
command+shift+G for find previous,
et cetera, will work just as expected.


208
00:13:28,475 --> 00:13:33,213 line:-2
Access to these commands are available
via the menu bar when running on a Mac.


209
00:13:33.247 --> 00:13:36.850 line:-2 align:center
All you need to do is make sure
the view displaying the content


210
00:13:36,884 --> 00:13:40,521 line:-1
can and does become first responder.


211
00:13:40,554 --> 00:13:43,190 line:-2
For users who are not using
a hardware keyboard,


212
00:13:43.223 --> 00:13:46.293 line:-2 align:center
you can invoke the find interaction
programmatically


213
00:13:46.326 --> 00:13:51.732 line:-2 align:center
via presentFindNavigator,
on the included find interaction property.


214
00:13:51.765 --> 00:13:53.667 line:-2 align:center
It might be a good idea
to make this available


215
00:13:53.700 --> 00:13:56.703 line:-1 align:center
via a navigation bar item, for example.


216
00:13:58.172 --> 00:14:02.176 line:-2 align:center
When running on a Mac, there's a couple
other things to keep in mind.


217
00:14:02.209 --> 00:14:05.379 line:-2 align:center
For instance, on iOS,
the find panel is presented


218
00:14:05.412 --> 00:14:09.316 line:-2 align:center
as part of the software keyboard
or shortcut bar.


219
00:14:09.349 --> 00:14:13.554 line:-2 align:center
On the Mac, we'll display it
inline with your content.


220
00:14:13,587 --> 00:14:16,590 line:-2
If you're installing the find interaction
on a scroll view,


221
00:14:16,623 --> 00:14:21,195 line:-2
we’ll automatically adjust the content
insets to accommodate the find panel,


222
00:14:21,228 --> 00:14:25,866 line:-2
and adapt to trait collection
changes automatically.


223
00:14:25.899 --> 00:14:28.202 line:-2 align:center
You should otherwise make sure
that there's enough room


224
00:14:28.235 --> 00:14:31.805 line:-2 align:center
to host the find panel
in your UI on macOS.


225
00:14:33.140 --> 00:14:38.679 line:-2 align:center
Additionally, we'll show a menu containing
a standard set of find options available


226
00:14:38.712 --> 00:14:41.915 line:-1 align:center
when tapping on the magnifying glass icon.


227
00:14:41.949 --> 00:14:44.451 line:-2 align:center
You can customize the contents
of this menu


228
00:14:44.484 --> 00:14:49.857 line:-2 align:center
by using the optionsMenuProvider
property on UIFindInteraction.


229
00:14:49.890 --> 00:14:53.594 line:-2 align:center
This will be more important
with custom implementations.


230
00:14:53,627 --> 00:14:55,863 line:-1
And that's all it takes if you're using


231
00:14:55.896 --> 00:14:59.633 line:-2 align:center
one of the built-in views
that I mentioned before.


232
00:14:59.666 --> 00:15:02.870 line:-2 align:center
If your app is displaying textual content
by other means,


233
00:15:02.903 --> 00:15:08.075 line:-2 align:center
like a completely custom view
or something like a list view, shown here,


234
00:15:08,108 --> 00:15:11,478 line:-2
you can still add the find interaction
to your app.


235
00:15:11.512 --> 00:15:12.946 line:-1 align:center
Let me show you how.


236
00:15:14.515 --> 00:15:16.717 line:-1 align:center
The good news about find interaction


237
00:15:16,750 --> 00:15:21,021 line:-2
is that you can install it
on any arbitrary view.


238
00:15:21,054 --> 00:15:24,892 line:-2
If you have an existing find and replace
implementation in your app,


239
00:15:24.925 --> 00:15:28.061 line:-2 align:center
it's a snap to bridge over
to UIFindInteraction


240
00:15:28,095 --> 00:15:32,266 line:-1
and take advantage of the system's UI.


241
00:15:32,299 --> 00:15:37,037 line:-2
If you don't already have an existing find
implementation for your custom view,


242
00:15:37.070 --> 00:15:39.339 line:-1 align:center
it's still super easy to get started,


243
00:15:39,373 --> 00:15:43,677 line:-2
especially if you've already implemented
the UITextInput protocol


244
00:15:43,710 --> 00:15:46,246 line:-1
in order to work with the system keyboard.


245
00:15:46,280 --> 00:15:51,084 line:-2
Here's how UIFindInteraction works
with custom views.


246
00:15:51.118 --> 00:15:55.355 line:-2 align:center
After installing UIFindInteraction
on your custom view,


247
00:15:55.389 --> 00:15:58.892 line:-1 align:center
set up a find interaction delegate.


248
00:15:58,926 --> 00:16:01,995 line:-2
The find interaction delegate,
besides being notified


249
00:16:02,029 --> 00:16:05,499 line:-1
about when a find session begins or ends,


250
00:16:05,532 --> 00:16:10,537 line:-2
is responsible for dealing out
UIFindSessions.


251
00:16:10,571 --> 00:16:14,107 line:-1
UIFindSession is an abstract base class


252
00:16:14,141 --> 00:16:17,811 line:-2
that encapsulates all of the state
for a given session,


253
00:16:17.845 --> 00:16:21.582 line:-1 align:center
such as the currently highlighted result.


254
00:16:21.615 --> 00:16:25.352 line:-2 align:center
It also services all actions
requested from the UI,


255
00:16:25,385 --> 00:16:30,090 line:-2
such as "go to the next result,"
or "search for this string."


256
00:16:30.123 --> 00:16:32.826 line:-2 align:center
If you want to manage
all of this state yourself,


257
00:16:32,860 --> 00:16:37,164 line:-2
you can choose to vend
a subclass of UIFindSession


258
00:16:37,197 --> 00:16:39,032 line:-1
from your find interaction delegate.


259
00:16:40.601 --> 00:16:43.770 line:-2 align:center
This is a good option
if you already have an existing


260
00:16:43.804 --> 00:16:46.573 line:-2 align:center
find and replace implementation
in your app,


261
00:16:46.607 --> 00:16:50.043 line:-2 align:center
and want to bridge it over
to the system UI.


262
00:16:50.077 --> 00:16:52.513 line:-1 align:center
Otherwise, it would be a much better idea


263
00:16:52.546 --> 00:16:55.482 line:-2 align:center
to let the system take care
of the state for you,


264
00:16:55.516 --> 00:16:59.186 line:-2 align:center
and instead adopt
the UITextSearching protocol


265
00:16:59.219 --> 00:17:05.259 line:-2 align:center
on whatever class encapsulates the content
of the document being displayed.


266
00:17:05,292 --> 00:17:09,897 line:-2
To do this, you would return
a UITextSearchingFindSession,


267
00:17:09,930 --> 00:17:12,733 line:-1
and connect it with your document class.


268
00:17:13,534 --> 00:17:16,403 line:-2
This is the best option
if you don't yet have


269
00:17:16,436 --> 00:17:19,640 line:-2
a find implementation
for your custom view.


270
00:17:19.673 --> 00:17:21.475 line:-1 align:center
Here's how to do this in code.


271
00:17:22,709 --> 00:17:25,546 line:-1
This example has a custom document class


272
00:17:25.579 --> 00:17:30.584 line:-2 align:center
and a custom view
which displays this document.


273
00:17:30.617 --> 00:17:34.421 line:-2 align:center
The UIFindInteraction
will be installed on this view,


274
00:17:34.454 --> 00:17:38.458 line:-2 align:center
and a UITextSearchingFindSession
will be provided with this document


275
00:17:38,492 --> 00:17:41,995 line:-1
as the "searchable object."


276
00:17:42,029 --> 00:17:45,299 line:-2
Make sure either your view controller
or your custom view


277
00:17:45.332 --> 00:17:50.537 line:-2 align:center
can become first responder
so keyboard shortcuts work as expected.


278
00:17:51,872 --> 00:17:55,042 line:-2
Create the find interaction,
and provide a session delegate


279
00:17:55,075 --> 00:17:57,311 line:-1
to deal out find sessions.


280
00:17:57.344 --> 00:18:01.181 line:-2 align:center
Here, the view controller
is the session delegate.


281
00:18:01.215 --> 00:18:04.718 line:-2 align:center
Then, when asked for a find session
by the interaction,


282
00:18:04.751 --> 00:18:08.088 line:-2 align:center
just return a new
UITextSearchingFindSession


283
00:18:08.121 --> 00:18:12.426 line:-2 align:center
providing your document
as the searchable object.


284
00:18:12.459 --> 00:18:15.062 line:-2 align:center
You will of course need to make sure
that your document class


285
00:18:15,095 --> 00:18:17,898 line:-1
conforms to the UITextSearching protocol.


286
00:18:19,867 --> 00:18:23,237 line:-2
The class which implements
the UITextSearching protocol


287
00:18:23,270 --> 00:18:27,975 line:-2
is responsible for actually finding
text in your document.


288
00:18:28.008 --> 00:18:31.111 line:-1 align:center
The system will call performTextSearch,


289
00:18:31.144 --> 00:18:36.750 line:-2 align:center
and hand you an aggregator object
to which you can provide results.


290
00:18:36,783 --> 00:18:42,823 line:-2
The aggregator works with UITextRange
to represent results in your document.


291
00:18:42.856 --> 00:18:46.293 line:-2 align:center
This is another abstract class
that you can use


292
00:18:46.326 --> 00:18:51.765 line:-2 align:center
to encapsulate whatever data
makes sense for how you store text.


293
00:18:51,798 --> 00:18:54,535 line:-2
For example,
this could represent a DOM range


294
00:18:54,568 --> 00:18:58,405 line:-1
for clients who use WebKit to render text.


295
00:18:58.438 --> 00:19:00.507 line:-1 align:center
The aggregator is also thread-safe,


296
00:19:00,541 --> 00:19:04,545 line:-2
so you can provide it results
on a background thread.


297
00:19:04.578 --> 00:19:06.780 line:-1 align:center
Finally, since the find interaction


298
00:19:06.813 --> 00:19:11.018 line:-2 align:center
doesn't know how to display results
using your custom view,


299
00:19:11.051 --> 00:19:16.490 line:-2 align:center
you'll also need to decorate results for
a given style when decorate() is called.


300
00:19:16,523 --> 00:19:19,393 line:-2
The UITextSearching find session
and protocol


301
00:19:19,426 --> 00:19:23,830 line:-2
also support multiplexing
across multiple visible documents


302
00:19:23.864 --> 00:19:25.699 line:-1 align:center
using the same interaction.


303
00:19:26.567 --> 00:19:28.936 line:-2 align:center
In other words,
if your app displays content


304
00:19:28.969 --> 00:19:32.439 line:-2 align:center
in a manner similar
to Mail's conversation view,


305
00:19:32.472 --> 00:19:36.343 line:-2 align:center
where each "document" in that case
is a mail message,


306
00:19:36,376 --> 00:19:41,381 line:-2
you can install a single find interaction
on the root level collection view


307
00:19:41,415 --> 00:19:45,719 line:-2
and perform a find across all documents
at the same time,


308
00:19:45.752 --> 00:19:52.059 line:-2 align:center
allowing your users to jump between
results in different documents with ease.


309
00:19:52.092 --> 00:19:57.331 line:-2 align:center
So that's all it takes to get started
with the new find interaction in iOS 16.


310
00:19:57,364 --> 00:20:00,334 line:-2
For system views
that display a lot of text content,


311
00:20:00.367 --> 00:20:04.371 line:-2 align:center
make sure to enable
isFindInteractionEnabled.


312
00:20:04,404 --> 00:20:08,709 line:-2
Move your existing find implementation
to UIFindInteraction.


313
00:20:08.742 --> 00:20:13.080 line:-2 align:center
Implement UITextSearching
and use UITextSearchingFindSession


314
00:20:13,113 --> 00:20:16,383 line:-2
if you don't yet have
text searching in your app.


315
00:20:16.416 --> 00:20:19.286 line:-2 align:center
And lastly, check and make sure
you don't have any conflicting


316
00:20:19,319 --> 00:20:22,723 line:-1
keyboard shortcuts in your app.


317
00:20:22.756 --> 00:20:27.761 line:-2 align:center
And that is what it takes to refresh your
app's editing interactions for iOS 16


318
00:20:27,794 --> 00:20:30,764 line:-1
and make them truly desktop class.


319
00:20:31.498 --> 00:20:34.535 line:-1 align:center
Try the new text edit menu in your app,


320
00:20:34,568 --> 00:20:38,272 line:-2
and adopt the edit menu interaction
for custom UI.


321
00:20:38,305 --> 00:20:42,843 line:-2
And boost productivity by making
your app's text content searchable.


322
00:20:42,876 --> 00:20:47,714 line:-2
I'm looking forward to finding
these great new features in your app.


323
00:20:47.748 --> 00:20:52.286 line:-2 align:center
Thanks for watching!
Make sure to like, comment, and subscribe.


324
00:20:52,319 --> 00:20:55,322 line:-1
[upbeat music]

