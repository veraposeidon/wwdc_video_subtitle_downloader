2
00:00:01.001 --> 00:00:07.007 line:-1 align:center
[spacey music]


3
00:00:09.309 --> 00:00:12.746 line:-2 align:center
Eric: Hello!
Welcome to WWDC!


4
00:00:12.779 --> 00:00:13.947 line:-1 align:center
My name is Eric.


5
00:00:13.981 --> 00:00:16.250 line:-1 align:center
I'm an engineer from the Maps team.


6
00:00:16.283 --> 00:00:19.786 line:-2 align:center
Today, I'm joined by my colleague Yingxiu,
and together,


7
00:00:19.820 --> 00:00:21.922 line:-2 align:center
we're going to explore what's new
in MapKit.


8
00:00:23,357 --> 00:00:27,427 line:-2
It's been 3 years since Apple
Maps introduced its all-new map


9
00:00:27.461 --> 00:00:29.663 line:-1 align:center
and its immersive Look Around experience.


10
00:00:31,031 --> 00:00:33,367 line:-1
Originally launched with U.S. support,


11
00:00:33,400 --> 00:00:36,837 line:-2
the all-new map and Look Around coverage
has been expanding since


12
00:00:36.870 --> 00:00:38.405 line:-1 align:center
and now includes Canada,


13
00:00:38.438 --> 00:00:41.341 line:-1 align:center
many European countries, Japan, and more.


14
00:00:42,910 --> 00:00:45,712 line:-2
Last year, Apple Maps took things
to the next level


15
00:00:45.746 --> 00:00:49.983 line:-2 align:center
by introducing 3D City Experiences,
featuring turn lanes,


16
00:00:50.017 --> 00:00:51.885 line:-1 align:center
crosswalks, bike lanes,


17
00:00:51,919 --> 00:00:55,589 line:-2
and beautifully handcrafted 3D landmarks
like the Ferry Building.


18
00:00:57,457 --> 00:00:59,526 line:-2
The additional detail of the map
allows you


19
00:00:59,560 --> 00:01:01,728 line:-1
to provide context and precision


20
00:01:01,762 --> 00:01:04,264 line:-1
that was never before possible,


21
00:01:04.298 --> 00:01:06.633 line:-1 align:center
and the addition of 3D terrain elevation


22
00:01:06.667 --> 00:01:09.469 line:-2 align:center
provides a level of realism
like no other map!


23
00:01:10.704 --> 00:01:13.674 line:-2 align:center
This year, MapKit brings
the latest innovations


24
00:01:13,707 --> 00:01:15,576 line:-1
from Apple Maps to your apps,


25
00:01:15,609 --> 00:01:19,012 line:-2
letting your users explore the world
in amazing details.


26
00:01:20,247 --> 00:01:24,484 line:-2
In this talk, we'll be covering
several new MapKit features.


27
00:01:24,518 --> 00:01:27,721 line:-2
First, we'll talk about adopting
the all-new map


28
00:01:27.754 --> 00:01:30.858 line:-2 align:center
and fully leveraging it using
the Map Configuration API.


29
00:01:31.992 --> 00:01:35.863 line:-2 align:center
Next, we'll cover various improvements
we made to our overlay APIs


30
00:01:35.896 --> 00:01:39.533 line:-2 align:center
to allow for a seamless integration
of your content with the map.


31
00:01:40,834 --> 00:01:43,136 line:-2
We'll also discuss
our new blend modes support


32
00:01:43.170 --> 00:01:47.040 line:-2 align:center
and show how you can make use of it
to further enhance the presentation


33
00:01:47.074 --> 00:01:49.510 line:-1 align:center
of your map content.


34
00:01:49,543 --> 00:01:53,113 line:-2
Then, we'll cover ways of making your maps
more interactive


35
00:01:53.146 --> 00:01:56.450 line:-2 align:center
by adopting our brand-new
Selectable Map Features API.


36
00:01:57,384 --> 00:02:01,154 line:-2
And finally, we'll cover integrating
the immersive Look Around experience


37
00:02:01.188 --> 00:02:03.190 line:-1 align:center
directly into your applications.


38
00:02:04.124 --> 00:02:08.395 line:-2 align:center
We've got a lot to cover, so buckle up
as we head for our first topic:


39
00:02:08.428 --> 00:02:12.332 line:-2 align:center
adopting the all-new map
and using the Map Configuration API.


40
00:02:13.600 --> 00:02:16.170 line:-1 align:center
Adopting the all-new map in your iOS,


41
00:02:16.203 --> 00:02:18.505 line:-1 align:center
macOS, or tvOS application


42
00:02:18,539 --> 00:02:20,307 line:-1
couldn't be easier.


43
00:02:20,340 --> 00:02:23,610 line:-2
Simply recompile your app
with the new SDK,


44
00:02:23,644 --> 00:02:27,347 line:-2
and it will be automatically opted in
to the all-new Apple map,


45
00:02:27,381 --> 00:02:30,083 line:-2
including the 3D City Experience,
where available.


46
00:02:30,717 --> 00:02:34,588 line:-2
For many applications, a simple recompile
is all that's needed.


47
00:02:36,089 --> 00:02:39,059 line:-2
Of course, there may be situations
where you need more control


48
00:02:39.092 --> 00:02:40.727 line:-1 align:center
over the presentation of the map.


49
00:02:41,495 --> 00:02:46,033 line:-2
In iOS 15, the way you configure the map
is through various properties


50
00:02:46,066 --> 00:02:47,267 line:-1
on MKMapView.


51
00:02:48.202 --> 00:02:53.173 line:-2 align:center
In iOS 16, however,
we're soft deprecating those properties,


52
00:02:53.207 --> 00:02:56.376 line:-2 align:center
and we're introducing
our new Map Configuration API


53
00:02:56.410 --> 00:02:57.344 line:-1 align:center
as a replacement.


54
00:02:58.779 --> 00:03:03.984 line:-2 align:center
MKMapConfiguration is the central class
of the new Map Configuration API.


55
00:03:04,017 --> 00:03:07,454 line:-2
MKMapConfiguration is
an abstract base class


56
00:03:07,487 --> 00:03:09,489 line:-1
with three concrete subclasses.


57
00:03:11,058 --> 00:03:16,296 line:-2
The imagery map configuration is used
to present satellite-style imagery.


58
00:03:16,330 --> 00:03:20,167 line:-2
The hybrid map configuration is used
to present an imagery-based map


59
00:03:20,200 --> 00:03:24,505 line:-2
with added map features such
as road labels and points of interest.


60
00:03:26,006 --> 00:03:30,644 line:-2
The standard map configuration is used
to present a fully graphics-based map.


61
00:03:31,411 --> 00:03:35,549 line:-2
These three map configurations may sound
familiar to you, as they're similar


62
00:03:35.582 --> 00:03:37.251 line:-1 align:center
to our existing map types.


63
00:03:40,153 --> 00:03:44,691 line:-2
The base map configuration class
supportsÂ an elevationStyle property,


64
00:03:44.725 --> 00:03:47.294 line:-1 align:center
which can be either flat or realistic.


65
00:03:48.562 --> 00:03:52.533 line:-2 align:center
A flat elevation style means
that the ground appears flat.


66
00:03:52.566 --> 00:03:57.137 line:-2 align:center
Roads, including
bridges and overpasses, also appear flat.


67
00:03:57,171 --> 00:03:59,673 line:-1
Flat is the default elevation style.


68
00:04:00.741 --> 00:04:03.110 line:-1 align:center
A realistic elevation style means


69
00:04:03.143 --> 00:04:06.346 line:-2 align:center
that the ground terrain reproduces
the real-world elevation


70
00:04:06,380 --> 00:04:08,782 line:-1
such as hills and mountains.


71
00:04:08,815 --> 00:04:12,553 line:-2
Roads are depicted
with realistic elevation details.


72
00:04:13,754 --> 00:04:17,591 line:-2
Now let's take a closer look
at the map configuration subclasses.


73
00:04:18,825 --> 00:04:22,496 line:-2
The imagery map configuration
only shows satellite imagery


74
00:04:22.529 --> 00:04:26.667 line:-2 align:center
with no additional map features,
so it doesn't have any other properties.


75
00:04:28,068 --> 00:04:31,104 line:-2
The hybrid map configuration
has additional properties


76
00:04:31,138 --> 00:04:33,907 line:-2
to control filtering
of point of interest categories


77
00:04:33,941 --> 00:04:35,909 line:-1
and whether to show traffic or not.


78
00:04:37.911 --> 00:04:41.949 line:-2 align:center
The standard map configuration supports
an emphasisStyle property


79
00:04:41.982 --> 00:04:44.051 line:-1 align:center
which can be either default or muted.


80
00:04:45,485 --> 00:04:48,755 line:-2
As the name implies, this is
the default emphasis style


81
00:04:48,789 --> 00:04:50,324 line:-1
unless otherwise stated.


82
00:04:51,458 --> 00:04:55,762 line:-2
The muted emphasis style softens
the contrasts of the map details,


83
00:04:55,796 --> 00:04:59,633 line:-2
allowing you to bring more attention
to additional graphical information


84
00:04:59.666 --> 00:05:02.102 line:-1 align:center
you might want to show on top.


85
00:05:02.903 --> 00:05:06.540 line:-2 align:center
The standard map configuration
also has additional properties


86
00:05:06.573 --> 00:05:09.343 line:-2 align:center
to control filtering
of point of interest categories


87
00:05:09,376 --> 00:05:11,278 line:-1
and whether to show traffic or not.


88
00:05:12,379 --> 00:05:15,682 line:-2
And that sums up
the available map configuration classes


89
00:05:15.716 --> 00:05:16.850 line:-1 align:center
and their properties.


90
00:05:18,819 --> 00:05:21,421 line:-2
This new API ensures
you can only configure


91
00:05:21,455 --> 00:05:23,824 line:-1
supported combinations of options.


92
00:05:23.857 --> 00:05:27.661 line:-2 align:center
It also allows you to change
the map configuration atomically.


93
00:05:27,694 --> 00:05:31,331 line:-2
We think this is a great improvement
over our existing APIs.


94
00:05:32.799 --> 00:05:34.535 line:-1 align:center
To recap what we just discussed,


95
00:05:34.568 --> 00:05:36.370 line:-2 align:center
here's a table that shows
the correspondence


96
00:05:36.403 --> 00:05:40.507 line:-2 align:center
between the new map configuration classes
and the MKMapType property.


97
00:05:42,109 --> 00:05:44,611 line:-2
The all-new map
with the 3D City Experience


98
00:05:44.645 --> 00:05:46.914 line:-1 align:center
requires compatible hardware.


99
00:05:46.947 --> 00:05:53.020 line:-2 align:center
On iOS, the new map support requires
A12-based iPhones and iPads or later.


100
00:05:53.053 --> 00:05:55.722 line:-1 align:center
On macOS, the new map support requires


101
00:05:55,756 --> 00:05:57,958 line:-1
any M1-based computer or later.


102
00:05:59.593 --> 00:06:02.829 line:-2 align:center
In areas where the 3D City Experience is
not available,


103
00:06:02.863 --> 00:06:06.266 line:-2 align:center
the map will automatically fall back
to present the all-new map


104
00:06:06.300 --> 00:06:08.001 line:-1 align:center
with a flat elevation.


105
00:06:09,236 --> 00:06:11,772 line:-1
On all other devices, the all-new map


106
00:06:11,805 --> 00:06:13,807 line:-1
will be presented with a flat elevation.


107
00:06:15,375 --> 00:06:19,813 line:-2
On M1 Macs, Xcode allows you to simulate
both experiences


108
00:06:19.847 --> 00:06:21.815 line:-1 align:center
simply by changing the OS version.


109
00:06:22.683 --> 00:06:24.585 line:-1 align:center
We encourage you to try out both,


110
00:06:24,618 --> 00:06:26,753 line:-1
to ensure that your app looks great


111
00:06:26.787 --> 00:06:28.055 line:-1 align:center
on all devices!


112
00:06:29,423 --> 00:06:31,925 line:-1
The 3D City Experience is available


113
00:06:31,959 --> 00:06:34,361 line:-2
in many metropolitan areas
around the world.


114
00:06:35,362 --> 00:06:38,098 line:-2
We're continuously adding new cities
to this list,


115
00:06:38,131 --> 00:06:41,735 line:-2
so I encourage you to check out
the 3D City Experience section


116
00:06:41,768 --> 00:06:45,272 line:-2
on the feature availability website linked
in the session notes.


117
00:06:45,305 --> 00:06:48,942 line:-2
This concludes our section on adopting
the all-new map


118
00:06:48.976 --> 00:06:51.011 line:-1 align:center
and using the Map Configuration API.


119
00:06:52,646 --> 00:06:55,115 line:-1
Now let's dive into overlays.


120
00:06:55,148 --> 00:06:59,520 line:-2
MapKit has supported overlays
with several styling options for years.


121
00:06:59.553 --> 00:07:01.021 line:-1 align:center
In iOS 16,


122
00:07:01,054 --> 00:07:03,257 line:-1
we are improving our existing APIs


123
00:07:03,290 --> 00:07:06,894 line:-2
to allow your overlays to seamlessly
integrate with the map.


124
00:07:06.927 --> 00:07:10.163 line:-2 align:center
Let's start with a quick recap
of overlay levels.


125
00:07:11.632 --> 00:07:14.434 line:-2 align:center
Overlays can be rendered
at two different levels:


126
00:07:14.468 --> 00:07:17.004 line:-1 align:center
above roads and above labels.


127
00:07:17,037 --> 00:07:20,374 line:-2
You can specify the rendering level
at insertion time


128
00:07:20,407 --> 00:07:23,477 line:-2
using one of MapKit's
many overlay insertion functions.


129
00:07:24,778 --> 00:07:28,949 line:-2
Above labels renders your overlay
above everything, including labels.


130
00:07:29.716 --> 00:07:32.953 line:-2 align:center
Since labels
provide important context information,


131
00:07:32,986 --> 00:07:36,857 line:-2
we encourage you to only use above labels
in those rare cases


132
00:07:36,890 --> 00:07:40,661 line:-2
where you don't want your data
to interact with the map at all.


133
00:07:40,694 --> 00:07:43,263 line:-2
If what you're trying to achieve
is for your content


134
00:07:43.297 --> 00:07:45.065 line:-1 align:center
to stand out against the map,


135
00:07:45,098 --> 00:07:48,202 line:-2
you might want to consider
using the muted map emphasis


136
00:07:48,235 --> 00:07:50,938 line:-2
or the blend modes,
which we'll talk about later.


137
00:07:52.840 --> 00:07:56.610 line:-2 align:center
Above roads means the overlay
will be shown on top of the terrain,


138
00:07:56,643 --> 00:08:00,080 line:-2
including roads, land cover,
or bodies of water.


139
00:08:00,113 --> 00:08:04,418 line:-2
It will, however, be shown below labels
and, to some degree,


140
00:08:04,451 --> 00:08:06,119 line:-1
trees and buildings.


141
00:08:06,153 --> 00:08:07,888 line:-1
More on that in a second.


142
00:08:07,921 --> 00:08:10,991 line:-2
Above roads will be
the new default mode in iOS 16.


143
00:08:11,925 --> 00:08:16,230 line:-2
Next, let's talk about a new feature
we're introducing in iOS 16


144
00:08:16.263 --> 00:08:17.698 line:-1 align:center
called transparent buildings.


145
00:08:18,832 --> 00:08:21,101 line:-1
Regardless of whether your overlay level


146
00:08:21.134 --> 00:08:23.504 line:-1 align:center
is above roads or above labels,


147
00:08:23.537 --> 00:08:26.373 line:-2 align:center
your overlay will always be rendered
on top of buildings


148
00:08:26,406 --> 00:08:28,475 line:-1
when viewed top-down with no pitch.


149
00:08:28.509 --> 00:08:30.711 line:-1 align:center
However, we've made some improvements


150
00:08:30,744 --> 00:08:32,846 line:-1
to the experience when using above roads


151
00:08:32.880 --> 00:08:34.648 line:-1 align:center
in combination with a pitched map.


152
00:08:35.883 --> 00:08:38.318 line:-1 align:center
Ground objects such as trees and buildings


153
00:08:38,352 --> 00:08:41,088 line:-2
are now automatically rendered
with transparency


154
00:08:41,121 --> 00:08:43,023 line:-1
when appearing above overlays,


155
00:08:43,056 --> 00:08:45,592 line:-1
so as not to fully obscure them.


156
00:08:45,626 --> 00:08:49,730 line:-2
The alpha value varies
with the map's pitch angle.


157
00:08:49,763 --> 00:08:54,067 line:-2
If we revert to showing the map top-down
with a 0Âº pitch angle,


158
00:08:54,101 --> 00:08:57,371 line:-2
colliding ground objects effectively
disappear from view,


159
00:08:57.404 --> 00:08:59.306 line:-1 align:center
leaving your overlays fully visible.


160
00:09:00.607 --> 00:09:04.811 line:-2 align:center
Transparent buildings also work
for semi-transparent overlays.


161
00:09:04,845 --> 00:09:07,748 line:-2
The alpha value of the overlay
will be added to combine


162
00:09:07,781 --> 00:09:11,218 line:-2
with the alpha value
of the transparent buildings.


163
00:09:11,251 --> 00:09:13,921 line:-2
There's one more change
we're making to overlays.


164
00:09:14.855 --> 00:09:17.024 line:-1 align:center
When adding an overlay to a map


165
00:09:17,057 --> 00:09:18,458 line:-1
with realistic terrain,


166
00:09:18,492 --> 00:09:22,996 line:-2
MapKit will automatically transition
the map to a flat representation.


167
00:09:23.030 --> 00:09:26.266 line:-2 align:center
The map will automatically go back
to realistic when you remove


168
00:09:26.300 --> 00:09:27.668 line:-1 align:center
the last overlay.


169
00:09:28.635 --> 00:09:32.506 line:-2 align:center
One notable exception to this rule
are overlays sourced


170
00:09:32.539 --> 00:09:35.609 line:-1 align:center
through MapKit's directions API.


171
00:09:35.642 --> 00:09:39.012 line:-2 align:center
Those overlays
automatically follow the terrain.


172
00:09:39.680 --> 00:09:42.282 line:-2 align:center
And with that, I'm going
to hand it over to Yingxiu.


173
00:09:42,316 --> 00:09:45,452 line:-2
Yingxiu: Thank you, Eric.
Hi! I'm Yingxiu.


174
00:09:45,485 --> 00:09:47,387 line:-1
I'm an engineer on the Maps team.


175
00:09:47,421 --> 00:09:50,224 line:-2
I'm going to demonstrate
our new MapKit features


176
00:09:50,257 --> 00:09:54,094 line:-2
and show you how easy it is to build
beautiful map experiences


177
00:09:54.127 --> 00:09:56.363 line:-1 align:center
with our updated APIs.


178
00:09:56.396 --> 00:09:57.865 line:-1 align:center
I will be using our sample app,


179
00:09:57.898 --> 00:09:59.499 line:-1 align:center
which helps users rent scooters


180
00:09:59,533 --> 00:10:01,168 line:-1
to tour San Francisco.


181
00:10:04.571 --> 00:10:06.740 line:-1 align:center
Our app offers a number of features,


182
00:10:06,773 --> 00:10:09,109 line:-1
as shown by the rows in this table view.


183
00:10:10.077 --> 00:10:14.915 line:-2 align:center
"Operating Area" allows the user
to see where they can take our scooters.


184
00:10:14,948 --> 00:10:19,753 line:-2
"Ride" takes the user on a tour
across the Golden Gate Bridge.


185
00:10:19,786 --> 00:10:22,689 line:-2
"Explore" gives the user
an interactive map


186
00:10:22,723 --> 00:10:25,425 line:-2
of downtown San Francisco,
which they can use


187
00:10:25,459 --> 00:10:28,028 line:-2
to explore attractions
near the waterfront.


188
00:10:28,662 --> 00:10:32,833 line:-2
"Highlights" offers a closer look
at must-see places.


189
00:10:33.534 --> 00:10:36.870 line:-2 align:center
We will implement or upgrade
these features throughout this session.


190
00:10:36.904 --> 00:10:38.572 line:-1 align:center
Let's get started!


191
00:10:42.576 --> 00:10:45.412 line:-2 align:center
First, I'm going to use
the Operating Area feature


192
00:10:45.445 --> 00:10:49.316 line:-2 align:center
to demonstrate how easy it is
to adopt the all-new map,


193
00:10:49.349 --> 00:10:50.784 line:-1 align:center
and then I'll show you


194
00:10:50.817 --> 00:10:53.453 line:-2 align:center
some of the improvements we have made
to overlays.


195
00:10:54,254 --> 00:10:57,457 line:-2
I already have the project opened
in Xcode.


196
00:10:57.491 --> 00:11:00.294 line:-1 align:center
Let's compile it with iOS 16 SDK


197
00:11:00.327 --> 00:11:01.862 line:-1 align:center
and see how it looks.


198
00:11:05.399 --> 00:11:06.333 line:-1 align:center
Here we are!


199
00:11:06,366 --> 00:11:09,403 line:-1
We are already opted into the all-new map.


200
00:11:09,436 --> 00:11:11,471 line:-1
We get a map view with rich details,


201
00:11:11,505 --> 00:11:13,540 line:-1
including these beautiful lighting


202
00:11:13.574 --> 00:11:16.476 line:-1 align:center
and hill-shading effects on the terrain.


203
00:11:16.510 --> 00:11:20.581 line:-2 align:center
As we zoom in,
you will see buildings, trees...


204
00:11:26,053 --> 00:11:27,087 line:-1
â¦and landmarks.


205
00:11:29.089 --> 00:11:33.093 line:-2 align:center
Now let's add a polygon overlay
to visualize our operating area.


206
00:11:37.164 --> 00:11:41.869 line:-2 align:center
Here I already have the polygon data ready
for the operating area.


207
00:11:41.902 --> 00:11:47.140 line:-2 align:center
When the view is loaded, we'll first set
the region and the camera boundary.


208
00:11:47,174 --> 00:11:49,309 line:-1
Make sure we look at the correct area.


209
00:11:50,544 --> 00:11:52,913 line:-1
Then, we simply add the overlay.


210
00:11:53,914 --> 00:11:55,782 line:-1
Let's build it and check it out!


211
00:11:57,818 --> 00:12:01,522 line:-2
The polygon overlay is opaque
when viewed straight down.


212
00:12:01.555 --> 00:12:08.362 line:-1 align:center
As we zoom in and pitch,


213
00:12:08,395 --> 00:12:09,897 line:-1
the buildings begin to show,


214
00:12:09,930 --> 00:12:13,700 line:-2
with the transparency increasing
as we pitch further.


215
00:12:13,734 --> 00:12:18,238 line:-2
This effect is only available
when using the overlay level AboveRoads.


216
00:12:18.272 --> 00:12:21.141 line:-2 align:center
If you want to leverage
transparent buildings and trees,


217
00:12:21,175 --> 00:12:23,510 line:-2
make sure you choose
the correct overlay level.


218
00:12:25,412 --> 00:12:28,916 line:-2
The overlay looks great,
but I'd like the map to show through


219
00:12:28,949 --> 00:12:30,651 line:-1
even when not pitched.


220
00:12:30,684 --> 00:12:33,287 line:-2
Let's go back to the code
and make it semi-transparent.


221
00:12:37,324 --> 00:12:39,693 line:-1
Let's change alpha to 0.8.


222
00:12:44.131 --> 00:12:45.999 line:-1 align:center
Now we have a transparent overlay


223
00:12:46.033 --> 00:12:49.736 line:-2 align:center
and I can see roads and buildings
even when not pitched.


224
00:12:49,770 --> 00:12:53,240 line:-1
If I zoom in and pitch the map,


225
00:12:53.273 --> 00:12:55.642 line:-1 align:center
I still get an increase in transparency.


226
00:12:55.676 --> 00:12:57.411 line:-1 align:center
This looks great!


227
00:12:57,444 --> 00:12:59,680 line:-1
That's it for polygon overlays.


228
00:12:59.713 --> 00:13:03.417 line:-2 align:center
Next, I want to show you
how to integrate realistic terrain


229
00:13:03.450 --> 00:13:05.719 line:-1 align:center
and show adding an elevated route line.


230
00:13:05,752 --> 00:13:08,355 line:-1
This will complete our "Ride" feature,


231
00:13:08,388 --> 00:13:10,657 line:-1
a tour across the Golden Gate Bridge.


232
00:13:14.962 --> 00:13:17.831 line:-1 align:center
Let's start by configuring the map view.


233
00:13:17.865 --> 00:13:20.334 line:-1 align:center
We can change the elevation style in code,


234
00:13:20.367 --> 00:13:23.303 line:-2 align:center
or we can just open
the Interface Builder inspector


235
00:13:23.337 --> 00:13:24.605 line:-1 align:center
on the right-hand side.


236
00:13:26,874 --> 00:13:30,110 line:-2
Here are the available map view
configuration settings.


237
00:13:30,143 --> 00:13:32,579 line:-1
Let's select elevation realistic.


238
00:13:34,214 --> 00:13:36,016 line:-1
Next, let's work on the route.


239
00:13:38.752 --> 00:13:41.121 line:-1 align:center
For this feature, we want to show a route


240
00:13:41.154 --> 00:13:44.324 line:-2 align:center
when the user toggles
the Show Route switch.


241
00:13:44.358 --> 00:13:47.761 line:-2 align:center
We will also animate the camera
to focus on the route.


242
00:13:52,599 --> 00:13:56,069 line:-2
Since we want to show a route
across the Golden Gate Bridge,


243
00:13:56.103 --> 00:13:59.239 line:-2 align:center
we'll use the Presidio Park entry
as the start point


244
00:13:59,273 --> 00:14:01,909 line:-1
and the Battery Spencer as the end point.


245
00:14:05,112 --> 00:14:08,015 line:-2
When the map view is loaded,
we'll create annotations


246
00:14:08.048 --> 00:14:10.651 line:-1 align:center
to mark the start and destination points.


247
00:14:16.557 --> 00:14:18.759 line:-1 align:center
Set coordinates and title,


248
00:14:18,792 --> 00:14:21,428 line:-1
append it to the annotation array,


249
00:14:21,461 --> 00:14:23,497 line:-1
then add them to the map view.


250
00:14:31.839 --> 00:14:34.308 line:-1 align:center
Now, we can focus on the route polyline.


251
00:14:37,211 --> 00:14:39,580 line:-2
While normal overlays will flatten the
map,


252
00:14:39.613 --> 00:14:42.249 line:-2 align:center
the polyline returned
by MapKit's Directions API


253
00:14:42,282 --> 00:14:44,284 line:-1
will preserve the realistic terrain.


254
00:14:45,986 --> 00:14:50,490 line:-2
In this action function, once the switch
is turned on,


255
00:14:50,524 --> 00:14:54,027 line:-2
we'll create place marks
with the coordinates defined above.


256
00:14:57,998 --> 00:15:02,736 line:-1
Then we create a direction request,


257
00:15:02,769 --> 00:15:06,206 line:-1
with source and destination.


258
00:15:06,240 --> 00:15:08,675 line:-1
Finally, we request the directions.


259
00:15:11.812 --> 00:15:13.847 line:-1 align:center
If the fetch operation succeeds,


260
00:15:13,881 --> 00:15:16,483 line:-2
simply add the route polyline
as an overlay.


261
00:15:21.889 --> 00:15:22.723 line:-1 align:center
All right.


262
00:15:22,756 --> 00:15:24,725 line:-1
Let's compile it and see how it looks!


263
00:15:29.830 --> 00:15:33.100 line:-2 align:center
You'll notice the annotations are
automatically upgraded


264
00:15:33,133 --> 00:15:35,135 line:-1
to the new gradient look.


265
00:15:35.169 --> 00:15:38.572 line:-2 align:center
They are also seamlessly displayed
at the correct elevation.


266
00:15:38,605 --> 00:15:40,474 line:-1
Once I toggle show route,


267
00:15:40.507 --> 00:15:41.909 line:-1 align:center
the camera will pitch.


268
00:15:41.942 --> 00:15:43.977 line:-1 align:center
Then, you can get a better view of them.


269
00:15:46.079 --> 00:15:48.415 line:-1 align:center
As you can see, the route line follows


270
00:15:48,448 --> 00:15:50,083 line:-1
the elevated terrain.


271
00:15:50,117 --> 00:15:51,518 line:-1
This comes in handy


272
00:15:51,552 --> 00:15:54,121 line:-1
when navigating complex intersections.


273
00:15:54.154 --> 00:15:57.157 line:-2 align:center
It also follows the road
across the bridge.


274
00:15:57,191 --> 00:15:59,159 line:-1
Also, notice how the route


275
00:15:59.193 --> 00:16:01.261 line:-1 align:center
subtly shows through the bridge pillars.


276
00:16:03,830 --> 00:16:06,733 line:-1
Finally, when the map is really pitched,


277
00:16:06.767 --> 00:16:08.302 line:-1 align:center
you can see the route show


278
00:16:08,335 --> 00:16:11,004 line:-2
through the trees
that stand in front of it.


279
00:16:11.038 --> 00:16:14.575 line:-2 align:center
Well, look, the route line color
is washed out here,


280
00:16:14,608 --> 00:16:16,176 line:-1
where there is no trees.


281
00:16:16.210 --> 00:16:18.779 line:-2 align:center
Let's zoom out and check
what's happening here.


282
00:16:22,850 --> 00:16:26,153 line:-2
All right, this part of the route goes
through a tunnel,


283
00:16:26,186 --> 00:16:28,555 line:-1
so we get transparency for it.


284
00:16:28,589 --> 00:16:32,259 line:-2
ElevationRealisticStyle
and the elevated route line feature


285
00:16:32,292 --> 00:16:35,662 line:-1
are supported on A12-based iOS devices.


286
00:16:35,696 --> 00:16:39,166 line:-2
If I run the same app
on an older iOS device,


287
00:16:39,199 --> 00:16:44,872 line:-2
I will automatically get a 2D route
on a 2D map..


288
00:16:44,905 --> 00:16:47,174 line:-2
It's that simple to add an
elevated route line


289
00:16:47,207 --> 00:16:49,409 line:-1
to a 3D city experience map!


290
00:16:49,443 --> 00:16:51,945 line:-1
With that, I hand it back to Eric.


291
00:16:51.979 --> 00:16:53.247 line:-1 align:center
Eric: Thanks, Yingxiu!


292
00:16:53,280 --> 00:16:55,249 line:-2
That scooter ride across
the Golden Gate Bridge


293
00:16:55.282 --> 00:16:57.384 line:-1 align:center
looks absolutely stunning!


294
00:16:57.417 --> 00:17:00.821 line:-2 align:center
So that's just some of what's new
with MapKit overlays.


295
00:17:02,556 --> 00:17:05,459 line:-1
Next up, let's talk about blend modes.


296
00:17:05.492 --> 00:17:09.730 line:-2 align:center
This new API gives you more control
over the look and feel of your overlays


297
00:17:09,763 --> 00:17:12,833 line:-2
and unlocks a whole range
of new creative possibilities.


298
00:17:14,067 --> 00:17:16,103 line:-1
I'm sure many of you are already familiar


299
00:17:16,136 --> 00:17:18,705 line:-1
with blend modes from photo editing apps


300
00:17:18.739 --> 00:17:21.275 line:-1 align:center
or Apple's CoreGraphics API.


301
00:17:21.308 --> 00:17:23.177 line:-1 align:center
During a blend operation,


302
00:17:23,210 --> 00:17:25,078 line:-1
two graphical layers are combined


303
00:17:25.112 --> 00:17:26.647 line:-1 align:center
following a set of equations


304
00:17:26,680 --> 00:17:28,815 line:-1
specified by the blend mode.


305
00:17:28,849 --> 00:17:32,486 line:-2
Now, let's look at an example
of how we might use blend modes


306
00:17:32,519 --> 00:17:34,121 line:-1
in a MapKit context.


307
00:17:35.522 --> 00:17:38.458 line:-2 align:center
In this scenario, I want to highlight
the area


308
00:17:38.492 --> 00:17:41.128 line:-2 align:center
of the Presidio National Park
in San Francisco


309
00:17:41,161 --> 00:17:43,096 line:-1
in the center of this map.


310
00:17:43,130 --> 00:17:45,599 line:-1
First, I'm going to create an overlay


311
00:17:45.632 --> 00:17:47.568 line:-1 align:center
covering my entire map area,


312
00:17:47,601 --> 00:17:50,003 line:-2
with a cutout in the shape
of the Presidio.


313
00:17:51,338 --> 00:17:53,273 line:-1
I'm not using any blend modes yet.


314
00:17:53,307 --> 00:17:55,442 line:-1
This is just a plain overlay,


315
00:17:55,475 --> 00:17:58,011 line:-1
in the shape of a big square doughnut.


316
00:17:58,045 --> 00:18:00,747 line:-1
Next, I assign a hue blend mode


317
00:18:00.781 --> 00:18:04.384 line:-1 align:center
to the overlay, with a gray fill.


318
00:18:04.418 --> 00:18:06.320 line:-1 align:center
This desaturates the map


319
00:18:06,353 --> 00:18:08,288 line:-1
outside of the Presidio.


320
00:18:08,322 --> 00:18:11,091 line:-1
Next, I'm going to duplicate that overlay


321
00:18:11,124 --> 00:18:13,460 line:-1
and assign it a hard light blend mode,


322
00:18:13.493 --> 00:18:14.928 line:-1 align:center
with a dark gray fill.


323
00:18:16,263 --> 00:18:18,732 line:-1
This has the effect of darkening the area


324
00:18:18,765 --> 00:18:20,567 line:-1
around the Presidio.


325
00:18:20,601 --> 00:18:22,236 line:-1
This already looks nice,


326
00:18:22.269 --> 00:18:23.937 line:-1 align:center
but lets add another overlay.


327
00:18:23.971 --> 00:18:27.641 line:-2 align:center
This time, we'll add an overlay
in the shape of the Presidio


328
00:18:27.674 --> 00:18:29.810 line:-1 align:center
and assign a saturation blend mode,


329
00:18:29,843 --> 00:18:31,311 line:-1
with a yellow fill.


330
00:18:32,279 --> 00:18:36,316 line:-2
Whoa, that's not exactly the effect
I was aiming for here.


331
00:18:36.350 --> 00:18:38.886 line:-1 align:center
The colors are way too bright.


332
00:18:38,919 --> 00:18:40,687 line:-1
Let's try something else.


333
00:18:40.721 --> 00:18:43.924 line:-2 align:center
We'll apply a color burn blend mode
with a gray fill.


334
00:18:44,992 --> 00:18:47,327 line:-1
There, that's a little more subtle.


335
00:18:47,361 --> 00:18:48,795 line:-1
Perfect!


336
00:18:48,829 --> 00:18:50,697 line:-1
Now, let's look at some code.


337
00:18:52.099 --> 00:18:54.434 line:-1 align:center
To enable the kind of effects we just saw,


338
00:18:54,468 --> 00:18:57,738 line:-1
we added a property to MKOverlayRenderer,


339
00:18:57,771 --> 00:18:59,573 line:-1
called blendMode.


340
00:18:59.606 --> 00:19:01.341 line:-1 align:center
All you need to do is set


341
00:19:01.375 --> 00:19:05.245 line:-2 align:center
the desired CoreGraphics blend mode
on the overlay renderer, and you're done!


342
00:19:06,113 --> 00:19:09,917 line:-2
As previously mentioned, blend modes
are order dependent.


343
00:19:09,950 --> 00:19:11,885 line:-1
The overlay at the bottom of the stack


344
00:19:11.919 --> 00:19:13.720 line:-1 align:center
is blended with the map,


345
00:19:13,754 --> 00:19:16,290 line:-1
the second-to-last overlay is then blended


346
00:19:16,323 --> 00:19:18,926 line:-2
with the result
of the previous blend operation,


347
00:19:18,959 --> 00:19:21,128 line:-1
and so on.


348
00:19:21,161 --> 00:19:23,764 line:-1
In MapKit, the order of overlays is


349
00:19:23,797 --> 00:19:25,799 line:-1
determined at insertion time.


350
00:19:25,832 --> 00:19:29,403 line:-2
You can use either absolute
or relative positioning


351
00:19:29.436 --> 00:19:33.106 line:-2 align:center
using one of MKMapView's
many overlay insertion functions.


352
00:19:35,576 --> 00:19:38,278 line:-2
MapKit supports a wide range
of blend modes


353
00:19:38.312 --> 00:19:41.114 line:-2 align:center
and we can't possibly cover
all of them today.


354
00:19:41.148 --> 00:19:42.783 line:-1 align:center
I encourage you try them out.


355
00:19:43.317 --> 00:19:45.752 line:-1 align:center
And that's it for blend modes!


356
00:19:45.786 --> 00:19:47.087 line:-1 align:center
As you've just seen,


357
00:19:47,120 --> 00:19:49,456 line:-1
blend modes are a powerful tool to control


358
00:19:49,489 --> 00:19:51,258 line:-1
the styling of your map.


359
00:19:51.291 --> 00:19:54.328 line:-2 align:center
You can use it
to highlight geographical areas,


360
00:19:54,361 --> 00:19:57,397 line:-2
deemphasize the map to make
your content stand out,


361
00:19:57,431 --> 00:19:58,599 line:-1
and so much more.


362
00:20:00,133 --> 00:20:03,637 line:-2
Next up, let's talk
about Selectable Map Features!


363
00:20:03,670 --> 00:20:06,006 line:-1
This has been a highly requested feature,


364
00:20:06,039 --> 00:20:07,941 line:-1
and I'm really excited to show it to you!


365
00:20:09.943 --> 00:20:12.846 line:-1 align:center
If you are using MapKit in your app today,


366
00:20:12,880 --> 00:20:16,683 line:-2
you're likely leveraging annotations
to show the location of cities,


367
00:20:16.717 --> 00:20:19.353 line:-1 align:center
points of interest, or physical objects.


368
00:20:20,554 --> 00:20:22,890 line:-1
Unless you're using POI filtering,


369
00:20:22.923 --> 00:20:25.893 line:-2 align:center
you are placing those annotations
on a map which already contains


370
00:20:25.926 --> 00:20:28.862 line:-2 align:center
a number of similar annotations
provided by Apple.


371
00:20:29,830 --> 00:20:32,866 line:-2
Up until now, your users
could only interact


372
00:20:32,900 --> 00:20:34,868 line:-1
with the annotations you provided.


373
00:20:35,636 --> 00:20:39,506 line:-1
In iOS 16, we're going to change that.


374
00:20:39,540 --> 00:20:42,643 line:-1
Using our new Selectable Map Features API,


375
00:20:42.676 --> 00:20:47.181 line:-2 align:center
you'll now have the option to let
your users select features on the map.


376
00:20:48,715 --> 00:20:51,952 line:-2
Selectable map features include
points of interest,


377
00:20:51,985 --> 00:20:55,689 line:-2
such as stores, restaurants,
and landmarks;


378
00:20:55,722 --> 00:20:59,059 line:-1
territories, such as cities and states;


379
00:20:59,092 --> 00:21:02,629 line:-2
and physical features,
such as mountain ranges and lakes.


380
00:21:03.897 --> 00:21:07.000 line:-2 align:center
To adopt Selectable Map Features
in your app,


381
00:21:07.034 --> 00:21:10.737 line:-2 align:center
all you need to do is go
through a few simple steps.


382
00:21:10,771 --> 00:21:14,441 line:-2
First, configure which feature types
should be selectable.


383
00:21:14,474 --> 00:21:17,277 line:-2
As we just saw,
there are three main feature types,


384
00:21:17,311 --> 00:21:19,279 line:-2
and it might not make sense
for all of them


385
00:21:19.313 --> 00:21:21.782 line:-2 align:center
to be interactive in the context
of your app.


386
00:21:22,616 --> 00:21:24,318 line:-1
For points-of-interest features,


387
00:21:24,351 --> 00:21:27,087 line:-1
you can also use our existing filter API


388
00:21:27,120 --> 00:21:30,490 line:-2
to further restrict which
points-of-interest categories can appear


389
00:21:30,524 --> 00:21:31,959 line:-1
and therefore be selectable.


390
00:21:33,627 --> 00:21:36,964 line:-2
Second, implement the MKMapView
delegate callbacks


391
00:21:36,997 --> 00:21:38,932 line:-1
to handle selection events.


392
00:21:38,966 --> 00:21:42,369 line:-2
You are free to handle these events
however you choose.


393
00:21:42,402 --> 00:21:45,372 line:-2
You might want to control how selected
features appear,


394
00:21:45,405 --> 00:21:47,674 line:-2
or you might want to show
some additional UI


395
00:21:47,708 --> 00:21:49,510 line:-1
in response to the selection events.


396
00:21:50,944 --> 00:21:53,480 line:-1
Third, you'll want to request and display


397
00:21:53.514 --> 00:21:54.982 line:-1 align:center
additional place information


398
00:21:55,015 --> 00:21:56,917 line:-1
in your application's user interface.


399
00:21:57.618 --> 00:21:59.586 line:-2 align:center
The information embedded
in the map feature


400
00:21:59,620 --> 00:22:01,522 line:-1
is limited to what you see on screen.


401
00:22:02.756 --> 00:22:06.059 line:-2 align:center
To give users more context about the place
they selected,


402
00:22:06,093 --> 00:22:08,428 line:-2
you'll need to request
additional information.


403
00:22:09.196 --> 00:22:11.632 line:-1 align:center
Let me walk you through the new APIs


404
00:22:11.665 --> 00:22:13.267 line:-1 align:center
for each of these steps.


405
00:22:14.768 --> 00:22:17.137 line:-2 align:center
We'll start with configuring
which map features


406
00:22:17.171 --> 00:22:18.839 line:-1 align:center
should be selectable


407
00:22:18.872 --> 00:22:22.376 line:-2 align:center
using the new selectableMapFeatures
property.


408
00:22:23.977 --> 00:22:27.714 line:-2 align:center
You can choose any combination
of points of interest, territories,


409
00:22:27.748 --> 00:22:29.850 line:-1 align:center
and physical features.


410
00:22:29.883 --> 00:22:32.619 line:-2 align:center
Once you have configured
the selectable map features


411
00:22:32.653 --> 00:22:35.389 line:-1 align:center
and the user taps one of those features,


412
00:22:35,422 --> 00:22:38,258 line:-2
you'll start receiving
some new delegate callbacks


413
00:22:38,292 --> 00:22:41,695 line:-2
allowing you to customize
the selection behavior.


414
00:22:41,728 --> 00:22:45,732 line:-2
The first callback you'll get is
the new didSelect annotation callback.


415
00:22:46,333 --> 00:22:50,404 line:-2
This callback is a great opportunity
for you to request additional data


416
00:22:50.437 --> 00:22:51.839 line:-1 align:center
about the map item


417
00:22:51.872 --> 00:22:54.842 line:-2 align:center
using the new request API we'll cover
in a moment.


418
00:22:56,210 --> 00:23:00,914 line:-2
The second callback you'll get is
the existing viewFor annotation callback.


419
00:23:00,948 --> 00:23:03,183 line:-1
This is where you can customize the view


420
00:23:03.217 --> 00:23:06.053 line:-2 align:center
which will be shown
for the selected state.


421
00:23:06.086 --> 00:23:07.955 line:-1 align:center
While this is existing API,


422
00:23:07,988 --> 00:23:10,991 line:-1
we've added a new type of annotation class


423
00:23:11,024 --> 00:23:13,760 line:-1
called MapFeatureAnnotation.


424
00:23:13,794 --> 00:23:16,463 line:-2
This class will be passed to view
for annotation


425
00:23:16,496 --> 00:23:18,699 line:-1
when the user selects a map feature.


426
00:23:19.800 --> 00:23:23.003 line:-2 align:center
MapFeatureAnnotation
has a number of properties.


427
00:23:23.036 --> 00:23:25.138 line:-1 align:center
You can inspect the FeatureType property


428
00:23:25.172 --> 00:23:26.640 line:-1 align:center
to determine whether the map feature


429
00:23:26.673 --> 00:23:28.041 line:-1 align:center
is a point of interest,


430
00:23:28,075 --> 00:23:30,344 line:-1
a territory, or a physical feature.


431
00:23:31,345 --> 00:23:33,814 line:-1
If the map feature is a point of interest,


432
00:23:33.847 --> 00:23:35.616 line:-1 align:center
the pointOfInterestCategory property


433
00:23:35.649 --> 00:23:37.818 line:-1 align:center
will let you know what its category is,


434
00:23:37,851 --> 00:23:40,287 line:-1
and the iconStyle property will let you


435
00:23:40,320 --> 00:23:42,756 line:-2
obtain additional information
about the icon,


436
00:23:42,789 --> 00:23:45,125 line:-1
such as its background color


437
00:23:45.158 --> 00:23:46.727 line:-1 align:center
and the icon image itself.


438
00:23:48,262 --> 00:23:51,598 line:-2
Let's look at an example of how
to customize your annotation view


439
00:23:51,632 --> 00:23:53,600 line:-1
using the viewFor annotation callback.


440
00:23:55.102 --> 00:23:57.738 line:-2 align:center
If you want to achieve
the same selection style


441
00:23:57.771 --> 00:24:00.007 line:-1 align:center
as the Maps app, all you have to do


442
00:24:00.040 --> 00:24:01.108 line:-1 align:center
is return nil.


443
00:24:02,309 --> 00:24:04,845 line:-2
If you want to customize
the selection style,


444
00:24:04,878 --> 00:24:06,947 line:-1
you can return an annotationView,


445
00:24:06,980 --> 00:24:09,783 line:-2
the same way you would
for your own annotations.


446
00:24:10,784 --> 00:24:13,554 line:-2
The markerAnnotationView
is a great option.


447
00:24:13,587 --> 00:24:15,689 line:-2
It will give you
the same balloon-style shape


448
00:24:15.722 --> 00:24:17.024 line:-1 align:center
as the Maps app,


449
00:24:17,057 --> 00:24:18,525 line:-1
a gradient treatment,


450
00:24:18,559 --> 00:24:21,428 line:-2
and it allows you to choose your own color
or icon.


451
00:24:22,429 --> 00:24:26,333 line:-2
In my example here, I've chosen to use
the same image obtained


452
00:24:26,366 --> 00:24:29,870 line:-2
from the feature's icon style
and only change the color


453
00:24:29.903 --> 00:24:31.872 line:-1 align:center
to match the application's tint color.


454
00:24:33,040 --> 00:24:35,008 line:-1
If you want to go fully custom,


455
00:24:35,042 --> 00:24:37,444 line:-2
you can provide
any annotation view subclass


456
00:24:37.477 --> 00:24:39.079 line:-1 align:center
that you create.


457
00:24:40,047 --> 00:24:42,950 line:-2
As you just saw, you can use
the feature annotation


458
00:24:42.983 --> 00:24:45.986 line:-2 align:center
to retrieve visual information
about the selected feature.


459
00:24:46,854 --> 00:24:51,925 line:-2
By passing the feature annotation on to
our new MKMapItemRequest API,


460
00:24:51.959 --> 00:24:55.028 line:-2 align:center
you can also retrieve a map item
for the selected feature.


461
00:24:57.231 --> 00:25:00.901 line:-2 align:center
This map item contains additional metadata
about the place,


462
00:25:00.934 --> 00:25:06.139 line:-2 align:center
such as an address, a name,
a phone number, and a URL.


463
00:25:07.508 --> 00:25:11.144 line:-2 align:center
The map item also provides a function
to punch out to the Maps app


464
00:25:11.178 --> 00:25:13.881 line:-2 align:center
if your users want to see
additional metadata


465
00:25:13.914 --> 00:25:15.983 line:-1 align:center
which isn't available through MapKit.


466
00:25:17.184 --> 00:25:20.220 line:-2 align:center
And now, I will again hand it over
to Yingxiu.


467
00:25:20.254 --> 00:25:21.688 line:-1 align:center
Yingxiu: Thank you, Eric.


468
00:25:22,956 --> 00:25:26,159 line:-2
Eric just walked you through
the Selectable Map Features.


469
00:25:26,193 --> 00:25:30,063 line:-2
I'm going to show you
how easy it is to leverage that API.


470
00:25:33,000 --> 00:25:36,470 line:-2
For that, we will implement
our Explore feature.


471
00:25:36,503 --> 00:25:40,107 line:-2
We want our users to be able to explore
some interesting places


472
00:25:40,140 --> 00:25:41,575 line:-1
near the waterfront.


473
00:25:41.608 --> 00:25:43.076 line:-1 align:center
If they tap on POIs,


474
00:25:43.110 --> 00:25:44.978 line:-1 align:center
annotations should show up.


475
00:25:45.012 --> 00:25:48.315 line:-2 align:center
We will perform a camera animation
to the tapped location,


476
00:25:48.348 --> 00:25:50.617 line:-1 align:center
and show an info card from the bottom.


477
00:25:52,452 --> 00:25:55,422 line:-2
First, let's filter points of interest
on the map


478
00:25:55,455 --> 00:25:59,059 line:-2
and remove the categories
which are irrelevant to our tour.


479
00:26:00,661 --> 00:26:03,230 line:-1
Aside from applying the filter in code,


480
00:26:03,263 --> 00:26:07,167 line:-2
we can also apply it
in Interface Builder inspector.


481
00:26:07.201 --> 00:26:09.069 line:-1 align:center
Let's select the map view,


482
00:26:09,102 --> 00:26:11,371 line:-2
and go to inspector
on the right-hand side.


483
00:26:13,307 --> 00:26:16,243 line:-1
Here, we will do an exclusion filter.


484
00:26:18.278 --> 00:26:21.048 line:-2 align:center
I'll select the categories
that we don't want,


485
00:26:21.081 --> 00:26:25.319 line:-1 align:center
for example: airport,


486
00:26:25.352 --> 00:26:31.925 line:-1 align:center
car rental, hospital, and laundry.


487
00:26:33.227 --> 00:26:36.163 line:-2 align:center
Now we should only have
desired point of interests


488
00:26:36,196 --> 00:26:37,664 line:-1
on the map view.


489
00:26:42,436 --> 00:26:45,639 line:-2
It's very simple to enable
Selectable Map Features.


490
00:26:45.672 --> 00:26:47.908 line:-1 align:center
All we need to do is to specify


491
00:26:47,941 --> 00:26:50,911 line:-2
an option set
of desired selectable features.


492
00:26:54.848 --> 00:26:59.152 line:-2 align:center
In the scope of this sample app,
we'll just use points of interest,


493
00:26:59,186 --> 00:27:00,921 line:-1
but keep in mind, we also support


494
00:27:00,954 --> 00:27:02,489 line:-1
selectable physical features


495
00:27:02,523 --> 00:27:03,991 line:-1
and territories.


496
00:27:10,397 --> 00:27:15,169 line:-2
We can use the existing delegate method
mapView viewForAnnotation


497
00:27:15,202 --> 00:27:17,404 line:-2
to create a view
for the feature annotation.


498
00:27:19,039 --> 00:27:22,242 line:-1
Here, we'll just return nil for now...


499
00:27:26,280 --> 00:27:29,883 line:-2
To use the default gradient annotation
offered by MapKit.


500
00:27:30.651 --> 00:27:32.986 line:-1 align:center
We'll come back to customize it later.


501
00:27:35,756 --> 00:27:38,158 line:-1
If an annotation is on Selected state,


502
00:27:38.192 --> 00:27:41.962 line:-2 align:center
we will be informed
through the new delegate method


503
00:27:41.995 --> 00:27:44.598 line:-1 align:center
mapView didSelectAnnotation.


504
00:27:46.200 --> 00:27:49.636 line:-2 align:center
Let's use this function
to perform a camera animation


505
00:27:49.670 --> 00:27:51.839 line:-1 align:center
and zoom in on the selected feature.


506
00:27:53.640 --> 00:27:58.111 line:-2 align:center
First, let's cast the annotation
to featureAnnotation,


507
00:27:58.145 --> 00:28:00.814 line:-1 align:center
then create a map item request with it.


508
00:28:04.751 --> 00:28:08.856 line:-2 align:center
This is a new API to fetch
additional place informations


509
00:28:08.889 --> 00:28:10.691 line:-1 align:center
with feature annotations.


510
00:28:11.992 --> 00:28:13.994 line:-1 align:center
Let's issue the request.


511
00:28:19.099 --> 00:28:21.802 line:-1 align:center
Once the fetch operation succeeds,


512
00:28:21.835 --> 00:28:24.204 line:-1 align:center
we will animate to the map item.


513
00:28:27.007 --> 00:28:29.543 line:-1 align:center
When the camera animation has completed,


514
00:28:29,576 --> 00:28:31,879 line:-1
we will get details from the feature item


515
00:28:31.912 --> 00:28:33.647 line:-1 align:center
and show them on an info card.


516
00:28:34.781 --> 00:28:36.984 line:-1 align:center
Compile it and see how it looks.


517
00:28:41.555 --> 00:28:44.892 line:-2 align:center
Let's check out some interesting places
at the waterfront.


518
00:28:47,261 --> 00:28:49,229 align:center
The gradient annotations show up.


519
00:28:49,263 --> 00:28:51,932 align:center
The camera animates to the tab location.


520
00:28:51,965 --> 00:28:53,667 line:0
Then the info card shows up.


521
00:28:54,601 --> 00:28:55,802 align:center
This is a museum.


522
00:28:55,836 --> 00:28:57,037 line:0
Here is the URL.


523
00:28:57,070 --> 00:28:59,039 align:center
We can check it out if we're interested.


524
00:28:59,773 --> 00:29:01,708 line:0
And we get the full address.


525
00:29:03.443 --> 00:29:05.279 line:-1 align:center
If it's a landmark,


526
00:29:05.312 --> 00:29:07.748 line:-1 align:center
we will get this beautiful iconography.


527
00:29:14.655 --> 00:29:16.223 line:-1 align:center
Now let's go back to the code


528
00:29:16,256 --> 00:29:18,125 line:-1
and customize our annotation


529
00:29:18.158 --> 00:29:19.293 line:-1 align:center
for the selection state.


530
00:29:22,663 --> 00:29:25,899 line:-2
Instead of nil, let's create
a MarkerAnnotationView.


531
00:29:26,700 --> 00:29:29,703 line:-2
We'll cast the annotation
to featureAnnotation first,


532
00:29:29.736 --> 00:29:33.674 line:-2 align:center
so we can use specific data from it
to customize the view.


533
00:29:34.875 --> 00:29:37.978 line:-2 align:center
Let's tint the annotation
with a purple-ish color


534
00:29:38.011 --> 00:29:41.181 line:-2 align:center
so it's in line
with our corporate identity.


535
00:29:42,950 --> 00:29:45,552 line:-2
We can also customize
the annotation glyph.


536
00:29:47.054 --> 00:29:51.158 line:-2 align:center
SelectedGlyphImage
is for annotations on Selected state.


537
00:29:52.659 --> 00:29:54.895 line:-1 align:center
GlyphImage is smaller.


538
00:29:54.928 --> 00:29:58.332 line:-2 align:center
It is the glyph for annotations
on Unselected state.


539
00:29:59,333 --> 00:30:02,202 line:-1
We recommend assigning them the same glyph


540
00:30:02.236 --> 00:30:06.573 line:-2 align:center
for a smooth transition
from the Unselected to Selected state.


541
00:30:08.242 --> 00:30:12.346 line:-2 align:center
Let's use the icon style image we got
from the featureAnnotation.


542
00:30:13,881 --> 00:30:17,951 line:-1
MKIconStyle is a new class in iOS16.


543
00:30:17.985 --> 00:30:22.689 line:-2 align:center
It has the iconography and color info
of the selected POI.


544
00:30:22,723 --> 00:30:24,758 line:-1
Compile and see how it looks in the app.


545
00:30:29,696 --> 00:30:30,931 line:-1
Here you go!


546
00:30:30.964 --> 00:30:32.332 line:-1 align:center
Now we have an annotation


547
00:30:32,366 --> 00:30:34,334 line:-1
that matches our corporate colors,


548
00:30:34.368 --> 00:30:36.503 line:-1 align:center
but still uses Apple iconography.


549
00:30:40,374 --> 00:30:43,143 line:-2
That's how you can enable
selectable map features


550
00:30:43,177 --> 00:30:46,113 line:-2
and customize annotations
in your own apps!


551
00:30:46,146 --> 00:30:48,382 line:-1
With that, I hand it back to Eric.


552
00:30:49.183 --> 00:30:50.384 line:-1 align:center
Eric: Thanks, Yingxiu!


553
00:30:50,417 --> 00:30:53,554 line:-2
As you just saw,
the Selectable Map Features API


554
00:30:53,587 --> 00:30:55,689 line:-2
enables your users to interact
with the map


555
00:30:55.722 --> 00:30:57.424 line:-1 align:center
in a whole new way.


556
00:30:57.457 --> 00:30:59.359 line:-1 align:center
The MapFeatureAnnotation class,


557
00:30:59.393 --> 00:31:02.262 line:-2 align:center
in combination
with the MapView delegate callbacks,


558
00:31:02,296 --> 00:31:05,065 line:-2
allow you to customize
the selection look and feel,


559
00:31:05.098 --> 00:31:08.235 line:-2 align:center
while the MapItemRequest
allows you to resolve a feature


560
00:31:08.268 --> 00:31:10.437 line:-1 align:center
to a map item, giving you access


561
00:31:10.470 --> 00:31:11.705 line:-1 align:center
to additional information


562
00:31:11.738 --> 00:31:13.440 line:-1 align:center
about the selected map feature.


563
00:31:14,074 --> 00:31:16,977 line:-1
Next, let's talk about around Look Around!


564
00:31:18.245 --> 00:31:21.782 line:-2 align:center
The Maps app introduced Look Around
in iOS 13,


565
00:31:21.815 --> 00:31:24.117 line:-1 align:center
and people absolutely love it.


566
00:31:24,151 --> 00:31:25,319 line:-1
You can use Look Around


567
00:31:25,352 --> 00:31:27,621 line:-1
to get a real sense of a place.


568
00:31:27.654 --> 00:31:30.958 line:-2 align:center
Look Around imagery offers
an incredible level of detail,


569
00:31:30.991 --> 00:31:33.994 line:-2 align:center
leveraging 3D models to provide a level
of realism


570
00:31:34.027 --> 00:31:35.362 line:-1 align:center
like no other map.


571
00:31:37,331 --> 00:31:39,199 line:-1
Look Around is available in many places


572
00:31:39,233 --> 00:31:41,468 line:-1
around the world, including these cities,


573
00:31:41,502 --> 00:31:43,036 line:-1
and entire countries!


574
00:31:44,872 --> 00:31:47,908 line:-2
We're continuously adding support
for new regions,


575
00:31:47,941 --> 00:31:51,111 line:-2
so I again encourage you to check out
the Look Around section


576
00:31:51,144 --> 00:31:54,715 line:-2
on the feature availability website
linked in the session notes.


577
00:31:54,748 --> 00:31:58,919 line:-2
With iOS 16, we're bringing Look Around
to MapKit,


578
00:31:58.952 --> 00:32:01.889 line:-2 align:center
and adopting it only requires
three simple steps.


579
00:32:03,590 --> 00:32:05,692 line:-1
First, you'll need to check whether data


580
00:32:05.726 --> 00:32:07.694 line:-1 align:center
is available for the desired location.


581
00:32:08.362 --> 00:32:11.131 line:-2 align:center
Even if Look Around is available
in your target region,


582
00:32:11,164 --> 00:32:13,934 line:-2
not every location can be seen
from a street,


583
00:32:13,967 --> 00:32:15,736 line:-1
and therefore, Look Around imagery


584
00:32:15.769 --> 00:32:18.305 line:-1 align:center
might not always be available.


585
00:32:18.338 --> 00:32:21.475 line:-2 align:center
Once you've determined
whether Look Around data is available,


586
00:32:21.508 --> 00:32:22.910 line:-1 align:center
you'll need to pass that data on


587
00:32:22.943 --> 00:32:25.045 line:-1 align:center
to either the Look Around View Controller


588
00:32:25,078 --> 00:32:26,713 line:-1
or the Look Around Snapshotter.


589
00:32:27.848 --> 00:32:30.684 line:-2 align:center
And finally, if Look Around data
is available,


590
00:32:30,717 --> 00:32:32,386 line:-1
you'll want to update your app UI


591
00:32:32.419 --> 00:32:35.155 line:-1 align:center
to show the Look Around preview.


592
00:32:35.189 --> 00:32:37.791 line:-2 align:center
Let's take a look at the new APIs
you will be using


593
00:32:37,824 --> 00:32:39,826 line:-1
to accomplish those three simple tasks.


594
00:32:41.762 --> 00:32:44.631 line:-2 align:center
The first step in attempting to show
a Look Around preview


595
00:32:44,665 --> 00:32:46,800 line:-1
is to check for data availability.


596
00:32:46,834 --> 00:32:50,304 line:-2
For this, you'll need to create
a LookAroundSceneRequest,


597
00:32:50.337 --> 00:32:54.208 line:-2 align:center
which is a new class we're introducing
in iOS 16.


598
00:32:54.241 --> 00:32:57.845 line:-2 align:center
You can initialize a new instance
with either a coordinate


599
00:32:57,878 --> 00:32:59,313 line:-1
or a map item.


600
00:33:00,547 --> 00:33:03,984 line:-2
Next, you'll want to retrieve
its scene property.


601
00:33:04,017 --> 00:33:07,855 line:-1
This is an optional async property.


602
00:33:07,888 --> 00:33:11,525 line:-2
If data is available, you will get back
a scene instance.


603
00:33:11,558 --> 00:33:12,926 line:-1
If data is not available,


604
00:33:12.960 --> 00:33:15.128 line:-1 align:center
you will get back a nil instead.


605
00:33:15.162 --> 00:33:17.297 line:-2 align:center
And if there
was a problem with the request,


606
00:33:17,331 --> 00:33:18,765 line:-1
an error will be thrown.


607
00:33:20.200 --> 00:33:22.402 line:-1 align:center
The Look Around Scene is an opaque object


608
00:33:22.436 --> 00:33:23.871 line:-1 align:center
with no properties.


609
00:33:23,904 --> 00:33:25,205 line:-1
It acts as a token


610
00:33:25.239 --> 00:33:27.908 line:-2 align:center
that ensures the availability
of Look Around imagery


611
00:33:27.941 --> 00:33:29.510 line:-1 align:center
for a requested location.


612
00:33:30.978 --> 00:33:33.914 line:-2 align:center
To show an interactive preview
of the Look Around scene,


613
00:33:33.947 --> 00:33:35.883 line:-1 align:center
you simply pass the scene on


614
00:33:35.916 --> 00:33:38.652 line:-2 align:center
to a new
Look Around View Controller instance


615
00:33:38.685 --> 00:33:41.121 line:-1 align:center
as an init parameter


616
00:33:41,154 --> 00:33:43,857 line:-2
or assign it
to the read write scene property


617
00:33:43,891 --> 00:33:46,527 line:-1
of an existing instance.


618
00:33:46,560 --> 00:33:49,596 line:0
Alternatively, if all you need
is a static image,


619
00:33:49,630 --> 00:33:51,331 line:0
you can also pass the scene on


620
00:33:51,365 --> 00:33:53,934 line:0
to a new Look Around View
Snapshotter instance


621
00:33:53,967 --> 00:33:55,702 align:center
as an init parameter


622
00:33:55,736 --> 00:33:58,639 line:0
and subsequently retrieve
its snapshot async property.


623
00:34:00,174 --> 00:34:01,942 line:-1
The Look Around view controller is


624
00:34:01.975 --> 00:34:04.311 line:-1 align:center
designed to make it as easy as possible


625
00:34:04.344 --> 00:34:07.814 line:-2 align:center
to embed a smaller static preview
of a Look Around image,


626
00:34:07.848 --> 00:34:09.683 line:-1 align:center
which the user can tap on to enter


627
00:34:09.716 --> 00:34:12.219 line:-2 align:center
a full-screen
Look Around interactive session.


628
00:34:13,687 --> 00:34:16,557 line:-2
And now, we'll hand it over to Yingxiu
once more


629
00:34:16,590 --> 00:34:20,160 line:-2
so that she can show us how easy
it really is to put it all together.


630
00:34:20.928 --> 00:34:22.930 line:-1 align:center
Yingxiu: Thank you, Eric.


631
00:34:22,963 --> 00:34:26,300 line:-2
Eric just showed us the immersive
Look Around experience support


632
00:34:26,333 --> 00:34:27,868 line:-1
coming to MapKit.


633
00:34:27.901 --> 00:34:30.370 line:-2 align:center
I'm going to show you
how straightforward it is


634
00:34:30,404 --> 00:34:32,472 line:-1
to integrate it in our sample app.


635
00:34:32,506 --> 00:34:36,743 line:-2
For that, we'll move on
to our last feature, Highlights.


636
00:34:36,777 --> 00:34:39,880 line:-2
Users can get a realistic view
of must-see places.


637
00:34:44,251 --> 00:34:47,254 line:-2
We already have a couple
of San Francisco landmark names


638
00:34:47,287 --> 00:34:49,723 line:-2
in the segment control bar
on top of the screen.


639
00:34:50.757 --> 00:34:52.359 line:-1 align:center
When users tap on one of them,


640
00:34:52,392 --> 00:34:54,728 line:-1
we want to perform a camera animation


641
00:34:54,761 --> 00:34:55,929 line:-1
to the tapped location.


642
00:34:57,030 --> 00:35:01,201 align:center
We also want to show a Look around preview
at bottom left,


643
00:35:01,235 --> 00:35:03,637 line:0
which our users can expand
to full screen.


644
00:35:04.404 --> 00:35:05.372 line:-1 align:center
Let's do it!


645
00:35:06,907 --> 00:35:08,909 line:-1
First we need to add a container view


646
00:35:08,942 --> 00:35:10,310 line:-1
for our Look Around preview.


647
00:35:22.723 --> 00:35:24.558 line:-1 align:center
Let's go to the size inspector.


648
00:35:27.661 --> 00:35:33.400 line:-1 align:center
Let's give it a position and size.


649
00:35:37,171 --> 00:35:39,373 line:-2
We want to hide this preview
at the beginning,


650
00:35:39.406 --> 00:35:45.512 line:-2 align:center
so let's open the attributes inspector
and check Hidden.


651
00:35:48.415 --> 00:35:51.518 line:-2 align:center
Next, we need to create
a Look Around view controller...


652
00:36:00.027 --> 00:36:02.362 line:-2 align:center
And embed it
to the container view.


653
00:36:09.303 --> 00:36:11.138 line:-1 align:center
Same as any other segue,


654
00:36:11,171 --> 00:36:13,207 line:-1
I need to give it an identifier.


655
00:36:15.008 --> 00:36:16.443 line:-1 align:center
Let's call it


656
00:36:16,476 --> 00:36:22,583 line:-1
"presentLookAroundEmbedded."


657
00:36:27.988 --> 00:36:30.057 line:-1 align:center
And import it to code so we can update
its visibility later.


658
00:36:44,071 --> 00:36:46,640 line:-1
Let's name it "preview."


659
00:36:53,547 --> 00:36:56,817 line:-2
Here, we already have
a LookAroundViewController declared.


660
00:36:56,850 --> 00:36:59,653 line:-2
We just need to grab
the instance in the prepare function.


661
00:37:04,391 --> 00:37:06,960 line:-1
Make sure the segue identifier is matched.


662
00:37:12.432 --> 00:37:16.170 line:-1 align:center
Then, in the segment control function,


663
00:37:16,203 --> 00:37:19,740 line:-2
we'll create a local search
with the landmark name.


664
00:37:24,511 --> 00:37:27,748 line:-2
If the request succeeds,
we will get a map item


665
00:37:27,781 --> 00:37:30,484 line:-2
which will be used
in the following camera animation


666
00:37:30,517 --> 00:37:32,452 line:-1
and Look Around scene retrieval.


667
00:37:35.589 --> 00:37:37.124 line:-1 align:center
For camera animation,


668
00:37:37.157 --> 00:37:40.861 line:-2 align:center
we first need to create a camera
with the new API.


669
00:37:44.665 --> 00:37:47.568 line:-1 align:center
MapCamera looking at map item.


670
00:37:47.601 --> 00:37:50.637 line:-2 align:center
Let's use map view frame size
for the view size,


671
00:37:50,671 --> 00:37:52,873 line:-1
and set allow pitch to true.


672
00:37:56,610 --> 00:37:59,179 line:-2
This will give us
a pitch view to landmarks


673
00:37:59,213 --> 00:38:01,248 line:-1
and a top-down view to other places.


674
00:38:02,482 --> 00:38:04,551 line:-2
Assign the new camera.
That's it.


675
00:38:07,120 --> 00:38:09,389 line:-1
Once the camera animation is completed,


676
00:38:09.423 --> 00:38:11.859 line:-1 align:center
we'll show its Look Around preview.


677
00:38:15,262 --> 00:38:18,432 line:-2
First, we need to determine
if the Look Around data


678
00:38:18,465 --> 00:38:20,801 line:-1
is available for this map item.


679
00:38:20.834 --> 00:38:22.536 line:-1 align:center
To do that, we need to use


680
00:38:22.569 --> 00:38:24.738 line:-1 align:center
the new LookAroundSceneRequest class.


681
00:38:25.339 --> 00:38:28.609 line:-2 align:center
Let's create our request
and pass in the map item.


682
00:38:29,610 --> 00:38:31,645 line:-1
Then perform the request.


683
00:38:36,650 --> 00:38:39,620 line:-1
If get scene request succeeds,


684
00:38:39,653 --> 00:38:40,787 line:-1
just assign the scene


685
00:38:40.821 --> 00:38:43.724 line:-1 align:center
to our LookAroundViewController.


686
00:38:43,757 --> 00:38:47,294 line:-2
If there is no error but we get nil
for the scene,


687
00:38:47.327 --> 00:38:51.331 line:-2 align:center
it means Look Around data
is not available at the request location.


688
00:38:53,567 --> 00:38:55,802 line:-1
Finally, don't forget to show the preview.


689
00:38:57.271 --> 00:38:59.106 line:-1 align:center
Let's see how it looks in the app!


690
00:39:04,144 --> 00:39:06,346 line:-1
Let's try with the Ferry Building.


691
00:39:08.582 --> 00:39:09.483 line:-1 align:center
There you go.


692
00:39:09.516 --> 00:39:11.919 line:-2 align:center
The Ferry Building is a landmark,
so we see


693
00:39:11.952 --> 00:39:14.254 line:-1 align:center
this fantastic curated camera framing


694
00:39:14,288 --> 00:39:16,056 align:center
to a hero angle,


695
00:39:16,089 --> 00:39:17,891 line:0
and the Look Around preview shows up.


696
00:39:18,825 --> 00:39:21,495 align:center
Let's try with another place, Dragon Gate.


697
00:39:23,263 --> 00:39:25,098 line:-1
Dragon Gate is not a landmark,


698
00:39:25.132 --> 00:39:26.767 line:-1 align:center
so we get its top-down view.


699
00:39:29,469 --> 00:39:31,939 align:center
Let's tap on the preview
to enter full screen.


700
00:39:34,174 --> 00:39:37,177 align:center
It's an interactive view,
so I can navigate around.


701
00:39:42,015 --> 00:39:45,319 line:-2
I also get these beautiful icons
and labels for stores


702
00:39:45,352 --> 00:39:47,187 align:center
in the Look Around full-screen view.


703
00:39:51.792 --> 00:39:54.795 line:-2 align:center
It's that easy to add
an immersive Look Around experience


704
00:39:54,828 --> 00:39:56,063 line:-1
in your own app.


705
00:39:56.096 --> 00:39:57.998 line:-1 align:center
With that, I hand it back to Eric.


706
00:39:58.699 --> 00:39:59.967 line:-1 align:center
Eric: Thank you, Yingxiu!


707
00:40:00.000 --> 00:40:01.768 line:-2 align:center
The Interface Builder support
for Look Around


708
00:40:01,802 --> 00:40:03,170 line:-1
makes it look so easy!


709
00:40:03,904 --> 00:40:06,573 line:-1
So we've covered a lot of topics today,


710
00:40:07,541 --> 00:40:09,810 line:-2
from the automatic adoption
of the all-new map


711
00:40:09,843 --> 00:40:12,112 line:-1
and the new Map Configuration API,


712
00:40:12.145 --> 00:40:14.448 line:-1 align:center
new behaviors and advances for overlays,


713
00:40:14.481 --> 00:40:17.417 line:-2 align:center
to all-new capabilities
like Selectable Map Features


714
00:40:17,451 --> 00:40:19,219 line:-1
and Look Around support.


715
00:40:19,253 --> 00:40:20,954 line:-1
We think you'll agree there's a lot here


716
00:40:20.988 --> 00:40:24.958 line:-2 align:center
you can use to take the map experience
in your app to the next level,


717
00:40:24,992 --> 00:40:27,160 line:-2
and we can't wait to see
what you'll accomplish with it.


718
00:40:28.028 --> 00:40:29.730 line:-1 align:center
Before I go, there's a few things


719
00:40:29,763 --> 00:40:30,898 line:-1
I'd like to leave you with.


720
00:40:32,332 --> 00:40:34,801 line:-1
As always, your feedback is instrumental


721
00:40:34.835 --> 00:40:37.838 line:-2 align:center
in helping us prioritize
what we focus on next,


722
00:40:37,871 --> 00:40:40,741 line:-2
so please be sure
to use the Feedback Assistant


723
00:40:40,774 --> 00:40:43,911 line:-2
to send us your bug reports
and the features you'd find


724
00:40:43,944 --> 00:40:45,279 line:-1
most helpful for your app.


725
00:40:46,980 --> 00:40:50,050 line:-2
In addition, we've updated
many of our existing samples


726
00:40:50.083 --> 00:40:52.319 line:-1 align:center
to incorporate what we just discussed.


727
00:40:52.352 --> 00:40:53.954 line:-1 align:center
We encourage you to check them out.


728
00:40:55,322 --> 00:40:58,792 line:-2
And finally, we've announced a new set
of REST APIs


729
00:40:58.825 --> 00:41:00.527 line:-1 align:center
you'll want to take a look at.


730
00:41:00,561 --> 00:41:02,796 line:-1
We think these APIs will be really useful


731
00:41:02,829 --> 00:41:05,332 line:-2
for those of you looking to move
common calls


732
00:41:05,365 --> 00:41:09,603 line:-2
for geocoding, ETA determination,
and more to your server.


733
00:41:10,904 --> 00:41:13,140 align:center
For all the details, be sure to check out


734
00:41:13,173 --> 00:41:16,543 align:center
the session titled
Meet Apple Maps Server APIs.


735
00:41:17.678 --> 00:41:20.814 line:-2 align:center
On behalf of the Maps team,
thanks for watching...


736
00:41:20,848 --> 00:41:22,850 line:-1
both: And have a great WWDC!


737
00:41:22,883 --> 00:41:25,853 line:-1
[spacey music]

