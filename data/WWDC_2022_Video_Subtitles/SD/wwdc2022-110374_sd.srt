2
00:00:00.501 --> 00:00:08.509 line:-1 align:center
♪ instrumental hip hop music ♪


3
00:00:09,309 --> 00:00:11,144 line:-1
Hi, my name is Adam,


4
00:00:11.178 --> 00:00:13.614 line:-2 align:center
and I'm a Manager with the Developer
Experience Team.


5
00:00:13,647 --> 00:00:17,551 line:-2
And I'm Sasan,
an Engineer with the Xcode Cloud Team.


6
00:00:17.584 --> 00:00:19.186 line:-2 align:center
In this session,
we're gonna show you


7
00:00:19.219 --> 00:00:21.788 line:-1 align:center
how to get the most out of Xcode Cloud


8
00:00:21,822 --> 00:00:23,957 line:-1
by reviewing an existing workflow


9
00:00:23,991 --> 00:00:28,295 line:-2
and highlighting the brand-new
Xcode Cloud Usage dashboard.


10
00:00:28.328 --> 00:00:30.731 line:-2 align:center
Then, we'll take a look at how we can use
what we've learned


11
00:00:30,764 --> 00:00:34,034 line:-1
from viewing our existing projects usage,


12
00:00:34.067 --> 00:00:35.202 line:-1 align:center
to optimize it further,


13
00:00:35,235 --> 00:00:40,340 line:-2
and begin developing
a new Watch OS App version of our project


14
00:00:40,374 --> 00:00:44,645 line:-2
Before we get to that,
let's do a quick overview of Xcode Cloud.


15
00:00:44.678 --> 00:00:48.749 line:-2 align:center
At WWDC 2021,
we announced Xcode Cloud,


16
00:00:48.782 --> 00:00:52.019 line:-2 align:center
a continuous integration
and delivery service built into Xcode


17
00:00:52.052 --> 00:00:55.589 line:-2 align:center
and designed expressly
for Apple developers.


18
00:00:55.622 --> 00:00:59.326 line:-2 align:center
Xcode Cloud lets you adopt
continuous integration and delivery,


19
00:00:59.359 --> 00:01:02.396 line:-2 align:center
a standard software development practice
that helps you develop


20
00:01:02.429 --> 00:01:05.732 line:-2 align:center
and maintain your code,
and deliver apps to testers and users.


21
00:01:06,633 --> 00:01:10,537 line:-2
Xcode Cloud accelerates the development
and delivery of high-quality apps


22
00:01:10,571 --> 00:01:14,208 line:-2
by bringing together cloud-based tools
that help you build apps,


23
00:01:14.241 --> 00:01:16.376 line:-1 align:center
run automated tests in parallel,


24
00:01:16.410 --> 00:01:20.747 line:-2 align:center
deliver apps to testers, and view.
and manage user feedback,


25
00:01:20,781 --> 00:01:23,750 line:-1
all while protecting user privacy.


26
00:01:23.784 --> 00:01:27.287 line:-2 align:center
If you'd like to learn more about
setting up Xcode Cloud for the first time,


27
00:01:27,321 --> 00:01:31,358 align:center
check out "Meet Xcode Cloud"
from WWDC 2021,


28
00:01:31,391 --> 00:01:35,562 align:center
where Holly and Geoff go into more detail
in setting up your first workflow.


29
00:01:36.263 --> 00:01:38.999 line:-2 align:center
Now, let's take a look
at an existing workflow and build


30
00:01:39,032 --> 00:01:42,970 line:-1
for our Food Truck app in Xcode Cloud.


31
00:01:43,003 --> 00:01:45,939 line:-2
This is the Xcode Cloud dashboard
in App Store Connect,


32
00:01:45,973 --> 00:01:49,676 line:-2
it gives us an overview of a recent build
of our Food Truck project.


33
00:01:49,710 --> 00:01:52,713 line:-2
We recently made the decision
to add a companion watchOS app,


34
00:01:52,746 --> 00:01:56,450 line:-2
so a food truck operator can accept
incoming orders from their watch quickly,


35
00:01:56.483 --> 00:01:59.386 line:-2 align:center
without having to reach for their phone
every time a new order comes in.


36
00:01:59.419 --> 00:02:02.756 line:-2 align:center
Before we get started building
the new watchOS app in Xcode Cloud,


37
00:02:02.789 --> 00:02:06.994 line:-2 align:center
we'd like to make sure our current
workflows and project are fully optimized,


38
00:02:07,027 --> 00:02:11,031 line:-2
getting us the build and test results
we want, as quickly as possible.


39
00:02:11.064 --> 00:02:13.333 line:-2 align:center
We think there may be some ways
in which we can save some time


40
00:02:13.367 --> 00:02:14.568 line:-1 align:center
and resources here.


41
00:02:17,171 --> 00:02:18,906 line:-2
To better understand
where we might be able to start


42
00:02:18.939 --> 00:02:20.874 line:-1 align:center
making some of these optimizations,


43
00:02:20,908 --> 00:02:25,179 line:-2
let's take a closer look
at the build details overview.


44
00:02:25.212 --> 00:02:29.349 line:-2 align:center
First, we notice that we started the build
at 9:15 a.m.


45
00:02:29,383 --> 00:02:33,620 line:-2
and that it took 14 minutes to complete
and present us with results.


46
00:02:33,654 --> 00:02:36,356 line:-2
We also see there is a time
associated with usage,


47
00:02:36.390 --> 00:02:38.859 line:-1 align:center
which in this case is 32 minutes.


48
00:02:38.892 --> 00:02:41.228 line:-2 align:center
This is the total time it took
for all the actions


49
00:02:41,261 --> 00:02:43,797 line:-1
in our 14 minute build to complete.


50
00:02:43.830 --> 00:02:45.432 line:-2 align:center
Next to the usage,
you'll see an option


51
00:02:45,465 --> 00:02:48,235 line:-2
to view the distribution of actions
for this build.


52
00:02:49.937 --> 00:02:53.674 line:-2 align:center
Each action is broken out,
along with its respective usage,


53
00:02:53.707 --> 00:02:56.977 line:-2 align:center
with the 32-minute total
indicated at the bottom.


54
00:02:57,010 --> 00:02:59,813 line:-2
This Usage distribution gives us an idea
of some places


55
00:02:59.847 --> 00:03:02.149 line:-2 align:center
we could possibly make some
optimizations.


56
00:03:02,883 --> 00:03:05,853 line:-2
But before we get to that,
let's take a moment to look more closely


57
00:03:05,886 --> 00:03:08,188 line:-1
at how Xcode Cloud performs these actions,


58
00:03:08.222 --> 00:03:11.625 line:-2 align:center
and the difference between
a build duration and usage.


59
00:03:13.293 --> 00:03:15.662 line:-2 align:center
Each build is broken out into
a series of actions


60
00:03:15.696 --> 00:03:18.031 line:-1 align:center
depending on the setup of your workflow.


61
00:03:18.065 --> 00:03:22.569 line:-2 align:center
You'll see how Xcode Cloud breaks each
action out into multiple parallel actions


62
00:03:22.603 --> 00:03:26.507 line:-1 align:center
like Analyze, Archive, Build, and Test.


63
00:03:26,540 --> 00:03:28,909 line:-2
Because these actions are performed
in parallel,


64
00:03:28,942 --> 00:03:32,145 line:-2
the duration of the build
is equal to the longest running action;


65
00:03:32,179 --> 00:03:34,848 line:-2
in this case, the tests
we've configured in our workflow


66
00:03:34,882 --> 00:03:38,151 line:-1
that took 14 minutes to complete.


67
00:03:38.185 --> 00:03:42.256 line:-2 align:center
Now, when calculating usage,
each one of these actions,


68
00:03:42.289 --> 00:03:45.626 line:-2 align:center
when observed in sequence,
give us the total compute usage


69
00:03:45.659 --> 00:03:49.229 line:-1 align:center
of the build–in this case, 32 minutes.


70
00:03:49.263 --> 00:03:51.899 line:-2 align:center
And that's how Xcode Cloud calculates
the build duration,


71
00:03:51,932 --> 00:03:53,901 line:-1
and usage for a given build.


72
00:03:55.169 --> 00:03:58.005 line:-2 align:center
Now, let's take a look
at the Xcode Cloud Usage dashboard


73
00:03:58,038 --> 00:04:00,841 line:-1
in App Store Connect!


74
00:04:00.874 --> 00:04:04.878 line:-2 align:center
At the top is the usage overview,
since the beginning of our monthly cycle


75
00:04:04,912 --> 00:04:09,216 line:-2
for the Truck to Table Team,
including a total percentage used.


76
00:04:09,249 --> 00:04:12,452 line:-2
Additionally, we see
total usage expressed in minutes,


77
00:04:12,486 --> 00:04:16,423 line:-2
along with the remaining compute
available on our team's current cycle.


78
00:04:17.824 --> 00:04:21.595 line:-2 align:center
Beneath this, we see an area
dedicated to usage trends for our team,


79
00:04:21,628 --> 00:04:24,431 line:-2
broken out by builds
created and overall usage,


80
00:04:24,464 --> 00:04:29,136 line:-2
along with percentage increases
or decreases during the last 30 days.


81
00:04:29.169 --> 00:04:31.872 line:-2 align:center
If we'd like to see the usage
over a different time period,


82
00:04:31.905 --> 00:04:34.041 line:-1 align:center
we can do so by changing the time period


83
00:04:34,074 --> 00:04:37,311 line:-2
in the top, right-hand corner
of the trends section.


84
00:04:38,979 --> 00:04:42,349 line:-2
A little further down the page,
we see the total usage of each one


85
00:04:42,382 --> 00:04:44,952 line:-2
of our products currently
using Xcode Cloud,


86
00:04:44,985 --> 00:04:48,822 line:-2
again, during the time period
that we selected above.


87
00:04:48,856 --> 00:04:53,193 line:-2
All right, let's select Food Truck
so we can see its total usage breakdown.


88
00:04:55,128 --> 00:04:58,532 line:-2
Here we start by seeing the same trends
from our team view,


89
00:04:58.565 --> 00:05:02.402 line:-2 align:center
but now specific
to our Food Truck project.


90
00:05:02,436 --> 00:05:05,239 line:-2
A little further down the page,
we see the usage stats


91
00:05:05,272 --> 00:05:06,907 line:-1
for each one of our workflows.


92
00:05:06.940 --> 00:05:09.710 line:-2 align:center
At a quick glance, I can see
from the Release workflow


93
00:05:09,743 --> 00:05:14,081 line:-2
this is going to be an excellent place to
start making a couple of optimizations.


94
00:05:14,114 --> 00:05:15,983 line:-1
Now, I'm gonna hand it over to Sasan


95
00:05:16,016 --> 00:05:19,219 line:-2
who, after observing some of the build
details and compute usage,


96
00:05:19.253 --> 00:05:21.788 line:-2 align:center
is gonna show us a couple of ways
we can optimize our project.


97
00:05:21,822 --> 00:05:23,757 line:-1
Show them how it's done, Sasan.


98
00:05:23,790 --> 00:05:24,691 line:-1
Sasan: Thanks, Adam.


99
00:05:24,725 --> 00:05:27,961 line:-2
Let's use the Food Truck project
to cover some of the best practices


100
00:05:27.995 --> 00:05:29.730 line:-1 align:center
when using Xcode Cloud.


101
00:05:29,763 --> 00:05:33,300 line:-2
This should allow us to start iterating
quickly on our new watchOS app.


102
00:05:34,168 --> 00:05:38,071 line:-2
Workflows define when to start a build
through the use of Start Conditions.


103
00:05:38.105 --> 00:05:40.374 line:-2 align:center
It is important to configure
your Start Conditions


104
00:05:40.407 --> 00:05:44.545 line:-2 align:center
so that builds only start for changes
that are intended for the Workflow.


105
00:05:44,578 --> 00:05:47,548 line:-2
Let's see how we can apply
this practice to the Release workflow


106
00:05:47.581 --> 00:05:50.450 line:-1 align:center
of the Food Truck project.


107
00:05:50,484 --> 00:05:54,721 align:center
But first, I recommend checking out
"Explore Xcode Cloud Workflows"


108
00:05:54.755 --> 00:05:57.524 line:-1 align:center
for more detailed information.


109
00:05:59,593 --> 00:06:03,964 line:-2
I have the same build
that Adam showed us earlier open in Xcode.


110
00:06:03,997 --> 00:06:07,701 line:-2
To start, let me open the Release workflow
in the editor window.


111
00:06:09,570 --> 00:06:11,772 line:-2
I right-click on the Workflow
in the Navigation Panel


112
00:06:11,805 --> 00:06:14,208 line:-1
and select Edit Workflow.


113
00:06:19,379 --> 00:06:22,015 line:-2
In the editor window,
I can see all of the configurable sections


114
00:06:22.049 --> 00:06:26.386 line:-2 align:center
that make up a Workflow,
including a section for Start Conditions.


115
00:06:26,420 --> 00:06:28,589 line:-2
We've discovered
that sometimes the scheduled build


116
00:06:28,622 --> 00:06:30,257 line:-1
doesn't contain any new changes.


117
00:06:30.290 --> 00:06:32.492 line:-2 align:center
To address that,
let's add a new start condition


118
00:06:32.526 --> 00:06:36.430 line:-2 align:center
for branch changes to replace
the existing scheduled start condition.


119
00:06:36,463 --> 00:06:40,200 line:-2
This will ensure that we don't
build duplicate commits.


120
00:06:40,234 --> 00:06:43,036 line:-2
I on the Plus button
and select Branch Changes.


121
00:06:48,509 --> 00:06:50,177 line:-2
Now to delete
the scheduled start condition,


122
00:06:50.210 --> 00:06:52.679 line:-2 align:center
I will select it
and click on the trash icon.


123
00:06:55,115 --> 00:06:56,817 line:-2
The Branch Changes Start Condition
will run


124
00:06:56.850 --> 00:06:59.419 line:-2 align:center
whenever a new commit
is pushed to a remote branch.


125
00:06:59,453 --> 00:07:02,923 line:-2
By default, the Source Branch
is configured to be Any Branch.


126
00:07:02,956 --> 00:07:05,692 line:-2
This means that any change
made to any branch of your repo


127
00:07:05.726 --> 00:07:08.695 line:-2 align:center
will cause this workflow
to start a build.


128
00:07:08.729 --> 00:07:11.365 line:-2 align:center
Since our release workflow
is configured to be thorough,


129
00:07:11.398 --> 00:07:15.135 line:-2 align:center
I want to restrict this to ensure we only
start builds for our release branches.


130
00:07:17.538 --> 00:07:20.240 line:-2 align:center
I click on Custom Branches,
and I can immediately see


131
00:07:20,274 --> 00:07:23,076 line:-1
that I need to specify the custom branch.


132
00:07:26,180 --> 00:07:29,183 line:-2
I click on the Plus button
and enter the branch name.


133
00:07:33,420 --> 00:07:37,858 line:-2
The editor will allow me to choose from
either the exact branch name or a prefix.


134
00:07:37.891 --> 00:07:40.794 line:-2 align:center
In this case,
we know we have multiple release branches


135
00:07:40.827 --> 00:07:43.730 line:-2 align:center
so I'll select
branches beginning with "release".


136
00:07:46.400 --> 00:07:49.903 line:-2 align:center
Next, I want to specify which files
and folders from the release branch


137
00:07:49,937 --> 00:07:52,239 line:-1
can start a build.


138
00:07:52,272 --> 00:07:55,976 line:-2
My goal is to not start builds
when the docs folder is modified.


139
00:07:56,009 --> 00:08:00,981 line:-2
This folder contains only our development
documentation so it's safe to skip.


140
00:08:01.014 --> 00:08:04.251 line:-2 align:center
For the Files and Folders option,
I select Custom Conditions.


141
00:08:05.819 --> 00:08:09.489 line:-2 align:center
I select the Start a Build dropdown
and select Don't start a build.


142
00:08:12.526 --> 00:08:15.262 line:-2 align:center
I click on the Plus button
to add a new condition.


143
00:08:18.365 --> 00:08:22.002 line:-2 align:center
I will specify which folder to exclude
by selecting Any Folder


144
00:08:22.035 --> 00:08:24.438 line:-1 align:center
and selecting Choose.


145
00:08:27,508 --> 00:08:29,610 line:-1
Finally, this will open a file picker.


146
00:08:29,643 --> 00:08:32,913 line:-2
Now I can select the docs folder
and click Open.


147
00:08:35,983 --> 00:08:38,952 line:-2
To finish up,
I'll click Save to persist my changes.


148
00:08:43,290 --> 00:08:45,993 line:-2
I have now configured
the Start Condition to be more selective


149
00:08:46.026 --> 00:08:48.328 line:-2 align:center
when starting
by restricting to only branches


150
00:08:48,362 --> 00:08:52,332 line:-2
with the release prefix
and to ignore changes to the docs folder.


151
00:08:53,133 --> 00:08:55,469 line:-2
Workflows also define
how to run your builds


152
00:08:55.502 --> 00:08:57.871 line:-1 align:center
through the use of pre-defined Actions.


153
00:08:57.905 --> 00:09:03.343 line:-2 align:center
Actions allow you to analyze,
archive, build, and test your changes.


154
00:09:03,377 --> 00:09:08,215 line:-2
One important component of the test action
is the selection of test destinations.


155
00:09:08.248 --> 00:09:10.484 line:-2 align:center
To make sure
that results are delivered fast,


156
00:09:10,517 --> 00:09:14,021 line:-2
each destination will run in parallel
once the test products are built.


157
00:09:15,422 --> 00:09:16,790 line:-1
I want to make sure that I'm selecting


158
00:09:16.823 --> 00:09:20.627 line:-2 align:center
a concise set of simulator destinations
for my tests.


159
00:09:20,661 --> 00:09:22,529 line:-1
In addition to speeding up my builds,


160
00:09:22.563 --> 00:09:24.464 line:-2 align:center
this also helps reduce noise
from the tests


161
00:09:24.498 --> 00:09:26.733 line:-1 align:center
that might fail on similar devices.


162
00:09:28.402 --> 00:09:31.805 line:-2 align:center
Xcode Cloud provides an alias
for recommended destinations.


163
00:09:31.839 --> 00:09:33.640 line:-1 align:center
These are curated lists of simulators


164
00:09:33,674 --> 00:09:36,743 line:-2
that represent a cross section
of screen sizes.


165
00:09:38,412 --> 00:09:42,182 line:-2
Let's visit the Release workflow again
to see how we can select a reasonable set


166
00:09:42.216 --> 00:09:45.853 line:-2 align:center
of simulator destinations
for the iOS test action.


167
00:09:46,553 --> 00:09:48,755 line:-1
After selecting the Test iOS action,


168
00:09:48,789 --> 00:09:52,659 line:-2
we can see there are a wide range
of selected test destinations.


169
00:09:52.693 --> 00:09:54.394 line:-1 align:center
To remove test destinations,


170
00:09:54,428 --> 00:09:56,964 line:-2
I'll select each one
and click the Minus button.


171
00:09:56,997 --> 00:09:59,466 line:-2
Then I'll click on the dropdown menu
of the last item


172
00:09:59.499 --> 00:10:02.569 line:-1 align:center
and select Recommended iPhones.


173
00:10:12,846 --> 00:10:16,350 line:-2
Again, I'll click Save to persist
my changes.


174
00:10:22.456 --> 00:10:25.826 line:-2 align:center
I now have a set of test destinations
that will help provide a clear signal


175
00:10:25.859 --> 00:10:27.928 line:-1 align:center
if we introduce a regression.


176
00:10:30,898 --> 00:10:33,967 line:-2
As we discussed earlier,
Xcode Cloud will run your workflow


177
00:10:34.001 --> 00:10:36.937 line:-2 align:center
when you push new changes
to your repository.


178
00:10:36,970 --> 00:10:39,473 line:-2
Sometimes, you may want to skip
building in CI


179
00:10:39,506 --> 00:10:42,075 line:-2
depending on the type of change
being committed.


180
00:10:42.109 --> 00:10:44.645 line:-2 align:center
We've added in
the ability to do just that.


181
00:10:44.678 --> 00:10:46.180 line:-1 align:center
Let's take a look in Xcode.


182
00:10:48.315 --> 00:10:52.252 line:-2 align:center
To skip your commit in Xcode Cloud,
simply append "ci skip"


183
00:10:52.286 --> 00:10:55.122 line:-1 align:center
to the end of the commit message.


184
00:10:55.155 --> 00:10:59.393 line:-2 align:center
Now, when you push to remote, Xcode Cloud
will know to ignore this event.


185
00:11:01,028 --> 00:11:05,465 line:-2
Make sure you're using the exact format
of the ci skip tag shown here.


186
00:11:07.734 --> 00:11:11.605 line:-2 align:center
For each action, custom scripts
are executed at multiple points.


187
00:11:11,638 --> 00:11:15,409 line:-2
Tidying up unused dependencies
and resiliently retrying API requests


188
00:11:15,442 --> 00:11:17,044 line:-1
that are known to be unreliable


189
00:11:17,077 --> 00:11:21,248 line:-2
will ensure builds complete fast
and consistently.


190
00:11:21,281 --> 00:11:25,085 line:-2
For more information on custom scripts
and other advanced customizations,


191
00:11:25,118 --> 00:11:28,989 line:0
check out "Customize your advanced
Xcode Cloud workflows".


192
00:11:30,490 --> 00:11:33,927 line:0
For testing, you should ensure
that flakey and unreliable tests


193
00:11:33,961 --> 00:11:35,562 line:0
are corrected quickly.


194
00:11:35,596 --> 00:11:40,767 line:0
When a flakey test fails, the instinct
is to immediately retry the build.


195
00:11:40,801 --> 00:11:42,903 align:center
Depending on the reliability
of your test suite,


196
00:11:42,936 --> 00:11:45,772 align:center
this can result in many retried builds.


197
00:11:45,806 --> 00:11:48,976 line:0
Make sure to spend more time
writing reliable tests.


198
00:11:50,444 --> 00:11:52,679 align:center
For more information on
how to do that effectively,


199
00:11:52,713 --> 00:11:57,618 align:center
check out our other session "Author fast
and reliable tests for Xcode Cloud".


200
00:11:58,352 --> 00:12:00,654 line:-1
So far we've discussed some best practices


201
00:12:00,687 --> 00:12:02,990 line:-2
and applied them
to the Food Truck project.


202
00:12:03.023 --> 00:12:05.359 line:-2 align:center
Let's see what sort of impact
those changes had


203
00:12:05.392 --> 00:12:09.663 line:-2 align:center
by comparing the build from earlier
with one from our updated workflow.


204
00:12:10,564 --> 00:12:14,501 line:-2
This is a build that was started
after applying the best practices.


205
00:12:14,535 --> 00:12:16,870 line:-2
Compared to the previous build
that Adam showed us,


206
00:12:16.904 --> 00:12:22.042 line:-2 align:center
the duration decreased by a minute
but the usage reduced by four minutes.


207
00:12:22.075 --> 00:12:24.912 line:-2 align:center
It looks like we've made
some good improvements overall.


208
00:12:26,747 --> 00:12:30,317 line:-2
Let's return to the usage dashboard
to better understand the impact.


209
00:12:31.652 --> 00:12:35.355 line:-2 align:center
Since it might be difficult to see
the impact from a single build right away,


210
00:12:35.389 --> 00:12:38.692 line:-2 align:center
we've applied the best practices
to another one of our workflows,


211
00:12:38,725 --> 00:12:42,229 line:-1
the Integration Workflow.


212
00:12:42,262 --> 00:12:45,566 line:-2
We've been running builds for a while
with best practices applied.


213
00:12:45,599 --> 00:12:47,601 line:-2
We can tell that our changes
were effective


214
00:12:47,634 --> 00:12:49,670 line:-1
because usage is trending downward.


215
00:12:51.572 --> 00:12:54.608 line:-2 align:center
This means we're now capable of adding
more workflows


216
00:12:54,641 --> 00:12:57,978 line:-2
and starting more builds to start
development of the watchOS app.


217
00:13:00,514 --> 00:13:03,116 line:-2
Using the usage dashboard,
you can continue to apply


218
00:13:03,150 --> 00:13:06,653 line:-2
the same best practices
to your existing projects and workflows


219
00:13:06,687 --> 00:13:09,523 line:-1
to get the most out of Xcode Cloud.


220
00:13:09,556 --> 00:13:13,126 line:-2
For more information on how to manage
Xcode Cloud for large teams,


221
00:13:13,160 --> 00:13:16,797 align:center
check out Deep Dive
into Xcode Cloud for teams.


222
00:13:16,830 --> 00:13:18,699 line:-1
We hope you enjoyed our session.


223
00:13:18.732 --> 00:13:20.667 line:-1 align:center
Adam: Thank you for watching.


224
00:13:23,804 --> 00:13:29,643 line:-1
♪ instrumental hip hop music ♪

