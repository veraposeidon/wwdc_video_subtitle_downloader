2
00:00:00.434 --> 00:00:06.440 line:-1 align:center
♪ instrumental hip hop music ♪


3
00:00:09.309 --> 00:00:13.747 line:-2 align:center
Well, greetings and welcome to "Get more
mileage out of your app with CarPlay."


4
00:00:13.780 --> 00:00:18.018 line:-2 align:center
My name is André, and I'll be
driving you through the session today.


5
00:00:19,553 --> 00:00:24,525 line:-2
As you know, CarPlay is the smarter,
safer way to use your iPhone in the car.


6
00:00:24,558 --> 00:00:30,163 line:-2
Today's session is all about your
apps and how to enable them in CarPlay.


7
00:00:30,197 --> 00:00:34,334 line:-2
We'll start with a quick refresher
on the types of apps that are supported,


8
00:00:34,368 --> 00:00:38,672 line:-2
then talk about some new app types
we are enabling this year,


9
00:00:38,705 --> 00:00:42,242 line:-2
and finally go over
a new tool we have made available


10
00:00:42.276 --> 00:00:45.245 line:-1 align:center
to support the development of your apps.


11
00:00:45.279 --> 00:00:50.184 line:-2 align:center
We'll finish today with an important
new feature specific to navigation apps.


12
00:00:50,217 --> 00:00:53,220 line:-2
Without further ado,
let's get right into it!


13
00:00:55,155 --> 00:01:00,327 line:-2
One of the most fundamental things about
CarPlay is that it is built for drivers.


14
00:01:00,360 --> 00:01:04,932 line:-2
People who are actively driving
are the primary users you should consider


15
00:01:04.965 --> 00:01:06.867 line:-1 align:center
when building your app.


16
00:01:06,900 --> 00:01:12,272 line:-2
As a result, you should only enable use
cases that are relevant while driving,


17
00:01:12.306 --> 00:01:17.377 line:-2 align:center
and you should omit any use cases
that people shouldn't do while driving.


18
00:01:17.411 --> 00:01:20.881 line:-2 align:center
Things like one time configuration,
signing in to your app,


19
00:01:20.914 --> 00:01:24.952 line:-2 align:center
or reading terms and conditions,
are things that are better to do before


20
00:01:24,985 --> 00:01:29,289 line:-2
or after driving, so they shouldn't
appear in your app's CarPlay UI.


21
00:01:30,490 --> 00:01:34,828 line:-2
Note that an entitlement is needed
for your app to appear in CarPlay.


22
00:01:34.862 --> 00:01:38.699 line:-2 align:center
You can request the entitlement
on the Apple CarPlay developer website


23
00:01:38.732 --> 00:01:42.402 line:-2 align:center
based on the type of app
you'd like to make available.


24
00:01:42,436 --> 00:01:47,541 align:center
Here are the types of apps
we support in CarPlay today.


25
00:01:47,574 --> 00:01:52,112 align:center
These cover a wide number of tasks
drivers may want to do while driving,


26
00:01:52,145 --> 00:01:55,482 line:0
but we've heard from many of
you that there are even more


27
00:01:55,516 --> 00:01:59,219 align:center
driving-relevant apps
you'd like to enable.


28
00:01:59,253 --> 00:02:03,156 align:center
I'm happy to announce we are adding
two new types to our list this year,


29
00:02:03,190 --> 00:02:06,326 align:center
Fueling and Driving Task apps.


30
00:02:06,360 --> 00:02:09,630 align:center
We'll go over
these in more detail shortly,


31
00:02:09,663 --> 00:02:14,301 line:0
but first, let's take a quick pit stop
and talk a bit about Templates.


32
00:02:14.334 --> 00:02:18.005 line:-2 align:center
Templates are how apps in
CarPlay present their UI.


33
00:02:18,038 --> 00:02:22,242 line:-2
Your app supplies the data,
and the system draws the UI


34
00:02:22,276 --> 00:02:25,279 line:-1
onto the vehicle's display on your behalf.


35
00:02:25.312 --> 00:02:28.949 line:-2 align:center
This system of templates is
simple for your app to adopt


36
00:02:28,982 --> 00:02:32,519 line:-2
and has several benefits,
including helping steer your app


37
00:02:32.553 --> 00:02:35.355 line:-2 align:center
towards making it
appropriate for the road.


38
00:02:35,389 --> 00:02:38,392 line:-2
You don't have to worry
about things like font sizes,


39
00:02:38.425 --> 00:02:42.462 line:-2 align:center
the templates help you ensure
your UI is of low complexity,


40
00:02:42.496 --> 00:02:47.601 line:-2 align:center
and finally, the UI of your app is
consistent with other apps in CarPlay,


41
00:02:47,634 --> 00:02:52,105 line:-2
making it easier for your users
to quickly take actions in it as needed.


42
00:02:52,139 --> 00:02:56,643 align:center
Just as important, the templates take
care of making sure your app's UI


43
00:02:56,677 --> 00:03:00,714 line:0
works great in any car that supports
CarPlay, regardless of the size of


44
00:03:00,747 --> 00:03:04,651 align:center
the screen or the type of
input device used in the car.


45
00:03:04,685 --> 00:03:08,488 line:0
You may still want to test
your app in different configurations,


46
00:03:08,522 --> 00:03:11,592 line:0
and we'll talk more about
testing later on in the session,


47
00:03:11,625 --> 00:03:16,663 align:center
but suffice it to say, the templates
take care of most of the work for you.


48
00:03:16,697 --> 00:03:19,499 line:0
You have several templates to choose
from when building your app.


49
00:03:19.533 --> 00:03:23.036 line:-2 align:center
From the grid template showing
an array of buttons,


50
00:03:23.070 --> 00:03:25.472 line:-1 align:center
to the list template showing a table,


51
00:03:25.506 --> 00:03:31.178 line:-2 align:center
these templates should be familiar to
you, both as a developer, and an iOS user.


52
00:03:31,211 --> 00:03:34,882 line:-2
Most importantly,
they will be familiar to your users


53
00:03:34.915 --> 00:03:38.986 line:-2 align:center
driving with CarPlay as
they appear all throughout CarPlay.


54
00:03:39,019 --> 00:03:43,223 line:-2
We spoke just before about the different
types of apps we support in CarPlay.


55
00:03:43,257 --> 00:03:49,196 line:-2
Some of these templates are more relevant
to some of those types than others.


56
00:03:49.229 --> 00:03:53.667 line:-2 align:center
This chart helps you understand
which templates your app can use,


57
00:03:53,700 --> 00:03:55,769 line:-1
depending on which type it is.


58
00:03:55,802 --> 00:04:01,708 line:-2
I realize trying to read this is a bit
like taking a DMV eye exam, but fear not,


59
00:04:01,742 --> 00:04:07,014 line:-2
you'll find this exact chart in
our developer documentation online.


60
00:04:07,047 --> 00:04:11,118 line:-2
The thing to take away here now
is that the templates your app can use


61
00:04:11.151 --> 00:04:13.253 line:-1 align:center
depend on its type.


62
00:04:13,287 --> 00:04:16,490 line:-2
Only templates that are
relevant and appropriate


63
00:04:16.523 --> 00:04:19.793 line:-1 align:center
for a particular app type are permitted.


64
00:04:19.826 --> 00:04:23.330 line:-2 align:center
Now that we've talked about templates,
let's take a closer look at the


65
00:04:23.363 --> 00:04:26.667 line:-2 align:center
new app types
we are launching with iOS 16.


66
00:04:26.700 --> 00:04:30.604 line:-2 align:center
First let's talk about
the new Fueling app type.


67
00:04:31.972 --> 00:04:37.211 line:-2 align:center
As you may remember, in iOS 14 we
launched support for EV Charging apps.


68
00:04:37.244 --> 00:04:40.948 line:-2 align:center
These apps aren't just for
finding locations of EV chargers,


69
00:04:40.981 --> 00:04:45.953 line:-2 align:center
they do more than that - for example,
they may help the user connect to


70
00:04:45.986 --> 00:04:48.589 line:-2 align:center
the right
charging station and start it up.


71
00:04:48.622 --> 00:04:52.025 line:-2 align:center
We've heard from many developers
that this type of functionality


72
00:04:52,059 --> 00:04:56,196 line:-2
would be great for more
than just electric vehicles.


73
00:04:56,230 --> 00:05:00,634 line:-2
Whether it is traditional gasoline-enabled
cars or alternative fuel vehicles,


74
00:05:00.667 --> 00:05:06.273 line:-2 align:center
this new category enables you to
support CarPlay in your fueling app.


75
00:05:06.306 --> 00:05:09.443 line:-2 align:center
Note that many users use
navigation apps to find and drive


76
00:05:09.476 --> 00:05:12.546 line:-2 align:center
to particular locations,
so your fueling app should enable


77
00:05:12,579 --> 00:05:17,351 line:-2
more functionality in its CarPlay UI
than simply finding a location.


78
00:05:17,384 --> 00:05:19,887 line:-2
A great example
of what your app could enable is,


79
00:05:19.920 --> 00:05:22.656 line:-1 align:center
for instance, starting up a gas pump.


80
00:05:22,689 --> 00:05:27,528 line:-2
Now, let's talk about Driving Task
applications.


81
00:05:27.561 --> 00:05:30.964 line:-2 align:center
Driving Task is a new type
of CarPlay app


82
00:05:30.998 --> 00:05:36.003 line:-2 align:center
designed to enable
a wider variety of very simple apps.


83
00:05:36.036 --> 00:05:40.073 line:-2 align:center
Keep in mind the primary purpose
of these apps must be to enable tasks


84
00:05:40.107 --> 00:05:44.511 line:-2 align:center
people need to do while driving--
it's for tasks that actually help with


85
00:05:44.545 --> 00:05:47.814 line:-2 align:center
the drive, not just a task
to be done while you drive.


86
00:05:49,349 --> 00:05:53,187 line:-2
Some examples of apps that
would fall under this type include apps


87
00:05:53.220 --> 00:05:58.825 line:-2 align:center
to help control car accessories,
apps that provide driving or road status


88
00:05:58.859 --> 00:06:05.165 line:-2 align:center
and information, and apps to help with
tasks at the start and end of a drive.


89
00:06:05.199 --> 00:06:08.202 line:-2 align:center
Let's take a look at some more
concrete examples of these.


90
00:06:09.670 --> 00:06:13.707 line:-2 align:center
First, here we have a road
status app that can inform users


91
00:06:13.740 --> 00:06:16.677 line:-1 align:center
about important road information.


92
00:06:16,710 --> 00:06:21,181 line:-2
This app was built using the
CPPointOfInterestTemplate.


93
00:06:21.215 --> 00:06:24.184 line:-2 align:center
Keep in mind,
a user using this app is driving,


94
00:06:24.218 --> 00:06:28.956 line:-2 align:center
so an app like this should provide
a very short list of important items


95
00:06:28,989 --> 00:06:31,225 line:-1
near where the user is located.


96
00:06:31.258 --> 00:06:34.828 line:-2 align:center
This is not intended for apps helping users
do full route planning


97
00:06:34.862 --> 00:06:36.697 line:-1 align:center
ahead of a drive.


98
00:06:38.465 --> 00:06:43.136 line:-2 align:center
In this app, here's what a user
sees when they select a location.


99
00:06:43,170 --> 00:06:47,341 line:-2
Note that the amount of space for text
is intentionally limited to keep this


100
00:06:47.374 --> 00:06:51.879 line:-2 align:center
information glanceable, so you should be
concise in the language you choose here.


101
00:06:54.181 --> 00:06:58.819 line:-2 align:center
Next, let's look at an application
designed to control a car accessory--


102
00:06:58.852 --> 00:07:01.855 line:-1 align:center
in this case a trailer controller.


103
00:07:01.889 --> 00:07:06.693 line:-2 align:center
This app uses the CPInformationTemplate
to provide basic information on a


104
00:07:06,727 --> 00:07:12,900 line:-2
connected accessory, as well as a couple
of buttons for the user to take actions.


105
00:07:12,933 --> 00:07:17,871 line:-2
Note that in this example,
this is the app's entire UI in CarPlay.


106
00:07:17,905 --> 00:07:20,073 line:-1
There are no other screens!


107
00:07:20.107 --> 00:07:23.110 line:-2 align:center
Of course, the app has plenty
of other functionality,


108
00:07:23,143 --> 00:07:26,980 line:-2
for instance, the ability to
manage paired accessories,


109
00:07:27.014 --> 00:07:30.884 line:-2 align:center
but any functionality that
isn't needed for driving is simply


110
00:07:30.918 --> 00:07:34.755 line:-2 align:center
not included
in the CarPlay UI for that app.


111
00:07:34.788 --> 00:07:38.225 line:-2 align:center
Users are best served doing
non-driving tasks using the


112
00:07:38.258 --> 00:07:42.362 line:-2 align:center
app's primary UI on iPhone
when they're out of the vehicle.


113
00:07:44,031 --> 00:07:49,870 line:-2
Finally, let's look at a couple
examples using the CPGridTemplate.


114
00:07:49.903 --> 00:07:53.974 line:-2 align:center
This is an extremely simple
app that has two buttons - that's it!


115
00:07:54.007 --> 00:07:56.543 line:-2 align:center
And lets the users keep track
of their miles


116
00:07:56,577 --> 00:07:59,546 line:-1
as either personal or business miles.


117
00:07:59.580 --> 00:08:03.283 line:-2 align:center
This app fits the new
Driving Task app type perfectly,


118
00:08:03.317 --> 00:08:07.921 line:-2 align:center
as it enables a very simple task
that users need to do while driving,


119
00:08:07.955 --> 00:08:11.658 line:-2 align:center
without enabling
any other non-critical tasks.


120
00:08:11.692 --> 00:08:14.695 line:-1 align:center
Simple, and to the point.


121
00:08:14,728 --> 00:08:18,765 line:-2
Just to show you that this style
of UI can serve multiple types of apps,


122
00:08:18.799 --> 00:08:23.170 line:-2 align:center
here's another example
with a near identical UI.


123
00:08:23.203 --> 00:08:28.108 line:-2 align:center
This is an express lane toll transponder
app that uses the CPGridTemplate


124
00:08:28.141 --> 00:08:32.479 line:-2 align:center
to let users choose
how many occupants are in the car.


125
00:08:32,513 --> 00:08:36,383 line:-2
It meets the exact same goals
as the previous example and is


126
00:08:36.416 --> 00:08:39.019 line:-1 align:center
another perfect Driving Task app.


127
00:08:40,287 --> 00:08:42,990 line:-2
To recap, when designing
your Driving Task app,


128
00:08:43,023 --> 00:08:46,627 line:-2
definitely consider making a
single screen app that provides


129
00:08:46.660 --> 00:08:50.130 line:-2 align:center
the minimum functionality
your users need while driving


130
00:08:50.163 --> 00:08:54.801 line:-2 align:center
and only enable tasks that can
be accomplished in a few seconds.


131
00:08:54,835 --> 00:08:59,072 align:center
You should avoid enabling complex
or infrequent use cases.


132
00:08:59,106 --> 00:09:04,044 line:0
A great example of this is first time
set up or detailed configuration.


133
00:09:04,077 --> 00:09:07,080 align:center
And finally, you should not
add functionality to your app


134
00:09:07,114 --> 00:09:11,151 align:center
that isn't needed while driving,
even if it's car-related.


135
00:09:11,185 --> 00:09:13,921 align:center
The kitchen sink, this is not.


136
00:09:13,954 --> 00:09:16,657 align:center
And that's it on Driving Task apps.


137
00:09:16,690 --> 00:09:21,795 line:-2
Now let's shift gears a bit and
talk about how to test your CarPlay app.


138
00:09:21.828 --> 00:09:25.098 line:-2 align:center
We'll review the different ways
in which you can go about this,


139
00:09:25,132 --> 00:09:29,102 line:-2
and I'll introduce a new tool
called CarPlay Simulator.


140
00:09:29.136 --> 00:09:32.840 line:-2 align:center
As a developer, you have a few
different tools at your disposal


141
00:09:32,873 --> 00:09:36,276 line:-1
to test your CarPlay-enabled app.


142
00:09:36,310 --> 00:09:42,282 line:-2
First, you can use the Xcode simulator,
which has a built-in CarPlay window.


143
00:09:42,316 --> 00:09:46,320 line:-2
If you're already using the Xcode
simulator to test the rest of your app,


144
00:09:46,353 --> 00:09:50,991 line:-2
this is a great way to quickly
test your CarPlay UI, too.


145
00:09:51.024 --> 00:09:54.161 line:-2 align:center
Second,
for testing your app on a real iPhone,


146
00:09:54,194 --> 00:09:58,332 line:-2
you can, of course, connect your phone
to a real CarPlay-enabled vehicle,


147
00:09:58.365 --> 00:10:00.601 line:-1 align:center
or an aftermarket head unit.


148
00:10:00.634 --> 00:10:04.204 line:-2 align:center
Until recently,
this was the only way to test your app's


149
00:10:04,238 --> 00:10:08,675 line:-2
CarPlay UI running on a real iPhone,
but I'm happy to report


150
00:10:08.709 --> 00:10:13.013 line:-2 align:center
we have a third option for you now
that may just become your favorite--


151
00:10:13.046 --> 00:10:14.948 line:-1 align:center
the CarPlay Simulator!


152
00:10:14,982 --> 00:10:18,752 line:-1
Let's look at this in more detail.


153
00:10:18,785 --> 00:10:20,821 line:-1
So what is it?


154
00:10:20,854 --> 00:10:24,491 line:-2
CarPlay Simulator is a
stand-alone Mac application that


155
00:10:24.525 --> 00:10:27.027 line:-1 align:center
replicates a CarPlay environment.


156
00:10:27,060 --> 00:10:30,597 line:-2
You simply download the
"Additional Tools for Xcode" package


157
00:10:30,631 --> 00:10:34,168 line:-2
on the Apple developer website,
run the app,


158
00:10:34.201 --> 00:10:38.472 line:-2 align:center
and connect your iPhone
to your Mac using a cable.


159
00:10:38,505 --> 00:10:41,375 line:-2
CarPlay will start on the phone
and run just the same


160
00:10:41.408 --> 00:10:44.811 line:-1 align:center
as if you had it connected to a real car.


161
00:10:44,845 --> 00:10:48,048 line:-2
So what's the big deal,
and why would you want to use this?


162
00:10:48,081 --> 00:10:50,050 line:-1
Well, there are several benefits.


163
00:10:51.852 --> 00:10:54.888 line:-2 align:center
First of all, when you are using
CarPlay Simulator,


164
00:10:54.922 --> 00:10:57.090 line:-2 align:center
CarPlay is actually
running on your iPhone


165
00:10:57,124 --> 00:11:00,460 line:-1
the same way it would be in a real car.


166
00:11:00,494 --> 00:11:03,363 line:-2
This means you can test your
app running on your phone without


167
00:11:03.397 --> 00:11:06.400 line:-2 align:center
constantly having to run back
and forth to your parking spot


168
00:11:06,433 --> 00:11:10,404 line:-1
or having to buy an aftermarket head unit.


169
00:11:10,437 --> 00:11:14,641 line:-2
Another huge benefit is that because
your phone is connected to your Mac


170
00:11:14.675 --> 00:11:18.178 line:-2 align:center
when you're using CarPlay Simulator,
you can use all of the other


171
00:11:18,212 --> 00:11:21,615 line:-2
fantastic developer tools
on your Mac simultaneously,


172
00:11:21,648 --> 00:11:26,854 line:-2
whether it is debugging in Xcode
or tuning performance in Instruments.


173
00:11:26,887 --> 00:11:30,224 line:-2
Similarly on the iOS side of things,
because your app is running


174
00:11:30.257 --> 00:11:34.928 line:-2 align:center
on an actual iPhone, you have access to
complete iPhone functionality.


175
00:11:34.962 --> 00:11:39.299 line:-2 align:center
Some scenarios cannot be tested
without either a real CarPlay system,


176
00:11:39.333 --> 00:11:41.568 line:-1 align:center
or now, CarPlay Simulator.


177
00:11:43,470 --> 00:11:46,740 line:-2
A great example is testing that
your navigation app's voice instructions


178
00:11:46.773 --> 00:11:51.979 line:-2 align:center
correctly mix with a car's
native audio source, like FM radio.


179
00:11:52.012 --> 00:11:55.349 line:-2 align:center
You can now test this
at the convenience of your desk.


180
00:11:56,950 --> 00:11:59,686 line:-2
Last but not least,
you can use CarPlay Simulator


181
00:11:59.720 --> 00:12:02.756 line:-2 align:center
to test multiple different
configurations of cars, too,


182
00:12:02,789 --> 00:12:06,593 line:-2
for example,
cars with different display sizes.


183
00:12:06.627 --> 00:12:10.197 line:-2 align:center
Let's see what CarPlay Simulator
looks like in action.


184
00:12:10.230 --> 00:12:11.832 line:-1 align:center
So here it is.


185
00:12:11.865 --> 00:12:14.835 line:-2 align:center
As you can see, the CarPlay
display from the connected iPhone


186
00:12:14.868 --> 00:12:18.639 line:-2 align:center
appears right in the app,
alongside several controls.


187
00:12:18,672 --> 00:12:22,643 line:-1
Let's go through what some of these do.


188
00:12:22,676 --> 00:12:25,312 align:center
At the bottom of the screen
are buttons that simulate


189
00:12:25,345 --> 00:12:28,916 line:0
various different hard keys
and knob controls in a car.


190
00:12:31,018 --> 00:12:34,321 line:-2
You can also click directly in
the CarPlay view to simulate a touch


191
00:12:34.354 --> 00:12:36.123 line:-1 align:center
in touchscreen vehicles.


192
00:12:38.192 --> 00:12:41.295 line:-2 align:center
At the top of the window
we have some quick controls.


193
00:12:41.328 --> 00:12:45.032 line:-2 align:center
The limit UI button allows you
to simulate when a car in motion


194
00:12:45.065 --> 00:12:48.535 line:-2 align:center
requests for CarPlay
to limit certain content on screen,


195
00:12:48,569 --> 00:12:53,140 line:-2
which, for example, could shorten
the contents of lists in an audio app.


196
00:12:55.576 --> 00:12:59.079 line:-2 align:center
The next two buttons are to
simulate when a car requests dark


197
00:12:59.112 --> 00:13:02.916 line:-2 align:center
or light appearance for UI and map
content, respectively.


198
00:13:04,952 --> 00:13:08,322 line:-2
The last button lets you quickly
simulate disconnecting


199
00:13:08.355 --> 00:13:11.491 line:-1 align:center
and reconnecting your phone to CarPlay.


200
00:13:11.525 --> 00:13:13.927 line:-2 align:center
Because your phone will still
remain connected to your Mac


201
00:13:13.961 --> 00:13:17.431 line:-2 align:center
when you use this button,
you can use it to debug CarPlay


202
00:13:17.464 --> 00:13:20.567 line:-2 align:center
reconnection scenarios
in your app using Xcode.


203
00:13:22,870 --> 00:13:25,572 line:-2
But what about
that first button that I skipped?


204
00:13:25.606 --> 00:13:29.409 line:-2 align:center
As you might have guessed,
this will pop up a secondary window


205
00:13:29,443 --> 00:13:32,346 line:-1
with more advanced functionality.


206
00:13:32.379 --> 00:13:34.815 line:-2 align:center
Let's take a look
at those advanced features now.


207
00:13:36,817 --> 00:13:40,354 line:-2
In the General tab,
you're able to choose the display size


208
00:13:40.387 --> 00:13:43.657 line:-1 align:center
for the main CarPlay display.


209
00:13:43.690 --> 00:13:47.027 line:-2 align:center
If your application UI is composed
only of templates,


210
00:13:47,060 --> 00:13:51,064 line:-2
you can try different sizes
to see what your UI will look like


211
00:13:51,098 --> 00:13:54,835 line:-2
in different cars, but as we talked
about before,


212
00:13:54.868 --> 00:13:58.305 line:-2 align:center
the system will make sure
everything works great regardless.


213
00:13:58,338 --> 00:14:00,674 line:-1
If your app is a navigation app, however,


214
00:14:00,707 --> 00:14:04,178 line:-2
it's critically important that you
try different sizes and aspect ratios


215
00:14:04.211 --> 00:14:07.714 line:-2 align:center
to ensure your map drawing code
works correctly.


216
00:14:07.748 --> 00:14:10.918 line:-2 align:center
Here are some recommended display
sizes to test with your app.


217
00:14:10.951 --> 00:14:14.855 line:-3 align:center
Let's take
a look at the Cluster Display tab.


218
00:14:14.888 --> 00:14:17.090 line:-3 align:center
As you will see here,
you are able to simulate cars


219
00:14:17,124 --> 00:14:20,160 line:-3
with a second display
in the instrument cluster!


220
00:14:20.194 --> 00:14:24.965 line:-3 align:center
Simply check the box to enable it,
restart the session,


221
00:14:24,998 --> 00:14:27,434 line:0
and a second window will appear
for the instrument cluster


222
00:14:27,467 --> 00:14:30,470 align:center
alongside the primary display.


223
00:14:30,504 --> 00:14:34,775 line:0
Again,
this is most relevant to navigation apps.


224
00:14:34,808 --> 00:14:39,112 line:0
The instrument cluster display is used
to display either a map or turn card


225
00:14:39,146 --> 00:14:43,750 align:center
for the driver right in their field of
view in the car's instrument cluster.


226
00:14:43,784 --> 00:14:46,119 align:center
We'll chat more about the
instrument cluster in a second,


227
00:14:46,153 --> 00:14:50,057 align:center
but that's a quick tour of
the new CarPlay Simulator app.


228
00:14:50,090 --> 00:14:53,460 align:center
We hope you find it as useful as we do!


229
00:14:53.493 --> 00:14:58.498 line:-2 align:center
We just saw how CarPlay can now draw
a live map in the instrument cluster.


230
00:14:58,532 --> 00:15:00,634 line:-1
But what about your navigation app?


231
00:15:00.667 --> 00:15:05.038 line:-2 align:center
How can you add - and test -
instrument cluster support in your app?


232
00:15:05.072 --> 00:15:07.174 line:-1 align:center
Let's take a look.


233
00:15:07.207 --> 00:15:10.844 line:-2 align:center
You may remember that back in iOS 13,
we added APIs


234
00:15:10.878 --> 00:15:14.982 line:-2 align:center
to enable navigation apps to
appear in the CarPlay Dashboard.


235
00:15:15.015 --> 00:15:17.885 line:-2 align:center
To do this, you edited your app's
Info.plist


236
00:15:17,918 --> 00:15:22,489 line:-2
to declare support for Dashboard
and implemented the required delegates.


237
00:15:22.523 --> 00:15:27.261 line:-2 align:center
The delegates notify your app when it is
appearing and disappearing in Dashboard,


238
00:15:27,294 --> 00:15:33,200 line:-2
and also pass over a UIWindow to your
app in which to draw your map content.


239
00:15:33.233 --> 00:15:34.968 line:-1 align:center
It's easy.


240
00:15:35,002 --> 00:15:37,037 line:-2
If you've already done this,
then the great news is


241
00:15:37,070 --> 00:15:39,706 line:-2
adding instrument cluster support
will be a piece of cake,


242
00:15:39.740 --> 00:15:42.709 line:-1 align:center
as it follows the exact same pattern.


243
00:15:42.743 --> 00:15:49.049 line:-2 align:center
Let's look at how I did this in my
own navigation test app, Space Roads.


244
00:15:49,082 --> 00:15:51,552 line:-1
I edited my Info.plist to declare support


245
00:15:51.585 --> 00:15:55.756 line:-2 align:center
for the instrument cluster
navigation scene


246
00:15:55.789 --> 00:15:59.493 line:-2 align:center
and added the required
Scene Session Role.


247
00:15:59.526 --> 00:16:01.528 line:-1 align:center
Then, I implemented my


248
00:16:01.562 --> 00:16:05.365 line:-2 align:center
CPTemplateApplicationInstrumentCluster
Scene delegate


249
00:16:05,399 --> 00:16:10,170 line:-2
as well as my
CPInstrumentClusterControllerDelegate.


250
00:16:10,204 --> 00:16:13,307 line:-2
These will both give you a window
in which to draw your content


251
00:16:13,340 --> 00:16:17,811 line:-2
as well as notify you when the
instrument cluster starts and finishes,


252
00:16:17.845 --> 00:16:20.681 line:-2 align:center
making your instrument cluster view
visible.


253
00:16:20,714 --> 00:16:23,283 line:-2
That's all it takes to have
your map appear live


254
00:16:23.317 --> 00:16:26.253 line:-1 align:center
in the car's instrument cluster!


255
00:16:26,286 --> 00:16:29,690 line:-2
While this is all very similar to
implementing Dashboard support,


256
00:16:29,723 --> 00:16:34,361 line:-2
there are a few more considerations
specific to the instrument cluster.


257
00:16:34.394 --> 00:16:40.734 line:-2 align:center
First of all, the instrument cluster may
allow users to zoom the map in and out.


258
00:16:40,767 --> 00:16:44,137 line:-2
It's your responsibility to
implement this in your app using the


259
00:16:44,171 --> 00:16:48,075 line:-1
CPInstrumentClusterControllerDelegate.


260
00:16:48,108 --> 00:16:51,111 line:-2
Similarly, if your app includes
a compass or speed limit,


261
00:16:51.144 --> 00:16:53.680 line:-2 align:center
the corresponding delegates
will tell your app


262
00:16:53,714 --> 00:16:57,017 line:-2
when it is appropriate
to draw them or not.


263
00:16:57,050 --> 00:17:01,722 line:0
Finally, note that your instrument
cluster view may be partially obscured


264
00:17:01,755 --> 00:17:05,092 align:center
by other elements
in the car's instrument cluster.


265
00:17:05,125 --> 00:17:10,063 align:center
Of course, iOS already has a first class
mechanism for dealing with such a thing,


266
00:17:10,097 --> 00:17:11,832 line:0
safe areas!


267
00:17:11,865 --> 00:17:15,636 line:0
You can override
viewSafeAreaInsetsDidChange


268
00:17:15,669 --> 00:17:19,006 line:0
on your view controller to
know when the safe area changes,


269
00:17:19,039 --> 00:17:22,843 line:0
and use the safeAreaLayoutGuide
on your cluster view


270
00:17:22,876 --> 00:17:28,448 align:center
to keep critical content in the area of
the view guaranteed to be visible.


271
00:17:28,482 --> 00:17:31,385 align:center
If you have a blue route line
showing the user's location,


272
00:17:31,418 --> 00:17:34,121 align:center
for instance,
you'd want to ensure the critical parts


273
00:17:34,154 --> 00:17:36,957 line:0
are contained within the safe area.


274
00:17:36,990 --> 00:17:41,795 line:-2
We just saw some new features for you
as a developer building CarPlay apps,


275
00:17:41.828 --> 00:17:44.865 line:-2 align:center
and we saw a
new tool for you to test your apps.


276
00:17:44.898 --> 00:17:47.367 line:-1 align:center
Let's take a look at it in action.


277
00:17:47,401 --> 00:17:51,972 line:-2
First, I'm going to start here on my Mac,
showing you CarPlay Simulator.


278
00:17:52,005 --> 00:17:55,642 line:-2
I have the app running,
and I'll simply connect my phone.


279
00:18:02,716 --> 00:18:05,152 line:-1
And voilà, here it is running CarPlay.


280
00:18:05.185 --> 00:18:09.356 line:-2 align:center
Let's see how CarPlay Simulator
can help you when testing your apps.


281
00:18:09.389 --> 00:18:13.827 line:-2 align:center
Even if your app is primarily template
based, you can use it to make sure


282
00:18:13.861 --> 00:18:18.899 line:-2 align:center
the artwork in your app works great
in both light and dark appearances.


283
00:18:18.932 --> 00:18:21.568 line:-1 align:center
Let me run the Express Lane app...


284
00:18:24,137 --> 00:18:26,273 line:-1
And I can use the button in the toolbar


285
00:18:26.306 --> 00:18:30.277 line:-2 align:center
to toggle between light and dark
appearances.


286
00:18:30,310 --> 00:18:35,048 line:-2
Notice how my app has provided
different artwork for both styles.


287
00:18:35.082 --> 00:18:38.552 line:-1 align:center
Looks great.


288
00:18:38,585 --> 00:18:42,523 line:-2
Now let's switch over to Space Roads,
a navigation test app I've written.


289
00:18:44.658 --> 00:18:47.895 line:-1 align:center
I'll use the main configuration panel


290
00:18:47.928 --> 00:18:51.798 line:-2 align:center
to try my map drawing code
at a different screen size.


291
00:18:57,804 --> 00:19:01,074 line:-2
And finally, I will enable
the instrument cluster display


292
00:19:01.108 --> 00:19:03.844 line:-1 align:center
to test the instrument cluster support.


293
00:19:08,081 --> 00:19:09,716 line:-1
Here it is. It works great!


294
00:19:10,617 --> 00:19:14,755 line:-2
Earlier, I fully tested my apps
in CarPlay Simulator, so now,


295
00:19:14,788 --> 00:19:18,458 line:-2
I have full confidence
they will work great in a real car.


296
00:19:18,492 --> 00:19:20,360 line:-1
Let's give it a try!


297
00:19:20,394 --> 00:19:23,297 line:-2
Alright, here we are in my car,
and as you can see,


298
00:19:23,330 --> 00:19:26,466 line:-2
I have my phone connected to the
vehicle and running CarPlay.


299
00:19:27,868 --> 00:19:31,772 line:-2
First, let's try running my
connected trailer controller app


300
00:19:31,805 --> 00:19:36,310 line:-2
so I can show you how templates have
taken care of making the app work great


301
00:19:36,343 --> 00:19:38,345 line:-1
in a knob enabled vehicle.


302
00:19:40,247 --> 00:19:44,184 line:-2
This particular vehicle has both a touch
screen and a knob controller,


303
00:19:44.218 --> 00:19:47.621 line:-2 align:center
but many users like to use
the knob controller while driving,


304
00:19:47.654 --> 00:19:51.758 line:-3 align:center
so it's important for apps
to work great using the knob.


305
00:19:51.792 --> 00:19:54.661 line:-3 align:center
As you can see,
I have full access to the buttons


306
00:19:54.695 --> 00:19:57.998 line:-2 align:center
in my app here,
and the best part is, I didn't have to do


307
00:19:58.031 --> 00:20:01.435 line:-2 align:center
anything special - the
templates did all the work for me!


308
00:20:03.971 --> 00:20:07.975 line:-2 align:center
Next, let's switch over to my
navigation app, Space Roads.


309
00:20:08.008 --> 00:20:10.911 line:-1 align:center
We'll launch the app...


310
00:20:10,944 --> 00:20:14,781 line:-1
and we'll start navigation...


311
00:20:14.815 --> 00:20:16.750 line:-1 align:center
and then I press go.


312
00:20:16.783 --> 00:20:18.352 line:-1 align:center
Boom!


313
00:20:18.385 --> 00:20:22.055 line:-2 align:center
My app now shows a live map view
on both the center console


314
00:20:22.089 --> 00:20:24.658 line:-1 align:center
and in the instrument cluster!


315
00:20:24,691 --> 00:20:29,429 line:-2
It's great having the live map
right in my line of sight as a driver.


316
00:20:29,463 --> 00:20:33,800 line:-2
I'm certain drivers using
your navigation app will love it, too.


317
00:20:33,834 --> 00:20:35,802 line:-1
Well, that's all I have for you today.


318
00:20:35,836 --> 00:20:40,407 line:-2
For more information, be sure to check out
the CarPlay developer portal


319
00:20:40.440 --> 00:20:44.011 line:-2 align:center
at developer.apple.com/carplay


320
00:20:44,044 --> 00:20:47,114 line:-1
Thank you, and happy roads, everyone!   ♪♪

