2
00:00:00.033 --> 00:00:03.003 line:-1 position:50%
♪ Mellow instrumental
hip-hop music ♪


3
00:00:03,003 --> 00:00:09,943 position:90% align:right size:2%
♪


4
00:00:09.943 --> 00:00:14.748 line:-1 position:50%
Hello, I am Teja, an engineer on
the iOS System Experience team,


5
00:00:14,748 --> 00:00:18,318 line:-1
and in this session, you'll get
to meet Focus filters.


6
00:00:18.318 --> 00:00:24.291 line:-1 position:50%
Focus was introduced in iOS 15,
macOS Monterey and watchOS 8.


7
00:00:24.291 --> 00:00:27.527 line:-1 position:50%
It is a way for people to
concentrate on what's important


8
00:00:27,527 --> 00:00:31,531 line:-1
by configuring system behavior
for a period of time.


9
00:00:31.531 --> 00:00:34.968 line:-1 position:50%
Focus is enabled by simply
going into Control Center


10
00:00:34,968 --> 00:00:39,806 line:-1
and selecting from either a
system Focus or a custom Focus.


11
00:00:39,806 --> 00:00:42,342 line:-1
During the time
that a Focus is enabled,


12
00:00:42.342 --> 00:00:45.078 line:-1 position:50%
notification behavior
can be customized.


13
00:00:45,078 --> 00:00:48,482 line:-1
For example, during Work Focus,
someone may want


14
00:00:48,482 --> 00:00:51,919 line:-1
to only allow notifications
from their coworkers


15
00:00:51.919 --> 00:00:55.355 line:-1 position:50%
or only allow notifications
for a select few apps


16
00:00:55,355 --> 00:00:57,524 line:-1
that are relevant to work.


17
00:00:57,524 --> 00:01:01,094 line:-1
For each Focus, system behavior
can be configured


18
00:01:01,094 --> 00:01:04,264 line:-1
and scheduled in Settings.


19
00:01:04,264 --> 00:01:08,669 line:-1
iOS 16 and macOS Ventura
enhance the Focus feature


20
00:01:08,669 --> 00:01:10,704 line:-1
with Focus filters.


21
00:01:10.704 --> 00:01:13.273 line:-1 position:50%
I'll start by introducing you
to Focus filters


22
00:01:13.273 --> 00:01:15.475 line:-1 position:50%
and how they behave.


23
00:01:15,475 --> 00:01:20,814 line:-1
Then, I'll go over how to define
a Focus filter in your app.


24
00:01:20.814 --> 00:01:25.285 line:-1 position:50%
After that, I'll cover what it
means to act on a Focus filter.


25
00:01:25.285 --> 00:01:28.155 line:-1 position:50%
And finally, I'll cover how
your app can provide


26
00:01:28.155 --> 00:01:31.825 line:-1 position:50%
additional context
back to the system.


27
00:01:31,825 --> 00:01:34,027 line:-1
Focus filters
are a way for someone


28
00:01:34.027 --> 00:01:39.666 line:-1 position:50%
to customize app behavior based
on the currently enabled Focus.


29
00:01:39,666 --> 00:01:41,902 line:-1
There are some great examples
of system apps


30
00:01:41,902 --> 00:01:44,938 line:-1
that have adopted Focus filters.


31
00:01:44.938 --> 00:01:46.940 line:-1 position:50%
The Calendar app allows people


32
00:01:46,940 --> 00:01:50,510 line:-1
to filter which calendars
should be visible by default


33
00:01:50.510 --> 00:01:53.146 line:-1 position:50%
when a Focus is enabled.


34
00:01:53.146 --> 00:01:55.882 line:-1 position:50%
This is what my calendar
normally looks like.


35
00:01:55,882 --> 00:01:57,551 line:0
And as you can see,
I have a mix


36
00:01:57,551 --> 00:02:01,488 position:50%
of work and personal
calendar events.


37
00:02:01,488 --> 00:02:04,324 position:50%
I can configure
a Focus filter for Calendar,


38
00:02:04,324 --> 00:02:08,895 line:0
during the Personal Focus, to
only show my personal calendar.


39
00:02:08,895 --> 00:02:10,731 line:0
After setting up
the Focus filter,


40
00:02:10,731 --> 00:02:13,300 line:0
this is what my calendar
looks like.


41
00:02:13,300 --> 00:02:16,670 position:50%
Calendar has indicated
that this is filtered by Focus


42
00:02:16,670 --> 00:02:19,740 line:0
and provided a way
to toggle the filtering.


43
00:02:19,740 --> 00:02:22,709 line:0
Now I won't be overwhelmed
with my work calendar


44
00:02:22,709 --> 00:02:26,279 line:0
when trying to enjoy
some personal time.


45
00:02:26.279 --> 00:02:28.648 line:-1 position:50%
The Mail app's inbox
can be filtered


46
00:02:28.648 --> 00:02:32.853 line:-1 position:50%
to show only relevant mailboxes
during a Focus.


47
00:02:32,853 --> 00:02:35,422 line:-1
Mail notifications
are also filtered


48
00:02:35.422 --> 00:02:40.027 line:-1 position:50%
to show only the relevant
notifications prominently.


49
00:02:40,027 --> 00:02:42,162 line:-1
This means
that I can set up Mail


50
00:02:42,162 --> 00:02:45,265 line:-1
to only deliver work-related
Mail notifications


51
00:02:45.265 --> 00:02:48.235 line:-1 position:50%
during the Work Focus
and prevent


52
00:02:48.235 --> 00:02:52.439 line:-1 position:50%
personal mail notifications
from interrupting me.


53
00:02:52.439 --> 00:02:53.507 line:-1 position:50%
There are many reasons


54
00:02:53.507 --> 00:02:56.510 line:-1 position:50%
why your app may want
to implement Focus filters.


55
00:02:56.510 --> 00:02:59.179 line:-1 position:50%
Perhaps your app
manages multiple accounts,


56
00:02:59.179 --> 00:03:01.615 line:-1 position:50%
and it's appropriate
to associate a Focus


57
00:03:01.615 --> 00:03:04.084 line:-1 position:50%
with a particular account.


58
00:03:04,084 --> 00:03:07,654 line:-1
Apps with large amount of data
may need to filter content


59
00:03:07.654 --> 00:03:09.656 line:-1 position:50%
for the Focus.


60
00:03:09,656 --> 00:03:11,324 line:-1
If you would like
to help your users


61
00:03:11.324 --> 00:03:13.794 line:-1 position:50%
avoid getting distracted
while focused,


62
00:03:13,794 --> 00:03:16,196 line:-1
you can do this
by reducing badge counts,


63
00:03:16.196 --> 00:03:18.632 line:-1 position:50%
in-app alerts,
and notifications


64
00:03:18,632 --> 00:03:23,303 line:-1
to what is salient
for the enabled Focus.


65
00:03:23,303 --> 00:03:26,673 line:-1
Regarding appearance, your app
may want to surface a theme


66
00:03:26.673 --> 00:03:30.110 line:-1 position:50%
or a layout based
on the enabled Focus.


67
00:03:30,110 --> 00:03:34,281 line:-1
Fundamentally, if your app
can surface different content


68
00:03:34.281 --> 00:03:38.151 line:-1 position:50%
based on context, you may be
able to employ Focus filters


69
00:03:38,151 --> 00:03:41,388 line:-1
to enhance user experience.


70
00:03:41,388 --> 00:03:44,491 line:-1
Let me explain
how Focus filters work.


71
00:03:44.491 --> 00:03:49.596 line:-1 position:50%
Your app defines what can be
customized by a user per Focus,


72
00:03:49,596 --> 00:03:52,732 line:-1
and this is done
using an AppIntent.


73
00:03:52,732 --> 00:03:57,237 line:-1
The system will expose what
can be configured per Focus.


74
00:03:57.237 --> 00:04:00.774 line:-1 position:50%
UI to configure properties
defined by your AppIntent


75
00:04:00,774 --> 00:04:05,579 line:-1
will be exposed in Focus
settings as a Focus filter.


76
00:04:05.579 --> 00:04:09.216 line:-1 position:50%
Users can configure your app
to behave a certain way


77
00:04:09,216 --> 00:04:13,320 line:-1
by navigating to Focus settings
and configuring Focus filters


78
00:04:13,320 --> 00:04:15,589 line:-1
for your app.


79
00:04:15.589 --> 00:04:17.924 line:-1 position:50%
Now, I'm going to go over
how you can incorporate


80
00:04:17,924 --> 00:04:21,128 line:-1
Focus filters
into your codebase.


81
00:04:21,128 --> 00:04:24,164 line:-1
There are a few parts
to defining your Focus filter.


82
00:04:24.164 --> 00:04:28.168 line:-1 position:50%
The first is implementing
SetFocusFilterIntent.


83
00:04:28.168 --> 00:04:30.537 line:-1 position:50%
This indicates to the system
that your app


84
00:04:30,537 --> 00:04:35,008 line:-1
is interested in having
custom settings per Focus.


85
00:04:35.008 --> 00:04:38.678 line:-1 position:50%
The second step is defining
your app's parameters.


86
00:04:38.678 --> 00:04:42.516 line:-1 position:50%
These will represent what can
be configured within your app


87
00:04:42.516 --> 00:04:44.217 line:-1 position:50%
by the user.


88
00:04:44.217 --> 00:04:47.787 line:-1 position:50%
The final step is to set
the display representation,


89
00:04:47.787 --> 00:04:50.857 line:-1 position:50%
so your Focus filter
appears in system settings


90
00:04:50.857 --> 00:04:52.893 line:-1 position:50%
with the correct content.


91
00:04:52.893 --> 00:04:57.397 line:-1 position:50%
This way, users are aware
of what is configured.


92
00:04:57,397 --> 00:04:59,232 line:-1
I'll dive into some code.


93
00:04:59,232 --> 00:05:02,836 line:-1
The first thing you need to do
is import AppIntents


94
00:05:02,836 --> 00:05:07,541 line:-1
and define a struct that
implements SetFocusFilterIntent.


95
00:05:07.541 --> 00:05:10.110 line:-1 position:50%
This is your Focus filter.


96
00:05:10,110 --> 00:05:12,179 line:-1
Setting the title
and description


97
00:05:12.179 --> 00:05:17.651 line:-1 position:50%
will help users discover
what your Focus is all about.


98
00:05:17.651 --> 00:05:22.088 line:-1 position:50%
Focus filters appear
in a grid view in Settings.


99
00:05:22,088 --> 00:05:24,691 line:-1
Before your Focus filter
has been configured,


100
00:05:24.691 --> 00:05:28.528 line:-1 position:50%
it will be surfaced
to the user with this look.


101
00:05:28.528 --> 00:05:31.665 line:-1 position:50%
The icon here
is your app's icon,


102
00:05:31,665 --> 00:05:34,534 line:-1
the primary text
is your app's name,


103
00:05:34,534 --> 00:05:37,704 line:-1
and the secondary text
will match the title variable


104
00:05:37,704 --> 00:05:40,874 line:-1
that you set
in your Focus filter.


105
00:05:40.874 --> 00:05:44.211 line:-1 position:50%
When the user taps in
to configure your filter,


106
00:05:44.211 --> 00:05:46.846 line:-1 position:50%
the same content is displayed.


107
00:05:46.846 --> 00:05:50.517 line:-1 position:50%
This time, the system also
includes the description string


108
00:05:50,517 --> 00:05:54,554 line:-1
that you've provided,
for additional context.


109
00:05:54,554 --> 00:05:57,657 line:-1
Both the title and description
strings are static,


110
00:05:57,657 --> 00:05:59,326 line:-1
and they are read by the system


111
00:05:59.326 --> 00:06:02.562 line:-1 position:50%
at the time that your app
is installed.


112
00:06:02.562 --> 00:06:05.832 line:-1 position:50%
When defining your Focus filter,
you'll have to specify


113
00:06:05,832 --> 00:06:08,802 line:-1
what a person can customize
by providing a series


114
00:06:08.802 --> 00:06:13.006 line:-1 position:50%
of properties that are decorated
as parameters.


115
00:06:13.006 --> 00:06:16.009 line:-1 position:50%
When specifying a parameter,
you must give it a name


116
00:06:16,009 --> 00:06:17,911 line:-1
and a data type.


117
00:06:17,911 --> 00:06:19,980 line:-1
Parameters can be
of a standard data type


118
00:06:19,980 --> 00:06:23,683 line:-1
such as Bool, string,
float, etcetera.


119
00:06:23.683 --> 00:06:25.619 line:-1 position:50%
If you have a custom data
type that you would like


120
00:06:25,619 --> 00:06:28,922 line:-1
to have configured,
you can make it an entity,


121
00:06:28.922 --> 00:06:32.392 line:-1 position:50%
which will allow you
to decorate it as a parameter.


122
00:06:32,392 --> 00:06:35,228 line:0
To learn more about entities
and App Intents,


123
00:06:35,228 --> 00:06:38,632 position:50%
watch the
"Dive into App Intents" session.


124
00:06:38,632 --> 00:06:41,768 position:50%
When defining your Focus filter,
you will only specify


125
00:06:41,768 --> 00:06:44,771 line:0
the data type and name
for each parameter.


126
00:06:44,771 --> 00:06:48,775 line:0
It is up to users to configure
the value of the parameter


127
00:06:48,775 --> 00:06:52,145 line:0
that would apply
during each Focus.


128
00:06:52,145 --> 00:06:54,381 position:50%
Parameters can be
marked as optional,


129
00:06:54,381 --> 00:06:57,717 line:0
which means that they do not
have to be configured.


130
00:06:57,717 --> 00:07:03,123 line:0
Parameters that are not optional
should provide default values.


131
00:07:03.123 --> 00:07:06.326 line:-1 position:50%
In code, you specify
a parameter --


132
00:07:06,326 --> 00:07:09,596 line:-1
or an optional parameter --
by defining a variable


133
00:07:09.596 --> 00:07:12.499 line:-1 position:50%
of the type you want
in your Focus filter


134
00:07:12,499 --> 00:07:15,435 line:-1
and decorating it
as a parameter.


135
00:07:15.435 --> 00:07:19.205 line:-1 position:50%
Here, I've created a required
Bool parameter that represents


136
00:07:19,205 --> 00:07:23,376 line:-1
whether my Focus filter
should always use Dark Mode.


137
00:07:23,376 --> 00:07:25,779 line:-1
I've set its default to false.


138
00:07:25.779 --> 00:07:29.115 line:-1 position:50%
I've also created
an optional string parameter


139
00:07:29.115 --> 00:07:33.987 line:-1 position:50%
that represents a user's status
message during this Focus.


140
00:07:33,987 --> 00:07:37,524 line:-1
Lastly, I've included
an optional account parameter


141
00:07:37.524 --> 00:07:40.527 line:-1 position:50%
that is an entity
defined by my app;


142
00:07:40,527 --> 00:07:44,931 line:-1
it contains information
about a particular account.


143
00:07:44,931 --> 00:07:48,635 line:-1
The title, which is set on all
three of these parameters,


144
00:07:48,635 --> 00:07:51,805 line:-1
is displayed in Settings
to describe the parameter


145
00:07:51.805 --> 00:07:54.274 line:-1 position:50%
to the user.


146
00:07:54,274 --> 00:07:55,508 line:-1
In Focus settings,


147
00:07:55.508 --> 00:07:58.345 line:-1 position:50%
once a user configures
your app's Focus filter,


148
00:07:58.345 --> 00:08:00.780 line:-1 position:50%
it'll be presented
in a similar grid


149
00:08:00.780 --> 00:08:02.582 line:-1 position:50%
to what I showed earlier.


150
00:08:02.582 --> 00:08:04.050 line:-1 position:50%
But this time,
because the filter


151
00:08:04.050 --> 00:08:07.954 line:-1 position:50%
has already been configured,
the content is dynamic


152
00:08:07,954 --> 00:08:11,624 line:-1
in order to reflect
what has been configured.


153
00:08:11,624 --> 00:08:14,794 line:0
The icon here is
still your app's icon.


154
00:08:14,794 --> 00:08:17,330 position:50%
The primary text
and the secondary text


155
00:08:17,330 --> 00:08:21,534 line:0
can be customized using the
display representation property


156
00:08:21,534 --> 00:08:24,471 position:50%
on your FocusFilterIntent.


157
00:08:24,471 --> 00:08:27,574 position:50%
The primary text should
represent what parameters


158
00:08:27,574 --> 00:08:31,277 line:0
have been configured,
such as Select Account,


159
00:08:31,277 --> 00:08:34,180 line:0
Set Status, etcetera.


160
00:08:34,180 --> 00:08:37,417 line:0
The secondary text should
represent what the parameters


161
00:08:37,417 --> 00:08:43,556 position:50%
have been configured to,
such as Work Account or Working.


162
00:08:43.556 --> 00:08:46.526 line:-1 position:50%
In my code, I set
the display representation


163
00:08:46,526 --> 00:08:49,229 line:-1
to be generated dynamically.


164
00:08:49.229 --> 00:08:53.366 line:-1 position:50%
Since account and status
are optional parameters,


165
00:08:53.366 --> 00:08:56.035 line:-1 position:50%
they only get included
in the dynamic primary


166
00:08:56.035 --> 00:08:59.839 line:-1 position:50%
and secondary texts
if they are actually set.


167
00:08:59,839 --> 00:09:03,343 line:0
Since alwaysUseDarkMode
is a required parameter,


168
00:09:03,343 --> 00:09:09,115 line:0
it is always included in
the primary and secondary texts.


169
00:09:09.115 --> 00:09:11.718 line:-1 position:50%
OK, you have now
defined your Focus filter,


170
00:09:11.718 --> 00:09:13.853 line:-1 position:50%
so users can go
into Focus settings


171
00:09:13,853 --> 00:09:17,457 line:-1
and customize certain values
for a particular Focus.


172
00:09:17.457 --> 00:09:20.493 line:-1 position:50%
But how can your app know
what someone has customized?


173
00:09:20,493 --> 00:09:23,296 line:-1
And how can your app
update itself accordingly?


174
00:09:23,296 --> 00:09:26,666 line:-1
It has to act on a change
from the system.


175
00:09:26.666 --> 00:09:29.702 line:-1 position:50%
When a Focus change occurs
and the system has determined


176
00:09:29.702 --> 00:09:32.839 line:-1 position:50%
that it's important for your app
to know about this change,


177
00:09:32,839 --> 00:09:36,376 line:-1
it will deliver this information
to you in one of two ways.


178
00:09:36.376 --> 00:09:39.245 line:-1 position:50%
If the app is running,
you will receive a call


179
00:09:39.245 --> 00:09:42.148 line:-1 position:50%
to the perform method
in your FocusFilterIntent,


180
00:09:42,148 --> 00:09:44,017 line:-1
if you've implemented it.


181
00:09:44,017 --> 00:09:47,987 line:-1
If the app is not running,
you can implement an extension


182
00:09:47.987 --> 00:09:49.522 line:-1 position:50%
that will get spun up.


183
00:09:49,522 --> 00:09:51,724 line:-1
Again, if you've
implemented perform


184
00:09:51.724 --> 00:09:55.094 line:-1 position:50%
in your FocusFilterIntent,
that will get called


185
00:09:55.094 --> 00:09:58.731 line:-1 position:50%
in your extension.


186
00:09:58,731 --> 00:10:01,668 line:-1
Since perform can get called
on either your app


187
00:10:01,668 --> 00:10:06,005 line:-1
or your extension, not every
app needs an extension.


188
00:10:06.005 --> 00:10:09.776 line:-1 position:50%
Typically, if your app
is only updating its own view


189
00:10:09.776 --> 00:10:12.445 line:-1 position:50%
in response
to a Focus transition,


190
00:10:12.445 --> 00:10:18.017 line:-1 position:50%
then implementing perform
just in the app would suffice.


191
00:10:18,017 --> 00:10:21,221 line:-1
If your app's widget,
notifications or badges


192
00:10:21,221 --> 00:10:24,724 line:-1
would need to change
based on the Focus transition,


193
00:10:24.724 --> 00:10:29.562 line:-1 position:50%
then you may want to consider
implementing an extension.


194
00:10:29.562 --> 00:10:31.664 line:-1 position:50%
Basically,
if your app would want


195
00:10:31.664 --> 00:10:34.601 line:-1 position:50%
to update anything
outside its own views,


196
00:10:34,601 --> 00:10:37,670 line:-1
you would need
to implement the extension.


197
00:10:37.670 --> 00:10:40.740 line:-1 position:50%
For the rest of this session,
I may refer to "your app"


198
00:10:40.740 --> 00:10:44.511 line:-1 position:50%
but that can mean either
your app or your extension


199
00:10:44.511 --> 00:10:47.780 line:-1 position:50%
depending on this context.


200
00:10:47.780 --> 00:10:52.118 line:-1 position:50%
To respond to a Focus filter,
implement the perform function,


201
00:10:52,118 --> 00:10:54,687 line:-1
access the populated values
for parameters


202
00:10:54.687 --> 00:10:58.525 line:-1 position:50%
provided via Settings,
and then use these values


203
00:10:58.525 --> 00:11:02.195 line:-1 position:50%
to update your app's
views and behavior.


204
00:11:02,195 --> 00:11:04,631 line:-1
Your implementation
of perform is called


205
00:11:04.631 --> 00:11:06.799 line:-1 position:50%
when the system
determines that your app


206
00:11:06.799 --> 00:11:10.537 line:-1 position:50%
needs to respond
to a Focus transition.


207
00:11:10.537 --> 00:11:13.806 line:-1 position:50%
Perform is also called
when the system determines


208
00:11:13.806 --> 00:11:18.211 line:-1 position:50%
that the previously delivered
values are no longer relevant.


209
00:11:18.211 --> 00:11:21.014 line:-1 position:50%
In this case,
your Focus filter parameters


210
00:11:21.014 --> 00:11:24.450 line:-1 position:50%
are configured
with the default values.


211
00:11:24.450 --> 00:11:27.387 line:-1 position:50%
When perform is called
on your app's Focus filter,


212
00:11:27,387 --> 00:11:30,256 line:-1
the values of all the parameters
will be filled out


213
00:11:30.256 --> 00:11:32.859 line:-1 position:50%
to match what was configured
in Settings.


214
00:11:32,859 --> 00:11:35,895 line:-1
The values of the named
parameters can be read


215
00:11:35,895 --> 00:11:39,399 line:-1
by calling
self."name of the parameter."


216
00:11:39.399 --> 00:11:41.634 line:-1 position:50%
In this example,
at the end of perform,


217
00:11:41.634 --> 00:11:46.172 line:-1 position:50%
I update my app
with the data I received.


218
00:11:46.172 --> 00:11:47.707 line:-1 position:50%
Sometimes, you may need to query


219
00:11:47,707 --> 00:11:50,043 line:-1
the current Focus
filter parameters.


220
00:11:50.043 --> 00:11:51.110 line:-1 position:50%
In my case,


221
00:11:51.110 --> 00:11:55.315 line:-1 position:50%
since my filter is called
ExampleChatAppFocusFilter,


222
00:11:55.315 --> 00:11:59.519 line:-1 position:50%
I access ExampleChatAppFocus
Filter.current.


223
00:12:02,121 --> 00:12:04,924 line:-1
Now that your app is able
to act on a Focus filter,


224
00:12:04,924 --> 00:12:08,261 line:-1
the next step is to take
the user experience further


225
00:12:08.261 --> 00:12:11.998 line:-1 position:50%
by providing additional context
about how your app behavior


226
00:12:11.998 --> 00:12:14.701 line:-1 position:50%
has changed back to the system.


227
00:12:16.569 --> 00:12:19.339 line:-1 position:50%
By providing additional context,
you can influence


228
00:12:19.339 --> 00:12:22.909 line:-1 position:50%
your app behavior
outside your app's views.


229
00:12:22.909 --> 00:12:26.012 line:-1 position:50%
Examples of this include
notifications filtering


230
00:12:26,012 --> 00:12:30,249 line:-1
and setting your app's
notification badge count.


231
00:12:30.249 --> 00:12:32.452 line:-1 position:50%
One way you can give
the system information


232
00:12:32.452 --> 00:12:35.088 line:-1 position:50%
is via the App Context object.


233
00:12:35.088 --> 00:12:37.090 line:-1 position:50%
This is an object
that can be returned


234
00:12:37.090 --> 00:12:41.027 line:-1 position:50%
as part of the result
of the perform function.


235
00:12:41.027 --> 00:12:43.663 line:-1 position:50%
Or you can return
the App Context at any time


236
00:12:43.663 --> 00:12:46.399 line:-1 position:50%
in your Focus filter
and force the system


237
00:12:46.399 --> 00:12:50.603 line:-1 position:50%
to get the updated value
by calling invalidate.


238
00:12:50,603 --> 00:12:53,806 line:-1
When a Focus filter is active,
your app may have


239
00:12:53.806 --> 00:12:57.810 line:-1 position:50%
additional context to determine
if a particular notification


240
00:12:57.810 --> 00:13:00.313 line:-1 position:50%
should not interrupt the user.


241
00:13:00,313 --> 00:13:03,616 line:-1
To pass along this information,
your app must set


242
00:13:03.616 --> 00:13:08.554 line:-1 position:50%
the filterPredicate property
in the AppContext.


243
00:13:08.554 --> 00:13:11.324 line:-1 position:50%
This filter predicate
works in conjunction


244
00:13:11.324 --> 00:13:15.294 line:-1 position:50%
with a new string property
called filterCriteria


245
00:13:15.294 --> 00:13:17.964 line:-1 position:50%
on the UNNotification.


246
00:13:17.964 --> 00:13:21.834 line:-1 position:50%
If the filter criteria on the
notification does not match


247
00:13:21.834 --> 00:13:26.406 line:-1 position:50%
the filter predicate,
the notification is silenced.


248
00:13:26.406 --> 00:13:30.009 line:-1 position:50%
To set the filter predicate
from your FocusFilterIntent,


249
00:13:30.009 --> 00:13:32.712 line:-1 position:50%
include it in your App Context.


250
00:13:32.712 --> 00:13:35.648 line:-1 position:50%
Say the device has
the Personal Focus enabled


251
00:13:35.648 --> 00:13:38.651 line:-1 position:50%
and the user has set it up so
that only the personal account


252
00:13:38.651 --> 00:13:40.453 line:-1 position:50%
is selected;


253
00:13:40.453 --> 00:13:42.955 line:-1 position:50%
in this case, I set up
the filter predicate


254
00:13:42,955 --> 00:13:46,092 line:-1
to be the personal account's
identifier.


255
00:13:46.092 --> 00:13:49.529 line:-1 position:50%
If the incoming notification is
not from the personal account,


256
00:13:49.529 --> 00:13:53.099 line:-1 position:50%
it should not interrupt
the user.


257
00:13:53.099 --> 00:13:56.402 line:-1 position:50%
Here, when I'm configuring
this notification,


258
00:13:56,402 --> 00:14:00,873 line:-1
I set the filterCriteria to be
the work account's identifier.


259
00:14:00,873 --> 00:14:03,810 line:-1
This is because I know
this notification


260
00:14:03.810 --> 00:14:06.145 line:-1 position:50%
is being sent
to the work account,


261
00:14:06.145 --> 00:14:09.248 line:-1 position:50%
and I expect that this
notification would be silenced


262
00:14:09,248 --> 00:14:13,052 line:-1
because the account identifier
does not match the predicate


263
00:14:13.052 --> 00:14:14.554 line:-1 position:50%
that I had just set,


264
00:14:14.554 --> 00:14:19.092 line:-1 position:50%
which only matched with the
personal account's identifier.


265
00:14:19,092 --> 00:14:22,028 line:-1
This example is
for a local notification


266
00:14:22.028 --> 00:14:25.898 line:-1 position:50%
but filter criteria can also
be set on the JSON payload


267
00:14:25,898 --> 00:14:29,769 line:-1
of a remote notification.


268
00:14:29.769 --> 00:14:32.371 line:-1 position:50%
Another way to provide
the system additional context


269
00:14:32.371 --> 00:14:35.608 line:-1 position:50%
is by updating your app's
badge count to reflect


270
00:14:35.608 --> 00:14:39.579 line:-1 position:50%
what is important during
the currently-enabled Focus.


271
00:14:39,579 --> 00:14:42,615 line:-1
This prevents distractions
for your users.


272
00:14:42.615 --> 00:14:45.218 line:-1 position:50%
There is a new API
in UserNotifications


273
00:14:45.218 --> 00:14:47.086 line:-1 position:50%
for this purpose.


274
00:14:47.086 --> 00:14:52.091 line:-1 position:50%
On UNUserNotificationCenter,
you simply call setBadgeCount


275
00:14:52.091 --> 00:14:57.163 line:-1 position:50%
with an unsigned integer that
represents the new badge value.


276
00:14:57,163 --> 00:14:59,398 line:-1
Now, you know how
to provide additional context


277
00:14:59,398 --> 00:15:02,735 line:-1
to filter notifications
or set the badge count.


278
00:15:02,735 --> 00:15:05,371 line:-1
Remember, the goal
of this feature is to surface


279
00:15:05.371 --> 00:15:08.508 line:-1 position:50%
what is most relevant to a user
when they are focused.


280
00:15:08,508 --> 00:15:12,111 line:-1
Sometimes this requires
minimizing unrelated content


281
00:15:12,111 --> 00:15:16,282 line:-1
to prevent distraction
when a Focus is enabled.


282
00:15:16,282 --> 00:15:18,951 line:-1
For next steps, I encourage you
to start considering


283
00:15:18,951 --> 00:15:22,655 line:-1
what parts of your app would
benefit from a Focus filter,


284
00:15:22,655 --> 00:15:25,558 line:-1
determine which properties
can be configured,


285
00:15:25,558 --> 00:15:29,028 line:-1
set up your app and your
extension to process this,


286
00:15:29.028 --> 00:15:30.696 line:-1 position:50%
and then take it a step further


287
00:15:30.696 --> 00:15:34.567 line:-1 position:50%
by assessing whether
to provide additional context.


288
00:15:34,567 --> 00:15:36,435 line:-1
That's it for Focus filters!


289
00:15:36.435 --> 00:15:38.171 line:-1 position:50%
Thank you for joining in
on this session


290
00:15:38.171 --> 00:15:40.439 line:-1 position:50%
and have a great rest of WWDC.


291
00:15:40,439 --> 00:15:44,577 line:0 align:right position:90%
♪

