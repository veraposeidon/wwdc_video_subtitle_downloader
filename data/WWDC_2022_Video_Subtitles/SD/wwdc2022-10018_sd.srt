2
00:00:00.000 --> 00:00:03.837 line:-1 position:50%
♪ instrumental hip hop music ♪


3
00:00:03,837 --> 00:00:09,409 line:0 size:2% position:90%
♪


4
00:00:09,409 --> 00:00:11,879 line:-1
Hi, my name
is Karen Xing.


5
00:00:11.879 --> 00:00:14.414 line:-1 position:50%
I'm an engineer
in the Camera Software team.


6
00:00:14.414 --> 00:00:16.750 line:-1 position:50%
Welcome to
"Bring Continuity Camera support


7
00:00:16.750 --> 00:00:19.186 line:-1 position:50%
to your macOS app"


8
00:00:19.186 --> 00:00:21.688 line:-1 position:50%
To start this session
I will talk about,


9
00:00:21,688 --> 00:00:24,124 line:-1
what is Continuity Camera?


10
00:00:24,124 --> 00:00:26,760 line:-1
Next, I will discuss
how your application


11
00:00:26,760 --> 00:00:29,529 line:-1
can build an automatic
camera selection experience


12
00:00:29.529 --> 00:00:32.165 line:-1 position:50%
with Continuity Camera.


13
00:00:32,165 --> 00:00:34,935 line:-1
And finally,
I will walk through the APIs


14
00:00:34,935 --> 00:00:40,474 line:-1
that are new in macOS 13
for Continuity Camera.


15
00:00:40,474 --> 00:00:42,109 line:-1
With Continuity Camera,


16
00:00:42.109 --> 00:00:45.279 line:-1 position:50%
you can now use iPhone
as your webcam.


17
00:00:45.279 --> 00:00:46.680 line:-1 position:50%
Setup is seamless;


18
00:00:46,680 --> 00:00:49,116 line:-1
just bring your iPhone
close to your Mac.


19
00:00:49.116 --> 00:00:54.621 line:-1 position:50%
And it works wirelessly
so you can quickly join a call.


20
00:00:54.621 --> 00:00:57.190 line:-1 position:50%
Your iPhone
will appear on your Mac


21
00:00:57.190 --> 00:00:59.927 line:-1 position:50%
as an external camera
and microphone


22
00:00:59.927 --> 00:01:01.962 line:-1 position:50%
under several conditions.


23
00:01:01,962 --> 00:01:07,334 line:-1
First, you must be running
macOS 13 and iOS 16.


24
00:01:07.334 --> 00:01:10.971 line:-1 position:50%
Both Mac and iPhone must be
signed into the same Apple ID


25
00:01:10.971 --> 00:01:13.941 line:-1 position:50%
using two-factor authentication.


26
00:01:13.941 --> 00:01:15.642 line:-1 position:50%
For wired connection,


27
00:01:15.642 --> 00:01:20.113 line:-1 position:50%
the phone needs to be
connected to Mac over USB.


28
00:01:20,113 --> 00:01:22,382 line:-1
Or for wireless connection,


29
00:01:22,382 --> 00:01:24,952 line:-1
the two devices need to be
in proximity


30
00:01:24.952 --> 00:01:28.622 line:-1 position:50%
and have both Bluetooth
and Wi-Fi turned on.


31
00:01:28.622 --> 00:01:31.625 line:-1 position:50%
Rather than talking through it,
let me show you right away


32
00:01:31.625 --> 00:01:35.595 line:-1 position:50%
how magical Continuity Camera
looks on devices.


33
00:01:35.595 --> 00:01:38.765 line:-1 position:50%
Here I have a MacBook Pro
and iPhone 13 Pro.


34
00:01:38.765 --> 00:01:42.569 line:-1 position:50%
Both devices are signed in
to the same Apple ID.


35
00:01:47.107 --> 00:01:50.444 line:-1 position:50%
The phone is placed on a stand
attached to my MacBook.


36
00:01:50,444 --> 00:01:52,679 line:-1
I will be joining
a video conferencing call


37
00:01:52.679 --> 00:01:54.381 line:-1 position:50%
with my colleague Eric today


38
00:01:54,381 --> 00:01:58,919 line:-1
and show you how we can use
Continuity Camera in Zoom.


39
00:02:04,257 --> 00:02:07,094 line:-1
The app is launched using
the built-in camera first,


40
00:02:07.094 --> 00:02:09.830 line:-1 position:50%
and then an onboarding dialogue
shows up


41
00:02:09.830 --> 00:02:12.866 line:-1 position:50%
describing what you can do
with the new camera.


42
00:02:12.866 --> 00:02:14.835 line:-1 position:50%
The dialogue shows up one time


43
00:02:14.835 --> 00:02:18.105 line:-1 position:50%
after your Mac is upgraded
to macOS 13


44
00:02:18.105 --> 00:02:20.841 line:-1 position:50%
when you open a camera
application for the first time


45
00:02:20.841 --> 00:02:25.879 line:-1 position:50%
and there's an iPhone eligible
for Continuity Camera.


46
00:02:27.881 --> 00:02:30.283 line:-1 position:50%
Hi, Eric!


47
00:02:30.283 --> 00:02:35.155 line:-1 position:50%
Eric: Oh, Karen! Hi!


48
00:02:35,155 --> 00:02:38,258 line:-1
Karen: After the onboarding
dialogue is shown on the system,


49
00:02:38,258 --> 00:02:40,927 line:-1
Continuity Camera
and microphone devices


50
00:02:40.927 --> 00:02:45.532 line:-1 position:50%
will become available
in all applications.


51
00:02:51,872 --> 00:02:55,542 line:-1
Let's switch to use this camera
and see how it looks.


52
00:03:01.114 --> 00:03:05.318 line:-1 position:50%
Continuity Camera uses the rear
camera system on the iPhone,


53
00:03:05,318 --> 00:03:07,354 line:-1
so you get the same
great video quality


54
00:03:07.354 --> 00:03:09.122 line:-1 position:50%
that you expect from iPhone.


55
00:03:09.122 --> 00:03:13.060 line:-1 position:50%
And it works with all four
orientations of the phone.


56
00:03:16,897 --> 00:03:19,733 line:-1
The portrait orientation
gives you a more zoomed in


57
00:03:19.733 --> 00:03:23.637 line:-1 position:50%
field of view compared
to landscape orientation.


58
00:03:27.307 --> 00:03:30.477 line:-1 position:50%
Continuity Camera
also lets you do things


59
00:03:30,477 --> 00:03:33,647 line:-1
that were never before
possible with a webcam,


60
00:03:33.647 --> 00:03:37.184 line:-1 position:50%
including several new
video effects.


61
00:03:37,184 --> 00:03:38,985 line:-1
You're probably already familiar


62
00:03:38.985 --> 00:03:41.354 line:-1 position:50%
with Center Stage
and Portrait video effects


63
00:03:41,354 --> 00:03:45,992 line:-1
introduced in iOS 14.5
and macOS 12.3.


64
00:03:45,992 --> 00:03:48,462 position:50%
If not, I highly recommend
watching the


65
00:03:48,462 --> 00:03:53,333 position:50%
"What's new in Camera Capture"
session from WWDC 2021


66
00:03:53,333 --> 00:03:55,635 line:0
to learn more about
system video effects


67
00:03:55,635 --> 00:04:00,307 line:0
and how to interact with them
in applications.


68
00:04:00.307 --> 00:04:03.710 line:-1 position:50%
Let's go to Control Center
and enable system video effects


69
00:04:03.710 --> 00:04:06.379 line:-1 position:50%
on Continuity Camera.


70
00:04:09.549 --> 00:04:15.255 line:-1 position:50%
Center Stage keeps you in frame
as you move around in the scene.


71
00:04:17,491 --> 00:04:19,359 line:-1
Portrait blurs the background


72
00:04:19.359 --> 00:04:22.195 line:-1 position:50%
and naturally
puts the focus on you.


73
00:04:22.195 --> 00:04:25.365 line:-1 position:50%
Portrait is only supported
on Apple silicon Macs,


74
00:04:25,365 --> 00:04:27,100 line:-1
but with Continuity Camera,


75
00:04:27.100 --> 00:04:32.072 line:-1 position:50%
it is now available on all
Intel and Apple silicon Macs.


76
00:04:35.909 --> 00:04:38.378 line:-1 position:50%
Studio Light
is a new system video effect


77
00:04:38.378 --> 00:04:40.547 line:-1 position:50%
available on macOS 13.


78
00:04:40,547 --> 00:04:42,782 line:-1
It is supported
by Continuity Camera


79
00:04:42.782 --> 00:04:45.218 line:-1 position:50%
when using iPhone 12 or newer.


80
00:04:45.218 --> 00:04:48.588 line:-1 position:50%
Enable this when you want
to look your best on screen.


81
00:04:48.588 --> 00:04:50.957 line:-1 position:50%
It provides a stunning
lighting effect


82
00:04:50.957 --> 00:04:54.794 line:-1 position:50%
that dims the background
and illuminates your face.


83
00:04:54,794 --> 00:04:58,131 line:-1
Studio Light is perfect
for tough lighting situations,


84
00:04:58,131 --> 00:05:00,967 line:-1
like when you're
in front of a window.


85
00:05:00.967 --> 00:05:03.970 line:-1 position:50%
Even though I'm showing you
each video effect separately


86
00:05:03,970 --> 00:05:08,475 line:-1
for a clear comparison,
all of them work well together.


87
00:05:13.480 --> 00:05:15.515 line:-1 position:50%
And any combination
of the effects


88
00:05:15.515 --> 00:05:19.119 line:-1 position:50%
can be applied at the same time.


89
00:05:25.125 --> 00:05:28.328 line:-1 position:50%
Here's another exciting feature
I really want to show you


90
00:05:28,328 --> 00:05:30,630 line:-1
for Continuity Camera.


91
00:05:30.630 --> 00:05:34.034 line:-1 position:50%
When you want to work together
and share what's on your desk,


92
00:05:34,034 --> 00:05:36,102 line:-1
you can now use Desk View.


93
00:05:36.102 --> 00:05:38.972 line:-1 position:50%
The Desk View app
comes with macOS 13


94
00:05:38,972 --> 00:05:42,776 line:-1
and can be launched right here
in Control Center.


95
00:05:48.448 --> 00:05:51.051 line:-1 position:50%
It works like an overhead
camera setup,


96
00:05:51,051 --> 00:05:54,054 line:-1
without needing
all the complicated equipment.


97
00:05:54.054 --> 00:05:57.257 line:-1 position:50%
iPhone will split the Ultra Wide
camera feed in two,


98
00:05:57.257 --> 00:06:00.560 line:-1 position:50%
showing off your desk and face
both at the same time,


99
00:06:00.560 --> 00:06:02.963 line:-1 position:50%
so you can collaborate
on a school project


100
00:06:02.963 --> 00:06:05.398 line:-1 position:50%
or teach a friend
a knitting stitch.


101
00:06:05.398 --> 00:06:08.134 line:-1 position:50%
It leverages the extended
vertical field of view


102
00:06:08.134 --> 00:06:10.737 line:-1 position:50%
of our Ultra Wide angle
camera,


103
00:06:10,737 --> 00:06:14,374 line:-1
applies perspective distortion
correction onto cropped frames,


104
00:06:14.374 --> 00:06:18.011 line:-1 position:50%
and then rotates the frames
to create this Desk View.


105
00:06:18,011 --> 00:06:21,014 line:-1
You can use the share window
function available


106
00:06:21,014 --> 00:06:24,851 line:-1
in most video conferencing apps
to share this Desk View feed,


107
00:06:24,851 --> 00:06:29,256 line:-1
running in parallel with
the main video camera feed.


108
00:06:52,279 --> 00:06:54,281 line:-1
Desk View can also
be used alone


109
00:06:54.281 --> 00:06:57.017 line:-1 position:50%
without streaming from the main
camera at the same time.


110
00:06:57.017 --> 00:06:58.285 line:-1 position:50%
But when you do stream


111
00:06:58.285 --> 00:07:00.453 line:-1 position:50%
from both Desk View
and the main camera,


112
00:07:00,453 --> 00:07:04,057 line:-1
we recommend enabling
Center Stage on the main camera


113
00:07:04.057 --> 00:07:07.560 line:-1 position:50%
for a better framing
to capture face and body there.


114
00:07:07.560 --> 00:07:09.696 line:-1 position:50%
The feature is supported
when the phone is placed


115
00:07:09,696 --> 00:07:12,732 line:-1
in either landscape
or portrait orientation.


116
00:07:12,732 --> 00:07:16,069 line:-1
The portrait orientation
provides the most versatility,


117
00:07:16.069 --> 00:07:19.172 line:-1 position:50%
as there's a larger
vertical field of view.


118
00:07:19.172 --> 00:07:22.008 line:-1 position:50%
There's also
a Desk View camera API


119
00:07:22.008 --> 00:07:24.277 line:-1 position:50%
to provide customized
integration


120
00:07:24.277 --> 00:07:26.413 line:-1 position:50%
suitable for your application.


121
00:07:26.413 --> 00:07:29.883 line:-1 position:50%
I will talk about the API
in a moment.


122
00:07:29,883 --> 00:07:32,218 line:-1
During a video conferencing call
on your Mac,


123
00:07:32,218 --> 00:07:34,454 line:-1
we want you
to focus on the session


124
00:07:34,454 --> 00:07:35,922 line:-1
but we also want to make sure


125
00:07:35.922 --> 00:07:38.358 line:-1 position:50%
you are not missing
anything important.


126
00:07:38,358 --> 00:07:40,760 line:-1
When Continuity Camera
is in use,


127
00:07:40,760 --> 00:07:43,763 line:-1
all notifications on your phone
will be silenced


128
00:07:43.763 --> 00:07:49.169 line:-1 position:50%
and important call notifications
will be forwarded on your Mac.


129
00:07:49,169 --> 00:07:50,670 line:-1
Bye, Eric!


130
00:07:50.670 --> 00:07:53.273 line:-1 position:50%
Eric: Bye, Karen!


131
00:07:58,845 --> 00:08:00,246 line:-1
Karen: We've just talked about


132
00:08:00.246 --> 00:08:03.416 line:-1 position:50%
all the great experiences
available to users


133
00:08:03.416 --> 00:08:07.153 line:-1 position:50%
without writing a single line
of new code in your application.


134
00:08:07.153 --> 00:08:09.923 line:-1 position:50%
But with some adoption
of new APIs,


135
00:08:09.923 --> 00:08:12.559 line:-1 position:50%
you can make
the Continuity Camera experience


136
00:08:12,559 --> 00:08:16,596 line:-1
even more magical and polished
in your app.


137
00:08:16,596 --> 00:08:18,164 line:-1
Now that most users will get


138
00:08:18,164 --> 00:08:20,834 line:-1
at least two camera devices
on the Mac,


139
00:08:20,834 --> 00:08:24,404 line:-1
we've thought more on how
cameras should be managed.


140
00:08:24.404 --> 00:08:28.475 line:-1 position:50%
Prior to macOS 13, when a device
is either unplugged


141
00:08:28,475 --> 00:08:31,845 line:-1
or a better camera becomes
available on the system,


142
00:08:31,845 --> 00:08:33,213 line:-1
a manual selection step


143
00:08:33.213 --> 00:08:36.383 line:-1 position:50%
is usually required
in applications.


144
00:08:36,383 --> 00:08:39,953 line:-1
We'd like to offer customers
a magical experience by


145
00:08:39.953 --> 00:08:43.423 line:-1 position:50%
switching cameras automatically
in applications.


146
00:08:43.423 --> 00:08:46.960 line:-1 position:50%
We've added two new APIs
in the AVFoundation framework


147
00:08:46.960 --> 00:08:49.963 line:-1 position:50%
to help you build this function
in your app:


148
00:08:49.963 --> 00:08:52.832 line:-1 position:50%
the class properties
userPreferredCamera


149
00:08:52.832 --> 00:08:56.970 line:-1 position:50%
and systemPreferredCamera
on AVCaptureDevice.


150
00:08:56,970 --> 00:09:00,407 line:-1
userPreferredCamera
is a read/write property.


151
00:09:00,407 --> 00:09:02,008 line:0
You will need
to set this property


152
00:09:02,008 --> 00:09:05,645 line:0
whenever a user picks a camera
in the application.


153
00:09:05,645 --> 00:09:08,081 line:0
This allows
the AVCaptureDevice class


154
00:09:08,081 --> 00:09:11,117 position:50%
to learn users' preference,
store a list of cameras


155
00:09:11,117 --> 00:09:15,021 position:50%
for each application
across app launches and reboots,


156
00:09:15,021 --> 00:09:18,625 line:0
and use that information
to suggest a camera.


157
00:09:18,625 --> 00:09:21,060 line:0
It also takes into account
whether any camera


158
00:09:21,060 --> 00:09:25,198 position:50%
becomes connected
or disconnected.


159
00:09:25.198 --> 00:09:28.034 line:-1 position:50%
This property
is key-value observable


160
00:09:28.034 --> 00:09:31.104 line:-1 position:50%
and intelligently returns
the best selection


161
00:09:31.104 --> 00:09:33.273 line:-1 position:50%
based on user preference.


162
00:09:33.273 --> 00:09:36.910 line:-1 position:50%
When the most recent preferred
device becomes disconnected,


163
00:09:36.910 --> 00:09:38.812 line:-1 position:50%
it spontaneously changes


164
00:09:38,812 --> 00:09:41,815 line:-1
to the next available camera
in the list.


165
00:09:41.815 --> 00:09:44.384 line:-1 position:50%
Even when there's
no user selection history


166
00:09:44,384 --> 00:09:47,487 line:-1
or none of the preferred devices
are connected,


167
00:09:47.487 --> 00:09:49.756 line:-1 position:50%
the property will always
try to return


168
00:09:49,756 --> 00:09:52,125 line:-1
a camera device
that's ready to use


169
00:09:52,125 --> 00:09:56,463 line:-1
and prioritize cameras that have
been previously streamed.


170
00:09:56.463 --> 00:09:59.666 line:-1 position:50%
It only returns nil
when there's no camera available


171
00:09:59.666 --> 00:10:03.102 line:-1 position:50%
on the system.


172
00:10:03,102 --> 00:10:06,806 position:50%
systemPreferredCamera
is a read-only property.


173
00:10:06,806 --> 00:10:08,842 position:50%
It incorporates
userPreferredCamera


174
00:10:08,842 --> 00:10:11,277 position:50%
as well as a few other factors


175
00:10:11,277 --> 00:10:15,515 line:0
to suggest the best choice of
cameras present on the system.


176
00:10:15,515 --> 00:10:19,152 line:0
For example, this property
will return a different value


177
00:10:19,152 --> 00:10:22,755 position:50%
than userPreferredCamera when
a Continuity Camera shows up


178
00:10:22,755 --> 00:10:26,526 position:50%
signaling that it should be
automatically chosen.


179
00:10:26,526 --> 00:10:29,963 position:50%
The property also tracks
device suspensions internally


180
00:10:29,963 --> 00:10:34,801 position:50%
so it prioritizes unsuspended
devices over suspended ones.


181
00:10:34,801 --> 00:10:37,937 position:50%
This is helpful for building
automatic switching behavior


182
00:10:37,937 --> 00:10:40,640 position:50%
to change to another camera
if the built-in camera


183
00:10:40,640 --> 00:10:44,544 line:0
gets suspended
from closing the MacBook lid.


184
00:10:44,544 --> 00:10:48,681 line:-1
Continuity Camera signals itself
to be automatically chosen


185
00:10:48.681 --> 00:10:51.584 line:-1 position:50%
when the phone is placed
on a stationary stand


186
00:10:51.584 --> 00:10:54.787 line:-1 position:50%
in landscape orientation,
the screen is off,


187
00:10:54,787 --> 00:10:57,757 line:-1
and either connected over USB
to the Mac


188
00:10:57.757 --> 00:11:00.994 line:-1 position:50%
or within a close range
of the Mac.


189
00:11:00.994 --> 00:11:04.364 line:-1 position:50%
In this scenario,
the user's intention is clear


190
00:11:04,364 --> 00:11:08,034 line:-1
that the device should be used
as Continuity Camera.


191
00:11:10,703 --> 00:11:13,606 line:-1
When adopting
systemPreferredCamera API,


192
00:11:13,606 --> 00:11:16,409 line:-1
you should always
key-value observe this property


193
00:11:16,409 --> 00:11:18,545 line:0
and update your
AVCaptureSession's


194
00:11:18,545 --> 00:11:20,980 line:0
video input device accordingly


195
00:11:20,980 --> 00:11:25,118 position:50%
to offer a magic
camera selection experience.


196
00:11:25.118 --> 00:11:27.820 line:-1 position:50%
userPreferredCamera
and systemPreferredCamera


197
00:11:27.820 --> 00:11:31.591 line:-1 position:50%
are already adopted
by first-party applications.


198
00:11:31.591 --> 00:11:35.295 line:-1 position:50%
With more and more applications
adopting these APIs,


199
00:11:35.295 --> 00:11:37.564 line:-1 position:50%
we will be able to provide
customers


200
00:11:37,564 --> 00:11:41,167 line:-1
a universal and consistent
method of camera selection


201
00:11:41,167 --> 00:11:43,870 line:-1
on Apple devices.


202
00:11:43.870 --> 00:11:46.039 line:-1 position:50%
Let me show you a demo
to illustrate


203
00:11:46,039 --> 00:11:48,908 line:-1
how automatic switching
with Continuity Camera


204
00:11:48.908 --> 00:11:51.244 line:-1 position:50%
looks like in FaceTime.


205
00:11:56.416 --> 00:11:57.684 line:-1 position:50%
Here in FaceTime,


206
00:11:57,684 --> 00:12:00,753 line:-1
I'm in the
Automatic Camera Selection mode.


207
00:12:00.753 --> 00:12:02.689 line:-1 position:50%
For applications
that want to offer both


208
00:12:02.689 --> 00:12:06.993 line:-1 position:50%
manual and automatic behavior,
we recommend adding a new UI


209
00:12:06.993 --> 00:12:10.396 line:-1 position:50%
for enabling and disabling
auto mode.


210
00:12:13.266 --> 00:12:16.936 line:-1 position:50%
FaceTime is currently streaming
from the built-in camera.


211
00:12:16.936 --> 00:12:19.172 line:-1 position:50%
When I pick up the phone
from the desk


212
00:12:19,172 --> 00:12:23,209 line:-1
and place it on a stand
behind the MacBook...


213
00:12:26,179 --> 00:12:30,183 line:-1
...FaceTime switches to stream
from the Continuity Camera


214
00:12:30.183 --> 00:12:32.118 line:-1 position:50%
seamlessly.


215
00:12:32.118 --> 00:12:33.920 line:-1 position:50%
That is where
the new class property


216
00:12:33,920 --> 00:12:36,122 line:-1
systemPreferredCamera
comes in:


217
00:12:36.122 --> 00:12:39.125 line:-1 position:50%
the property value
changes to Continuity Camera


218
00:12:39.125 --> 00:12:43.630 line:-1 position:50%
when the phone is in a position
ready to stream.


219
00:12:43.630 --> 00:12:47.233 line:-1 position:50%
You might want to build your
application in a similar way.


220
00:12:47,233 --> 00:12:49,869 line:-1
Here's my recipe
for how to implement


221
00:12:49,869 --> 00:12:55,041 line:-1
Automatic Camera Selection
and manual selection mode.


222
00:12:55.041 --> 00:12:57.910 line:-1 position:50%
When Automatic Camera Selection
is on,


223
00:12:57,910 --> 00:13:02,715 line:-1
start key-value observing the
systemPreferredCamera property.


224
00:13:02,715 --> 00:13:05,652 line:-1
Follow the systemPreferredCamera
whenever it changes


225
00:13:05.652 --> 00:13:09.022 line:-1 position:50%
by updating your session's
input device.


226
00:13:09.022 --> 00:13:11.190 line:-1 position:50%
In auto mode,
we highly recommend


227
00:13:11,190 --> 00:13:12,392 line:-1
still providing options


228
00:13:12,392 --> 00:13:15,962 line:-1
to let users pick a camera
by themselves.


229
00:13:15.962 --> 00:13:17.830 line:-1 position:50%
When a different camera
gets picked,


230
00:13:17,830 --> 00:13:20,500 line:-1
set the userPreferredCamera
to that device,


231
00:13:20.500 --> 00:13:22.168 line:-1 position:50%
which then gets reflected


232
00:13:22,168 --> 00:13:26,572 line:-1
in systemPreferredCamera
property value.


233
00:13:26,572 --> 00:13:29,208 line:-1
When Automatic Camera
Selection is off,


234
00:13:29.208 --> 00:13:33.813 line:-1 position:50%
stop key-value observing the
systemPreferredCamera property.


235
00:13:33.813 --> 00:13:36.416 line:-1 position:50%
Instead of following
systemPreferredCamera,


236
00:13:36,416 --> 00:13:39,252 line:-1
you will need to update
session's input device


237
00:13:39.252 --> 00:13:42.488 line:-1 position:50%
with the user-picked camera
in manual mode.


238
00:13:42,488 --> 00:13:44,724 line:-1
But same as auto mode,
you still need to set


239
00:13:44.724 --> 00:13:46.559 line:-1 position:50%
the userPreferredCamera
property


240
00:13:46.559 --> 00:13:49.562 line:-1 position:50%
every time a user
picks a different camera,


241
00:13:49,562 --> 00:13:53,032 line:-1
so we maintain the user's
history of preferred cameras


242
00:13:53.032 --> 00:13:55.201 line:-1 position:50%
and suggest the right camera
when getting back


243
00:13:55.201 --> 00:13:59.072 line:-1 position:50%
to Automatic Camera Selection
mode.


244
00:13:59,072 --> 00:14:03,276 line:-1
For best practices on how to
incorporate userPreferredCamera


245
00:14:03,276 --> 00:14:06,279 line:-1
and systemPreferredCamera APIs,
please check out


246
00:14:06,279 --> 00:14:10,850 line:-1
the new sample app,
"Continuity Camera Sample."


247
00:14:10.850 --> 00:14:14.187 line:-1 position:50%
Besides bringing a magical
webcam experience to the Mac,


248
00:14:14.187 --> 00:14:17.990 line:-1 position:50%
Continuity Camera also presents
you with new opportunities


249
00:14:17.990 --> 00:14:21.794 line:-1 position:50%
to harness the power of
iPhone-specific camera features


250
00:14:21.794 --> 00:14:23.629 line:-1 position:50%
in your Mac app.


251
00:14:23,629 --> 00:14:27,934 line:-1
We've added a few
AVCapture APIs on macOS 13


252
00:14:27,934 --> 00:14:30,103 line:-1
to help applications
better utilize


253
00:14:30.103 --> 00:14:33.206 line:-1 position:50%
Continuity Camera devices.


254
00:14:33.206 --> 00:14:36.476 line:-1 position:50%
We're bringing the amazing
quality of iPhone photo captures


255
00:14:36.476 --> 00:14:39.912 line:-1 position:50%
to macOS,
thanks to Continuity Camera.


256
00:14:39,912 --> 00:14:44,050 line:-1
First off, we support capturing
high-resolution photos.


257
00:14:44.050 --> 00:14:47.653 line:-1 position:50%
Previously, macOS has only
supported photo captures


258
00:14:47,653 --> 00:14:49,388 line:-1
at video resolution.


259
00:14:49.388 --> 00:14:52.425 line:-1 position:50%
Starting with macOS 13,
you will be able to capture


260
00:14:52.425 --> 00:14:56.796 line:-1 position:50%
up to 12 megapixel photos
with Continuity Camera.


261
00:14:56,796 --> 00:14:59,332 line:0
This can be enabled
by first setting


262
00:14:59,332 --> 00:15:01,901 line:0
highResolutionCaptureEnabled
to true


263
00:15:01,901 --> 00:15:05,037 line:0
on AVCapturePhotoOutput
object before starting


264
00:15:05,037 --> 00:15:08,007 line:0
a capture session,
and then setting the


265
00:15:08,007 --> 00:15:10,910 line:0
highResolutionPhotoEnabled
property to true


266
00:15:10,910 --> 00:15:16,349 position:50%
on your photoSettings object
for each capture.


267
00:15:16,349 --> 00:15:19,318 line:-1
In addition to capturing
high-res photos,


268
00:15:19.318 --> 00:15:23.122 line:-1 position:50%
Continuity Camera supports
controlling how photo quality


269
00:15:23,122 --> 00:15:25,591 line:-1
should be prioritized
against speed


270
00:15:25,591 --> 00:15:30,029 line:-1
by first setting the maximum
photo quality prioritization


271
00:15:30.029 --> 00:15:32.165 line:-1 position:50%
on the photoOutput object,


272
00:15:32,165 --> 00:15:36,602 line:0
then choosing the prioritization
for each capture by setting


273
00:15:36,602 --> 00:15:39,005 line:0
photoQualityPrioritization
property


274
00:15:39,005 --> 00:15:44,110 position:50%
on the AVCapturePhotoSettings
object.


275
00:15:44.110 --> 00:15:47.280 line:-1 position:50%
To learn more about choosing
the right prioritization


276
00:15:47.280 --> 00:15:49.515 line:-1 position:50%
for your application,
please check out


277
00:15:49,515 --> 00:15:52,251 position:50%
"Capture high-quality photos
using video formats"


278
00:15:52,251 --> 00:15:58,157 line:0
in WWDC2021.


279
00:15:58.157 --> 00:16:01.694 line:-1 position:50%
Another photo-related feature
is flash capture.


280
00:16:01,694 --> 00:16:04,931 line:0
You can now set flashMode
on your photoSettings object


281
00:16:04,931 --> 00:16:08,067 position:50%
to control whether flash
should be on, off,


282
00:16:08,067 --> 00:16:09,869 position:50%
or automatically chosen


283
00:16:09,869 --> 00:16:14,841 line:0
based on the scene
and lighting conditions.


284
00:16:14.841 --> 00:16:17.410 line:-1 position:50%
We are also making
AVCaptureMetadataOutput


285
00:16:17.410 --> 00:16:22.048 line:-1 position:50%
available on macOS to allow
processing timed metadata


286
00:16:22,048 --> 00:16:25,184 line:-1
produced by a capture session.


287
00:16:25,184 --> 00:16:27,653 line:-1
You can now stream
face metadata objects


288
00:16:27,653 --> 00:16:32,091 line:-1
and human body metadata
objects from iPhone.


289
00:16:32,091 --> 00:16:34,160 line:-1
Let's go through
how to setup a session


290
00:16:34.160 --> 00:16:37.530 line:-1 position:50%
to receive
face metadata objects.


291
00:16:37,530 --> 00:16:39,065 line:-1
After setting up the session


292
00:16:39.065 --> 00:16:41.467 line:-1 position:50%
with proper video
input and output,


293
00:16:41,467 --> 00:16:44,971 line:-1
you will need to create
an AVCaptureMetadataOutput


294
00:16:44.971 --> 00:16:48.841 line:-1 position:50%
and call addOutput
to add it to the session.


295
00:16:48.841 --> 00:16:51.711 line:-1 position:50%
To receive face metadata
in particular,


296
00:16:51.711 --> 00:16:54.413 line:-1 position:50%
set your object types array
on the output


297
00:16:54,413 --> 00:16:57,783 line:-1
to include the face object type.


298
00:16:57.783 --> 00:17:01.220 line:-1 position:50%
Make sure the metadata types
requested are supported


299
00:17:01.220 --> 00:17:02.154 line:-1 position:50%
by checking


300
00:17:02,154 --> 00:17:06,025 line:-1
availableMetadataObjectTypes
property.


301
00:17:06,025 --> 00:17:10,730 line:-1
Then setup the delegate
to receive metadata callbacks.


302
00:17:10.730 --> 00:17:12.565 line:-1 position:50%
After the session
starts running,


303
00:17:12,565 --> 00:17:13,866 line:-1
you will get callbacks


304
00:17:13.866 --> 00:17:18.571 line:-1 position:50%
with face metadata objects
produced in real time.


305
00:17:18.571 --> 00:17:22.608 line:-1 position:50%
Besides AVCapturePhotoOutput
and AVCaptureMetadataOutput


306
00:17:22,608 --> 00:17:24,043 line:-1
we just talked about,


307
00:17:24.043 --> 00:17:27.713 line:-1 position:50%
Continuity Camera also
supports video data output,


308
00:17:27,713 --> 00:17:33,319 line:-1
movie file output,
and AVCaptureVideoPreviewLayer.


309
00:17:33,319 --> 00:17:37,056 line:-1
Here's a list of video formats
supported by Continuity Camera


310
00:17:37.056 --> 00:17:38.691 line:-1 position:50%
that you'll want to be aware of


311
00:17:38.691 --> 00:17:42.128 line:-1 position:50%
when integrating this camera
into your application.


312
00:17:42,128 --> 00:17:45,164 position:50%
It supports three
16 by 9 formats --


313
00:17:45,164 --> 00:17:48,935 line:0
from 640 by 480 to 1080p --


314
00:17:48,935 --> 00:17:53,639 line:0
and one 4 by 3 format:
1920 by 1440.


315
00:17:53.639 --> 00:17:54.941 line:-1 position:50%
You can choose between formats


316
00:17:54,941 --> 00:17:57,710 line:-1
supporting up to
30 frames per second


317
00:17:57,710 --> 00:18:01,180 line:-1
or 60 frames per second,
based on the need.


318
00:18:01.180 --> 00:18:05.284 line:-1 position:50%
Another major addition
is Desk View device API.


319
00:18:05,284 --> 00:18:10,089 line:-1
Desk View camera is exposed
as a separate AVCaptureDevice.


320
00:18:10,089 --> 00:18:12,792 line:-1
There are two ways
you can find this device.


321
00:18:12.792 --> 00:18:14.460 line:-1 position:50%
First one is by looking up


322
00:18:14,460 --> 00:18:17,129 line:-1
AVCaptureDeviceType
DeskViewCamera


323
00:18:17.129 --> 00:18:20.967 line:-1 position:50%
in device discovery session.


324
00:18:20.967 --> 00:18:23.135 line:-1 position:50%
Alternatively,
if you already know


325
00:18:23.135 --> 00:18:26.539 line:-1 position:50%
the AVCaptureDevice object
of the main video camera,


326
00:18:26,539 --> 00:18:28,908 line:-1
you can use
the companionDeskViewCamera


327
00:18:28,908 --> 00:18:33,012 line:-1
property on that device
to access a Desk View device.


328
00:18:33.012 --> 00:18:35.915 line:-1 position:50%
This API will be helpful
to pair main camera


329
00:18:35.915 --> 00:18:37.616 line:-1 position:50%
and Desk View device
when there are


330
00:18:37,616 --> 00:18:42,054 line:-1
multiple Continuity Camera
devices around.


331
00:18:42,054 --> 00:18:44,457 line:-1
Once you have
the AVCaptureDevice object


332
00:18:44.457 --> 00:18:46.892 line:-1 position:50%
of the desired
Desk View camera,


333
00:18:46.892 --> 00:18:50.896 line:-1 position:50%
you can use it with an AVCapture
video data output,


334
00:18:50,896 --> 00:18:52,565 line:-1
movie file output,


335
00:18:52.565 --> 00:18:55.868 line:-1 position:50%
or video preview layer
in the capture session


336
00:18:55.868 --> 00:19:00.673 line:-1 position:50%
just as you can
with other camera devices.


337
00:19:00,673 --> 00:19:03,542 line:-1
Desk View device currently
supports one streaming format


338
00:19:03,542 --> 00:19:06,178 line:-1
in 420v pixel format.


339
00:19:06.178 --> 00:19:10.349 line:-1 position:50%
The resolution of the format
is 1920 by 1440,


340
00:19:10,349 --> 00:19:14,153 line:-1
and the maximum frame rate
supported is 30 fps.


341
00:19:14,153 --> 00:19:16,422 line:-1
This is the end
of the session.


342
00:19:16,422 --> 00:19:18,491 line:-1
You learned about
Continuity Camera,


343
00:19:18,491 --> 00:19:22,161 line:-1
how to build a magical camera
selection on macOS,


344
00:19:22,161 --> 00:19:25,698 line:-1
and a handful of new APIs
to integrate Continuity Camera


345
00:19:25.698 --> 00:19:27.967 line:-1 position:50%
in your Mac application.


346
00:19:27,967 --> 00:19:31,270 line:-1
I'm excited to see you
adopting all these APIs,


347
00:19:31.270 --> 00:19:34.206 line:-1 position:50%
and have a great rest of WWDC.


348
00:19:34,206 --> 00:19:38,644 line:0 size:2% position:90%
♪

