2
00:00:00.100 --> 00:00:03.003 line:-1 position:50%
♪ Mellow instrumental hip-hop ♪


3
00:00:03,003 --> 00:00:10,143 line:0 position:90% align:right
♪


4
00:00:10.143 --> 00:00:13.347 line:-1 position:50%
Dan Golden: Hi, I'm Dan
from the Accessibility team.


5
00:00:13,347 --> 00:00:15,816 line:-1
I am thrilled
to talk about accessibility


6
00:00:15,816 --> 00:00:19,653 line:-1
in spatial computing,
alongside my colleague Drew.


7
00:00:19,653 --> 00:00:22,122 line:-1
In this talk, I'll give you
an overview


8
00:00:22.122 --> 00:00:23.991 line:-1 position:50%
of some of
the accessibility features


9
00:00:23,991 --> 00:00:26,426 line:-1
available on this platform.


10
00:00:26.426 --> 00:00:29.096 line:-1 position:50%
Next, I'll dive into
some of the specifics


11
00:00:29.096 --> 00:00:31.031 line:-1 position:50%
of what you can do in your apps


12
00:00:31.031 --> 00:00:34.368 line:-1 position:50%
to support people
who are blind or low vision.


13
00:00:34,368 --> 00:00:38,438 line:-1
Then, I'll hand it off to Drew
to discuss motor, cognitive,


14
00:00:38.438 --> 00:00:42.542 line:-1 position:50%
and hearing accessibility
in spatial computing.


15
00:00:42.542 --> 00:00:44.978 line:-1 position:50%
Let's get started!


16
00:00:44.978 --> 00:00:48.615 line:-1 position:50%
We've designed this immersive
platform for everyone.


17
00:00:48.615 --> 00:00:51.518 line:-1 position:50%
While spatial computing
experiences are often built


18
00:00:51.518 --> 00:00:55.589 line:-1 position:50%
with stunning visual features
and a variety of hand inputs,


19
00:00:55,589 --> 00:00:58,358 line:-1
that doesn't mean that vision
or physical movement


20
00:00:58,358 --> 00:01:00,794 line:-1
are required to engage
with them.


21
00:01:00.794 --> 00:01:04.064 line:-1 position:50%
In fact, these experiences
have the potential to be


22
00:01:04.064 --> 00:01:07.801 line:-1 position:50%
incredibly impactful to people
who are blind or low vision,


23
00:01:07.801 --> 00:01:11.805 line:-1 position:50%
have limited mobility,
or limb differences.


24
00:01:11.805 --> 00:01:14.074 line:-1 position:50%
For example,
someone who is blind


25
00:01:14,074 --> 00:01:16,043 line:-1
could interact
with the real world


26
00:01:16.043 --> 00:01:19.146 line:-1 position:50%
without having to see
what's on the displays.


27
00:01:19,146 --> 00:01:22,049 line:-1
Therefore, it's important
to keep people of all abilities


28
00:01:22.049 --> 00:01:24.618 line:-1 position:50%
in mind when you're
building out your app,


29
00:01:24.618 --> 00:01:27.788 line:-1 position:50%
so that everyone can enjoy
and benefit from them.


30
00:01:27.788 --> 00:01:30.791 line:-1 position:50%
At Apple, we recognize
that access to technology


31
00:01:30,791 --> 00:01:33,827 line:-1
is a fundamental human right,
and this platform


32
00:01:33,827 --> 00:01:36,330 line:-1
contains the largest list
of accessibility features


33
00:01:36,330 --> 00:01:40,100 line:-1
we've ever included in the
first generation of a product.


34
00:01:40,100 --> 00:01:42,903 line:-1
You'll recognize many features
you already know and love,


35
00:01:42.903 --> 00:01:46.106 line:-1 position:50%
like Dynamic Type support,
Increase Contrast,


36
00:01:46.106 --> 00:01:48.608 line:-1 position:50%
and Spoken Content features.


37
00:01:48,608 --> 00:01:51,979 line:-1
And we've reimagined our
flagship assistive technologies


38
00:01:51.979 --> 00:01:55.182 line:-1 position:50%
specifically for
spatial computing.


39
00:01:55,182 --> 00:01:58,051 line:-1
We are so excited
about these features,


40
00:01:58.051 --> 00:02:01.822 line:-1 position:50%
and as a developer, you can help
by making sure the experiences


41
00:02:01.822 --> 00:02:05.092 line:-1 position:50%
that you're building
include everyone.


42
00:02:05,092 --> 00:02:07,794 line:-1
Let's start by talking about
the ways you can support people


43
00:02:07.794 --> 00:02:11.164 line:-1 position:50%
who are blind or low vision
in your apps.


44
00:02:11,164 --> 00:02:12,532 line:-1
There are a few things
to consider


45
00:02:12.532 --> 00:02:15.035 line:-1 position:50%
when discussing
vision accessibility:


46
00:02:15.035 --> 00:02:19.406 line:-1 position:50%
VoiceOver support,
visual design, and motion.


47
00:02:19,406 --> 00:02:22,275 line:-1
Let's start by talking
about VoiceOver support.


48
00:02:22,275 --> 00:02:24,011 line:-1
VoiceOver is
the built-in screen reader


49
00:02:24,011 --> 00:02:26,513 line:-1
available on
all Apple platforms,


50
00:02:26.513 --> 00:02:30.484 line:-1 position:50%
and I'm excited to say we've
brought it to this one as well.


51
00:02:30,484 --> 00:02:32,619 line:-1
Drew and I have been working
on a really fun app


52
00:02:32,619 --> 00:02:36,990 line:-1
called Happy Beam that
utilizes ARKit and RealityKit.


53
00:02:36.990 --> 00:02:39.626 line:-1 position:50%
In the app, you make
heart gestures with your hands


54
00:02:39.626 --> 00:02:42.362 line:-1 position:50%
to turn grumpy clouds happy.


55
00:02:42,362 --> 00:02:43,830 line:-1
Let's take a look
at some of the ways


56
00:02:43,830 --> 00:02:48,368 line:-1
we can improve the VoiceOver
experience in this app.


57
00:02:48,368 --> 00:02:50,003 line:-1
We've gone ahead
and added VoiceOver


58
00:02:50.003 --> 00:02:51.872 line:-1 position:50%
to the Accessibility Shortcut


59
00:02:51.872 --> 00:02:56.009 line:-1 position:50%
in Settings > Accessibility >
Accessibility Shortcut,


60
00:02:56,009 --> 00:02:58,345 line:-1
so that whenever we triple-press
the Digital Crown,


61
00:02:58.345 --> 00:03:01.248 line:-1 position:50%
VoiceOver will toggle on or off.


62
00:03:01.248 --> 00:03:03.116 line:-1 position:50%
This is a great tool
when we're testing


63
00:03:03.116 --> 00:03:05.719 line:-1 position:50%
the accessibility of our app.


64
00:03:05,719 --> 00:03:08,388 line:-1
Let's open the app
and toggle VoiceOver on


65
00:03:08.388 --> 00:03:10.123 line:-1 position:50%
with a triple-press
of the Digital Crown.


66
00:03:10.123 --> 00:03:13.693 line:-1 position:50%
♪ Ethereal instrumental music ♪


67
00:03:13.693 --> 00:03:14.694 line:-1 position:50%
VoiceOver: Happy Beam.


68
00:03:14.694 --> 00:03:17.798 line:-1 position:50%
Choose how you will cheer up
grumpy clouds.


69
00:03:17,798 --> 00:03:21,034 line:-1
Dan: On this platform, VoiceOver
uses different finger pinches


70
00:03:21,034 --> 00:03:24,504 line:-1
on different hands
to perform different actions.


71
00:03:24.504 --> 00:03:27.407 line:-1 position:50%
By default, you can move focus
to the next item


72
00:03:27.407 --> 00:03:29.376 line:-1 position:50%
by pinching
your right index finger.


73
00:03:29,376 --> 00:03:31,745 align:right size:2% line:0
♪


74
00:03:31,745 --> 00:03:34,648 line:-1
VoiceOver: Make a heart
with two hands, button.


75
00:03:34.648 --> 00:03:38.485 line:-1 position:50%
Use a pinch gesture
or a compatible device, button.


76
00:03:38.485 --> 00:03:40.687 line:-1 position:50%
Dan: To move focus
to the previous item,


77
00:03:40,687 --> 00:03:43,190 line:-1
pinch your right middle finger.


78
00:03:43,190 --> 00:03:45,992 line:-1
VoiceOver: Make a heart
with two hands, button.


79
00:03:45,992 --> 00:03:49,196 line:-1
Dan: To activate an item,
pinch your right ring finger


80
00:03:49,196 --> 00:03:52,666 line:-1
or your left index finger.


81
00:03:52,666 --> 00:03:54,935 line:-1
[ACTIVATION CHIRP]


82
00:03:54,935 --> 00:03:55,969 line:-1
Now that we're familiar
with some of


83
00:03:55,969 --> 00:03:57,671 line:-1
VoiceOver's basic controls,


84
00:03:57.671 --> 00:04:00.173 line:-1 position:50%
let's explore
the rest of the app.


85
00:04:00.173 --> 00:04:03.043 line:-1 position:50%
VoiceOver: Three, two, one.


86
00:04:03,043 --> 00:04:04,211 line:-1
[HAPPY BEAM GAME START TONE]


87
00:04:04,211 --> 00:04:07,881 line:-1
Happy beam. Back button.
Score zero.


88
00:04:07,881 --> 00:04:11,551 line:-1
Stop music, button.
Twenty-nine seconds remaining.


89
00:04:11,551 --> 00:04:14,054 line:-1
Pause, button.


90
00:04:14,054 --> 00:04:15,689 line:-1
Dan: Things are looking
pretty good here.


91
00:04:15.689 --> 00:04:17.724 line:-1 position:50%
This app is built using SwiftUI,


92
00:04:17.724 --> 00:04:19.760 line:-1 position:50%
so a lot of the standard
controls we're using


93
00:04:19.760 --> 00:04:21.862 line:-1 position:50%
are already accessible,


94
00:04:21.862 --> 00:04:23.864 line:-1 position:50%
and we've taken care
to adopt SwiftUI's


95
00:04:23.864 --> 00:04:26.733 line:-1 position:50%
accessibility modifiers
on the rest of the views


96
00:04:26.733 --> 00:04:29.202 line:-1 position:50%
to ensure appropriate
accessibility information


97
00:04:29,202 --> 00:04:31,905 line:-1
is being provided to VoiceOver.


98
00:04:31,905 --> 00:04:36,843 position:50%
To learn more, check out our
talks on SwiftUI Accessibility.


99
00:04:36,843 --> 00:04:38,678 line:0
Let's take a look
at the rest of the app


100
00:04:38,678 --> 00:04:41,448 line:0
and see how we can interact
with the clouds.


101
00:04:41,448 --> 00:04:45,552 line:0
VoiceOver: Close, button.
Pop-up. App placement bar.


102
00:04:45,552 --> 00:04:47,387 line:-1
[DEEP TONE] App placement --
[DEEP TONE] App placement --


103
00:04:47,387 --> 00:04:49,623 line:-1
[DEEP TONE]
App placement bar.


104
00:04:49.623 --> 00:04:51.725 line:-1 position:50%
Dan: That sound that you hear
indicates that VoiceOver


105
00:04:51.725 --> 00:04:54.694 line:-1 position:50%
can't find any other items
to interact with,


106
00:04:54,694 --> 00:04:57,998 line:-1
so the clouds are
inaccessible to VoiceOver.


107
00:04:57,998 --> 00:05:00,233 line:-1
The clouds are generated
using RealityKit,


108
00:05:00,233 --> 00:05:03,303 line:-1
so we can fix this using
the new accessibility component


109
00:05:03.303 --> 00:05:05.872 line:-1 position:50%
available in RealityKit.


110
00:05:05,872 --> 00:05:08,308 line:-1
The accessibility component
allows you to specify


111
00:05:08.308 --> 00:05:12.345 line:-1 position:50%
accessibility properties
on RealityKit entities.


112
00:05:12.345 --> 00:05:17.384 line:-1 position:50%
You can configure accessibility
labels, values, and traits,


113
00:05:17.384 --> 00:05:20.086 line:-1 position:50%
as well as custom rotors,
custom content,


114
00:05:20.086 --> 00:05:22.722 line:-1 position:50%
and custom actions.


115
00:05:22,722 --> 00:05:25,659 line:-1
You can also configure
system accessibility actions,


116
00:05:25,659 --> 00:05:29,462 line:-1
such as the activate
and adjustable actions.


117
00:05:29.462 --> 00:05:31.231 line:-1 position:50%
To make the clouds accessible,


118
00:05:31,231 --> 00:05:34,901 line:-1
let's start by creating
a new accessibility component,


119
00:05:34,901 --> 00:05:37,904 line:-1
and then set
isAccessibilityElement to true


120
00:05:37,904 --> 00:05:39,673 line:-1
to indicate
to assistive technologies


121
00:05:39.673 --> 00:05:42.943 line:-1 position:50%
that the cloud
should be navigable.


122
00:05:42,943 --> 00:05:45,745 line:-1
Next, we'll give the cloud
the button trait,


123
00:05:45.745 --> 00:05:47.480 line:-1 position:50%
so that technologies
like Switch Control


124
00:05:47.480 --> 00:05:50.250 line:-1 position:50%
and Voice Control
understand that this cloud


125
00:05:50.250 --> 00:05:52.953 line:-1 position:50%
is a user-interactive item.


126
00:05:52,953 --> 00:05:55,255 line:-1
We'll also give it
the playsSound trait,


127
00:05:55.255 --> 00:05:59.392 line:-1 position:50%
since the clouds play a sound
when they turn happy.


128
00:05:59.392 --> 00:06:03.530 line:-1 position:50%
Next, we can give the cloud
a name via the label property,


129
00:06:03,530 --> 00:06:07,834 line:-1
and a value describing
its grumpy or happy state.


130
00:06:07,834 --> 00:06:10,303 line:-1
Any time the state
in your app is updated,


131
00:06:10,303 --> 00:06:12,205 line:-1
make sure you update
the relevant property


132
00:06:12.205 --> 00:06:14.507 line:-1 position:50%
on the accessibility component.


133
00:06:14.507 --> 00:06:18.078 line:-1 position:50%
Here, in the didSet handler
of our isHappy variable,


134
00:06:18.078 --> 00:06:20.013 line:-1 position:50%
we're using one
of the convenience properties


135
00:06:20,013 --> 00:06:23,550 line:-1
to update the accessibilityValue
on the cloud.


136
00:06:23,550 --> 00:06:25,752 line:-1
Any time you use
a convenience property,


137
00:06:25.752 --> 00:06:28.722 line:-1 position:50%
the cooresponding property
on the accessibility component


138
00:06:28,722 --> 00:06:31,291 line:-1
is updated accordingly.


139
00:06:31.291 --> 00:06:34.861 line:-1 position:50%
Labels and values are stored
as LocalizedStringResources,


140
00:06:34.861 --> 00:06:37.130 line:-1 position:50%
which can be created
using string literals,


141
00:06:37,130 --> 00:06:39,766 line:-1
but automatically resolve
to a localized value


142
00:06:39.766 --> 00:06:42.602 line:-1 position:50%
that you've provided at runtime.


143
00:06:42,602 --> 00:06:47,407 line:-1
Lastly, we'll set the component
on the entities component list.


144
00:06:47,407 --> 00:06:49,342 line:-1
Let's take a look at our app
now that the cloud


145
00:06:49,342 --> 00:06:50,443 line:-1
should be accessible.


146
00:06:50,443 --> 00:06:51,845 size:2% position:90% line:0
♪


147
00:06:51.845 --> 00:06:54.881 line:-1 position:50%
VoiceOver: App pl--
Cloud, grumpy. Button.


148
00:06:54,881 --> 00:06:57,350 line:-1
Dan: Great! We can
navigate to the clouds


149
00:06:57,350 --> 00:07:00,353 line:-1
and their state
is communicated to us.


150
00:07:00,353 --> 00:07:02,856 line:-1
VoiceOver uses Spatial Audio
to provide cues


151
00:07:02,856 --> 00:07:05,058 line:-1
as to where objects are located.


152
00:07:05,058 --> 00:07:07,327 line:-1
So let's try to make a heart
gesture at one of our clouds


153
00:07:07.327 --> 00:07:08.662 line:-1 position:50%
to turn it happy.


154
00:07:08,662 --> 00:07:10,664 size:2% align:right line:0
♪


155
00:07:11,731 --> 00:07:13,033 line:-1
What's going on?


156
00:07:13.033 --> 00:07:15.435 line:-1 position:50%
We just showed that cloud
so much love,


157
00:07:15.435 --> 00:07:17.570 line:-1 position:50%
but it still didn't turn happy.


158
00:07:17,570 --> 00:07:19,606 line:-1
That's because when
VoiceOver is enabled,


159
00:07:19,606 --> 00:07:23,576 line:-1
your app won't receive
hand input by default.


160
00:07:23,576 --> 00:07:24,944 line:-1
This is to ensure that your app


161
00:07:24.944 --> 00:07:26.880 line:-1 position:50%
won't inadvertently
perform an action


162
00:07:26,880 --> 00:07:29,349 line:-1
while someone is performing
VoiceOver gestures,


163
00:07:29.349 --> 00:07:32.886 line:-1 position:50%
enabling them to explore safely.


164
00:07:32.886 --> 00:07:34.821 line:-1 position:50%
On this platform,
VoiceOver includes


165
00:07:34.821 --> 00:07:38.024 line:-1 position:50%
a new Direct Gesture Mode,
and when it's enabled,


166
00:07:38,024 --> 00:07:40,827 line:-1
VoiceOver won't process
its standard gestures


167
00:07:40,827 --> 00:07:45,932 line:-1
and instead allow your app
to directly process hand input.


168
00:07:45.932 --> 00:07:47.500 line:-1 position:50%
People can choose
to run your app


169
00:07:47,500 --> 00:07:49,436 line:-1
both in Direct Gesture Mode


170
00:07:49.436 --> 00:07:52.272 line:-1 position:50%
and in VoiceOver's
default interaction mode,


171
00:07:52,272 --> 00:07:54,207 line:-1
and there are accessibility
considerations


172
00:07:54,207 --> 00:07:57,143 line:-1
to keep in mind in each case.


173
00:07:57.143 --> 00:07:58.211 line:-1 position:50%
Let's start by talking about


174
00:07:58,211 --> 00:08:00,880 line:-1
VoiceOver's
Default Interaction Mode.


175
00:08:00,880 --> 00:08:02,615 line:-1
Let's add an activate action


176
00:08:02,615 --> 00:08:05,885 line:-1
so that we can turn the clouds
happy using VoiceOver.


177
00:08:05.885 --> 00:08:08.121 line:-1 position:50%
To do this, we'll add
the activate action


178
00:08:08,121 --> 00:08:11,758 line:-1
to the systemActions property
on the accessibilityComponent.


179
00:08:11,758 --> 00:08:14,527 line:-1
Then, we'll subscribe
to the activate event


180
00:08:14,527 --> 00:08:17,564 line:-1
on the content inside
our RealityView.


181
00:08:17.564 --> 00:08:20.667 line:-1 position:50%
Any time we receive an activate
event in the callback,


182
00:08:20.667 --> 00:08:22.736 line:-1 position:50%
we'll update the game model
so that the state


183
00:08:22.736 --> 00:08:26.673 line:-1 position:50%
of the relevant cloud
is updated accordingly.


184
00:08:26.673 --> 00:08:29.876 line:-1 position:50%
Let's take a look at our app
again with actions added.


185
00:08:29,876 --> 00:08:31,811 line:-1
VoiceOver: App placement --
Close --


186
00:08:31.811 --> 00:08:33.880 line:-1 position:50%
Cloud, grumpy.
[CLOUD COOS]


187
00:08:33.880 --> 00:08:36.549 line:-1 position:50%
Cloud, grumpy.


188
00:08:36,549 --> 00:08:37,450 line:-1
Dan: Awesome!


189
00:08:37.450 --> 00:08:40.420 line:-1 position:50%
Now we can turn the clouds happy
using VoiceOver.


190
00:08:40,420 --> 00:08:43,790 line:-1
The AccessibilityComponent
also offers additional APIs


191
00:08:43,790 --> 00:08:46,459 line:-1
such as custom actions,
custom rotors,


192
00:08:46,459 --> 00:08:48,561 line:-1
and custom content.


193
00:08:48,561 --> 00:08:50,230 line:-1
These are great tools
for improving


194
00:08:50.230 --> 00:08:53.299 line:-1 position:50%
the accessibility experience
in your app.


195
00:08:53,299 --> 00:08:55,268 line:0
To learn more about,
check out our talks


196
00:08:55,268 --> 00:08:58,905 position:50%
on the corresponding topics.


197
00:08:58,905 --> 00:09:02,008 line:-1
Next, let's talk about
Direct Gesture Mode.


198
00:09:02,008 --> 00:09:04,144 line:-1
This is a new way
to interact with apps


199
00:09:04.144 --> 00:09:07.046 line:-1 position:50%
while using VoiceOver
on this platform.


200
00:09:07,046 --> 00:09:09,149 line:-1
VoiceOver's activate action
isn't available


201
00:09:09,149 --> 00:09:12,519 line:-1
in Direct Gesture Mode, so we'll
need to provide feedback


202
00:09:12.519 --> 00:09:17.023 line:-1 position:50%
to the hand-input interactions
that we'll be using instead.


203
00:09:17.023 --> 00:09:19.025 line:-1 position:50%
Let's start by posting
an announcement


204
00:09:19.025 --> 00:09:20.260 line:-1 position:50%
when the clouds appear,


205
00:09:20,260 --> 00:09:23,596 line:-1
describing them and
their placement in the world.


206
00:09:23.596 --> 00:09:27.200 line:-1 position:50%
To do this, we'll create
a new AccessibilityNotification


207
00:09:27.200 --> 00:09:29.869 line:-1 position:50%
with an Announcement type,
pass in the string


208
00:09:29.869 --> 00:09:32.739 line:-1 position:50%
we'd like to have spoken,
and then call the post function


209
00:09:32,739 --> 00:09:35,208 line:-1
on the announcement.


210
00:09:35,208 --> 00:09:38,812 line:-1
In spatial experiences, it's
critical to provide information


211
00:09:38,812 --> 00:09:42,482 line:-1
about what items are available
and where they are located,


212
00:09:42,482 --> 00:09:46,453 line:-1
so this will be a crucial
announcement in our app.


213
00:09:46.453 --> 00:09:48.188 line:-1 position:50%
Let's also post an announcement


214
00:09:48,188 --> 00:09:50,356 line:-1
any time a heart gesture
is recognized


215
00:09:50,356 --> 00:09:54,494 line:-1
or when a cloud changes
from grumpy to happy.


216
00:09:54,494 --> 00:09:57,630 line:-1
Always announce any
meaningful event to VoiceOver,


217
00:09:57,630 --> 00:09:59,666 line:-1
so that it's clear
what is happening,


218
00:09:59,666 --> 00:10:02,902 line:-1
and what interactions
are being performed.


219
00:10:02,902 --> 00:10:05,705 position:50%
For example,
in a fully immersive app,


220
00:10:05,705 --> 00:10:08,741 line:0
any time you enter a new room
or environment,


221
00:10:08,741 --> 00:10:11,945 line:0
make sure to announce that
change in context to VoiceOver,


222
00:10:11,945 --> 00:10:16,316 line:0
and describe any new items
that are available in the world.


223
00:10:16,316 --> 00:10:20,286 line:0
Also consider utilizing sounds
when actions are performed.


224
00:10:20,286 --> 00:10:21,988 position:50%
The sounds that play
in Happy Beam


225
00:10:21,988 --> 00:10:24,491 line:0
when a cloud turns happy
are a great way


226
00:10:24,491 --> 00:10:27,260 line:0
to keep the app feeling
fun and spatial,


227
00:10:27,260 --> 00:10:31,097 line:0
even if we can't see the visual
transformation of the cloud.


228
00:10:31.097 --> 00:10:33.233 line:-1 position:50%
Let's take a look at our app
one last time


229
00:10:33,233 --> 00:10:35,201 line:-1
with some announcements added.


230
00:10:35,201 --> 00:10:38,171 line:-1
When the game starts,
we'll enable Direct Gesture Mode


231
00:10:38,171 --> 00:10:41,741 line:-1
with a left index finger
triple-pinch and hold.


232
00:10:41.741 --> 00:10:45.411 line:-1 position:50%
Then, we can make heart gestures
to turn the clouds happy


233
00:10:45,411 --> 00:10:48,414 line:-1
and get feedback about
all of the interactions.


234
00:10:48.414 --> 00:10:52.385 line:-1 position:50%
VoiceOver: Three, two, one.


235
00:10:52.385 --> 00:10:53.353 line:-1 position:50%
Happy Beam.


236
00:10:53,353 --> 00:10:56,556 line:-1
Three clouds above and in front
of you to the right.


237
00:10:56.556 --> 00:10:58.558 line:-1 position:50%
Direct Gestures enabled.


238
00:10:58.558 --> 00:11:01.094 line:-1 position:50%
Press the crown to ac--
Casting beam.


239
00:11:01,094 --> 00:11:03,062 align:right line:0 position:90%
♪


240
00:11:03,062 --> 00:11:05,131 line:-1
[WINNING CHIME]
Grumpy cloud hit.


241
00:11:05,131 --> 00:11:08,334 line:-1
Hiding beam.


242
00:11:08.334 --> 00:11:09.335 line:-1 position:50%
Dan: Awesome!


243
00:11:09,335 --> 00:11:11,004 line:-1
We received some
great feedback there


244
00:11:11.004 --> 00:11:14.607 line:-1 position:50%
about all of the interactions
as they were being performed.


245
00:11:14,607 --> 00:11:17,610 line:-1
Our app is shaping up to have
some great VoiceOver support.


246
00:11:17,610 --> 00:11:19,012 line:-1
But there's still
a lot you can do


247
00:11:19.012 --> 00:11:20.613 line:-1 position:50%
to support people
with low vision


248
00:11:20.613 --> 00:11:22.949 line:-1 position:50%
who aren't using your app
with VoiceOver,


249
00:11:22,949 --> 00:11:25,151 line:-1
especially if you're building
any custom components


250
00:11:25,151 --> 00:11:26,920 line:-1
or controls.


251
00:11:26,920 --> 00:11:29,389 line:-1
Just like on all
other Apple platforms,


252
00:11:29.389 --> 00:11:32.859 line:-1 position:50%
make sure your app responds
to changes in Dynamic Type,


253
00:11:32,859 --> 00:11:35,061 line:-1
especially at the largest
sizes available


254
00:11:35.061 --> 00:11:37.797 line:-1 position:50%
in accessibility settings.


255
00:11:37,797 --> 00:11:40,300 line:-1
Audit your app for any UI
that might benefit


256
00:11:40.300 --> 00:11:43.136 line:-1 position:50%
from being laid out vertically
instead of horizontally


257
00:11:43.136 --> 00:11:45.838 line:-1 position:50%
at these larger sizes.


258
00:11:45,838 --> 00:11:47,307 line:-1
Also ensure you're using


259
00:11:47,307 --> 00:11:49,542 line:-1
at least
a four-to-one contrast ratio


260
00:11:49.542 --> 00:11:52.612 line:-1 position:50%
between foreground
and background colors.


261
00:11:52,612 --> 00:11:58,351 position:50%
To learn more, check out "Make
your apps visually accessible."


262
00:11:58.351 --> 00:12:00.987 line:-1 position:50%
In spatial experiences,
anchors can be used


263
00:12:00,987 --> 00:12:04,057 line:-1
to place content relative
to different anchor points,


264
00:12:04.057 --> 00:12:08.628 line:-1 position:50%
such as a hand or a specific
position in the world.


265
00:12:08,628 --> 00:12:10,630 line:-1
You can also configure content
to be anchored


266
00:12:10.630 --> 00:12:13.199 line:-1 position:50%
to the virtual camera,
so that it appears


267
00:12:13.199 --> 00:12:16.169 line:-1 position:50%
on the same spot
on the displays.


268
00:12:16,169 --> 00:12:18,037 line:-1
While you may be familiar
with camera anchors


269
00:12:18.037 --> 00:12:20.773 line:-1 position:50%
in Reality Kit on other
Apple platforms,


270
00:12:20,773 --> 00:12:23,443 line:-1
on this platform,
the content follows your head


271
00:12:23.443 --> 00:12:25.778 line:-1 position:50%
as you look around,
which has the potential


272
00:12:25.778 --> 00:12:29.182 line:-1 position:50%
to impact people
with low vision differently.


273
00:12:29.182 --> 00:12:31.851 line:-1 position:50%
Head anchors should be
avoided and used sparingly,


274
00:12:31.851 --> 00:12:34.621 line:-1 position:50%
so that people with low vision
can get closer to content


275
00:12:34.621 --> 00:12:37.790 line:-1 position:50%
to read it or view its details.


276
00:12:37.790 --> 00:12:41.260 line:-1 position:50%
Additionally, people using
the accessibility Zoom feature


277
00:12:41.260 --> 00:12:44.230 line:-1 position:50%
won't be able to easily
position head-anchored content


278
00:12:44.230 --> 00:12:45.999 line:-1 position:50%
inside of the Zoom lens,


279
00:12:45.999 --> 00:12:50.103 line:-1 position:50%
since the Zoom lens
is also head anchored.


280
00:12:50,103 --> 00:12:52,939 line:-1
Instead, consider
using a world anchor


281
00:12:52.939 --> 00:12:57.043 line:-1 position:50%
or lazily move your content
after a delay.


282
00:12:57.043 --> 00:12:59.479 line:-1 position:50%
In the rare cases where
it's absolutely necessary


283
00:12:59,479 --> 00:13:03,449 line:-1
to use head anchors,
keep the content decorative.


284
00:13:03.449 --> 00:13:06.419 line:-1 position:50%
Critical information should
not only be accessible


285
00:13:06,419 --> 00:13:09,155 line:-1
through head-anchored content.


286
00:13:09.155 --> 00:13:11.557 line:-1 position:50%
Always provide alternatives
for head anchors,


287
00:13:11,557 --> 00:13:13,860 line:-1
even when they might be
the best mainstream experience


288
00:13:13.860 --> 00:13:15.895 line:-1 position:50%
in your app.


289
00:13:15,895 --> 00:13:18,965 position:50%
The new accessibilityPrefers
HeadAnchorAlternative


290
00:13:18,965 --> 00:13:21,200 line:0
Environment variable in SwiftUI,


291
00:13:21,200 --> 00:13:23,936 line:0
and the AX PrefersHeadAnchor
Alternative API


292
00:13:23,936 --> 00:13:25,605 position:50%
in the Accessibility framework,


293
00:13:25,605 --> 00:13:28,975 line:0
let you know when you should
use alternate anchors.


294
00:13:28,975 --> 00:13:33,579 position:50%
Observe these APIs anywhere
your app employs head anchors.


295
00:13:33,579 --> 00:13:37,617 line:0
We've taken care to adopt this
API in the system ourselves.


296
00:13:37.617 --> 00:13:40.319 line:-1 position:50%
By default, Control Center
is head anchored


297
00:13:40,319 --> 00:13:42,555 line:-1
in its collapsed state.


298
00:13:42,555 --> 00:13:45,124 line:-1
You can see here that,
as you look around,


299
00:13:45,124 --> 00:13:46,926 line:-1
Control Center follows you.


300
00:13:49.829 --> 00:13:52.365 line:-1 position:50%
While this design makes it easy
to access Control Center


301
00:13:52,365 --> 00:13:53,833 line:-1
from anywhere,


302
00:13:53,833 --> 00:13:56,936 line:-1
we knew it might be challenging
for some people.


303
00:13:56,936 --> 00:14:00,840 line:-1
I mentioned earlier that
Zoom is also head anchored.


304
00:14:00,840 --> 00:14:03,142 line:-1
This is a feature
that magnifies content


305
00:14:03.142 --> 00:14:04.610 line:-1 position:50%
for people with low vision.


306
00:14:04.610 --> 00:14:07.914 line:-1 position:50%
When Zoom is enabled or someone
has otherwise indicated


307
00:14:07.914 --> 00:14:10.717 line:-1 position:50%
that they prefer alternatives
to head anchors,


308
00:14:10,717 --> 00:14:13,920 line:-1
Control Center moves
freely about the Y axis.


309
00:14:13.920 --> 00:14:17.724 line:-1 position:50%
Here, you can see that,
as you tilt your head up,


310
00:14:17.724 --> 00:14:22.161 line:-1 position:50%
the Zoom lens follows your head,
but Control Center does not.


311
00:14:22,161 --> 00:14:24,330 line:-1
Enabling you
to position Control Center


312
00:14:24,330 --> 00:14:26,699 line:-1
inside of the Zoom lens
and interact with it.


313
00:14:26.699 --> 00:14:29.569 line:-1 position:50%
It's also important
to be mindful


314
00:14:29,569 --> 00:14:31,938 line:-1
of the usage of motion
in your app.


315
00:14:31,938 --> 00:14:34,273 line:-1
Motion can be dizzying
for some people,


316
00:14:34.273 --> 00:14:37.577 line:-1 position:50%
and wearing a headset can be an
especially jarring experience,


317
00:14:37,577 --> 00:14:40,880 line:-1
even when subtle
motion effects are used.


318
00:14:40,880 --> 00:14:42,615 line:-1
Avoid the use of motion


319
00:14:42,615 --> 00:14:44,884 line:-1
that move a person rapidly
through your app,


320
00:14:44.884 --> 00:14:48.287 line:-1 position:50%
or involve a bouncing
or wave-like movement.


321
00:14:48,287 --> 00:14:51,390 line:-1
Zooming animations,
animations that involve movement


322
00:14:51,390 --> 00:14:55,027 line:-1
along more than one axis,
spinning or rotating effects,


323
00:14:55,027 --> 00:14:56,996 line:-1
and persistent
background effects


324
00:14:56,996 --> 00:14:59,398 line:-1
should all also be avoided.


325
00:14:59.398 --> 00:15:02.368 line:-1 position:50%
Always provide alternatives
for these types of animations


326
00:15:02,368 --> 00:15:04,904 line:-1
when Reduce Motion is enabled.


327
00:15:04.904 --> 00:15:07.507 line:-1 position:50%
You can check whether
Reduce Motion is active with the


328
00:15:07.507 --> 00:15:11.644 line:-1 position:50%
accessibilityReduceMotion
Environment variable in SwiftUI.


329
00:15:11,644 --> 00:15:13,446 line:-1
In UIKit, you can query


330
00:15:13.446 --> 00:15:16.783 line:-1 position:50%
UIAccessibility.
isReduceMotionEnabled,


331
00:15:16,783 --> 00:15:18,317 line:-1
and observe changes
to the preference


332
00:15:18,317 --> 00:15:21,287 line:-1
with the corresponding
notification.


333
00:15:21,287 --> 00:15:23,489 line:-1
If you're having trouble
finding a suitable replacement


334
00:15:23.489 --> 00:15:27.994 line:-1 position:50%
for the motion in your app,
consider utilizing a crossfade.


335
00:15:27.994 --> 00:15:30.663 line:-1 position:50%
Here's an example of how
we've adopted Reduce Motion


336
00:15:30,663 --> 00:15:32,165 line:-1
in the system.


337
00:15:32.165 --> 00:15:34.967 line:-1 position:50%
Check out the water here
in the Mount Hood Environment,


338
00:15:34,967 --> 00:15:38,671 line:-1
as the water persistently
ripples in the background.


339
00:15:38,671 --> 00:15:42,041 line:-1
When we toggle Reduce Motion on,
the water is changed


340
00:15:42.041 --> 00:15:44.610 line:-1 position:50%
to statically show
a ripple effect,


341
00:15:44,610 --> 00:15:46,646 line:-1
which achieves
a similar visual effect


342
00:15:46.646 --> 00:15:50.049 line:-1 position:50%
without requiring
the usage of motion.


343
00:15:50.049 --> 00:15:52.351 line:-1 position:50%
That's an overview of some
of the ways you can improve


344
00:15:52,351 --> 00:15:54,854 line:-1
the vision accessibility
in your apps,


345
00:15:54,854 --> 00:15:57,123 line:-1
but there's still a lot
to consider when discussing


346
00:15:57,123 --> 00:16:00,660 line:-1
motor, cognitive,
and hearing accessibility.


347
00:16:00,660 --> 00:16:03,696 line:-1
And for that, here's Drew
to tell you more.


348
00:16:03.696 --> 00:16:06.332 line:-1 position:50%
Drew Haas: Thanks, Dan.
Really great work!


349
00:16:06.332 --> 00:16:08.768 line:-1 position:50%
My name is Drew Haas
and I'm an engineer


350
00:16:08.768 --> 00:16:11.070 line:-1 position:50%
on the Accessibility team.


351
00:16:11.070 --> 00:16:13.039 line:-1 position:50%
Now that we've learned
about meaningful ways


352
00:16:13.039 --> 00:16:15.007 line:-1 position:50%
to improve the visual
accessibility


353
00:16:15,007 --> 00:16:18,878 line:-1
of your spatial experiences,
there is so much I want to share


354
00:16:18,878 --> 00:16:21,180 line:-1
about how to create your apps
to be inclusive


355
00:16:21.180 --> 00:16:22.982 line:-1 position:50%
to people with disabilities
which affect


356
00:16:22.982 --> 00:16:27.186 line:-1 position:50%
physical and motor function,
cognition, and hearing.


357
00:16:27,186 --> 00:16:29,722 line:-1
Let's start first with motor!


358
00:16:29,722 --> 00:16:31,657 line:-1
The default input system
is driven


359
00:16:31,657 --> 00:16:34,760 line:-1
by a combination
of eyes and hands.


360
00:16:34,760 --> 00:16:37,463 line:-1
For example, looking at
a button with your eyes,


361
00:16:37.463 --> 00:16:40.132 line:-1 position:50%
and pinching with your hand
sends a selection event


362
00:16:40,132 --> 00:16:42,068 line:-1
to activate the button.


363
00:16:42.068 --> 00:16:46.339 line:-1 position:50%
However, not everyone can
perform these physical actions.


364
00:16:46.339 --> 00:16:49.709 line:-1 position:50%
Our accessibility features
provide alternate input methods


365
00:16:49,709 --> 00:16:53,246 line:-1
for people with disabilities
which impact their use of eyes,


366
00:16:53,246 --> 00:16:56,082 line:-1
hands, or both.


367
00:16:56,082 --> 00:16:59,085 line:-1
The Dwell Control accessibility
feature allows people


368
00:16:59,085 --> 00:17:04,090 line:-1
to select and interact with the
UI without using their hands.


369
00:17:04,090 --> 00:17:08,394 line:-1
Dwell Control supports gestures
like tap, scroll,


370
00:17:08,394 --> 00:17:10,363 line:-1
long press,
and drag.


371
00:17:10.363 --> 00:17:13.165 line:-1 position:50%
You should design your app
to have full functionality


372
00:17:13,165 --> 00:17:16,235 line:-1
with this gesture set
so people using Dwell Control


373
00:17:16,235 --> 00:17:18,871 line:-1
aren't excluded.


374
00:17:18,871 --> 00:17:20,840 line:-1
It's a breeze to switch
gesture modes


375
00:17:20,840 --> 00:17:24,043 line:-1
by using the Dwell Control menu,
allowing people to operate


376
00:17:24,043 --> 00:17:26,078 line:-1
their device
using accommodations


377
00:17:26,078 --> 00:17:29,448 line:-1
without sacrificing efficiency.


378
00:17:29,448 --> 00:17:33,419 line:-1
This is by design: giving people
a frictionless experience


379
00:17:33.419 --> 00:17:36.756 line:-1 position:50%
even if they're using
nondefault inputs.


380
00:17:36,756 --> 00:17:38,824 line:-1
Let's see how
our Happy Beam app


381
00:17:38.824 --> 00:17:41.460 line:-1 position:50%
is designed to support
a variety of inputs,


382
00:17:41.460 --> 00:17:45.965 line:-1 position:50%
which makes it fully playable
using Dwell Control.


383
00:17:45.965 --> 00:17:49.001 line:-1 position:50%
When Happy Beam is launched,
the player will first choose


384
00:17:49.001 --> 00:17:51.837 line:-1 position:50%
how they'll cheer up
those grumpy clouds.


385
00:17:51.837 --> 00:17:54.607 line:-1 position:50%
You saw the first option
earlier in this session:


386
00:17:54,607 --> 00:17:56,742 line:-1
using two hands
in the shape of a heart


387
00:17:56.742 --> 00:17:59.145 line:-1 position:50%
and aiming it at the clouds.


388
00:17:59,145 --> 00:18:01,480 line:-1
The second option supports
Bluetooth accessories


389
00:18:01.480 --> 00:18:04.850 line:-1 position:50%
like keyboards
and game controllers.


390
00:18:04,850 --> 00:18:07,753 line:-1
When playing with these inputs,
the happy beam is fired


391
00:18:07,753 --> 00:18:10,022 line:-1
using this heart turret.


392
00:18:10,022 --> 00:18:13,159 line:-1
The turret also responds
to tap-and-drag gestures,


393
00:18:13,159 --> 00:18:15,328 line:-1
which means you can play
with one hand.


394
00:18:15,328 --> 00:18:17,463 line:-1
And, people playing
with Dwell Control


395
00:18:17.463 --> 00:18:20.833 line:-1 position:50%
have full functionality
over the turret.


396
00:18:20.833 --> 00:18:24.270 line:-1 position:50%
So plan and design for your app
to support different inputs


397
00:18:24,270 --> 00:18:26,205 line:-1
like Happy Beam does.


398
00:18:26,205 --> 00:18:27,573 line:-1
This is the best way to ensure


399
00:18:27.573 --> 00:18:31.243 line:-1 position:50%
you don't accidentally
exclude people.


400
00:18:31.243 --> 00:18:33.346 line:-1 position:50%
There is another
accessibility feature


401
00:18:33,346 --> 00:18:35,448 line:-1
that works really well
with Dwell.


402
00:18:35,448 --> 00:18:37,116 line:-1
Enter Pointer Control,


403
00:18:37.116 --> 00:18:40.486 line:-1 position:50%
one of my favorite
accessibility features.


404
00:18:40,486 --> 00:18:43,122 line:-1
This feature transforms
the input experience,


405
00:18:43.122 --> 00:18:45.591 line:-1 position:50%
allowing people to use
different input sources


406
00:18:45.591 --> 00:18:49.628 line:-1 position:50%
to control the system focus
instead of using their eyes.


407
00:18:49.628 --> 00:18:52.431 line:-1 position:50%
Eyes is the default,
but here people can change


408
00:18:52,431 --> 00:18:55,267 line:-1
the system focus
to be driven by head position,


409
00:18:55,267 --> 00:18:58,738 line:-1
wrist position, or index finger.


410
00:18:58.738 --> 00:19:01.273 line:-1 position:50%
Since Pointer Control
can change the input signal


411
00:19:01,273 --> 00:19:02,908 line:-1
to follow head position,


412
00:19:02.908 --> 00:19:06.712 line:-1 position:50%
remember to use camera-anchored
content sparingly.


413
00:19:06,712 --> 00:19:08,848 line:-1
This is another reason
you should prefer


414
00:19:08,848 --> 00:19:11,784 line:-1
to use world anchors
or provide alternatives


415
00:19:11.784 --> 00:19:13.652 line:-1 position:50%
to camera-anchored content.


416
00:19:13.652 --> 00:19:16.122 line:-1 position:50%
Both Dwell Control
and Pointer Control --


417
00:19:16,122 --> 00:19:19,859 line:-1
either on their own or utilizing
their feature sets combined --


418
00:19:19,859 --> 00:19:22,395 line:-1
provide tons of flexibility
with how people


419
00:19:22.395 --> 00:19:24.230 line:-1 position:50%
interact with their device.


420
00:19:24,230 --> 00:19:26,532 line:-1
These features accommodate
the physical requirements


421
00:19:26,532 --> 00:19:28,200 line:-1
to use the system.


422
00:19:28,200 --> 00:19:31,470 line:-1
Allow multiple avenues
for physical interaction,


423
00:19:31,470 --> 00:19:34,106 line:-1
because you never know
what kind of disabilities


424
00:19:34,106 --> 00:19:37,476 line:-1
someone using your app may have.


425
00:19:37,476 --> 00:19:39,578 line:-1
Spatial experiences enable new,


426
00:19:39.578 --> 00:19:42.548 line:-1 position:50%
dimensional ways
to interact with content.


427
00:19:42,548 --> 00:19:44,750 line:-1
Switch Control has
new menu options


428
00:19:44,750 --> 00:19:48,554 line:-1
for adjusting the camera's
position in world space.


429
00:19:48.554 --> 00:19:51.190 line:-1 position:50%
Here we're using a keyboard
with Switch Control


430
00:19:51,190 --> 00:19:54,326 line:-1
to activate the new camera
position modifiers.


431
00:19:54.326 --> 00:19:56.662 line:-1 position:50%
This moves your spatial position
downward


432
00:19:56,662 --> 00:19:59,899 line:-1
without you physically
moving your body.


433
00:19:59.899 --> 00:20:03.335 line:-1 position:50%
Not everyone will be able
to move comfortably or freely


434
00:20:03.335 --> 00:20:04.837 line:-1 position:50%
in their environment.


435
00:20:04.837 --> 00:20:07.373 line:-1 position:50%
While these camera position
options are available


436
00:20:07,373 --> 00:20:09,942 line:-1
for Switch Control,
if you have experiences


437
00:20:09,942 --> 00:20:12,111 line:-1
that require people
to position themselves


438
00:20:12,111 --> 00:20:16,282 line:-1
in certain ways,
provide options to bypass them.


439
00:20:16,282 --> 00:20:19,351 line:-1
Next, I want to talk about
Cognitive accessibility,


440
00:20:19.351 --> 00:20:22.288 line:-1 position:50%
and how you can support people
with disabilities that affect


441
00:20:22,288 --> 00:20:26,992 line:-1
the way they learn, remember,
and process information.


442
00:20:26,992 --> 00:20:29,995 line:-1
Guided Access is a cognitive
accessibility feature


443
00:20:29.995 --> 00:20:32.598 line:-1 position:50%
that promotes focus
by restricting the system


444
00:20:32,598 --> 00:20:34,567 line:-1
to a single app.


445
00:20:34.567 --> 00:20:38.137 line:-1 position:50%
It aims to minimize distractions
by backgrounding other apps,


446
00:20:38.137 --> 00:20:41.273 line:-1 position:50%
removing ornamental UI
which may be distracting,


447
00:20:41,273 --> 00:20:43,476 line:-1
and by suppressing
hardware button events


448
00:20:43,476 --> 00:20:47,813 line:-1
that could take someone
out of their experience.


449
00:20:47.813 --> 00:20:51.183 line:-1 position:50%
Being able to adjust the system
in this way can make it easier


450
00:20:51,183 --> 00:20:53,886 line:-1
for someone to stay focused
on their current task,


451
00:20:53,886 --> 00:20:57,623 line:-1
without distractions or easy
ways to get sidetracked.


452
00:20:57,623 --> 00:21:00,326 line:0
To learn more about
how to use Guided Access


453
00:21:00,326 --> 00:21:02,928 line:0
and implement the custom
restrictions APIs,


454
00:21:02,928 --> 00:21:04,763 line:0
check out my talk
from last year,


455
00:21:04,763 --> 00:21:08,634 line:0
"Create accessible
Single App Mode experiences."


456
00:21:08,634 --> 00:21:10,836 line:-1
By following just a few
best practices


457
00:21:10,836 --> 00:21:13,772 line:-1
for cognitive accessibility,
you make your app easier


458
00:21:13.772 --> 00:21:14.874 line:-1 position:50%
to use for everyone,


459
00:21:14,874 --> 00:21:18,043 line:-1
but especially people
with disabilities.


460
00:21:18.043 --> 00:21:19.745 line:-1 position:50%
Some people need
a little more help


461
00:21:19,745 --> 00:21:22,748 line:-1
breaking down the complexity
of your app.


462
00:21:22,748 --> 00:21:25,417 line:-1
Interactions which require
complex hand gestures


463
00:21:25.417 --> 00:21:29.655 line:-1 position:50%
can be hard for people
to pick up on and retain.


464
00:21:29.655 --> 00:21:33.259 line:-1 position:50%
You can help create a consistent
and familiar visual experience


465
00:21:33.259 --> 00:21:36.662 line:-1 position:50%
by using Apple's UI frameworks
like SwiftUI.


466
00:21:36,662 --> 00:21:39,198 line:-1
This reduces the amount of time
someone may need


467
00:21:39.198 --> 00:21:40.999 line:-1 position:50%
to feel comfortable
using your app,


468
00:21:40,999 --> 00:21:43,002 line:-1
because it's likely
they've used other apps


469
00:21:43,002 --> 00:21:46,272 line:-1
built using the same
UI framework.


470
00:21:46,272 --> 00:21:48,774 line:-1
And finally, allow people
to take their time


471
00:21:48,774 --> 00:21:49,909 line:-1
immersing themselves


472
00:21:49,909 --> 00:21:52,478 line:-1
and experiencing all
that you have to offer.


473
00:21:52,478 --> 00:21:56,615 line:-1
There is no need to rush people
through an experience.


474
00:21:56,615 --> 00:21:59,885 line:-1
Immersive content can promote
focus and attention,


475
00:21:59,885 --> 00:22:03,189 line:-1
which is a fantastic way to
create a comfortable environment


476
00:22:03.189 --> 00:22:06.492 line:-1 position:50%
for someone with
sensory processing disorders.


477
00:22:06.492 --> 00:22:08.961 line:-1 position:50%
Remember that not everyone
processes information


478
00:22:08,961 --> 00:22:11,764 line:-1
at the same speed,
so some people may prefer


479
00:22:11,764 --> 00:22:16,035 line:-1
or need a little extra time
to work through an experience.


480
00:22:16,035 --> 00:22:18,571 line:-1
Finally, I want to share
some of the best ways


481
00:22:18,571 --> 00:22:20,573 line:-1
to provide access
and accommodation


482
00:22:20,573 --> 00:22:23,409 line:-1
to people that are deaf
or hard of hearing.


483
00:22:23,409 --> 00:22:25,744 line:-1
It's common to use
audio and speech


484
00:22:25,744 --> 00:22:29,281 line:-1
as a way to immerse people
in a spatial experience.


485
00:22:29,281 --> 00:22:32,918 line:-1
For people with hearing loss or
auditory processing disorders,


486
00:22:32,918 --> 00:22:35,120 line:-1
one of the most impactful things
you can do


487
00:22:35.120 --> 00:22:39.792 line:-1 position:50%
is provide quality captions
so they can access your content.


488
00:22:39,792 --> 00:22:42,661 line:-1
A comfortable reading experience
is easy to create


489
00:22:42.661 --> 00:22:44.530 line:-1 position:50%
by using pop-on captions --


490
00:22:44,530 --> 00:22:47,900 line:-1
which render the phrase all at
once and are easy to read --


491
00:22:47,900 --> 00:22:50,369 line:-1
instead of using
roll-up captions,


492
00:22:50.369 --> 00:22:53.472 line:-1 position:50%
which appear word-by-word
and can cause reading fatigue


493
00:22:53,472 --> 00:22:56,976 line:-1
and nausea when reading
for a long duration.


494
00:22:56,976 --> 00:22:58,444 line:-1
Did you know that people
can customize


495
00:22:58,444 --> 00:23:01,947 line:-1
the visual appearance
of captions on their device?


496
00:23:01.947 --> 00:23:04.049 line:-1 position:50%
Captions can be
widely customized,


497
00:23:04,049 --> 00:23:07,653 line:-1
modifying things
like text size, font, and color,


498
00:23:07,653 --> 00:23:10,889 line:-1
as well as stroke outlines
or backgrounds.


499
00:23:10.889 --> 00:23:13.592 line:-1 position:50%
These options allow people
to customize their captions


500
00:23:13,592 --> 00:23:16,795 line:-1
so they're easy to see and read.


501
00:23:16.795 --> 00:23:19.865 line:-1 position:50%
AVKit and AVFoundation
provide built-in support


502
00:23:19,865 --> 00:23:22,334 line:-1
for supplying captions
in your app.


503
00:23:22.334 --> 00:23:24.069 line:-1 position:50%
These frameworks
automatically handle


504
00:23:24,069 --> 00:23:27,373 line:-1
the caption appearance
and visual style.


505
00:23:27.373 --> 00:23:29.208 line:-1 position:50%
If you are not
using AVFoundation


506
00:23:29.208 --> 00:23:31.677 line:-1 position:50%
because you're implementing
your own captions system,


507
00:23:31,677 --> 00:23:35,247 line:-1
there are two APIs
that you should know about.


508
00:23:35.247 --> 00:23:38.917 line:-1 position:50%
First, the
isClosedCaptioningEnabled API.


509
00:23:38,917 --> 00:23:41,287 line:-1
Use this to check whether
someone already has


510
00:23:41,287 --> 00:23:45,624 line:-1
Closed Captions turned on
in Accessibility settings.


511
00:23:45.624 --> 00:23:48.260 line:-1 position:50%
If you have separate
caption settings in your app,


512
00:23:48.260 --> 00:23:49.495 line:-1 position:50%
you should use this API


513
00:23:49,495 --> 00:23:52,865 line:-1
to inform the default state
of captioning.


514
00:23:52,865 --> 00:23:54,933 line:-1
This way, people who rely
on captions


515
00:23:54,933 --> 00:23:57,770 line:-1
get access to them right away.


516
00:23:57,770 --> 00:24:01,373 line:-1
The second can be found in the
Media Accessibility framework,


517
00:24:01.373 --> 00:24:05.778 line:-1 position:50%
which has APIs to access each
style attribute individually.


518
00:24:05,778 --> 00:24:08,914 line:-1
You should check these styles
and apply them to your captions


519
00:24:08.914 --> 00:24:11.116 line:-1 position:50%
to keep a consistent
reading experience


520
00:24:11,116 --> 00:24:13,419 line:-1
across the entire system.


521
00:24:13,419 --> 00:24:15,988 line:-1
No matter which way you choose
to provide captions,


522
00:24:15,988 --> 00:24:18,857 line:-1
you should have a high standard
for their quality.


523
00:24:18.857 --> 00:24:21.427 line:-1 position:50%
Captions should represent
all audio content,


524
00:24:21,427 --> 00:24:24,596 line:-1
including music
and sound effects.


525
00:24:24,596 --> 00:24:27,166 line:-1
It's also helpful to indicate
where in space


526
00:24:27,166 --> 00:24:29,835 line:-1
the audio is coming from
if directionality


527
00:24:29,835 --> 00:24:33,038 line:-1
is important to your experience,
basically telling the user


528
00:24:33.038 --> 00:24:37.609 line:-1 position:50%
to "keep in mind, the nearest
audio source may be behind you."


529
00:24:37,609 --> 00:24:40,079 line:-1
An impressive
accessibility experience


530
00:24:40.079 --> 00:24:44.149 line:-1 position:50%
comes from considering
all people and their needs.


531
00:24:44,149 --> 00:24:46,552 line:-1
Provide rich RealityKit
experiences


532
00:24:46,552 --> 00:24:50,255 line:-1
by setting accessibility
properties on your entities.


533
00:24:50,255 --> 00:24:52,991 line:-1
This is the foundation
for your app's accessibility


534
00:24:52.991 --> 00:24:55.894 line:-1 position:50%
for technologies like VoiceOver,
Voice Control,


535
00:24:55.894 --> 00:24:58.097 line:-1 position:50%
and Switch Control.


536
00:24:58,097 --> 00:25:01,533 line:-1
Be flexible and provide options
for physical interaction


537
00:25:01,533 --> 00:25:04,236 line:-1
like we saw in Happy Beam
to include all players


538
00:25:04.236 --> 00:25:06.405 line:-1 position:50%
and their play styles.


539
00:25:06,405 --> 00:25:09,341 line:-1
Strive to remove ambiguity
and provide clarity


540
00:25:09,341 --> 00:25:12,544 line:-1
and focus for people
with cognitive disabilities,


541
00:25:12,544 --> 00:25:15,080 line:-1
and spend time and care
on captioned content


542
00:25:15.080 --> 00:25:18.050 line:-1 position:50%
for audio experiences
so that people that are deaf


543
00:25:18.050 --> 00:25:21.053 line:-1 position:50%
or hard of hearing
can enjoy your creation.


544
00:25:21.053 --> 00:25:23.255 line:-1 position:50%
If you're not sure
where to start,


545
00:25:23.255 --> 00:25:25.557 line:-1 position:50%
turn on some of these
accessibility features


546
00:25:25,557 --> 00:25:27,359 line:-1
and open up your app!


547
00:25:27.359 --> 00:25:29.061 line:-1 position:50%
Trying out these features
for yourself


548
00:25:29,061 --> 00:25:31,697 line:-1
is a great way to dive right in.


549
00:25:31,697 --> 00:25:34,400 line:-1
This platform is designed
for everyone,


550
00:25:34,400 --> 00:25:35,868 line:-1
and with all
of the considerations


551
00:25:35.868 --> 00:25:38.270 line:-1 position:50%
Dan and I have shared today,
you are equipped


552
00:25:38,270 --> 00:25:42,174 line:-1
to create accessible and
inclusive spatial experiences.


553
00:25:42,174 --> 00:25:43,776 line:-1
Thank you!


554
00:25:43,776 --> 00:25:46,779 position:90% size:2% line:0
♪

