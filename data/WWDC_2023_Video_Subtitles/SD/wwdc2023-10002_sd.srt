2
00:00:00,334 --> 00:00:06,340 line:-1
♪ ♪


3
00:00:10.844 --> 00:00:13.113 line:-2 align:center
Keith Holleman:
Hi, my name is Keith Holleman,


4
00:00:13.146 --> 00:00:16.850 line:-2 align:center
and I’m part of the Internet Technologies
team here at Apple.


5
00:00:16.884 --> 00:00:19.853 line:-2 align:center
Today I’ll be talking about
how you can use network relays


6
00:00:19,887 --> 00:00:23,624 line:-2
to enhance the privacy
and security of your apps.


7
00:00:23.657 --> 00:00:28.762 line:-2 align:center
We will start this session by exploring
the technology used for network relays.


8
00:00:28,795 --> 00:00:32,299 line:-2
Relays are used across
many privacy features at Apple.


9
00:00:32,332 --> 00:00:36,603 line:-2
We love how this technology is both
effective and easy to use,


10
00:00:36,637 --> 00:00:41,108 line:-2
and now you will have two ways to
use relays in your apps as well.


11
00:00:41,141 --> 00:00:43,977 line:-2
First, you can configure relays within an
app


12
00:00:44,011 --> 00:00:47,814 line:-2
to protect the network traffic
for your app.


13
00:00:47.848 --> 00:00:50.884 line:-2 align:center
Second, you can extend relays to
the device


14
00:00:50,918 --> 00:00:53,887 line:-2
for accessing private resources
in an enterprise,


15
00:00:53.921 --> 00:00:57.057 line:-1 align:center
as an alternative to a VPN.


16
00:00:57,090 --> 00:00:59,393 line:-1
Let’s dive in and get started.


17
00:00:59,426 --> 00:01:02,629 line:-1
Relays form the basis of great features,


18
00:01:02,663 --> 00:01:06,800 line:-2
such as iCloud Private Relay,
Mail privacy protection,


19
00:01:06,834 --> 00:01:10,304 line:-2
and hiding IP addresses from trackers
in Safari.


20
00:01:10.337 --> 00:01:14.208 line:-2 align:center
Your app may also handle
sensitive information about users


21
00:01:14,241 --> 00:01:17,244 line:-2
that they want to keep private,
and you may want to ensure that


22
00:01:17,277 --> 00:01:22,549 line:-2
your own servers can’t associate
that information with client IP addresses.


23
00:01:22,583 --> 00:01:25,819 line:-2
Now, your app can use relays
that you select


24
00:01:25.853 --> 00:01:29.656 line:-2 align:center
to provide strong privacy protections
for all of your users.


25
00:01:31.225 --> 00:01:36.730 line:-2 align:center
A relay is a special type of proxy that is
optimized for performance,


26
00:01:36,763 --> 00:01:39,900 line:-2
uses the latest transport and
security protocols,


27
00:01:39.933 --> 00:01:42.936 line:-2 align:center
and is natively built into
the modern network stack


28
00:01:42,970 --> 00:01:45,138 line:-1
available on Apple platforms.


29
00:01:45,172 --> 00:01:48,775 line:0
There are two standard protocols
defined by the IETF


30
00:01:48,809 --> 00:01:54,581 align:center
that these relays use:
MASQUE and Oblivious HTTP.


31
00:01:54.615 --> 00:01:59.052 line:-2 align:center
MASQUE relays are a great way
to enhance the privacy of your app


32
00:01:59,086 --> 00:02:01,555 line:-1
or access private resources.


33
00:02:01,588 --> 00:02:06,193 line:-2
You can send any TCP or UDP connection
through a relay


34
00:02:06.226 --> 00:02:09.396 line:-2 align:center
without needing to modify
the back-end server.


35
00:02:09,429 --> 00:02:14,001 line:-2
You can chain relay servers together
so that no single entity can combine


36
00:02:14.034 --> 00:02:19.573 line:-2 align:center
an IP address and browsing activity
into a detailed profile of a user.


37
00:02:19.606 --> 00:02:24.745 line:-2 align:center
This is the cornerstone technology
behind iCloud Private Relay.


38
00:02:24,778 --> 00:02:28,982 line:-2
Relays are also a great way to access
enterprise resources.


39
00:02:29.016 --> 00:02:33.287 line:-2 align:center
A relay provides a better user experience,
is more performant,


40
00:02:33.320 --> 00:02:36.790 line:-1 align:center
and is easier to manage than a VPN.


41
00:02:36,823 --> 00:02:42,262 line:-2
MASQUE relays use TLS 1.3
to secure all traffic to the proxy,


42
00:02:42.296 --> 00:02:44.965 line:-1 align:center
unlike legacy proxy protocols.


43
00:02:44,998 --> 00:02:48,635 line:-2
MASQUE uses QUIC,
the latest transport protocol,


44
00:02:48,669 --> 00:02:53,040 line:-2
and HTTP/3 to efficiently proxy
and multiplex


45
00:02:53.073 --> 00:02:55.843 line:-1 align:center
many connections over a single tunnel.


46
00:02:55,876 --> 00:02:58,478 line:-2
And for cases where QUIC is blocked
by a network,


47
00:02:58,512 --> 00:03:01,715 line:-1
they can fall back to using HTTP/2.


48
00:03:02,549 --> 00:03:06,753 line:-2
If your app sends HTTP requests that
you want to make sure are private


49
00:03:06,787 --> 00:03:08,889 line:-1
and not linked to any other requests,


50
00:03:08,922 --> 00:03:11,925 line:-1
such as anonymous metrics reports,


51
00:03:11.959 --> 00:03:14.862 line:-1 align:center
database lookups, or DNS queries,


52
00:03:14,895 --> 00:03:18,298 line:-1
you can also use Oblivious HTTP.


53
00:03:18.332 --> 00:03:22.569 line:-2 align:center
With Oblivious HTTP, you can get
great performance and privacy


54
00:03:22,603 --> 00:03:25,105 line:-1
with only a single relay hop.


55
00:03:25,138 --> 00:03:26,974 line:-1
Unlike MASQUE relays,


56
00:03:27.007 --> 00:03:30.978 line:-2 align:center
Oblivious HTTP doesn't work with
arbitrary servers;


57
00:03:31,011 --> 00:03:34,615 line:-2
your server needs to
explicitly support it.


58
00:03:34,648 --> 00:03:37,284 align:center
To learn more about Oblivious HTTP,


59
00:03:37,317 --> 00:03:40,020 line:0
watch the session "What’s new in Privacy."


60
00:03:40,954 --> 00:03:46,226 line:-2
You can use both of these relay types to
proxy connections made by your app.


61
00:03:46,260 --> 00:03:50,130 line:-2
This allows you to use specific
relay servers that you choose


62
00:03:50,163 --> 00:03:53,800 line:-1
in order to increase your app’s privacy.


63
00:03:53.834 --> 00:03:58.038 line:-2 align:center
The new ProxyConfiguration class
allows you to define your relays


64
00:03:58,071 --> 00:04:03,177 line:-2
in Network framework,
URLSession, and WebKit.


65
00:04:03,210 --> 00:04:07,147 line:-2
All three APIs use this common class
in a similar manner


66
00:04:07,181 --> 00:04:12,519 line:-2
and let you define relays for your entire
app or just specific connections.


67
00:04:12.553 --> 00:04:15.289 line:-1 align:center
Within the ProxyConfiguration object,


68
00:04:15,322 --> 00:04:19,493 line:-2
you can define proxies based on
five different protocols.


69
00:04:19,526 --> 00:04:22,763 line:-2
This is where you can specify
the new relay types


70
00:04:22.796 --> 00:04:26.333 line:-1 align:center
for both MASQUE and Oblivious HTTP.


71
00:04:26.366 --> 00:04:31.438 line:-2 align:center
The same object can also be used to
configure legacy proxy types.


72
00:04:31,471 --> 00:04:34,508 line:-2
If you were configuring proxies on
URLSession


73
00:04:34.541 --> 00:04:36.777 line:-1 align:center
or WebKit with dictionaries before,


74
00:04:36,810 --> 00:04:41,114 line:-2
now is a great time to switch to using
this new object.


75
00:04:41,148 --> 00:04:45,752 line:-2
For legacy proxy types,
you can configure HTTP CONNECT,


76
00:04:45.786 --> 00:04:51.458 line:-2 align:center
with newly added support for
TLS to the proxy, as well as SOCKSv5.


77
00:04:51,491 --> 00:04:53,894 line:-2
Here is how you define
a ProxyConfiguration


78
00:04:53,927 --> 00:04:58,966 line:-2
that will be used to connect to
a MASQUE relay over HTTP/3.


79
00:04:58.999 --> 00:05:05.005 line:-2 align:center
First, use an NWEndpoint to specify
the server name or URL,


80
00:05:05,038 --> 00:05:08,141 line:-1
and use it to define a relay hop.


81
00:05:08.175 --> 00:05:11.678 line:-2 align:center
For these relay hops,
you can specify support for


82
00:05:11,712 --> 00:05:16,116 line:-1
HTTP/3, HTTP/2, or both.


83
00:05:16,149 --> 00:05:19,152 line:-1
The HTTP/2 server will be used as a backup


84
00:05:19,186 --> 00:05:23,056 line:-2
in case access to HTTP/3
using the QUIC protocol


85
00:05:23.090 --> 00:05:25.759 line:-1 align:center
is blocked by a network.


86
00:05:25.792 --> 00:05:29.563 line:-2 align:center
Then, create a proxy configuration
by passing your relay


87
00:05:29.596 --> 00:05:32.266 line:-1 align:center
to a "relayHops" array parameter.


88
00:05:32,299 --> 00:05:35,302 line:-2
If you want to define
a multi-hop relay configuration,


89
00:05:35,335 --> 00:05:38,472 line:-1
you can pass two relays here.


90
00:05:38,505 --> 00:05:40,741 align:center
To use your ProxyConfiguration


91
00:05:40,774 --> 00:05:44,178 align:center
with an NWConnection from
Network framework,


92
00:05:44,211 --> 00:05:48,482 line:0
create a PrivacyContext or use
the default context


93
00:05:48,515 --> 00:05:52,886 line:0
and add the proxy configuration to
that context.


94
00:05:52,920 --> 00:05:56,290 align:center
Set the context on your NWParameters,


95
00:05:56,323 --> 00:06:00,794 line:0
and then pass these parameters
when you create and start the connection.


96
00:06:00,827 --> 00:06:05,299 line:0
Now this connection is sending
all of its traffic through the proxy.


97
00:06:07,301 --> 00:06:11,171 line:0
You can also use this same proxy
configuration we already defined


98
00:06:11,205 --> 00:06:13,507 align:center
directly in URLSession.


99
00:06:13,540 --> 00:06:18,111 line:0
To do this, add your configuration
to the proxyConfigurations array


100
00:06:18,145 --> 00:06:21,215 line:0
on your URLSessionConfiguration.


101
00:06:21,248 --> 00:06:25,352 line:0
Then, run tasks in your URLSession
as you would normally,


102
00:06:25,385 --> 00:06:30,090 align:center
and they will now also use the proxy.


103
00:06:30,123 --> 00:06:33,594 line:0
The same proxy configuration object can
also be used


104
00:06:33,627 --> 00:06:37,030 align:center
to proxy connections
made in a WebKit view!


105
00:06:37,064 --> 00:06:40,901 align:center
First, initialize a web view configuration,


106
00:06:40,934 --> 00:06:42,569 align:center
add a data store,


107
00:06:42,603 --> 00:06:46,573 line:0
and add your proxy configuration
to the data store.


108
00:06:46,607 --> 00:06:50,777 align:center
Then initialize a web view
with your configuration.


109
00:06:50,811 --> 00:06:53,580 line:0
Once that’s done, you can load
the requested URL


110
00:06:53,614 --> 00:06:56,416 line:0
and use the WebKit view
as you normally would.


111
00:06:56,450 --> 00:07:01,522 line:0
Now, this Webkit view is also sending
its traffic through the relay.


112
00:07:02,523 --> 00:07:05,459 line:-1
Besides adding relays to your own apps,


113
00:07:05,492 --> 00:07:09,496 line:-2
in iOS 17, you can configure them
for the whole device.


114
00:07:09,530 --> 00:07:12,432 line:-2
In addition to letting you build
privacy features,


115
00:07:12,466 --> 00:07:15,302 line:-2
this is a great way to use relays to
provide access


116
00:07:15,335 --> 00:07:17,471 line:-1
to private enterprise network resources.


117
00:07:18,939 --> 00:07:23,710 line:-2
You may be using a VPN to provide access
to your enterprise resources.


118
00:07:23.744 --> 00:07:28.382 line:-2 align:center
Relays are an alternative to VPNs that can
provide a better user experience


119
00:07:28,415 --> 00:07:30,817 line:-1
and are easier to manage.


120
00:07:30,851 --> 00:07:34,555 line:-2
A network relay does not require
complex session negotiation


121
00:07:34,588 --> 00:07:39,960 line:-2
and often requires fewer round trips
before actual user data is transferred.


122
00:07:39,993 --> 00:07:43,597 line:-2
This ensures that a user’s first load of
a private resource is


123
00:07:43,630 --> 00:07:47,034 line:-1
the most responsive interaction possible.


124
00:07:47,067 --> 00:07:51,572 line:-2
A relay also avoids the usage of tunnels,
virtual interfaces,


125
00:07:51,605 --> 00:07:55,976 line:-2
and additional IP addresses
that are associated with VPNs.


126
00:07:56.009 --> 00:07:59.646 line:-2 align:center
Since you can configure multiple relays
simultaneously,


127
00:07:59.680 --> 00:08:05.152 line:-2 align:center
it is easier to access different private
domains located in different networks.


128
00:08:05,185 --> 00:08:08,355 line:-2
Enterprise companies that
want to use relay servers


129
00:08:08.388 --> 00:08:10.490 line:-1 align:center
as an alternative to VPNs


130
00:08:10.524 --> 00:08:14.161 line:-2 align:center
now have options to use them
with their own infrastructure.


131
00:08:14,194 --> 00:08:16,997 line:-2
Cisco is providing
an enterprise relay service


132
00:08:17.030 --> 00:08:20.200 line:-1 align:center
as part of the Cisco Secure Edge offering.


133
00:08:20.234 --> 00:08:23.070 line:-2 align:center
We are excited to see enterprises
adopt this option


134
00:08:23,103 --> 00:08:26,173 line:-2
for providing remote access
for their users.


135
00:08:27,508 --> 00:08:32,579 line:-2
There are two ways to install
a MASQUE relay configuration on a device.


136
00:08:32.613 --> 00:08:35.616 line:-2 align:center
Enterprise organizations can push
a configuration


137
00:08:35,649 --> 00:08:38,719 line:-1
via Mobile Device Management, or MDM,


138
00:08:38.752 --> 00:08:42.289 line:-2 align:center
to define relays using
a new relay payload type.


139
00:08:42.322 --> 00:08:48.428 line:-2 align:center
These payloads can apply to managed apps,
domains, or the entire device.


140
00:08:48,462 --> 00:08:54,902 line:-2
Second, you can write an app that uses the
NERelayManager API to define your relay.


141
00:08:54,935 --> 00:09:00,474 line:-2
These configurations can apply to
specific domains or the entire device.


142
00:09:00,507 --> 00:09:04,244 line:-1
Both of these are available in macOS, iOS,


143
00:09:04.278 --> 00:09:07.181 line:-1 align:center
iPadOS, and tvOS.


144
00:09:07,214 --> 00:09:10,951 line:-2
And now that Network Extension support is
added to tvOS,


145
00:09:10.984 --> 00:09:14.655 line:-1 align:center
VPNs are also newly supported in tvOS 17.


146
00:09:15,656 --> 00:09:19,793 align:center
Here's how you configure a relay
using a configuration profile.


147
00:09:19,826 --> 00:09:23,430 align:center
Just like in the ProxyConfiguration API
for your apps,


148
00:09:23,463 --> 00:09:26,066 line:0
you define the relay URL.


149
00:09:26,099 --> 00:09:27,968 line:0
Just like in VPN profiles,


150
00:09:28,001 --> 00:09:31,738 line:0
you can use a client certificate for
authentication to your enterprise servers


151
00:09:31,772 --> 00:09:36,176 line:0
by referring to a certificate payload
in the same profile.


152
00:09:36,210 --> 00:09:38,612 align:center
You can have the relay apply to
specific domains


153
00:09:38,645 --> 00:09:41,448 line:0
by adding them in the MatchDomains
portion of the payload.


154
00:09:42,282 --> 00:09:46,987 line:-2
Next, we will see how an app can use
the NERelayManager API


155
00:09:47,020 --> 00:09:50,324 line:-2
to add relays to a device
programmatically.


156
00:09:50,357 --> 00:09:55,162 line:-2
To define a relay, you will need to
initialize a NERelay object


157
00:09:55,195 --> 00:09:59,066 line:-2
and then configure
the URLs of your relays.


158
00:09:59.099 --> 00:10:05.672 line:-2 align:center
Here, I am using the same relay
for both HTTP/2 and HTTP/3.


159
00:10:05,706 --> 00:10:09,076 line:0
If your relay requires
additional HTTP headers,


160
00:10:09,109 --> 00:10:12,179 align:center
add them to the NERelay object.


161
00:10:12,212 --> 00:10:15,716 align:center
You will also need to access to
the shared NERelayManager object,


162
00:10:15,749 --> 00:10:20,587 line:0
as this is where you will store
the NERelay object you just created.


163
00:10:20,621 --> 00:10:23,757 line:0
If you want your relay to apply to
only specific domains


164
00:10:23,790 --> 00:10:25,359 align:center
instead of the whole device,


165
00:10:25,392 --> 00:10:28,161 align:center
add those domains to
the matchDomains array.


166
00:10:28,195 --> 00:10:31,164 align:center
The final step is to make sure
your relay is enabled,


167
00:10:31,198 --> 00:10:36,136 line:0
and install your NERelayManager object
into the system preferences.


168
00:10:36,170 --> 00:10:38,338 line:0
Let’s look at relays in action.


169
00:10:38,372 --> 00:10:42,943 line:-2
I really love mountain biking
and I even opened my very own bike shop.


170
00:10:42,976 --> 00:10:45,312 line:-1
My shop has an online store


171
00:10:45.345 --> 00:10:49.149 line:-2 align:center
and an internal website
where I can track all of my orders.


172
00:10:49.183 --> 00:10:53.887 line:-2 align:center
That website is on my internal network
and only available to employees.


173
00:10:53,921 --> 00:10:57,691 line:-2
If I open Safari and attempt to look at
my open orders,


174
00:10:57.724 --> 00:11:01.395 line:-2 align:center
I can’t see them because
I’m not on my internal network.


175
00:11:01.428 --> 00:11:03.697 line:-1 align:center
Once I install a relay configuration,


176
00:11:03.730 --> 00:11:07.401 line:-2 align:center
I’ll be able to access my internal network
from anywhere.


177
00:11:07.434 --> 00:11:11.171 line:-2 align:center
If I open my sample relay app with
the code we just walked through,


178
00:11:11.205 --> 00:11:15.042 line:-2 align:center
I can configure the entire device
to use my shop’s relay


179
00:11:15,075 --> 00:11:17,845 line:-1
while accessing my internal domain.


180
00:11:17.878 --> 00:11:22.516 line:-2 align:center
This configuration will now
also be visible in Settings,


181
00:11:22.549 --> 00:11:28.689 line:-2 align:center
and we can see that it will be using the
relay when I access internal.example.com.


182
00:11:28,722 --> 00:11:33,794 line:-2
Now, when I return back to Safari and
again attempt to look at my open orders,


183
00:11:33,827 --> 00:11:37,464 line:-2
now I can see them and just how many
orders I need to get shipped out.


184
00:11:37,497 --> 00:11:41,735 line:-2
It’s that simple, fast, and responsive
on the first load.


185
00:11:42.369 --> 00:11:45.138 line:-1 align:center
Relays are modern, standards-based proxies


186
00:11:45,172 --> 00:11:48,075 line:-2
that can improve the security and privacy
of your app


187
00:11:48,108 --> 00:11:50,811 line:-1
without compromising performance.


188
00:11:50.844 --> 00:11:55.983 line:-2 align:center
Directly adopt MASQUE relays
and Oblivious HTTP relays in your app


189
00:11:56,016 --> 00:11:58,652 line:-1
to enhance privacy for your users.


190
00:11:58,685 --> 00:12:02,856 line:-2
And for enterprises,
start replacing the use of VPNs


191
00:12:02.890 --> 00:12:07.561 line:-2 align:center
with relays that are easier to manage and
provide a more seamless user experience.


192
00:12:07,594 --> 00:12:09,496 line:-1
Thank you taking the time to watch today.


193
00:12:09,530 --> 00:12:12,099 line:-1
I can’t wait to see how you use relays.

