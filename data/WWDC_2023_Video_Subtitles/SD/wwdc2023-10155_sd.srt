2
00:00:00.334 --> 00:00:06.340 line:-1 align:center
♪ ♪


3
00:00:10.010 --> 00:00:12.813 line:-1 align:center
Marina: Hello and welcome to WWDC.


4
00:00:12,846 --> 00:00:16,683 line:-2
My name is Marina, and later,
I'll be joined by my colleague Matt.


5
00:00:16,717 --> 00:00:18,719 line:-2
We are
from the localization team at Apple,


6
00:00:18.752 --> 00:00:22.656 line:-2 align:center
and today, we're excited
to show you String Catalogs.


7
00:00:22,689 --> 00:00:26,627 line:-2
Here at Apple, we strongly believe
in accessibility and inclusivity.


8
00:00:26.660 --> 00:00:30.063 line:-2 align:center
Localizing your app is one way
to ensure your content reaches


9
00:00:30.097 --> 00:00:32.266 line:-1 align:center
more people around the world.


10
00:00:32,299 --> 00:00:35,269 line:-2
In fact,
today we ship our operating systems


11
00:00:35.302 --> 00:00:39.506 line:-2 align:center
in more than 40 languages
and are continuously expanding this number


12
00:00:39,540 --> 00:00:43,911 line:-2
so that everyone can use our products
in their native language.


13
00:00:43.944 --> 00:00:47.481 line:-2 align:center
Our team is committed
to providing the tools in Xcode


14
00:00:47.514 --> 00:00:51.685 line:-2 align:center
to make localization as easy as possible,
and today we are excited


15
00:00:51.718 --> 00:00:53.954 line:-1 align:center
to present new improvements and workflows


16
00:00:53.987 --> 00:00:57.758 line:-2 align:center
for managing the localized content
in your project.


17
00:00:57,791 --> 00:01:00,827 line:-2
Previously,
if you wanted to localize your app,


18
00:01:00.861 --> 00:01:04.798 line:-2 align:center
you had to maintain strings
and stringsdict files.


19
00:01:04,831 --> 00:01:08,602 line:-2
This required you to manually keep
all strings in sync with your code,


20
00:01:08.635 --> 00:01:11.705 line:-2 align:center
and oftentimes,
you might miss localizing content.


21
00:01:11.738 --> 00:01:15.209 line:-2 align:center
This can result
in unlocalized strings for your users.


22
00:01:15.242 --> 00:01:18.345 line:-2 align:center
Our projects have relied
on this process for many years,


23
00:01:18.378 --> 00:01:22.983 line:-2 align:center
but in Xcode 15,
we're introducing String Catalogs.


24
00:01:23.016 --> 00:01:25.786 line:-1 align:center
Over time, this new format will supersede


25
00:01:25,819 --> 00:01:29,122 line:-2
both strings
and stringsdict files in Xcode.


26
00:01:29,156 --> 00:01:33,594 line:-2
String Catalogs make it easy
to manage all of your strings in one place


27
00:01:33.627 --> 00:01:38.799 line:-2 align:center
and be confident that your content
is fully localized before shipping.


28
00:01:38,832 --> 00:01:41,235 line:-1
Let's see how it works.


29
00:01:41,268 --> 00:01:43,737 line:-1
Here in code, I'm using SwiftUI controls


30
00:01:43,770 --> 00:01:46,907 line:-1
to build my views and populate content.


31
00:01:46.940 --> 00:01:50.077 line:-1 align:center
And this is a String Catalog.


32
00:01:50.110 --> 00:01:52.813 line:-2 align:center
All the strings
we just saw in my Swift code


33
00:01:52.846 --> 00:01:55.415 line:-2 align:center
have been
automatically extracted by Xcode.


34
00:01:55,449 --> 00:01:57,985 line:-1
I didn't have to add them myself.


35
00:01:58.018 --> 00:02:01.755 line:-2 align:center
I want to ensure that my friends in Brazil
will be able to use this app,


36
00:02:01,788 --> 00:02:04,458 line:-1
so I've translated it into Portuguese.


37
00:02:05.459 --> 00:02:08.195 line:-2 align:center
I have this view
in which I display the recent birds


38
00:02:08.228 --> 00:02:10.364 line:-1 align:center
that have visited this backyard.


39
00:02:10.397 --> 00:02:14.168 line:-2 align:center
Here, I want to make sure
we'll show the actual number of birds


40
00:02:14.201 --> 00:02:16.303 line:-1 align:center
that visited the backyard,


41
00:02:16,336 --> 00:02:20,407 line:-2
so let me add a variable
to represent this number.


42
00:02:20.440 --> 00:02:23.310 line:-1 align:center
And here it is in the preview.


43
00:02:23,343 --> 00:02:25,445 line:-1
Now we can see the number of birds.


44
00:02:25.479 --> 00:02:28.549 line:-2 align:center
I'll build the project
and go back to the catalog.


45
00:02:34.288 --> 00:02:37.391 line:-2 align:center
That was easy.
Here's the new string.


46
00:02:37.424 --> 00:02:41.061 line:-2 align:center
And we can see that
my translation progress has gone down.


47
00:02:41,094 --> 00:02:44,698 line:-2
String Catalogs also come
with powerful editing capabilities


48
00:02:44.731 --> 00:02:47.801 line:-2 align:center
that allow complex operations
to be done easily.


49
00:02:47,835 --> 00:02:49,937 line:-1
For example,


50
00:02:49.970 --> 00:02:52.239 line:-1 align:center
this string has the word tap,


51
00:02:52.272 --> 00:02:55.809 line:-2 align:center
but this a multi-platform app,
so for Mac devices,


52
00:02:55.843 --> 00:02:58.011 line:-2 align:center
I want to make sure
we use the correct word.


53
00:02:58.045 --> 00:03:02.216 line:-2 align:center
So let me go back
to my English strings,


54
00:03:02.249 --> 00:03:05.686 line:-1 align:center
find the string "tap to learn more."


55
00:03:05,719 --> 00:03:07,321 align:center
Here it is.


56
00:03:07,354 --> 00:03:09,623 line:0
I'll right click on it.


57
00:03:09,656 --> 00:03:14,928 line:0
Choose vary by device.
Choose Mac.


58
00:03:14,962 --> 00:03:17,497 line:0
And adapt the text correctly.


59
00:03:25,239 --> 00:03:26,540 line:0
And that's it.


60
00:03:26,573 --> 00:03:29,443 line:-1
Now if I go back to my view


61
00:03:29,476 --> 00:03:33,280 line:-1
and change my run destination to Mac...


62
00:03:35,048 --> 00:03:39,219 line:-1
we can use the previews to check my work.


63
00:03:39.253 --> 00:03:40.854 line:-1 align:center
That was easy.


64
00:03:41,855 --> 00:03:44,791 line:-2
There's so much
you can do with String Catalogs.


65
00:03:44,825 --> 00:03:48,328 line:-2
Let's take a deeper look
at how everything works.


66
00:03:48,362 --> 00:03:51,965 line:-2
We'll start with the places
strings can be extracted from,


67
00:03:51.999 --> 00:03:56.703 line:-2 align:center
explore Xcode's native editor
for interacting with String Catalogs


68
00:03:56.737 --> 00:03:59.940 line:-2 align:center
and review
the localization export process.


69
00:03:59.973 --> 00:04:03.810 line:-2 align:center
Then we'll take a look
at how String Catalogs get built


70
00:04:03.844 --> 00:04:07.247 line:-2 align:center
and how you can adopt them
in your existing projects.


71
00:04:07.281 --> 00:04:11.451 line:-2 align:center
To start, I'll hand it over to Matt
to discuss localizable strings


72
00:04:11.485 --> 00:04:13.320 line:-1 align:center
and where they come from.


73
00:04:13,353 --> 00:04:14,888 line:-1
Matt: Thanks Marina!


74
00:04:14,922 --> 00:04:19,092 line:-2
A localizable string is simply
some string of text that will be presented


75
00:04:19.126 --> 00:04:23.096 line:-2 align:center
to the user at runtime,
and therefore needs to be translated


76
00:04:23,130 --> 00:04:26,667 line:-2
into all of the languages
your app supports.


77
00:04:26.700 --> 00:04:29.870 line:-1 align:center
Localizable strings have four components:


78
00:04:29,903 --> 00:04:33,473 line:0
The key is a unique identifier
for the string,


79
00:04:33,507 --> 00:04:36,109 align:center
often equivalent to the string itself.


80
00:04:36,143 --> 00:04:38,345 align:center
This is what will be used at runtime


81
00:04:38,378 --> 00:04:41,915 line:0
to look up the appropriate value
to display.


82
00:04:41,949 --> 00:04:46,286 align:center
The default value can be
specified explicitly if desired,


83
00:04:46,320 --> 00:04:51,291 align:center
but will otherwise fall back
to the key in the default localization.


84
00:04:51,325 --> 00:04:57,097 line:-2
Xcode 14.3 introduced the ability
to change the default localization


85
00:04:57.130 --> 00:05:00.000 line:-1 align:center
of your project using the Project Editor.


86
00:05:00,033 --> 00:05:04,371 line:-2
This is useful if the strings
in your source code are not in English.


87
00:05:05,172 --> 00:05:10,010 align:center
Next, string comments provide a way
to give the translator context


88
00:05:10,043 --> 00:05:14,581 line:0
about where and how the string
is being used in the user interface.


89
00:05:14,615 --> 00:05:17,584 align:center
We recommend adding comments
to strings in order


90
00:05:17,618 --> 00:05:21,622 align:center
to help resolve ambiguities
for the translator.


91
00:05:21,655 --> 00:05:26,193 align:center
Finally, each localizable string
belongs to a string table,


92
00:05:26,226 --> 00:05:31,398 line:0
which corresponds to one or more files
in which translations will be stored.


93
00:05:31,431 --> 00:05:36,203 align:center
By default, strings from code
are placed in the "Localizable" table,


94
00:05:36,236 --> 00:05:41,141 line:0
but that can be customized if you'd like
to organize your strings some other way.


95
00:05:41,175 --> 00:05:44,211 line:0
Let's take a closer look at String Tables.


96
00:05:44.778 --> 00:05:48.315 line:-2 align:center
For an existing application
using .strings files,


97
00:05:48,348 --> 00:05:54,488 line:-2
a single string table actually contains
.strings and possibly .stringsdict files


98
00:05:54.521 --> 00:05:58.258 line:-2 align:center
within each supported language's
lproj directory.


99
00:05:58,292 --> 00:06:00,194 line:-1
All of the files shown here


100
00:06:00.227 --> 00:06:03.964 line:-1 align:center
make up the "Localizable" string table.


101
00:06:03.997 --> 00:06:06.700 line:-1 align:center
A String Catalog, on the other hand,


102
00:06:06.733 --> 00:06:11.004 line:-2 align:center
contains an entire string table
in a single file.


103
00:06:11,038 --> 00:06:15,242 line:-2
This includes all translations
and extra metadata


104
00:06:15.275 --> 00:06:18.812 line:-1 align:center
for each localizable string in that table.


105
00:06:19,746 --> 00:06:23,951 line:-2
If you'd like to organize your strings
into multiple string tables,


106
00:06:23,984 --> 00:06:27,387 line:-1
you can create multiple String Catalogs.


107
00:06:27.421 --> 00:06:31.525 line:-2 align:center
Each Catalog holds the string keys
belonging to that table,


108
00:06:31,558 --> 00:06:37,030 line:-2
along with their translations
in every language your app supports.


109
00:06:37.064 --> 00:06:41.301 line:-2 align:center
Although keys are always unique
within their containing table,


110
00:06:41,335 --> 00:06:45,572 line:-2
there is no requirement
that keys be unique across tables.


111
00:06:45.606 --> 00:06:51.745 line:-2 align:center
For example, the "Welcome to WWDC!" string
is present in both files here,


112
00:06:51,778 --> 00:06:56,683 line:-2
since it might be displayed
in different contexts within the app.


113
00:06:56,717 --> 00:07:01,755 line:-2
As Marina previously mentioned,
Xcode 15 will automatically populate


114
00:07:01,788 --> 00:07:05,325 line:-2
your String Catalogs
and make a best effort to keep them


115
00:07:05.359 --> 00:07:08.795 line:-2 align:center
in sync with localizable strings
found in your project.


116
00:07:08.829 --> 00:07:13.000 line:-2 align:center
But where does Xcode find
these localizable strings?


117
00:07:13.033 --> 00:07:18.305 line:-2 align:center
Well, there are a variety of places
where localizable strings might live.


118
00:07:18.338 --> 00:07:23.043 line:-2 align:center
Xcode can find strings in source code,
interface builder files,


119
00:07:23.076 --> 00:07:27.181 line:-2 align:center
and even Info plists
to include in your String Catalogs.


120
00:07:27,214 --> 00:07:30,217 line:-2
If you've been localizing your app
for a while now,


121
00:07:30,250 --> 00:07:32,819 line:-1
many of these should feel familiar.


122
00:07:32.853 --> 00:07:36.023 line:-1 align:center
Let's take a closer look at a few of them.


123
00:07:36.056 --> 00:07:38.692 line:-1 align:center
We'll start with SwiftUI.


124
00:07:38,725 --> 00:07:41,695 line:-1
SwiftUI makes localization seamless


125
00:07:41.728 --> 00:07:45.432 line:-2 align:center
because anytime you specify
a string literal within a view,


126
00:07:45.465 --> 00:07:49.937 line:-2 align:center
that string is
automatically considered localizable.


127
00:07:49,970 --> 00:07:55,209 line:-2
All of these strings are considered
localizable and will be extracted


128
00:07:55,242 --> 00:08:01,248 line:-2
to the String Catalog named
Localizable.xcstrings if it exists.


129
00:08:01,281 --> 00:08:07,087 line:-2
This works for any parameter
accepting a type of LocalizedStringKey.


130
00:08:07.120 --> 00:08:11.525 line:-2 align:center
SwiftUI strings can use text views
to specify comments,


131
00:08:11,558 --> 00:08:16,029 line:-2
custom table names,
or bundles for string lookup.


132
00:08:16,063 --> 00:08:20,267 line:-2
You can also define your own custom views
that accept strings


133
00:08:20.300 --> 00:08:23.537 line:-2 align:center
that should be
considered localizable for clients.


134
00:08:23.570 --> 00:08:28.208 line:-2 align:center
Notice we're using LocalizedStringResource
as the String type here.


135
00:08:28,909 --> 00:08:32,579 line:0
When Xcode sees a string literal
being used to instantiate


136
00:08:32,613 --> 00:08:35,315 line:0
a LocalizedStringResource
at the call site,


137
00:08:35,349 --> 00:08:38,919 line:0
it will know that string is localizable.


138
00:08:38,952 --> 00:08:42,055 line:0
LocalizedStringResource
is the recommended type


139
00:08:42,089 --> 00:08:46,760 align:center
for representing and passing around
localizable strings.


140
00:08:46,793 --> 00:08:50,797 line:0
It not only supports initialization
using a string literal,


141
00:08:50,831 --> 00:08:54,468 align:center
but can also be provided with a comment,
table name,


142
00:08:54,501 --> 00:08:58,038 align:center
or even a default value
that's different from the string key.


143
00:08:58.839 --> 00:09:03.076 line:-2 align:center
Now let's turn our attention
to Swift code more generally.


144
00:09:03.110 --> 00:09:08.382 line:-2 align:center
Here I have some model code that includes
strings that will be presented later.


145
00:09:08,415 --> 00:09:13,420 line:-2
I'm using the localized: initializers
on String and AttributedString


146
00:09:13.453 --> 00:09:18.292 line:-2 align:center
to specify strings I know will
be displayed to the user at runtime.


147
00:09:18,325 --> 00:09:21,995 line:-2
You can also use
LocalizedStringResource directly


148
00:09:22,029 --> 00:09:25,065 line:-1
anywhere you've imported Foundation.


149
00:09:25.098 --> 00:09:28.335 line:-2 align:center
String Catalogs make use
of powerful technology


150
00:09:28,368 --> 00:09:32,973 line:-2
in the Swift compiler in order
to extract localizable Swift strings.


151
00:09:33.006 --> 00:09:36.076 line:-2 align:center
For this reason,
be sure to enable the build setting


152
00:09:36.109 --> 00:09:39.513 line:-1 align:center
Use Compiler to Extract Swift Strings.


153
00:09:39.546 --> 00:09:44.117 line:-2 align:center
But String Catalogs can extract strings
from more than just Swift code.


154
00:09:44,151 --> 00:09:49,723 line:-2
Here's an example of some Objective-C
code using NSLocalizedString.


155
00:09:49,756 --> 00:09:54,161 line:-2
Any string literal embedded
in an NSLocalizedString macro


156
00:09:54.194 --> 00:09:57.464 line:-1 align:center
is automatically considered localizable,


157
00:09:57.497 --> 00:10:00.901 line:-2 align:center
and you can even define
your own similar macros


158
00:10:00.934 --> 00:10:03.437 line:-1 align:center
that can be detected as well.


159
00:10:03.470 --> 00:10:05.873 line:-1 align:center
The same concepts can also be used


160
00:10:05.906 --> 00:10:10.544 line:-1 align:center
in C code using CFCopyLocalizedString.


161
00:10:10.577 --> 00:10:16.183 line:-2 align:center
To specify any custom localized
string macros in C or Objective-C,


162
00:10:16.216 --> 00:10:20.454 line:-2 align:center
use the Localized String Macro Names
build setting.


163
00:10:20,487 --> 00:10:23,223 line:-2
Now that we've seen
how this works for source code,


164
00:10:23.257 --> 00:10:27.261 line:-2 align:center
let's explore localizable strings
in Interface Builder.


165
00:10:27.294 --> 00:10:32.933 line:-2 align:center
Strings specified in Interface Builder
are automatically treated as localizable.


166
00:10:32.966 --> 00:10:36.537 line:-2 align:center
Using the inspector,
you can also specify a comment


167
00:10:36.570 --> 00:10:39.806 line:-2 align:center
for these strings
to provide the translator with context


168
00:10:39,840 --> 00:10:42,442 line:-1
about where it will appear.


169
00:10:42,476 --> 00:10:46,580 line:-2
When a String Catalog is paired
with a Storyboard or xib,


170
00:10:46,613 --> 00:10:49,316 line:-2
all localizable strings
from interface builder


171
00:10:49,349 --> 00:10:51,952 line:-1
will be present in the Catalog.


172
00:10:51.985 --> 00:10:55.422 line:-2 align:center
Just like source code,
Xcode updates the Catalog


173
00:10:55,455 --> 00:10:58,125 line:-1
every time the project is built.


174
00:10:58.158 --> 00:11:02.596 line:-2 align:center
This process works similarly
for Info plist files.


175
00:11:02.629 --> 00:11:07.401 line:-2 align:center
For this,
simply add an InfoPlist.xcstrings file


176
00:11:07,434 --> 00:11:11,004 line:-2
to your project,
and add it to the desired target.


177
00:11:11.038 --> 00:11:14.508 line:-2 align:center
Every time you build,
Xcode will add a known set


178
00:11:14,541 --> 00:11:17,911 line:-2
of localizable info plist keys
to the Catalog,


179
00:11:17,945 --> 00:11:21,381 line:-1
and more can be added manually if needed.


180
00:11:21.415 --> 00:11:25.152 line:-4 align:center
Finally, Xcode includes
some big improvements this year


181
00:11:25.185 --> 00:11:28.355 line:-4 align:center
to the way App Shortcut phrases
are localized.


182
00:11:28,388 --> 00:11:31,825 line:-4
To find out more,
be sure to check out this year's talk,


183
00:11:31.859 --> 00:11:35.295 line:-3 align:center
"Spotlight your app with App Shortcuts."


184
00:11:35,329 --> 00:11:40,734 line:-2
Now that we've taken a tour of the various
places Xcode can find localizable strings,


185
00:11:40.767 --> 00:11:43.070 line:-2 align:center
let's talk a bit more
about how these strings


186
00:11:43.103 --> 00:11:45.672 line:-1 align:center
make their way to String Catalogs.


187
00:11:45.706 --> 00:11:49.743 line:-2 align:center
Every time you build,
Xcode will discover localizable strings


188
00:11:49.776 --> 00:11:52.746 line:-1 align:center
in the current scheme and platform.


189
00:11:52.779 --> 00:11:57.584 line:-2 align:center
Strings from source code act as the source
of truth for localizable strings,


190
00:11:57.618 --> 00:12:02.356 line:-2 align:center
while source strings
in the String Catalog are kept in sync.


191
00:12:02.389 --> 00:12:04.791 line:-1 align:center
When new strings are discovered in code,


192
00:12:04,825 --> 00:12:07,928 line:0
Xcode will add them
to your String Catalog.


193
00:12:07,961 --> 00:12:12,099 align:center
At this point,
the string is ready to be translated.


194
00:12:12,132 --> 00:12:13,867 line:0
As we discussed earlier,


195
00:12:13,901 --> 00:12:18,772 align:center
localizable strings might have
a default source value specified in code.


196
00:12:18,805 --> 00:12:20,073 align:center
In that case,


197
00:12:20,107 --> 00:12:24,912 line:0
the Catalog will be updated
with any new value from code.


198
00:12:24,945 --> 00:12:29,383 line:0
Xcode can also discover
when you've removed a string from code.


199
00:12:29,416 --> 00:12:31,919 align:center
If the string hasn't yet been translated,


200
00:12:31,952 --> 00:12:34,655 line:0
Xcode will remove it for you.


201
00:12:34,688 --> 00:12:37,724 line:-2
However,
if you've already provided translations


202
00:12:37,758 --> 00:12:39,893 line:-1
for a string and then remove it,


203
00:12:39,927 --> 00:12:42,429 line:-1
Xcode will instead leave it alone


204
00:12:42.462 --> 00:12:44.565 line:-1 align:center
and mark it as Stale.


205
00:12:44.598 --> 00:12:48.836 line:-2 align:center
This indicates that the string
could no longer be found in code.


206
00:12:48.869 --> 00:12:51.872 line:-2 align:center
You can delete the string
and its translations


207
00:12:51.905 --> 00:12:55.475 line:-2 align:center
if you can confirm
that it is no longer needed.


208
00:12:55,509 --> 00:12:59,479 line:-2
Alternatively,
you can use the inspector to tell Xcode


209
00:12:59.513 --> 00:13:03.183 line:-2 align:center
that you'd like
to manually manage that particular string.


210
00:13:03.217 --> 00:13:08.388 line:-2 align:center
Manually-managed strings will
never be updated or removed by Xcode


211
00:13:08.422 --> 00:13:11.491 line:-1 align:center
when syncing localizations after a build.


212
00:13:11,525 --> 00:13:16,563 line:-2
This can be useful for strings whose keys
are either dynamically constructed in code


213
00:13:16,597 --> 00:13:19,700 line:-1
or perhaps originate from a database.


214
00:13:19,733 --> 00:13:23,904 line:-2
Now that we have all of our strings
extracted into a String Catalog,


215
00:13:23,937 --> 00:13:27,241 line:-2
let's take a closer look
at how the String Catalog Editor


216
00:13:27.274 --> 00:13:30.744 line:-1 align:center
makes it easy to manage translations.


217
00:13:30,777 --> 00:13:33,947 line:-2
String Catalogs come
with first-class support


218
00:13:33.981 --> 00:13:37.417 line:-2 align:center
for tracking states
and translation progress


219
00:13:37,451 --> 00:13:39,419 line:-1
as you localize your app.


220
00:13:39,453 --> 00:13:43,056 line:-2
We've already talked about how
Xcode will show strings as Stale


221
00:13:43.090 --> 00:13:45.325 line:-1 align:center
when they are no longer found in code.


222
00:13:45.359 --> 00:13:49.696 line:-2 align:center
But there are three other localization
states you should be aware of.


223
00:13:49.730 --> 00:13:53.267 line:-2 align:center
"New" indicates that a string
hasn't yet been translated


224
00:13:53.300 --> 00:13:55.068 line:-1 align:center
into the selected language.


225
00:13:55.102 --> 00:13:58.939 line:-2 align:center
You'll see this
after adding a new string in code.


226
00:13:58.972 --> 00:14:03.677 line:-2 align:center
"Needs Review" indicates that the string
requires the localizer's attention


227
00:14:03,710 --> 00:14:06,980 line:-2
because the value
might need to be changed.


228
00:14:07.014 --> 00:14:11.418 line:-2 align:center
If you'd like to use the current value,
simply choose "Mark as Reviewed"


229
00:14:11,451 --> 00:14:13,220 line:-1
from the context menu.


230
00:14:13.253 --> 00:14:18.125 line:-2 align:center
You can also use this menu to mark
a string for review by the localizer.


231
00:14:18.158 --> 00:14:23.530 line:-2 align:center
This might be useful if you receive
a bug report about a faulty translation.


232
00:14:23.564 --> 00:14:27.434 line:-2 align:center
Finally, strings that have been
translated in the selected language


233
00:14:27.467 --> 00:14:29.503 line:-1 align:center
will show a green checkmark.


234
00:14:29,536 --> 00:14:33,807 line:-2
This indicates
that no further action is needed.


235
00:14:33.841 --> 00:14:39.880 line:-2 align:center
As a developer, another common
localization challenge is pluralization.


236
00:14:39.913 --> 00:14:43.483 line:-2 align:center
For example,
here's the string Marina previously added


237
00:14:43.517 --> 00:14:47.955 line:-2 align:center
to Backyard Birds,
displaying a count of recent visitors.


238
00:14:47,988 --> 00:14:50,657 line:-2
In English,
we would need to change the grammar


239
00:14:50,691 --> 00:14:55,963 line:-2
of the string depending on whether
the number is one or some other number.


240
00:14:55.996 --> 00:14:58.899 line:-1 align:center
However, in a language such as Ukrainian,


241
00:14:58,932 --> 00:15:01,935 line:-1
there may be even more cases to consider.


242
00:15:01.969 --> 00:15:05.639 line:-2 align:center
To solve this problem,
we need a way to vary the string


243
00:15:05.672 --> 00:15:08.442 line:-2 align:center
based on the value
of the passed in number.


244
00:15:08.976 --> 00:15:11.245 line:-1 align:center
Previously, solving this problem


245
00:15:11.278 --> 00:15:13.213 line:-1 align:center
for a large number of languages


246
00:15:13,247 --> 00:15:15,782 line:-1
would have required a stringsdict file.


247
00:15:15,816 --> 00:15:18,352 line:-1
This plist format can be difficult


248
00:15:18,385 --> 00:15:20,621 line:-1
to use correctly and introduces


249
00:15:20.654 --> 00:15:23.156 line:-1 align:center
a fairly high barrier to a simple task,


250
00:15:23,190 --> 00:15:25,726 line:-1
like pluralizing a string.


251
00:15:25.759 --> 00:15:29.796 line:-2 align:center
Now the String Catalog Editor
includes built-in support


252
00:15:29.830 --> 00:15:32.799 line:-1 align:center
for string variation workflows.


253
00:15:32.833 --> 00:15:35.969 line:-1 align:center
By revealing the context menu on a string,


254
00:15:36,003 --> 00:15:39,406 line:-2
I'm presented
with options to vary the string.


255
00:15:39,439 --> 00:15:42,543 line:-2
And when I vary the string
in the default localization,


256
00:15:42,576 --> 00:15:46,880 line:-2
translations will
automatically be varied as well.


257
00:15:46.914 --> 00:15:49.883 line:-2 align:center
Here's a more complex example
of a string that needs


258
00:15:49,917 --> 00:15:53,153 line:-2
to use plural variation
with two variables.


259
00:15:53,187 --> 00:15:57,724 line:-2
At runtime, we could end up
with a few different scenarios.


260
00:15:57.758 --> 00:16:01.228 line:-2 align:center
We might have a single bird
in a single backyard,


261
00:16:01,261 --> 00:16:06,667 line:-2
multiple birds in a single backyard,
multiple birds in multiple backyards,


262
00:16:06,700 --> 00:16:10,704 line:-2
or a single bird
despite having multiple backyards.


263
00:16:10.737 --> 00:16:13.707 line:-2 align:center
In each case,
the string surrounding the numbers


264
00:16:13.740 --> 00:16:18.445 line:-2 align:center
needs be translated a bit differently
to maintain grammatical agreement.


265
00:16:18,478 --> 00:16:22,950 line:-2
The String Catalog editor
makes it easy to do this too.


266
00:16:22,983 --> 00:16:25,819 line:-1
This is where substitutions come in.


267
00:16:25.853 --> 00:16:30.190 line:-2 align:center
Here, we've varied both
of the arguments in the string by plural.


268
00:16:30.224 --> 00:16:33.560 line:-2 align:center
Each substitution,
prefixed with an @ sign,


269
00:16:33.594 --> 00:16:37.931 line:-2 align:center
stores a dictionary
of plural cases and their values.


270
00:16:37.965 --> 00:16:41.301 line:-2 align:center
This example
includes a "birds" substitution


271
00:16:41,335 --> 00:16:43,637 line:-1
for formatting a count of birds


272
00:16:43,670 --> 00:16:48,942 line:-2
and a "yards" substitution
for formatting a count of backyards.


273
00:16:48.976 --> 00:16:53.113 line:-2 align:center
At runtime, the top-level string
shown here will be used,


274
00:16:53.146 --> 00:16:56.049 line:-2 align:center
substituting in
the appropriate plural case


275
00:16:56.083 --> 00:16:59.453 line:-1 align:center
from each referenced substitution.


276
00:16:59,486 --> 00:17:03,524 line:-2
So in this example,
any of these strings could be produced,


277
00:17:03,557 --> 00:17:05,993 line:-1
effectively creating a permutation


278
00:17:06.026 --> 00:17:09.830 line:-2 align:center
of possible plural cases
for each substitution.


279
00:17:10,864 --> 00:17:13,133 line:0
Substitutions usually correspond


280
00:17:13,166 --> 00:17:15,502 line:0
to arguments passed into the string,


281
00:17:15,536 --> 00:17:18,205 align:center
often using string interpolation.


282
00:17:18,238 --> 00:17:21,375 line:0
In the inspector, Xcode shows information


283
00:17:21,408 --> 00:17:23,277 align:center
about the position of the argument


284
00:17:23,310 --> 00:17:24,645 align:center
to use for the number,


285
00:17:24,678 --> 00:17:27,281 align:center
as well as the C-style format specifier


286
00:17:27,314 --> 00:17:29,483 line:0
of the type being passed.


287
00:17:29,516 --> 00:17:32,152 line:0
The yards substitution shown here


288
00:17:32,186 --> 00:17:34,288 align:center
corresponds to argument two


289
00:17:34,321 --> 00:17:36,924 line:0
because it is the second
string interpolation


290
00:17:36,957 --> 00:17:38,759 line:0
used in source code.


291
00:17:38,792 --> 00:17:41,228 align:center
The value of backyards.count


292
00:17:41,261 --> 00:17:43,330 align:center
will then be used to determine whether


293
00:17:43,363 --> 00:17:46,266 align:center
we end up using the one or other case


294
00:17:46,300 --> 00:17:48,135 line:0
within this substitution.


295
00:17:48.168 --> 00:17:53.507 line:-2 align:center
In this way, String Catalogs
provide a simple UI for varying strings,


296
00:17:53,540 --> 00:17:57,211 line:-2
while still supporting
advanced use cases like this one.


297
00:17:57,244 --> 00:18:01,982 line:-2
Now back to Marina
to put these techniques in action.


298
00:18:02,015 --> 00:18:03,350 line:-1
Marina: Thanks, Matt.


299
00:18:03,383 --> 00:18:06,486 line:-2
Back in the Backyard Birds app,
the String Catalog Editor


300
00:18:06.520 --> 00:18:09.523 line:-2 align:center
makes it easy for me
to find the strings I'm looking for.


301
00:18:09.556 --> 00:18:14.661 line:-2 align:center
I can filter to find all the strings
containing the word "learn"


302
00:18:14,695 --> 00:18:20,334 line:-2
or sort by state to see
the most important states at the top.


303
00:18:20.367 --> 00:18:23.303 line:-2 align:center
As Matt pointed out,
there might be some strings


304
00:18:23.337 --> 00:18:26.373 line:-2 align:center
that are not in code
but will be displayed in the app.


305
00:18:26.406 --> 00:18:29.276 line:-2 align:center
For example,
I know that my app might display


306
00:18:29.309 --> 00:18:33.780 line:-2 align:center
a special type of bird that comes
from the cloud for app subscribers.


307
00:18:33,814 --> 00:18:39,653 line:-2
In this case, I can use the plus button
here to define a manual string,


308
00:18:39,686 --> 00:18:42,823 line:-1
give it a key…


309
00:18:42.856 --> 00:18:44.858 line:-1 align:center
and a comment.


310
00:18:46.860 --> 00:18:52.165 line:-2 align:center
Keep in mind that manually-managed strings
won't be updated or removed by Xcode.


311
00:18:52,199 --> 00:18:55,502 line:-2
If you'd like Xcode to start
extracting your strings from code,


312
00:18:55.536 --> 00:18:58.338 line:-1 align:center
expand the inspector...


313
00:19:01.175 --> 00:19:05.345 line:-2 align:center
and set the string
to be managed automatically.


314
00:19:05,379 --> 00:19:09,650 line:-2
Xcode also makes it easy
to track my localization progress.


315
00:19:09.683 --> 00:19:12.786 line:-2 position:49% align:center
Beside each string,
you can see a badge


316
00:19:12,819 --> 00:19:15,222 line:-1
that represents a translation state.


317
00:19:15,255 --> 00:19:19,526 line:-2
When a string was just added from code,
or manually, like we just did,


318
00:19:19.560 --> 00:19:21.228 line:-1 align:center
you'll see it marked as "NEW,"


319
00:19:21.261 --> 00:19:24.331 line:-2 align:center
meaning that it
hasn't been translated yet.


320
00:19:24.364 --> 00:19:26.867 line:-1 align:center position:49%
Anytime the source string changes,


321
00:19:26.900 --> 00:19:29.269 line:-2 align:center
the translations
will be marked for review.


322
00:19:29.303 --> 00:19:32.806 line:-1 align:center position:49%
Earlier, I changed this string in English,


323
00:19:32,840 --> 00:19:36,944 line:-2 position:49%
so the existing translations
were marked for review.


324
00:19:36,977 --> 00:19:39,079 line:-1
If this string was okay as is,


325
00:19:39,112 --> 00:19:44,318 position:49% line:-2
I could just right click on the string
and choose "mark as reviewed."


326
00:19:44,351 --> 00:19:45,886 line:-1
Since I speak Portuguese,


327
00:19:45.919 --> 00:19:48.889 line:-2 align:center
I know that I need
to update this translation.


328
00:19:55,963 --> 00:19:59,600 line:-2
With this change,
we can see here on the sidebar


329
00:19:59,633 --> 00:20:02,636 line:-1 align:center
that our localization percentage went up.


330
00:20:02.669 --> 00:20:05.105 line:-1 align:center
Once a language is fully localized,


331
00:20:05.138 --> 00:20:09.009 line:-2 align:center
you'll see a green checkmark
here in the sidebar.


332
00:20:09,042 --> 00:20:13,113 line:-2
This is the first time you can track
your localization progress in Xcode


333
00:20:13.146 --> 00:20:16.183 line:-2 align:center
and be confident
that your app is fully localized


334
00:20:16.216 --> 00:20:19.453 line:-1 align:center
before submitting it to the App Store.


335
00:20:19.486 --> 00:20:23.457 line:-2 align:center
I also want to prepare this app
to be localized in Ukrainian.


336
00:20:23,490 --> 00:20:26,226 line:-2 align:center
I can do this
right from the String Catalog Editor


337
00:20:26,260 --> 00:20:29,997 line:-1
by hitting the plus button


338
00:20:30,030 --> 00:20:33,433 align:center line:-2
and choosing a new language
from this list.


339
00:20:37,771 --> 00:20:42,109 line:-2
And here's my Ukrainian catalog
with no translations yet.


340
00:20:43,644 --> 00:20:45,679 line:-1
This is the string we added earlier,


341
00:20:45.712 --> 00:20:48.182 line:-2 align:center
and it looks like
it needs to be varied by plural.


342
00:20:48,215 --> 00:20:51,118 line:-1
For that, let's go back to English.


343
00:20:52,219 --> 00:20:57,090 line:-2
I'll right click on this string
and choose "vary by plural."


344
00:20:57,124 --> 00:20:59,960 line:-2
For English,
I know that I need to differentiate


345
00:20:59,993 --> 00:21:03,997 line:-2
between plural and singular,
so let's fix that.


346
00:21:06.767 --> 00:21:10.137 line:-2 align:center
In Portuguese,
the plural cases are the same as English.


347
00:21:10.170 --> 00:21:12.739 line:-1 align:center
However, if we peek at Ukrainian,


348
00:21:12.773 --> 00:21:17.678 line:-2 align:center
you can see that a different set
of plural cases was added for me.


349
00:21:17.711 --> 00:21:21.815 line:-2 align:center
My Ukrainian translator
will know exactly what to do with this.


350
00:21:23,050 --> 00:21:25,919 line:-2
Back in my view,
I wanted to add another label


351
00:21:25.953 --> 00:21:30.557 line:-2 align:center
that indicates the number of birds
there are in each of my backyards.


352
00:21:30,591 --> 00:21:32,759 line:-1
So let me add it...


353
00:21:35.462 --> 00:21:37.297 line:-1 align:center
Build...


354
00:21:39,666 --> 00:21:42,269 line:-1
And go back to my Catalog.


355
00:21:43.303 --> 00:21:45.906 line:-1 align:center
And here it is in my Catalog.


356
00:21:45.939 --> 00:21:48.242 line:-1 align:center
I also want to vary the string by plural,


357
00:21:48.275 --> 00:21:50.477 line:-1 align:center
but it contains multiple arguments.


358
00:21:50.511 --> 00:21:53.213 line:-2 align:center
This time,
when I right click on the string


359
00:21:53.247 --> 00:21:55.482 line:-1 align:center
and choose vary by plural,


360
00:21:55,516 --> 00:21:58,285 line:-2
I can choose which argument
I'd like to vary.


361
00:21:58.318 --> 00:22:00.454 line:-1 align:center
Let's vary by both.


362
00:22:06,159 --> 00:22:12,032 line:-2
Next, I'll set up my substitutions so that
they can get pluralized at runtime.


363
00:22:12.065 --> 00:22:16.303 line:-2 align:center
Let's move out the words
that need to agree with the argument.


364
00:22:16,336 --> 00:22:20,107 line:-1
So "birds" into the “birds” substitution


365
00:22:20.140 --> 00:22:24.144 line:-2 align:center
and "backyards"
into the "yards" substitution.


366
00:22:29.216 --> 00:22:32.519 line:-2 align:center
For readability,
I'd like to rename my substitutions


367
00:22:32.553 --> 00:22:36.657 line:-2 align:center
so that I know what arguments
the variables correspond to.


368
00:22:38.325 --> 00:22:40.928 line:-1 align:center
That's easier to understand.


369
00:22:40,961 --> 00:22:44,898 line:-2
Now Matt will show us how we can export
our strings to send them out


370
00:22:44.932 --> 00:22:47.201 line:-1 align:center
for translations in Ukrainian.


371
00:22:47,234 --> 00:22:48,669 line:-1
Matt: Thanks, Marina.


372
00:22:48,702 --> 00:22:52,206 line:-2
As you've already seen,
Xcode makes it easy to provide


373
00:22:52.239 --> 00:22:55.843 line:-2 align:center
and edit translations
directly in a String Catalog,


374
00:22:55,876 --> 00:22:58,779 line:-2
but oftentimes,
you'll need to work with translators


375
00:22:58.812 --> 00:23:02.749 line:-2 align:center
to localize the strings
in your app outside of Xcode.


376
00:23:02.783 --> 00:23:07.588 line:-2 align:center
For this scenario, Xcode offers
the Export Localizations option.


377
00:23:07,621 --> 00:23:11,825 line:-2
This generates one Localization Catalog
for each language,


378
00:23:11.859 --> 00:23:15.162 line:-1 align:center
which can be sent out for translation.


379
00:23:15.195 --> 00:23:19.333 line:-2 align:center
A Localization Catalog,
first introduced in Xcode 10,


380
00:23:19.366 --> 00:23:23.604 line:-2 align:center
is a package format
that contains all the localizable content


381
00:23:23,637 --> 00:23:26,540 align:center
within a project or workspace.


382
00:23:26,573 --> 00:23:30,043 align:center
For now, we'll focus
on the inner XLIFF file,


383
00:23:30,077 --> 00:23:34,815 line:0
which contains all localizable strings
and their translations.


384
00:23:34,848 --> 00:23:37,618 line:0
XLIFF is an industry-standard format


385
00:23:37,651 --> 00:23:41,255 line:0
for storing and transporting
localizations.


386
00:23:42,155 --> 00:23:46,360 line:-2
If you or tools you maintain
work directly with XLIFF files,


387
00:23:46.393 --> 00:23:50.230 line:-2 align:center
you'll want to be aware of some changes
to how varied strings are represented


388
00:23:50.264 --> 00:23:52.966 line:-1 align:center
for projects using String Catalogs.


389
00:23:53.000 --> 00:23:55.502 line:-1 align:center
Here's an example XLIFF representation


390
00:23:55.536 --> 00:24:00.340 line:-2 align:center
of a plural string
originally defined in a .stringsdict file.


391
00:24:00,374 --> 00:24:04,378 line:-2
The trans unit identifiers
shown here act as paths


392
00:24:04.411 --> 00:24:07.014 line:-1 align:center
into the stringsdict plist format.


393
00:24:07,848 --> 00:24:11,685 line:-2
When varied strings instead originate
from a String Catalog,


394
00:24:11.718 --> 00:24:14.454 line:-1 align:center
they'll look like this instead.


395
00:24:14,488 --> 00:24:16,924 line:-1
They contain the string key,


396
00:24:16.957 --> 00:24:18.892 line:-1 align:center
a separator sequence,


397
00:24:18,926 --> 00:24:23,363 line:-2
and finally,
a dot-separated configuration string.


398
00:24:23.397 --> 00:24:27.534 line:-2 align:center
This configuration string
could be a simple plural specifier,


399
00:24:27.568 --> 00:24:29.436 line:-1 align:center
a device specifier,


400
00:24:29,469 --> 00:24:31,939 line:-1
a chain of multiple conditions,


401
00:24:31.972 --> 00:24:36.443 line:-2 align:center
or a path to a plural case
inside a substitution.


402
00:24:36.476 --> 00:24:40.747 line:-2 align:center
Not only should it be easy
for automation tooling to read these keys,


403
00:24:40,781 --> 00:24:43,450 line:-2
but we've also designed them
to be easy for humans


404
00:24:43,483 --> 00:24:47,120 line:-1
to read and understand at a glance.


405
00:24:47,154 --> 00:24:52,092 line:-2
Translation tools are also able to vary
a string that wasn't previously varied


406
00:24:52,125 --> 00:24:55,128 line:-2
by replacing the translation units
in the XLIFF


407
00:24:55.162 --> 00:24:57.764 line:-1 align:center
with the desired variation structure.


408
00:24:57.798 --> 00:25:02.302 line:-2 align:center
For example, here's a string
that is not currently varied at all.


409
00:25:02,336 --> 00:25:05,806 line:-2
But in Portuguese,
I'd like to provide a shorter string


410
00:25:05,839 --> 00:25:08,408 line:-1
on Apple Watch specifically.


411
00:25:08.442 --> 00:25:12.312 line:-2 align:center
By replacing that unit
with device.applewatch


412
00:25:12.346 --> 00:25:15.883 line:-1 align:center
and device.other variants in the XLIFF,


413
00:25:15.916 --> 00:25:19.453 line:-2 align:center
we can influence the variation structure
that will be present


414
00:25:19.486 --> 00:25:21.989 line:-1 align:center
for this language on the next import.


415
00:25:23,090 --> 00:25:26,894 line:-2
To ensure that XLIFF defaults
to using the String Catalog format


416
00:25:26.927 --> 00:25:29.897 line:-2 align:center
when exporting localizations,
be sure to set


417
00:25:29.930 --> 00:25:33.967 line:-2 align:center
Localization Prefers String Catalogs
to Yes.


418
00:25:34.001 --> 00:25:38.505 line:-2 align:center
Once you receive a translated
Localization Catalog from a translator,


419
00:25:38,539 --> 00:25:41,575 line:-1
you can import that back into the project.


420
00:25:41,608 --> 00:25:44,011 line:-2
For strings that came
from String Catalogs,


421
00:25:44.044 --> 00:25:48.048 line:-2 align:center
the translations specified
in the imported files will be added


422
00:25:48.081 --> 00:25:51.752 line:-2 align:center
to the appropriate
String Catalog automatically.


423
00:25:51.785 --> 00:25:54.888 line:-1 align:center
Let's try this out in Backyard Birds.


424
00:25:54.922 --> 00:25:56.356 line:-1 align:center
Marina: Since I speak Portuguese,


425
00:25:56,390 --> 00:25:59,393 line:-2
I already took care
of translating my app into Portuguese,


426
00:25:59,426 --> 00:26:02,262 line:-2
but I need to send
my Ukrainian localization catalog


427
00:26:02,296 --> 00:26:05,632 line:-2
for a translator
to provide the localized content.


428
00:26:05.666 --> 00:26:08.735 line:-2 align:center
I'll start by clicking here
in the Product Menu,


429
00:26:08.769 --> 00:26:12.573 line:-1 align:center
choose Export Localizations,


430
00:26:12.606 --> 00:26:15.242 line:-1 align:center
and select the languages I want to export.


431
00:26:15,275 --> 00:26:18,378 line:-1
In this case, just Ukrainian.


432
00:26:18.412 --> 00:26:20.447 line:-1 align:center
Now I can click Export.


433
00:26:24,952 --> 00:26:28,989 line:-2
Once they send me the translations back,
I can import them into my app.


434
00:26:29.022 --> 00:26:31.592 line:-2 align:center
[laptop chimes]
Oh, here they are.


435
00:26:31,625 --> 00:26:35,996 line:-2
Now with the translations ready,
I'll go back to my app,


436
00:26:36.029 --> 00:26:38.098 line:-1 align:center
click the Product menu,


437
00:26:38.131 --> 00:26:42.269 line:-1 align:center
this time, choose Import Localizations,


438
00:26:42,302 --> 00:26:45,706 line:-2
and choose
my Ukrainian localization catalog.


439
00:26:52.746 --> 00:26:55.682 line:-1 align:center
Okay, let's see how everything looks.


440
00:26:58,352 --> 00:27:01,588 line:-2
Perfect,
my Ukrainian translations are in place,


441
00:27:01.622 --> 00:27:06.894 line:-2 align:center
and now I have my app
completely localized in both languages.


442
00:27:06.927 --> 00:27:08.762 line:-1 align:center
Let's see how it looks in Portuguese.


443
00:27:08.795 --> 00:27:13.600 line:-2 align:center
I'll click on the scheme selector
and choose Edit Scheme.


444
00:27:13,634 --> 00:27:19,206 align:center
Under the options, I can change the app
language from system to Portuguese.


445
00:27:21,341 --> 00:27:23,143 line:-1
And I'll run the app.


446
00:27:37.524 --> 00:27:40.460 line:-2 align:center
Cool, here are some
of the strings we worked with.


447
00:27:48,969 --> 00:27:52,606 line:-2
Now that we're done translating,
take it over, Matt.


448
00:27:52.639 --> 00:27:55.709 line:-2 align:center
Matt: Now that our app's content
is fully translated,


449
00:27:55,742 --> 00:27:59,613 line:-2
let's briefly discuss
what happens during the build.


450
00:27:59.646 --> 00:28:05.285 line:-2 align:center
String Catalogs are designed specifically
for interaction within an Xcode project.


451
00:28:05.319 --> 00:28:07.754 line:-1 align:center
As JSON files under the hood,


452
00:28:07.788 --> 00:28:11.658 line:-2 align:center
they should also be
easily diffable in source control.


453
00:28:11.692 --> 00:28:17.664 line:-2 align:center
Then, at build time, these files compile
to .strings and .stringsdict files.


454
00:28:17.698 --> 00:28:20.234 line:-2 align:center
Because these file formats
have been supported


455
00:28:20.267 --> 00:28:23.470 line:-2 align:center
in our operating systems
for many years now,


456
00:28:23,504 --> 00:28:27,841 line:-2
I'm happy to say that you can start
using String Catalogs right away


457
00:28:27.875 --> 00:28:31.111 line:-2 align:center
without having to update
your minimum deployment target.


458
00:28:31.144 --> 00:28:35.215 line:-2 align:center
It's also worth noting
that source strings extracted from code


459
00:28:35,249 --> 00:28:37,918 line:-1
are not included in the final build.


460
00:28:37,951 --> 00:28:41,188 line:-2
This should save on disk space
without affecting the strings


461
00:28:41.221 --> 00:28:43.090 line:-1 align:center
displayed at runtime.


462
00:28:43,123 --> 00:28:46,126 line:-2
Now that we've seen
all these benefits in action,


463
00:28:46.159 --> 00:28:48.362 line:-1 align:center
Marina will show you how to get started


464
00:28:48.395 --> 00:28:51.798 line:-2 align:center
with String Catalogs
in your existing projects.


465
00:28:51.832 --> 00:28:55.569 line:-2 align:center
Marina: Xcode makes it easy
for you to migrate your existing projects


466
00:28:55,602 --> 00:28:57,104 line:-1
to use String Catalogs.


467
00:28:57.137 --> 00:28:59.406 line:-1 align:center
And you can do this at your own pace.


468
00:28:59.439 --> 00:29:00.474 line:-1 align:center
Whenever you're ready,


469
00:29:00.507 --> 00:29:04.845 line:-2 align:center
you can pick which strings files
and targets to migrate.


470
00:29:04,878 --> 00:29:09,516 line:-2
Here's an existing app
that we localized last year, FoodTruck.


471
00:29:09,550 --> 00:29:13,520 line:-2
You can see here that it has
a strings and stringsdict file.


472
00:29:13,554 --> 00:29:16,790 line:-2
String Catalogs can coexist
with the legacy formats,


473
00:29:16.823 --> 00:29:21.261 line:-2 align:center
so I can choose to migrate
the Localizable table whenever I'm ready.


474
00:29:21.295 --> 00:29:22.729 line:-1 align:center
Let's do this now.


475
00:29:22,763 --> 00:29:27,868 line:-2
I'll right click on the file and choose
"Migrate to String Catalog."


476
00:29:28.769 --> 00:29:31.972 line:-2 align:center
Xcode includes
a built-in Migration Assistant


477
00:29:32.005 --> 00:29:35.843 line:-2 align:center
that lists all the migratable files
in my project.


478
00:29:35.876 --> 00:29:41.014 line:-2 align:center
Here I can see the Localizable table
that is part of the FoodTruck target.


479
00:29:41.048 --> 00:29:44.117 line:-1 align:center
I'm gonna go ahead and migrate this now.


480
00:29:46.086 --> 00:29:48.255 line:-1 align:center
Nice! After migrating,


481
00:29:48,288 --> 00:29:51,525 line:-2
Xcode will build my project
to extract strings.


482
00:29:51,558 --> 00:29:55,462 line:-2
Let's see how
the Catalog looks after the build.


483
00:29:55.495 --> 00:29:59.666 line:-2 align:center
Here we can see that all
of the strings from my strings file


484
00:29:59,700 --> 00:30:03,537 line:-2
and even the plurals
from the stringsdict file were migrated.


485
00:30:03.570 --> 00:30:07.207 line:-2 align:center
All my Arabic translations are in place,
but we can see here


486
00:30:07.241 --> 00:30:11.044 line:-2 align:center
that the translation progress
is not 100% for French.


487
00:30:11.078 --> 00:30:16.650 line:-2 align:center
String Catalogs are already helping me
find unlocalized strings in my project.


488
00:30:16.683 --> 00:30:20.821 line:-2 align:center
FoodTruck also has a swift package,
FoodTruckKit,


489
00:30:20.854 --> 00:30:22.923 line:-1 align:center
that hasn't been localized yet.


490
00:30:22,956 --> 00:30:27,194 line:-2
Getting started localizing
a new package or project is super easy


491
00:30:27.227 --> 00:30:29.196 line:-1 align:center
with String Catalogs.


492
00:30:29.229 --> 00:30:31.899 line:-2 align:center
I'll start by adding
a default localization


493
00:30:31,932 --> 00:30:35,169 line:-1
to the package manifest


494
00:30:35,202 --> 00:30:39,573 line:-2
and ensure
I'm using Swift Tools version 5.9.


495
00:30:40.941 --> 00:30:43.810 line:-2 align:center
Then I'll add a new String Catalog
to the package


496
00:30:43.844 --> 00:30:47.214 line:-1 align:center
with the default table name "Localizable."


497
00:30:51.552 --> 00:30:54.721 line:-2 align:center
After building my project,
I can see all of the strings


498
00:30:54.755 --> 00:30:56.957 line:-1 align:center
from throughout my package.


499
00:30:56,990 --> 00:31:02,896 line:-2
It's that easy to get started
localizing a new project or package.


500
00:31:02.930 --> 00:31:06.733 line:-2 align:center
String Catalogs are the new
foundation of localization in Xcode


501
00:31:06.767 --> 00:31:11.104 line:-2 align:center
and simplify the process
of managing translations in your project.


502
00:31:11.138 --> 00:31:14.875 line:-2 align:center
We hope you'll get started today
by migrating your existing strings.


503
00:31:14.908 --> 00:31:17.277 line:-2 align:center
And if you've
never localized an app before,


504
00:31:17.311 --> 00:31:21.715 line:-2 align:center
we hope you'll be inspired
by how easy it is to get started.


505
00:31:21.748 --> 00:31:23.750 line:-1 align:center
Obrigada pela companhia hoje.


506
00:31:23.784 --> 00:31:26.753 line:-2 align:center
Thanks for joining us,
and happy birdwatching.


507
00:31:26,787 --> 00:31:30,324 align:center
♪ ♪

