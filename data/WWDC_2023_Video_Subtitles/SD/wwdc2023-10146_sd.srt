2
00:00:00.033 --> 00:00:03.003 line:-1 position:50%
♪ Mellow instrumental hip-hop ♪


3
00:00:03,003 --> 00:00:10,110 line:0 size:2% position:90%
♪


4
00:00:10,110 --> 00:00:11,144 line:-1
Hello there!


5
00:00:11,144 --> 00:00:14,414 line:-1
I'm Ilya Veygman,
an engineer with Core Location.


6
00:00:14,414 --> 00:00:15,749 line:-1
I'm here today to talk to you


7
00:00:15.749 --> 00:00:18.085 line:-1 position:50%
about Core Location
for spatial computing.


8
00:00:18,085 --> 00:00:20,354 line:-1
Whether you're brand-new
to Apple's ecosystem


9
00:00:20.354 --> 00:00:22.389 line:-1 position:50%
or a longtime
App Store developer,


10
00:00:22.389 --> 00:00:23.991 line:-1 position:50%
you probably have
lots of questions


11
00:00:23.991 --> 00:00:26.593 line:-1 position:50%
about the kinds of things
this system can do.


12
00:00:26,593 --> 00:00:29,897 line:-1
xrOS is great at showing you
the fruits of your imagination,


13
00:00:29,897 --> 00:00:31,298 line:-1
while Core Location is there


14
00:00:31.298 --> 00:00:33.567 line:-1 position:50%
to help you have an anchor
in the real world.


15
00:00:33.567 --> 00:00:36.470 line:-1 position:50%
Today, I'm here to tell you
all about how to do just that


16
00:00:36,470 --> 00:00:39,339 line:-1
with Core Location.


17
00:00:39.339 --> 00:00:40.908 line:-1 position:50%
For those of you
who are brand-new


18
00:00:40,908 --> 00:00:43,644 line:-1
to the Apple developer
ecosystem, welcome!


19
00:00:43,644 --> 00:00:45,612 line:-1
I'd like to start off
with a simple example


20
00:00:45,612 --> 00:00:47,981 line:-1
to show you just how
straightforward it really is


21
00:00:47.981 --> 00:00:50.617 line:-1 position:50%
to add location to your app.


22
00:00:50.617 --> 00:00:51.919 line:-1 position:50%
For experienced developers,


23
00:00:51.919 --> 00:00:54.755 line:-1 position:50%
it never hurts
to review one's basics.


24
00:00:54.755 --> 00:00:56.390 line:-1 position:50%
So let's start by looking
at some sample code


25
00:00:56.390 --> 00:00:57.591 line:-1 position:50%
for this demo application


26
00:00:57,591 --> 00:00:59,927 line:-1
associated with
my colleague's session,


27
00:00:59,927 --> 00:01:02,462 line:-1
"Discover streamlined
location updates."


28
00:01:02,462 --> 00:01:04,798 line:-1
In this actor,
we request live updates


29
00:01:04.798 --> 00:01:07.000 line:-1 position:50%
from CLLocationUpdate,


30
00:01:07,000 --> 00:01:09,369 line:-1
and we'll get them
asynchronously down here


31
00:01:09.369 --> 00:01:11.305 line:-1 position:50%
as they become available.


32
00:01:11.305 --> 00:01:13.941 line:-1 position:50%
For more details
on the location updates API,


33
00:01:13,941 --> 00:01:17,678 line:-1
please refer to the session
associated with this demo.


34
00:01:17,678 --> 00:01:20,047 line:-1
Apps must request
the user's permission


35
00:01:20.047 --> 00:01:23.650 line:-1 position:50%
before accessing sensitive
information such as location,


36
00:01:23.650 --> 00:01:26.954 line:-1 position:50%
so here, we invoke
this API to do so.


37
00:01:26.954 --> 00:01:30.590 line:-1 position:50%
In this simple example,
we do it when the view inits.


38
00:01:30,590 --> 00:01:33,827 line:-1
We also have to ensure
that we set this string


39
00:01:33.827 --> 00:01:36.029 line:-1 position:50%
in the app's info
under Build Settings.


40
00:01:36.029 --> 00:01:39.366 line:-1 position:50%
Again, apps must ask
the user's permission


41
00:01:39.366 --> 00:01:43.003 line:-1 position:50%
before they can get sensitive
information such as location,


42
00:01:43.003 --> 00:01:46.073 line:-1 position:50%
and this string is there
to explain to the user why.


43
00:01:46,073 --> 00:01:47,808 line:-1
It will later be displayed
in a prompt


44
00:01:47,808 --> 00:01:50,610 line:-1
shown to the user
requesting this access.


45
00:01:50.610 --> 00:01:53.780 line:-1 position:50%
So let's see how this looks
when we run it in the simulator.


46
00:01:53,780 --> 00:01:56,550 line:-1
Again, in this application,
we ask for location access


47
00:01:56.550 --> 00:01:59.219 line:-1 position:50%
straightaway because
it's a simple example.


48
00:01:59.219 --> 00:02:01.989 line:-1 position:50%
This will not always
be the case with your apps.


49
00:02:01,989 --> 00:02:04,091 line:-1
You can see that we get
a prompt asking the user


50
00:02:04.091 --> 00:02:06.827 line:-1 position:50%
if they will grant access
to their private information.


51
00:02:06,827 --> 00:02:09,496 line:-1
Now before moving on,
let's chat a little bit more


52
00:02:09.496 --> 00:02:14.534 line:-1 position:50%
about how Core Location treats
user privacy on this system.


53
00:02:14,534 --> 00:02:17,237 line:-1
Even if you are new
to our developer ecosystem,


54
00:02:17.237 --> 00:02:19.773 line:-1 position:50%
you might already be aware
that Apple is heavily focused


55
00:02:19.773 --> 00:02:22.776 line:-1 position:50%
on privacy
in its user experience.


56
00:02:22.776 --> 00:02:26.480 line:-1 position:50%
Location access is not
an exception to this maxim.


57
00:02:26,480 --> 00:02:28,949 line:-1
Before you can get updates
about geolocation,


58
00:02:28,949 --> 00:02:31,018 line:-1
you must first ask
the user for permission


59
00:02:31,018 --> 00:02:33,253 line:-1
to access
their location information.


60
00:02:33.253 --> 00:02:37.424 line:-1 position:50%
You will not get location
updates without user consent.


61
00:02:37.424 --> 00:02:40.060 line:-1 position:50%
You can ask for consent
on this system by creating


62
00:02:40.060 --> 00:02:43.797 line:-1 position:50%
a location manager and invoking
requestWhenInUseAuthorization,


63
00:02:43,797 --> 00:02:46,299 line:-1
along with setting
the usage description string


64
00:02:46.299 --> 00:02:48.001 line:-1 position:50%
in your app's Info.plist.


65
00:02:48.001 --> 00:02:49.703 line:-1 position:50%
This, again, tells the user


66
00:02:49.703 --> 00:02:52.539 line:-1 position:50%
why your app
needs to know their location.


67
00:02:52,539 --> 00:02:55,876 line:-1
Finally, you should only ask
for this access in a context


68
00:02:55.876 --> 00:02:58.078 line:-1 position:50%
when your application
actually needs it.


69
00:02:58,078 --> 00:03:00,580 line:-1
Not only is this better
from a privacy perspective,


70
00:03:00.580 --> 00:03:05.218 line:-1 position:50%
it also ensures the user is more
likely to allow access at all.


71
00:03:05,218 --> 00:03:07,120 line:-1
Recall that we did this
in our sample code


72
00:03:07,120 --> 00:03:08,822 line:-1
since it was
a very simple example


73
00:03:08.822 --> 00:03:11.825 line:-1 position:50%
and starts asking for location
updates immediately.


74
00:03:11,825 --> 00:03:14,761 line:0
So what does this prompt
look like and what does it show?


75
00:03:14,761 --> 00:03:16,863 position:50%
Users will see a prompt
from your application


76
00:03:16,863 --> 00:03:18,765 position:50%
similar to the one here.


77
00:03:18,765 --> 00:03:20,767 line:0
This may look familiar
to those of you watching


78
00:03:20,767 --> 00:03:24,805 position:50%
who already have experience
with iOS development.


79
00:03:24,805 --> 00:03:28,175 line:0
A user can grant location access
for just this session,


80
00:03:28,175 --> 00:03:31,745 position:50%
while using the app,
or deny it entirely.


81
00:03:31,745 --> 00:03:33,747 line:0
Users may also choose
to grant your application


82
00:03:33,747 --> 00:03:37,384 position:50%
knowledge of either their
precise or approximate location


83
00:03:37,384 --> 00:03:40,887 line:0
using the highlighted button,
just like on iOS.


84
00:03:40,887 --> 00:03:42,823 line:0
For more information
on how exactly


85
00:03:42,823 --> 00:03:45,392 position:50%
this precise versus
approximate location works,


86
00:03:45,392 --> 00:03:47,694 line:0
please refer to
"What's new in location"


87
00:03:47,694 --> 00:03:49,296 line:0
from WWDC20,


88
00:03:49,296 --> 00:03:52,766 position:50%
hosted by a younger version
of myself.


89
00:03:52.766 --> 00:03:54.534 line:-1 position:50%
So back to the demo.


90
00:03:54,534 --> 00:03:57,537 line:-1
After we grant this application
access to precise location


91
00:03:57.537 --> 00:03:59.206 line:-1 position:50%
and authorize it while in use,


92
00:03:59.206 --> 00:04:01.041 line:-1 position:50%
we can now start
getting location updates


93
00:04:01.041 --> 00:04:04.311 line:-1 position:50%
and see our app
getting position updates.


94
00:04:04,311 --> 00:04:07,247 line:-1
So what exactly did I mean by
"precise location"?


95
00:04:07.247 --> 00:04:11.785 line:-1 position:50%
That is, how accurately can the
headset know a user's location?


96
00:04:11,785 --> 00:04:14,054 line:-1
For a unit by itself,
you should expect accuracy


97
00:04:14.054 --> 00:04:17.991 line:-1 position:50%
similar to that of a Mac,
so that's about 100 meters.


98
00:04:17,991 --> 00:04:20,527 line:-1
This will be sufficient
for applications like those used


99
00:04:20.527 --> 00:04:24.364 line:-1 position:50%
for finding nearby restaurants,
parks, and other attractions.


100
00:04:24,364 --> 00:04:26,466 line:-1
However,
if your iPhone is nearby,


101
00:04:26,466 --> 00:04:28,535 line:-1
this device can leverage
existing connections


102
00:04:28,535 --> 00:04:31,404 line:-1
between these two devices
to improve the location accuracy


103
00:04:31,404 --> 00:04:33,173 line:-1
you would get from the headset


104
00:04:33,173 --> 00:04:35,876 line:-1
to be on the same level
as that of an iPhone.


105
00:04:35.876 --> 00:04:38.311 line:-1 position:50%
Your device works even better
when together


106
00:04:38.311 --> 00:04:40.013 line:-1 position:50%
with our other Apple hardware.


107
00:04:40,013 --> 00:04:42,315 line:-1
This opens up a whole new range
of applications


108
00:04:42.315 --> 00:04:45.285 line:-1 position:50%
which can run on a spatial
computing system like this one,


109
00:04:45,285 --> 00:04:49,322 line:-1
such as precise weather updates,
geotagging, and more.


110
00:04:49,322 --> 00:04:52,159 line:-1
Now for both newcomers
and experienced developers,


111
00:04:52.159 --> 00:04:54.461 line:-1 position:50%
you've also heard me say
that an app is eligible


112
00:04:54.461 --> 00:04:57.764 line:-1 position:50%
to get location updates
while a user is using it.


113
00:04:57,764 --> 00:04:59,666 line:-1
What this means
is fairly straightforward


114
00:04:59.666 --> 00:05:02.636 line:-1 position:50%
on iPhone or watch,
but what does it mean for us?


115
00:05:02.636 --> 00:05:04.604 line:-1 position:50%
The user experience is,
after all,


116
00:05:04,604 --> 00:05:06,907 line:-1
very different
from an iPhone or a watch.


117
00:05:06,907 --> 00:05:09,576 line:0
So, let's talk about that.


118
00:05:09,576 --> 00:05:11,845 position:50%
Let us call back to
"What's New In Core Location"


119
00:05:11,845 --> 00:05:15,982 position:50%
from 2019 where we discussed
how and when foreground apps


120
00:05:15,982 --> 00:05:19,152 line:0
are considered to be
in use on iOS.


121
00:05:19,152 --> 00:05:21,955 line:0
For a platform like iPhone,
this is fairly obvious.


122
00:05:21,955 --> 00:05:26,293 position:50%
There can only really be one app
foregrounded at any given time.


123
00:05:26,293 --> 00:05:27,827 position:50%
There is also
a short grace period


124
00:05:27,827 --> 00:05:29,362 line:0
after the app is backgrounded


125
00:05:29,362 --> 00:05:32,199 position:50%
while it can still get
location updates.


126
00:05:32.199 --> 00:05:33.700 line:-1 position:50%
So what about here?


127
00:05:33.700 --> 00:05:35.168 line:-1 position:50%
Your application
on this platform


128
00:05:35,168 --> 00:05:37,571 line:-1
can be fully immersive,
or you could have apps


129
00:05:37,571 --> 00:05:39,506 line:-1
running in something
like a window.


130
00:05:39,506 --> 00:05:40,807 line:-1
"How does Core Location
treat this?"


131
00:05:40.807 --> 00:05:42.909 line:-1 position:50%
you're probably wondering.


132
00:05:42,909 --> 00:05:44,411 line:-1
For a fully
immersive experience,


133
00:05:44,411 --> 00:05:45,912 line:-1
this is straightforward.


134
00:05:45,912 --> 00:05:48,348 line:-1
As long as the user
is running your application,


135
00:05:48.348 --> 00:05:50.650 line:-1 position:50%
we consider it to be
in use and eligible


136
00:05:50.650 --> 00:05:52.953 line:-1 position:50%
to get location updates,
assuming that the user


137
00:05:52,953 --> 00:05:56,790 line:-1
has granted consent for your app
to get their location.


138
00:05:56,790 --> 00:05:57,724 line:0
On this system,


139
00:05:57,724 --> 00:06:00,527 position:50%
Core Location provides location
information to your app,


140
00:06:00,527 --> 00:06:03,863 line:0
so long as the user
has recently looked at the app.


141
00:06:03,863 --> 00:06:06,132 line:0
To wit, on this platform,
we consider apps


142
00:06:06,132 --> 00:06:09,269 position:50%
running in a window to be
eligible to get location updates


143
00:06:09,269 --> 00:06:12,505 position:50%
if the user has consented to
giving their location to them,


144
00:06:12,505 --> 00:06:15,642 line:0
and if the user has
recently looked at the app.


145
00:06:15,642 --> 00:06:17,611 line:0
Let's examine this
more concretely.


146
00:06:17,611 --> 00:06:19,879 line:0
Imagine that both of these apps
have been authorized


147
00:06:19,879 --> 00:06:22,282 position:50%
to access the user's location
while in use.


148
00:06:22,282 --> 00:06:24,517 position:50%
So long as the user
is not interacting with


149
00:06:24,517 --> 00:06:26,119 line:0
or looking at either app,


150
00:06:26,119 --> 00:06:29,556 line:0
neither one will be able
to get location updates.


151
00:06:29,556 --> 00:06:32,692 line:0
If the user starts looking at --
that is, interacting with --


152
00:06:32,692 --> 00:06:35,795 position:50%
the app on the left, that app
can now get location updates,


153
00:06:35,795 --> 00:06:37,564 line:0
while the right one
still cannot,


154
00:06:37,564 --> 00:06:40,967 position:50%
even if it happens to be
in the user's peripheral vision.


155
00:06:40,967 --> 00:06:44,271 line:0
And this will remain true until
the user looks somewhere else,


156
00:06:44,271 --> 00:06:46,706 position:50%
such as at the app
on the right,


157
00:06:46,706 --> 00:06:48,808 line:0
or moves the two apps together


158
00:06:48,808 --> 00:06:52,779 position:50%
such that they can look at both
of the apps at the same time.


159
00:06:52,779 --> 00:06:55,782 position:50%
Just like in iOS,
there is also a grace period


160
00:06:55,782 --> 00:06:59,886 line:0
before Core Location considers
the app to no longer be in use.


161
00:06:59,886 --> 00:07:03,189 position:50%
This means that if the user were
to look at an app on the left,


162
00:07:03,189 --> 00:07:06,326 line:0
then at the app on the right
before looking somewhere else,


163
00:07:06,326 --> 00:07:08,028 line:0
there will be
a short period of time --


164
00:07:08,028 --> 00:07:09,429 line:0
a few seconds --


165
00:07:09,429 --> 00:07:12,766 line:0
when both apps are still
eligible to get location


166
00:07:12,766 --> 00:07:16,403 line:0
before Core Location considers
these apps to be out of use.


167
00:07:16.403 --> 00:07:18.571 line:-1 position:50%
We feel that such a model
of location access


168
00:07:18,571 --> 00:07:20,974 line:-1
provides a good experience
on this platform


169
00:07:20,974 --> 00:07:23,009 line:-1
while being respectful
of user privacy,


170
00:07:23.009 --> 00:07:24.911 line:-1 position:50%
since a user would not
have their location tracked


171
00:07:24.911 --> 00:07:26.780 line:-1 position:50%
without their permission
or knowledge,


172
00:07:26.780 --> 00:07:28.815 line:-1 position:50%
particularly since
this device is intended


173
00:07:28,815 --> 00:07:30,950 line:-1
to be used interactively,
rather than as something


174
00:07:30,950 --> 00:07:33,853 line:-1
which runs stashed somewhere
like in your backpack.


175
00:07:33,853 --> 00:07:36,389 line:-1
As such, apps will not
be able to get location updates


176
00:07:36,389 --> 00:07:38,358 line:-1
while they're not running.


177
00:07:38.358 --> 00:07:40.994 line:-1 position:50%
Similarly, updates
from our monitoring APIs


178
00:07:40.994 --> 00:07:43.663 line:-1 position:50%
would not be delivered.


179
00:07:43,663 --> 00:07:46,599 line:-1
So this brings me to something
else which many developers


180
00:07:46,599 --> 00:07:49,069 line:-1
who already have location-using
apps for Apple platforms


181
00:07:49,069 --> 00:07:50,904 line:-1
are probably wondering about:


182
00:07:50.904 --> 00:07:54.674 line:-1 position:50%
How will my app behave when
running in compatibility mode?


183
00:07:54,674 --> 00:07:57,410 line:-1
So what happens if I just run
my iPhone or iPad app


184
00:07:57,410 --> 00:08:00,714 line:-1
with no code changes
for a device running xrOS?


185
00:08:00,714 --> 00:08:02,682 line:-1
Let's talk about that a bit.


186
00:08:02,682 --> 00:08:06,052 line:-1
As already discussed, the
"in-useness" of "while in use"


187
00:08:06,052 --> 00:08:08,621 line:-1
derives from where the user
has looked recently.


188
00:08:08.621 --> 00:08:10.523 line:-1 position:50%
And apps are eligible
to get location


189
00:08:10.523 --> 00:08:12.792 line:-1 position:50%
only when the user
is looking at them.


190
00:08:12,792 --> 00:08:17,297 line:-1
So what about apps which request
Always authorization?


191
00:08:17,297 --> 00:08:19,866 line:-1
Apps which prompt for Always
will have their request


192
00:08:19,866 --> 00:08:23,169 line:-1
redirected to request
authorization while in use.


193
00:08:23.169 --> 00:08:25.805 line:-1 position:50%
You will similarly see
that Always is not an option


194
00:08:25,805 --> 00:08:29,075 line:-1
for your application
under Settings.


195
00:08:29,075 --> 00:08:31,678 line:-1
Location on this system
works best for single-shot


196
00:08:31.678 --> 00:08:35.382 line:-1 position:50%
or continuous updates
while your app is being used.


197
00:08:35,382 --> 00:08:37,584 line:-1
If your compatible
iPhone or iPad app


198
00:08:37,584 --> 00:08:40,653 line:-1
uses region monitoring
or our new CLMonitor,


199
00:08:40,653 --> 00:08:43,723 line:-1
it will not be delivered events.


200
00:08:43.723 --> 00:08:46.693 line:-1 position:50%
Consider if your iOS app
is designed in such a way


201
00:08:46,693 --> 00:08:49,696 line:-1
that assumes a particular API
is always supported,


202
00:08:49.696 --> 00:08:52.999 line:-1 position:50%
and might behave in
unexpected ways if, for example,


203
00:08:52.999 --> 00:08:56.002 line:-1 position:50%
monitoring APIs
never deliver events.


204
00:08:56.002 --> 00:08:58.505 line:-1 position:50%
Similarly, consider whether
your app relies


205
00:08:58,505 --> 00:09:00,306 line:-1
on getting location updates
in the background


206
00:09:00.306 --> 00:09:02.375 line:-1 position:50%
while it's not running.


207
00:09:02.375 --> 00:09:04.744 line:-1 position:50%
To learn more about
our API in general,


208
00:09:04,744 --> 00:09:06,379 line:-1
especially what's new
this year,


209
00:09:06,379 --> 00:09:08,748 line:-1
I would recommend that you watch
these other two sessions


210
00:09:08,748 --> 00:09:09,949 line:-1
from my colleagues,


211
00:09:09.949 --> 00:09:12.886 line:-1 position:50%
as well as any of our other
sessions from previous years,


212
00:09:12,886 --> 00:09:16,256 line:-1
especially if you're a newcomer
to our ecosystem.


213
00:09:16,256 --> 00:09:18,291 line:0
"Discover streamlined
location updates"


214
00:09:18,291 --> 00:09:20,660 line:0
discusses some new developments
in our API,


215
00:09:20,660 --> 00:09:22,896 position:50%
particularly around
how we recommend


216
00:09:22,896 --> 00:09:25,899 position:50%
getting location updates
and ways in which we have


217
00:09:25,899 --> 00:09:29,669 position:50%
made our API more compatible
with Swift concurrency.


218
00:09:29,669 --> 00:09:32,172 line:0
"Meet Core Location Monitor"
further discusses


219
00:09:32,172 --> 00:09:34,374 line:0
new developments
in monitoring APIs,


220
00:09:34,374 --> 00:09:37,243 position:50%
and how we've reimagined
the ways an app can get notified


221
00:09:37,243 --> 00:09:40,947 line:0
about events such as
geographic entries and exits.


222
00:09:40.947 --> 00:09:43.283 line:-1 position:50%
If location is something
you care about for your app,


223
00:09:43,283 --> 00:09:46,586 line:-1
I am certain that you'll find
these to be time well spent.


224
00:09:46.586 --> 00:09:48.922 line:-1 position:50%
xrOS provides
a really cool experience


225
00:09:48,922 --> 00:09:50,657 line:-1
that I'm sure many of you
have been anticipating


226
00:09:50.657 --> 00:09:52.325 line:-1 position:50%
for quite some time.


227
00:09:52.325 --> 00:09:54.294 line:-1 position:50%
We have been too,
and we worked hard to ensure


228
00:09:54.294 --> 00:09:57.464 line:-1 position:50%
that you can provide the best
possible user experience


229
00:09:57,464 --> 00:09:58,665 line:-1
both for apps
which were designed


230
00:09:58,665 --> 00:10:00,433 line:-1
specifically for this device,


231
00:10:00,433 --> 00:10:03,470 line:-1
and for those compatible
iPhone or iPad apps.


232
00:10:03,470 --> 00:10:06,239 position:50%
We also want to make sure
that user privacy is respected


233
00:10:06,239 --> 00:10:09,542 line:0
in the best ways possible,
and that a transition


234
00:10:09,542 --> 00:10:11,778 position:50%
to this platform
is as seamless as possible


235
00:10:11,778 --> 00:10:14,447 position:50%
for those of you who have
existing apps in our store.


236
00:10:14,447 --> 00:10:17,550 line:0
Now that said, do consider
how your compatible apps


237
00:10:17,550 --> 00:10:20,286 position:50%
might behave in a scenario when
they don't receive notifications


238
00:10:20,286 --> 00:10:23,756 line:0
about events
like region changes or visits.


239
00:10:23,756 --> 00:10:25,525 line:-1
I definitely encourage you
to watch


240
00:10:25.525 --> 00:10:28.428 line:-1 position:50%
any of the other sessions,
both specific to Core Location


241
00:10:28,428 --> 00:10:30,330 line:-1
and to spatial computing
in general,


242
00:10:30.330 --> 00:10:31.898 line:-1 position:50%
which might pique
your interests.


243
00:10:31,898 --> 00:10:34,133 line:-1
Thank you
and enjoy the rest of WWDC.


244
00:10:34,133 --> 00:10:37,971 align:right line:0 size:2%
♪

