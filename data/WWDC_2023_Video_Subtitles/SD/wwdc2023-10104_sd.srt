2
00:00:01,001 --> 00:00:07,007 line:-1
♪ ♪


3
00:00:10,577 --> 00:00:12,279 line:-1
Alex: Hi, I’m Alex Abramets.


4
00:00:12,346 --> 00:00:15,282 line:-2
Welcome to "Integrate
your media app with HomePod."


5
00:00:15,349 --> 00:00:19,586 line:-2
I am here to present an exciting,
new Siri capability for the Home.


6
00:00:19,653 --> 00:00:23,457 line:-2
Starting with iOS 17,
any HomePod owner will be able to ask Siri


7
00:00:23,524 --> 00:00:27,494 line:-2
to play media using apps installed
on their iPhone or iPad.


8
00:00:27,561 --> 00:00:31,965 line:-2
This new Siri ability will allow apps
currently supporting SiriKit Media Intents


9
00:00:32,032 --> 00:00:35,335 line:-1
to seamlessly play content on HomePod.


10
00:00:35,402 --> 00:00:39,973 line:-2
First, I am going to introduce expanded
support for media apps to play on HomePod.


11
00:00:40,040 --> 00:00:42,976 line:-2
Then, I will cover supported use cases
and experiences


12
00:00:43,043 --> 00:00:45,913 line:-1
and show the best ways to implement them.


13
00:00:45,979 --> 00:00:50,617 line:-2
Lastly, I will talk about how
this capability integrates with the Home.


14
00:00:50,684 --> 00:00:55,255 line:-2
Let's get started by going over
HomePod support for more Media apps.


15
00:00:55,322 --> 00:00:59,793 line:-2
Once HomePod processes a request,
a SiriKit intent is sent to the iPhone,


16
00:00:59,860 --> 00:01:04,264 line:-2
where Siri starts your app and
AirPlays content back to the speaker.


17
00:01:04,331 --> 00:01:08,535 line:-2
We will talk more about AirPlay support
later in this session.


18
00:01:08,602 --> 00:01:11,405 line:-2
To fulfill the request,
HomePod will be communicating


19
00:01:11,471 --> 00:01:14,441 line:-2
with iPhone over Wi-Fi,
which means that devices


20
00:01:14,508 --> 00:01:18,011 line:-2
need to be on the same network
at the time of the request.


21
00:01:18,078 --> 00:01:21,148 line:-2
Devices don’t need to be
in physical proximity.


22
00:01:21,215 --> 00:01:23,417 line:-2
If I am in a living room
talking to my speaker


23
00:01:23,483 --> 00:01:29,656 line:-2
and my phone is charging in the bedroom,
HomePod will successfully play.


24
00:01:29,723 --> 00:01:33,493 line:-2
Siri requests to play media
work with multiple destinations,


25
00:01:33,560 --> 00:01:36,630 line:-2
including most
speakers supporting AirPlay.


26
00:01:36,697 --> 00:01:39,032 line:-2
Any app supporting
SiriKit Media Intents today


27
00:01:39,099 --> 00:01:42,769 line:-2
will be able to use this capability
with no additional changes.


28
00:01:42,836 --> 00:01:44,538 line:-1
Later, I will talk about a few things


29
00:01:44,605 --> 00:01:48,108 line:-2
that can make the user experience
and performance even better.


30
00:01:48,175 --> 00:01:51,812 line:-2
Requests to Play, Add,
and Affinity requests for the apps


31
00:01:51,879 --> 00:01:56,884 line:-2
not natively supported on HomePod,
will be routed to the primary iPhone.


32
00:01:56,950 --> 00:01:58,352 line:-1
Please note that on HomePod,


33
00:01:58,418 --> 00:02:02,589 line:-2
requests to find or search for media
will result in playback.


34
00:02:02,656 --> 00:02:04,458 line:-1
Siri will rely on voice recognition


35
00:02:04,525 --> 00:02:08,228 line:-2
to route requests to the device
of the recognized Home user.


36
00:02:08,295 --> 00:02:11,398 line:-2
In addition, requests
to "like" or "add" songs will work


37
00:02:11,465 --> 00:02:15,903 line:-2
even for content that was AirPlayed
without using Siri.


38
00:02:15,969 --> 00:02:19,873 line:-2
Now many existing media apps
will be available on HomePod,


39
00:02:19,940 --> 00:02:21,008 line:-1
and it’s not just music.


40
00:02:21,074 --> 00:02:22,910 line:-1
Many types of media are supported.


41
00:02:22,976 --> 00:02:27,881 line:-2
Music, audiobooks, podcasts,
radio, meditation, and more.


42
00:02:27,948 --> 00:02:30,517 line:-2
Any app adding new support
for SiriKit Media intents


43
00:02:30,584 --> 00:02:34,221 line:-2
will be automatically supported
on HomePod.


44
00:02:34,288 --> 00:02:37,925 line:-2
Everything your app can do on iOS today
will work on HomePod.


45
00:02:37,991 --> 00:02:41,161 line:-2
For example,
app users can ask to play artists,


46
00:02:41,228 --> 00:02:44,631 line:-1
albums, songs, music genres, and hits.


47
00:02:44,698 --> 00:02:46,633 line:-1
When the app name is used in the request,


48
00:02:46,700 --> 00:02:49,770 line:-2
Siri will check if the app is installed
on your iPhone.


49
00:02:49,837 --> 00:02:53,140 line:-2
If the app is installed,
Siri will establish AirPlay connection


50
00:02:53,207 --> 00:02:56,877 line:-1
and ask the app to start playback.


51
00:02:56,944 --> 00:03:00,480 line:-2
Maybe your app is about
listening to Podcasts or Audiobooks.


52
00:03:00,547 --> 00:03:02,883 line:-2
Now it will be possible
to catch up on the news


53
00:03:02,950 --> 00:03:07,120 line:-2
or continue listening to your current
audiobook on your HomePod.


54
00:03:07,187 --> 00:03:10,524 line:-2
Siri will understand requests
to change speed, fast-forward,


55
00:03:10,591 --> 00:03:12,492 line:-1
and control playback.


56
00:03:12,559 --> 00:03:16,063 line:-2
Requests specific to your app
and not covered by Media intents


57
00:03:16,129 --> 00:03:18,565 line:-1
can be implemented using App Intents.


58
00:03:18,632 --> 00:03:21,001 line:-2
Check out "Explore enhancements
to App Intents"


59
00:03:21,068 --> 00:03:24,037 line:-1
and other related sessions.


60
00:03:24,104 --> 00:03:26,640 line:-1
So how do I add Siri to my app?


61
00:03:26,707 --> 00:03:29,510 line:-2
Let’s go over what is needed
to support SiriKit Media Intents,


62
00:03:29,576 --> 00:03:31,979 line:-2
then talk about making sure
everything works reliably


63
00:03:32,045 --> 00:03:35,082 line:-1
and provides a great experience.


64
00:03:35,148 --> 00:03:38,519 line:-2
Apps with existing support
for Media Intents will just work.


65
00:03:38,585 --> 00:03:41,955 line:-2
For example, if SoundCloud
is installed on your iPhone


66
00:03:42,022 --> 00:03:45,158 line:-2
and you ask HomePod
to play something on SoundCloud,


67
00:03:45,225 --> 00:03:48,362 line:-1
media will play on the speaker.


68
00:03:48,428 --> 00:03:50,664 line:-2
Adding playback support via Siri
to your app


69
00:03:50,731 --> 00:03:52,933 line:-1
includes several simple steps.


70
00:03:53,000 --> 00:03:56,537 line:-2
You’ll need to add an intents extension
and implement a few methods


71
00:03:56,603 --> 00:04:00,140 line:-2
to wire up Siri callbacks
with search and playback.


72
00:04:00,207 --> 00:04:01,642 line:-1
You can find detailed instructions


73
00:04:01,708 --> 00:04:05,612 line:-2
in "Introducing SiriKit Media Intents"
video from 2019


74
00:04:05,679 --> 00:04:11,051 line:-2
and "Expand your SiriKit Media Intents
to more platforms" from 2020.


75
00:04:11,118 --> 00:04:15,022 line:-2
Let’s inspect the code from a sample app
that can play a song.


76
00:04:15,088 --> 00:04:18,892 line:-2
Here, I am checking that the request
was for an entity named "Push it"


77
00:04:18,959 --> 00:04:23,397 line:-1
and, if so, return the media item.


78
00:04:23,463 --> 00:04:24,998 line:-1
Let’s give it a try.


79
00:04:25,065 --> 00:04:28,902 line:-2
Hey Siri, play "Push It"
by Dukes on Control Audio.


80
00:04:28,969 --> 00:04:31,605 line:-2
Siri: "Push It" now playing
from your iPhone.


81
00:04:31,672 --> 00:04:36,810 line:-1
[Duke's "Push It" playing from iPhone]


82
00:04:37,845 --> 00:04:40,180 line:-1
Alex: The song plays as expected!


83
00:04:40,247 --> 00:04:42,249 line:-1
Now let’s ask something else.


84
00:04:42,316 --> 00:04:44,651 line:-1
Hey Siri, play jazz on Control Audio.


85
00:04:44,718 --> 00:04:47,688 line:-2
Siri: I couldn't find that
in your Control Audio library.


86
00:04:47,754 --> 00:04:51,925 line:-2
Alex: This time,
Siri said it didn’t find anything.


87
00:04:51,992 --> 00:04:55,729 line:-2
This happened because the function
returned an "unsupported" response


88
00:04:55,796 --> 00:04:59,266 line:-2
since my app doesn’t support
playing genres.


89
00:04:59,333 --> 00:05:01,668 line:-1
But I can make Siri respond better!


90
00:05:01,735 --> 00:05:05,305 line:-2
I can provide a more specific reason
for not being able to play,


91
00:05:05,372 --> 00:05:09,810 line:-2
like "unsupported media type"
or that the app requires a valid login.


92
00:05:09,877 --> 00:05:15,182 line:-2
For such cases, Siri will give responses
that will aid in resolving the issue.


93
00:05:15,249 --> 00:05:18,352 line:-2
Now, I am going to change my code
and add a guard statement


94
00:05:18,418 --> 00:05:20,721 line:-2
that will return
a more specific error code


95
00:05:20,787 --> 00:05:24,958 line:-2
if the request
was to play any music genre.


96
00:05:25,025 --> 00:05:28,629 line:-1
Hey Siri, play jazz on Control Audio.


97
00:05:28,695 --> 00:05:31,598 line:-2
Siri: Control Audio
doesn't support playing that.


98
00:05:31,665 --> 00:05:34,401 line:-2
Alex: So now, Siri says that the app
doesn’t support playing that,


99
00:05:34,468 --> 00:05:37,337 line:-1
which is a more helpful response.


100
00:05:37,404 --> 00:05:39,973 line:-2
You might be wondering
what will your app receive


101
00:05:40,040 --> 00:05:41,875 line:-1
when a Siri request is made?


102
00:05:41,942 --> 00:05:43,177 line:-1
In the previous examples,


103
00:05:43,243 --> 00:05:46,480 line:-2
we discussed the "mediaName"
and "mediaType" fields.


104
00:05:46,547 --> 00:05:50,684 line:-2
Let’s review some of the most
common intents that your app might get.


105
00:05:50,751 --> 00:05:54,388 line:-2
A simple "Play" with just the app name
will send an intent


106
00:05:54,454 --> 00:05:56,423 line:-1
without any search criteria.


107
00:05:56,490 --> 00:05:59,660 line:-2
Music apps could play
a personal mix or a station.


108
00:05:59,726 --> 00:06:05,132 line:-2
Podcasts and audiobook apps
may resume the last played item.


109
00:06:05,199 --> 00:06:10,437 line:-2
For "Play music in app" requests,
"music" translates into a "mediaType."


110
00:06:10,504 --> 00:06:14,708 line:-2
"Play" request with entity name
will provide a mediaName field only.


111
00:06:14,775 --> 00:06:18,011 line:-2
It will be up to the app to determine
the type of the entity,


112
00:06:18,078 --> 00:06:23,150 line:-2
whether that’s a song, artist,
podcast or something else.


113
00:06:23,217 --> 00:06:25,853 line:-2
Mentioning "song" and its name
will produce a mediaType


114
00:06:25,919 --> 00:06:30,090 line:-1
equal to Song and a mediaName field.


115
00:06:30,157 --> 00:06:33,493 line:-2
This is how asking for "popular hits"
will behave.


116
00:06:33,560 --> 00:06:39,132 line:-2
The media name will be set to "music"
and the sortOrder will be "popular."


117
00:06:39,199 --> 00:06:43,370 line:-2
Asking to play something next will tell
the app to add it to the queue.


118
00:06:43,437 --> 00:06:48,308 line:-2
Notice that "playbackqueuelocation"
has a value of "next."


119
00:06:48,375 --> 00:06:51,111 line:-2
If your app supports news,
podcasts or audiobooks,


120
00:06:51,178 --> 00:06:53,814 line:-2
you may receive requests
like "play my audiobook,"


121
00:06:53,881 --> 00:06:57,451 line:-2
"play the latest news,"
or "play tech news podcast."


122
00:06:57,518 --> 00:07:00,521 line:-2
You should explore and experiment
with the intents produced by Siri


123
00:07:00,587 --> 00:07:05,259 line:-2
for the requests you expect to be sent
to your app.


124
00:07:05,325 --> 00:07:06,693 line:-1
After resolving the results,


125
00:07:06,760 --> 00:07:10,364 line:-2
Siri will execute the "handle" step
in your intents extension.


126
00:07:10,430 --> 00:07:15,836 line:-2
You can return one of the two responses
"handleInApp" and "continueInApp."


127
00:07:15,903 --> 00:07:20,307 line:-2
"HandleInApp" will instruct the system to
start the app and play in the background.


128
00:07:20,374 --> 00:07:24,811 line:-2
"ContinueInApp" will ask the system
to start the app in the foreground.


129
00:07:24,878 --> 00:07:26,513 line:-1
For requests to play Audio,


130
00:07:26,580 --> 00:07:29,316 line:-2
background playback
will result in a better experience


131
00:07:29,383 --> 00:07:32,719 line:-2
since it doesn’t require you
to unlock the phone.


132
00:07:32,786 --> 00:07:35,889 line:-2
When a request is made to HomePod,
it is even more pronounced,


133
00:07:35,956 --> 00:07:38,992 line:-1
since your phone could be nowhere near.


134
00:07:39,059 --> 00:07:41,662 line:-2
Please keep in mind
that your app’s responses


135
00:07:41,728 --> 00:07:44,331 line:-2
to Siri callbacks
should be reasonably fast.


136
00:07:44,398 --> 00:07:47,835 line:-2
Slow requests are often abandoned
or simply time out.


137
00:07:47,901 --> 00:07:51,171 line:-2
Make sure that your app responds
in at most ten seconds.


138
00:07:51,238 --> 00:07:55,475 line:-2
It is preferable to be fast as possible,
but after ten seconds,


139
00:07:55,542 --> 00:07:59,980 line:-2
Siri's response will be generic
and not very helpful.


140
00:08:00,047 --> 00:08:02,216 line:-2
What if you’d like to tell Siri
that you like the song


141
00:08:02,282 --> 00:08:06,386 line:-2
or a podcast,
or wanted to add it to your playlist?


142
00:08:06,453 --> 00:08:10,824 line:-2
Supporting INAddMediaIntent
and INUpdateMediaAffinityIntent


143
00:08:10,891 --> 00:08:14,127 line:-2
will allow your app
to work with these requests.


144
00:08:14,194 --> 00:08:18,098 line:-2
The implementation is very similar
to INPlayMediaIntent.


145
00:08:18,165 --> 00:08:21,301 line:-2
For AirPlayed content,
Siri will send the request to the iPhone


146
00:08:21,368 --> 00:08:24,605 line:-1
of the speaking person.


147
00:08:24,671 --> 00:08:26,974 line:-2
Let’s go over a few things
that can make the integration


148
00:08:27,040 --> 00:08:30,043 line:-1
of your app with Siri more robust.


149
00:08:30,110 --> 00:08:32,913 line:-1
First up is personal app vocabulary.


150
00:08:32,980 --> 00:08:36,083 line:-2
Using personal app vocabulary,
your app can inform the system


151
00:08:36,149 --> 00:08:39,286 line:-2
of user-specific entities
that requests might include.


152
00:08:39,353 --> 00:08:43,891 line:-2
These can include personal playlists,
purchased audiobooks, podcasts,


153
00:08:43,957 --> 00:08:46,894 line:-1
favorite artists, or authors.


154
00:08:46,960 --> 00:08:51,532 line:-2
Normally, only foreground apps can
start playback, but during Siri request,


155
00:08:51,598 --> 00:08:54,501 line:-2
your app can start audio
in the background.


156
00:08:54,568 --> 00:08:55,569 line:-1
For this to work,


157
00:08:55,636 --> 00:08:58,705 line:-2
it is very important to have the audio
session properly configured


158
00:08:58,772 --> 00:09:01,308 line:-1
prior to activating that session.


159
00:09:01,375 --> 00:09:06,613 line:-2
This applies to all supported platforms,
including HomePod, iOS and CarPlay.


160
00:09:06,680 --> 00:09:09,983 line:-2
In this example,
by setting the audio category to playback,


161
00:09:10,050 --> 00:09:13,387 line:-2
the app will inform the system
that it will be playing audio.


162
00:09:13,453 --> 00:09:16,223 line:-2
Audio category, mode,
and route sharing policy


163
00:09:16,290 --> 00:09:21,762 line:-2
will affect how the system handles
audio playback and interruptions.


164
00:09:21,828 --> 00:09:24,932 line:-2
Setting the mode to "spoken audio"
will pause the playback


165
00:09:24,998 --> 00:09:29,336 line:-2
when interrupted instead of temporarily
reducing the volume of your content.


166
00:09:29,403 --> 00:09:34,041 line:-2
This is especially useful for apps
that play podcasts or audiobooks,


167
00:09:34,107 --> 00:09:38,579 line:-2
so that listeners don’t miss
any important parts of the content.


168
00:09:38,645 --> 00:09:41,014 line:-2
Let’s check out what happens
if the audio category


169
00:09:41,081 --> 00:09:45,185 line:-2
is not set to ".playback"
prior to activating the session.


170
00:09:45,252 --> 00:09:48,555 line:-2
Hey, Siri, play "Push It"
by Dukes on Control Audio.


171
00:09:48,622 --> 00:09:51,191 line:-2
Siri: "Push It" now playing
from your iPhone.


172
00:09:51,258 --> 00:09:52,259 line:-1
[Dukes' "Push It" playing from iPhone]


173
00:09:52,326 --> 00:09:54,595 line:-2
Alex: While the app is in the foreground,
the audio plays,


174
00:09:54,661 --> 00:09:56,463 line:-1
but once the app goes into the background,


175
00:09:56,530 --> 00:09:59,466 line:-2
for example when I lock the phone,
playback stops.


176
00:09:59,533 --> 00:10:03,504 line:-2
It works, but not
the way you would expect it to.


177
00:10:03,570 --> 00:10:06,039 line:-2
Let’s find out what happens
if I change my code


178
00:10:06,106 --> 00:10:09,676 line:-1
to correctly configure the audio session.


179
00:10:09,743 --> 00:10:13,380 line:-2
Hey, Siri, play "Push It" by Dukes
on Control Audio.


180
00:10:13,447 --> 00:10:15,616 line:-1
Siri: Here's "Push It" from your iPhone.


181
00:10:15,682 --> 00:10:18,151 line:-1
[Dukes' "Push It" playing from iPhone]


182
00:10:18,218 --> 00:10:21,288 line:-2
Alex: When I lock the phone,
the audio continues playing.


183
00:10:21,355 --> 00:10:26,627 line:-1
♪ ♪


184
00:10:26,693 --> 00:10:28,228 line:-1
[music stops playing]


185
00:10:28,295 --> 00:10:31,965 line:-2
HomePod and iPhone can do many things,
so it is not uncommon


186
00:10:32,032 --> 00:10:35,536 line:-2
for the audio playback from your app
to be interrupted by an incoming call,


187
00:10:35,602 --> 00:10:40,307 line:-2
navigation prompt, Siri requests,
or other apps playing something else.


188
00:10:40,374 --> 00:10:42,309 line:-1
It is important to handle interruptions


189
00:10:42,376 --> 00:10:45,612 line:-2
so that your app can continue playing,
especially when someone across the room


190
00:10:45,679 --> 00:10:49,483 line:-2
is talking to HomePod
and doesn’t have their iPhone handy.


191
00:10:49,550 --> 00:10:52,085 line:-1
Ok, let’s talk about AirPlay.


192
00:10:52,152 --> 00:10:54,955 line:-2
For the system to successfully
AirPlay content from your app,


193
00:10:55,022 --> 00:10:57,324 line:-1
make sure that you do the following:


194
00:10:57,391 --> 00:11:00,894 line:-2
set the audio category, mode,
and route sharing policy appropriately


195
00:11:00,961 --> 00:11:03,063 line:-1
as I talked about earlier,


196
00:11:03,130 --> 00:11:06,633 line:-2
use MPNowPlayingInfoCenter
to inform the system


197
00:11:06,700 --> 00:11:10,270 line:-2
about the currently playing item,
and MPRemoteCommandCenter


198
00:11:10,337 --> 00:11:14,374 line:-2
to receive remote commands,
like play, pause, and skip.


199
00:11:14,441 --> 00:11:18,712 line:-2
These steps will get the media
from your app playing on AirPlay speakers.


200
00:11:18,779 --> 00:11:21,615 line:-2
But since the audio data
is being delivered to another device,


201
00:11:21,682 --> 00:11:22,950 line:-1
the system needs a buffer


202
00:11:23,016 --> 00:11:26,653 line:-2
and will accumulate some data
to ensure smooth playback.


203
00:11:26,720 --> 00:11:31,425 line:-2
This may introduce a delay
each time media is resumed or stopped.


204
00:11:31,491 --> 00:11:35,762 line:-2
Using one of the APIs for buffered
playback will remove this concern.


205
00:11:35,829 --> 00:11:39,233 line:-2
Check out this year's session called
"Tune up your AirPlay experience"


206
00:11:39,299 --> 00:11:41,368 line:-1
for more on this topic.


207
00:11:41,435 --> 00:11:46,874 line:-2
Next, I will talk about additional
considerations for this capability.


208
00:11:46,940 --> 00:11:51,411 line:-2
What if I have multiple iPhones or iPads?
How will Siri know which one to use?


209
00:11:51,478 --> 00:11:54,281 line:-2
The answer is that Siri will route
SiriKit Media requests


210
00:11:54,348 --> 00:11:57,217 line:-2
to the primary iPhone,
which is the one that is set up


211
00:11:57,284 --> 00:12:01,688 line:-2
to share your location under Apple ID
and Find My settings.


212
00:12:01,755 --> 00:12:03,857 line:-2
Since Siri will communicate
with other devices


213
00:12:03,924 --> 00:12:06,159 line:-2
to fulfill these requests,
the requesting user


214
00:12:06,226 --> 00:12:10,531 line:-2
will need to be registered in the Home
and have Recognize My Voice enabled.


215
00:12:10,597 --> 00:12:14,101 line:-1
You can find this setting in the Home app.


216
00:12:14,168 --> 00:12:18,472 line:-2
Enabling Personal Requests
is not required for this feature to work.


217
00:12:18,539 --> 00:12:22,009 line:-2
Keep in mind that if you don’t
have "Recognize My Voice" enabled


218
00:12:22,075 --> 00:12:24,311 line:-1
or you are not registered in the Home,


219
00:12:24,378 --> 00:12:29,816 line:-2
you will not be able to play media
from your or anyone else’s devices.


220
00:12:29,883 --> 00:12:33,187 line:-2
If you just installed the app
or never asked Siri to play from it,


221
00:12:33,253 --> 00:12:38,225 line:-2
the first request to Play using the app
will direct you to your iOS device


222
00:12:38,292 --> 00:12:42,296 line:-2
and request permission
for Siri to access the app data.


223
00:12:42,362 --> 00:12:47,301 line:-2
This permission is only needed for the
first Siri request to Play from your app.


224
00:12:47,367 --> 00:12:51,905 line:-2
Before I let you go,
here are the things you should remember.


225
00:12:51,972 --> 00:12:55,275 line:-2
Adding SiriKit Media intents support
is the one thing that is required


226
00:12:55,342 --> 00:12:57,911 line:-1
for your app to work on HomePod.


227
00:12:57,978 --> 00:13:01,381 line:-2
You can further improve the user
experience by adding Buffered Playback,


228
00:13:01,448 --> 00:13:05,986 line:-2
supporting more complex queries,
and providing Siri with more context.


229
00:13:06,053 --> 00:13:06,987 line:-1
Thank you!


230
00:13:07,054 --> 00:13:09,857 line:-2
I cannot wait to see your apps
working with HomePod!


231
00:13:09,923 --> 00:13:11,925 line:-1
♪ ♪

