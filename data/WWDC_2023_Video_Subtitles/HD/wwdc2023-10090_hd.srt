2
00:00:00.033 --> 00:00:04.004 line:-1 position:50%
♪ Mellow instrumental hip-hop ♪


3
00:00:04,004 --> 00:00:10,210 align:right size:2% position:90%
♪


4
00:00:10.210 --> 00:00:11.278 line:-1 position:50%
Hello!


5
00:00:11,278 --> 00:00:15,148 line:-1
I'm Kellie, and I'm a Platform
Compatibility Engineer.


6
00:00:15.148 --> 00:00:19.253 line:-1 position:50%
iPadOS and iOS
are powerful platforms.


7
00:00:19,253 --> 00:00:22,022 line:-1
You already have
a great app built for them,


8
00:00:22,022 --> 00:00:24,324 line:-1
maybe you even have multiple.


9
00:00:24.324 --> 00:00:26.660 line:-1 position:50%
Now you can easily run
those same apps


10
00:00:26,660 --> 00:00:29,296 line:-1
on Apple's latest platform.


11
00:00:29,296 --> 00:00:33,333 line:-1
The majority of iOS apps
look and feel great


12
00:00:33.333 --> 00:00:35.535 line:-1 position:50%
right out of the box.


13
00:00:35,535 --> 00:00:38,572 line:-1
For example, check out
the iPad Calendar app


14
00:00:38,572 --> 00:00:41,642 line:-1
running unmodified
in the simulator.


15
00:00:41,642 --> 00:00:44,378 line:-1
It looks and feels
just like iPad


16
00:00:44.378 --> 00:00:47.948 line:-1 position:50%
and everything works
exactly as I would expect.


17
00:00:47,948 --> 00:00:50,784 line:-1
I can see different timelines,
zoom into details


18
00:00:50.784 --> 00:00:54.254 line:-1 position:50%
about specific events,
and add new ones.


19
00:01:00.260 --> 00:01:03.130 line:-1 position:50%
And Maps, which runs
in its iPad version


20
00:01:03.130 --> 00:01:06.466 line:-1 position:50%
following the recommendations
I'm about to cover.


21
00:01:06,466 --> 00:01:09,002 line:-1
I can spin the globe
beautifully.


22
00:01:09.002 --> 00:01:13.640 line:-1 position:50%
I can also look up
specific destinations...


23
00:01:20.647 --> 00:01:23.917 line:-1 position:50%
...and visit famous landmarks.


24
00:01:26,920 --> 00:01:30,090 line:-1
In this video, I'll introduce
iPad and iPhone apps


25
00:01:30,090 --> 00:01:32,259 line:-1
on this new platform.


26
00:01:32,259 --> 00:01:34,828 line:-1
I'll start by covering
the built-in behaviors


27
00:01:34.828 --> 00:01:36.830 line:-1 position:50%
your app gets for free.


28
00:01:38.332 --> 00:01:40.600 line:-1 position:50%
Next, I'll talk about
the functional differences


29
00:01:40.600 --> 00:01:45.605 line:-1 position:50%
your app should be aware of and
what you should do about them.


30
00:01:45.605 --> 00:01:47.741 line:-1 position:50%
Finally, I'll explain
how to decide


31
00:01:47,741 --> 00:01:50,310 line:-1
whether the Designed for iPad
experience


32
00:01:50,310 --> 00:01:52,779 line:-1
is best suited
to your app's needs.


33
00:01:55.282 --> 00:01:59.686 line:-1 position:50%
This new platform is built
on the foundations of iOS.


34
00:01:59,686 --> 00:02:04,291 line:-1
We enhance that shared bedrock
with additional system support.


35
00:02:04,291 --> 00:02:07,361 line:-1
The combination of the two
makes it more than likely


36
00:02:07,361 --> 00:02:09,363 line:-1
that your app
will run beautifully


37
00:02:09,363 --> 00:02:13,066 line:-1
without changing anything!


38
00:02:13,066 --> 00:02:15,602 line:-1
iPad and iPhone apps
are displayed as windows


39
00:02:15,602 --> 00:02:18,939 line:-1
on this device,
in their light mode style.


40
00:02:18.939 --> 00:02:22.109 line:-1 position:50%
The system prefers
the iPad variant of your app


41
00:02:22,109 --> 00:02:25,078 line:-1
in landscape orientation,


42
00:02:25,078 --> 00:02:27,547 line:-1
but if your app
only supports iPhone,


43
00:02:27,547 --> 00:02:30,350 line:-1
the system displays it
with an iPhone aspect ratio


44
00:02:30.350 --> 00:02:34.054 line:-1 position:50%
in portrait orientation.


45
00:02:34,054 --> 00:02:36,490 line:-1
If your app supports
multiple orientations,


46
00:02:36,490 --> 00:02:39,793 line:-1
a rotation button is provided
above the top-right corner


47
00:02:39.793 --> 00:02:40.861 line:-1 position:50%
of your window,


48
00:02:40,861 --> 00:02:45,565 line:-1
so people can rotate each scene
to their preference.


49
00:02:45.565 --> 00:02:47.234 line:-1 position:50%
When you grab
the corners of your app,


50
00:02:47,234 --> 00:02:52,272 line:-1
the system scales its window,
preserving the aspect ratio.


51
00:02:52,272 --> 00:02:55,208 line:-1
When you reach the minimum
or maximum size,


52
00:02:55.208 --> 00:02:58.378 line:-1 position:50%
the corners bounce
to reflect that.


53
00:02:58.378 --> 00:03:00.747 line:-1 position:50%
The scaling is managed
by the system


54
00:03:00.747 --> 00:03:05.719 line:-1 position:50%
so your app gets
all of this support for free.


55
00:03:05,719 --> 00:03:10,257 line:-1
People interact with content on
this device via natural input.


56
00:03:10.257 --> 00:03:12.626 line:-1 position:50%
They look at something
and tap their fingers together


57
00:03:12.626 --> 00:03:17.564 line:-1 position:50%
to select it or reach out
and touch content directly.


58
00:03:17,564 --> 00:03:21,868 line:-1
They may also use a Bluetooth
trackpad or game controller.


59
00:03:21.868 --> 00:03:24.571 line:-1 position:50%
All of these system-defined
interaction methods


60
00:03:24,571 --> 00:03:27,574 line:-1
send events that your app
is already familiar with


61
00:03:27.574 --> 00:03:29.309 line:-1 position:50%
so you can continue to leverage


62
00:03:29,309 --> 00:03:34,047 line:-1
the same event-handling
techniques that you already use.


63
00:03:34,047 --> 00:03:37,284 line:-1
System views like the document
manager and photo picker


64
00:03:37.284 --> 00:03:40.187 line:-1 position:50%
match the system appearance
to help your app fit


65
00:03:40.187 --> 00:03:45.659 line:-1 position:50%
into the look and feel
of the platform.


66
00:03:45,659 --> 00:03:48,695 position:50%
If your app supports
Touch ID or Face ID,


67
00:03:48,695 --> 00:03:50,997 line:0
LocalAuthentication
automatically forwards


68
00:03:50,997 --> 00:03:54,267 position:50%
those implementations
through Optic ID


69
00:03:54,267 --> 00:03:57,671 line:0
so your app supports the latest
authentication technology


70
00:03:57,671 --> 00:04:02,175 line:0
without any additional work
on your part.


71
00:04:02,175 --> 00:04:04,578 line:-1
Now, there are a few things
that are different


72
00:04:04,578 --> 00:04:08,715 line:-1
about this platform
compared to iOS.


73
00:04:08.715 --> 00:04:12.919 line:-1 position:50%
Apps on this device can be
viewed in portrait or landscape.


74
00:04:12,919 --> 00:04:15,222 line:-1
That's nothing new
compared to iPad.


75
00:04:15.222 --> 00:04:18.592 line:-1 position:50%
But unlike iPad,
there's no notion of rotating


76
00:04:18,592 --> 00:04:21,061 line:-1
the entire device.


77
00:04:21.061 --> 00:04:23.230 line:-1 position:50%
Because the device's orientation


78
00:04:23.230 --> 00:04:25.999 line:-1 position:50%
doesn't inform
your app's orientation,


79
00:04:25,999 --> 00:04:28,835 line:-1
you may want to specify
which orientation


80
00:04:28.835 --> 00:04:31.838 line:-1 position:50%
your app prefers for new scenes.


81
00:04:31.838 --> 00:04:33.940 line:-1 position:50%
People can still
rotate scenes later


82
00:04:33.940 --> 00:04:36.810 line:-1 position:50%
via the system rotation button.


83
00:04:36,810 --> 00:04:39,279 position:50%
You can express a preference
by adding the new


84
00:04:39,279 --> 00:04:42,716 position:50%
UIPreferredDefaultInterface
Orientation key


85
00:04:42,716 --> 00:04:45,051 line:0
to your app's Info.plist.


86
00:04:45,051 --> 00:04:46,386 position:50%
If you don't provide one,


87
00:04:46,386 --> 00:04:49,789 position:50%
the system will use
its default orientation.


88
00:04:49,789 --> 00:04:52,325 position:50%
This key is unique
to this platform


89
00:04:52,325 --> 00:04:55,629 line:0
and will not affect
other platforms.


90
00:04:55.629 --> 00:04:57.464 line:-1 position:50%
There are a couple
other plist keys


91
00:04:57,464 --> 00:04:59,999 line:-1
that also have special meaning
on this device,


92
00:04:59.999 --> 00:05:02.068 line:-1 position:50%
even though they're not new.


93
00:05:02.068 --> 00:05:05.839 line:-1 position:50%
The system uses
UISupportedInterfaceOrientations


94
00:05:05.839 --> 00:05:10.343 line:-1 position:50%
to decide if your app's windows
need a rotation button,


95
00:05:10,343 --> 00:05:14,181 line:-1
and App Store Connect relies
on UIRequiredDeviceCapabilities


96
00:05:14.181 --> 00:05:18.285 line:-1 position:50%
to determine if your app is
compatible with this new device.


97
00:05:18,285 --> 00:05:21,288 line:-1
All suitable apps are
automatically made available


98
00:05:21.288 --> 00:05:23.356 line:-1 position:50%
on the App Store.


99
00:05:23,356 --> 00:05:25,725 line:-1
If your app relies
on specific features


100
00:05:25,725 --> 00:05:27,561 line:-1
which are not available
on this device


101
00:05:27,561 --> 00:05:29,596 line:-1
or if there's a reason your app
doesn't make sense


102
00:05:29.596 --> 00:05:32.432 line:-1 position:50%
on this platform,
you can manage availability


103
00:05:32.432 --> 00:05:34.401 line:-1 position:50%
in App Store Connect.


104
00:05:34,401 --> 00:05:35,702 line:0
For more information,


105
00:05:35,702 --> 00:05:40,307 position:50%
watch "Explore App Store Connect
for spatial computing."


106
00:05:40,307 --> 00:05:43,977 line:0
Take a moment to add those keys
to your Info.plist if necessary


107
00:05:43,977 --> 00:05:47,113 line:0
or confirm the existing values
are still accurate


108
00:05:47,113 --> 00:05:49,783 line:0
and up to date.


109
00:05:49.783 --> 00:05:51.885 line:-1 position:50%
Gestures on this device
work differently


110
00:05:51,885 --> 00:05:56,823 line:-1
since folks use their eyes and
hands to interact with content.


111
00:05:56.823 --> 00:06:00.293 line:-1 position:50%
There are a maximum
of two simultaneous inputs


112
00:06:00,293 --> 00:06:03,930 line:-1
as each hand
is a distinct touch.


113
00:06:03.930 --> 00:06:07.334 line:-1 position:50%
All system gestures that expect
two touches or fewer


114
00:06:07,334 --> 00:06:09,803 line:-1
work seamlessly.


115
00:06:09,803 --> 00:06:13,273 line:-1
Custom gesture recognizers
are also supported,


116
00:06:13.273 --> 00:06:15.909 line:-1 position:50%
but you may need to update them
to run smoothly


117
00:06:15.909 --> 00:06:20.547 line:-1 position:50%
with the natural
input expectations.


118
00:06:20,547 --> 00:06:23,350 line:-1
One of the most updated
frameworks is ARKit


119
00:06:23.350 --> 00:06:27.854 line:-1 position:50%
which has evolved significantly
to be more powerful than ever.


120
00:06:27.854 --> 00:06:31.891 line:-1 position:50%
We've designed new APIs and
experiences from the ground up


121
00:06:31,891 --> 00:06:34,027 line:-1
to account
for fundamental differences


122
00:06:34.027 --> 00:06:37.897 line:-1 position:50%
in platform architecture
and privacy needs.


123
00:06:37,897 --> 00:06:41,901 line:-1
That means your existing
ARViews and ARSessions


124
00:06:41.901 --> 00:06:46.973 line:-1 position:50%
won't work on this device
as they do on iPad and iPhone.


125
00:06:46,973 --> 00:06:47,807 position:50%
Check out


126
00:06:47,807 --> 00:06:51,211 position:50%
the "Re-imagine your ARKit app
for spatial experiences" video


127
00:06:51,211 --> 00:06:54,781 position:50%
to learn about all the new ARKit
capabilities you can leverage


128
00:06:54,781 --> 00:06:58,885 position:50%
by rebuilding your app
for this platform.


129
00:06:58,885 --> 00:07:02,289 position:50%
Location support for this device
is a lot like iPad:


130
00:07:02,289 --> 00:07:07,327 line:0
location can be approximated
via Wi-Fi or shared via iPhone.


131
00:07:07,327 --> 00:07:08,828 line:0
More details are provided


132
00:07:08,828 --> 00:07:13,400 line:0
in the "Meet Core Location
for spatial computing" video.


133
00:07:13,400 --> 00:07:16,202 line:-1
Look to Dictate is a convenient
new input technique


134
00:07:16.202 --> 00:07:18.638 line:-1 position:50%
that allows people to quickly
navigate through an app


135
00:07:18.638 --> 00:07:21.708 line:-1 position:50%
using only their eyes and voice.


136
00:07:21.708 --> 00:07:23.777 line:-1 position:50%
When enabled,
a microphone icon


137
00:07:23.777 --> 00:07:26.746 line:-1 position:50%
replaces the magnifying glass
in search fields,


138
00:07:26,746 --> 00:07:30,450 line:-1
and you can look at the
microphone and speak to search.


139
00:07:37.991 --> 00:07:40.994 line:-1 position:50%
This API is offered
on search bars.


140
00:07:40.994 --> 00:07:43.997 line:-1 position:50%
It's disabled by default
for iPad and iPhone apps


141
00:07:43.997 --> 00:07:47.734 line:-1 position:50%
running on this platform to
allow you to verify the behavior


142
00:07:47.734 --> 00:07:50.570 line:-1 position:50%
and decide where
you want to enable it.


143
00:07:50.570 --> 00:07:53.440 line:-1 position:50%
And it's a no-op
on iOS and iPadOS,


144
00:07:53,440 --> 00:07:55,775 line:-1
so there's no need
to conditionalize your support


145
00:07:55,775 --> 00:07:58,678 line:-1
by platform.


146
00:07:58,678 --> 00:08:01,548 position:50%
You can enable Look to Dictate
in SwiftUI by adding


147
00:08:01,548 --> 00:08:03,683 line:0
the .searchDictationBehavior()
modifier


148
00:08:03,683 --> 00:08:05,852 line:0
to your searchable view.


149
00:08:05,852 --> 00:08:12,459 position:50%
For UIKit search bars, set
isLookToDictateEnabled to true.


150
00:08:12.459 --> 00:08:15.061 line:-1 position:50%
The best way to handle
all of these changes


151
00:08:15,061 --> 00:08:20,233 line:-1
is the same way you always have:
use availability checks.


152
00:08:20.233 --> 00:08:22.502 line:-1 position:50%
Make sure that a framework
is supported


153
00:08:22.502 --> 00:08:25.105 line:-1 position:50%
before calling into it.


154
00:08:25,105 --> 00:08:27,841 line:-1
Many frameworks even
have those functions built in


155
00:08:27.841 --> 00:08:30.377 line:-1 position:50%
for your convenience.


156
00:08:30,377 --> 00:08:32,112 line:-1
Don't forget to do
the same thing


157
00:08:32,112 --> 00:08:34,948 line:-1
when accessing configurations
that rely on the presence


158
00:08:34.948 --> 00:08:37.083 line:-1 position:50%
of specific hardware.


159
00:08:37,083 --> 00:08:39,652 line:-1
For example, the headset
has many more cameras


160
00:08:39.652 --> 00:08:43.022 line:-1 position:50%
than just the front and back
cameras on iOS devices,


161
00:08:43.022 --> 00:08:46.893 line:-1 position:50%
but not all of those
are available for apps to use.


162
00:08:46.893 --> 00:08:52.499 line:-1 position:50%
Verify that a camera is present
and supported before you use it.


163
00:08:52.499 --> 00:08:56.136 line:-1 position:50%
These practices make your app
more robust on every device,


164
00:08:56.136 --> 00:08:58.204 line:-1 position:50%
not just this one.


165
00:08:58.204 --> 00:09:00.707 line:-1 position:50%
That's only a sampling
of the framework evolution


166
00:09:00,707 --> 00:09:02,709 line:-1
on this platform.


167
00:09:02.709 --> 00:09:04.511 line:-1 position:50%
Some frameworks have grown a lot


168
00:09:04,511 --> 00:09:07,647 line:-1
and have videos specifically
dedicated to this device,


169
00:09:07.647 --> 00:09:11.985 line:-1 position:50%
like SwiftUI, ARKit,
and RealityKit.


170
00:09:11.985 --> 00:09:15.054 line:-1 position:50%
Most of the remaining frameworks
work as they always have


171
00:09:15.054 --> 00:09:17.791 line:-1 position:50%
with a few tweaks
to how you adopt them.


172
00:09:17.791 --> 00:09:20.760 line:-1 position:50%
Detailed information about
all of the modified frameworks


173
00:09:20.760 --> 00:09:24.464 line:-1 position:50%
is available in
the developer documentation.


174
00:09:24.464 --> 00:09:26.433 line:-1 position:50%
Now that you have a sense
of what code changes


175
00:09:26,433 --> 00:09:30,069 line:-1
are necessary for your app,
you're ready for action.


176
00:09:30.069 --> 00:09:32.639 line:-1 position:50%
When the xrOS SDK is installed,


177
00:09:32,639 --> 00:09:36,976 line:-1
Xcode automatically adds
xrOS Device (Designed for iPad)


178
00:09:36,976 --> 00:09:38,878 line:-1
to the Supported Destinations


179
00:09:38,878 --> 00:09:42,749 line:-1
for projects that use
the iOS SDK.


180
00:09:42.749 --> 00:09:46.820 line:-1 position:50%
If your scheme sets a different
platform or auto for the SDK,


181
00:09:46.820 --> 00:09:50.890 line:-1 position:50%
you can add the Designed
for iPad target manually.


182
00:09:50,890 --> 00:09:51,991 line:-1
Once that's set up,


183
00:09:51,991 --> 00:09:54,527 line:-1
a run destination
with the matching name


184
00:09:54,527 --> 00:09:57,397 line:-1
will appear
in the destination picker.


185
00:09:57.397 --> 00:10:00.533 line:-1 position:50%
Select that target,
build, and run.


186
00:10:00,533 --> 00:10:03,903 line:-1
That's all there is to it!


187
00:10:03.903 --> 00:10:06.973 line:-1 position:50%
iPad and iPhone apps provide
a fantastic experience


188
00:10:06,973 --> 00:10:08,908 line:-1
on this device.


189
00:10:08.908 --> 00:10:11.544 line:-1 position:50%
Most apps don't need
any changes at all,


190
00:10:11.544 --> 00:10:14.747 line:-1 position:50%
thanks to extensive
system support.


191
00:10:14.747 --> 00:10:16.583 line:-1 position:50%
Whether you want to stick
with building your app


192
00:10:16.583 --> 00:10:21.287 line:-1 position:50%
against the iOS SDK or rebuild
against the xrOS SDK


193
00:10:21,287 --> 00:10:24,224 line:-1
depends on your goals.


194
00:10:24,224 --> 00:10:25,758 position:50%
Like I discussed earlier,


195
00:10:25,758 --> 00:10:27,494 position:50%
there are differences
in which frameworks


196
00:10:27,494 --> 00:10:30,997 position:50%
are available for each SDK,
as well as differences


197
00:10:30,997 --> 00:10:34,367 position:50%
in supported features
within each framework.


198
00:10:34,367 --> 00:10:36,336 position:50%
There are two big things
I want to call out


199
00:10:36,336 --> 00:10:39,806 line:0
that are only available
in the iOS SDK:


200
00:10:39,806 --> 00:10:42,876 line:0
SpriteKit and storyboards.


201
00:10:42,876 --> 00:10:46,646 position:50%
If either of these technologies
is integral to your app,


202
00:10:46,646 --> 00:10:50,416 position:50%
you need to stick
with designing for iPad.


203
00:10:50.416 --> 00:10:52.819 line:-1 position:50%
iPad and iPhone apps
are displayed in windows


204
00:10:52.819 --> 00:10:56.890 line:-1 position:50%
that feel just like iPad
in their light mode style.


205
00:10:56.890 --> 00:10:58.191 line:-1 position:50%
Here's what Maps looks like


206
00:10:58,191 --> 00:11:01,427 line:-1
when zoomed into
the Sydney Opera House.


207
00:11:01.427 --> 00:11:03.496 line:-1 position:50%
Notice how the content
fills all the way


208
00:11:03.496 --> 00:11:07.534 line:-1 position:50%
to the edges of the window
but doesn't extend past it,


209
00:11:07.534 --> 00:11:10.403 line:-1 position:50%
and all of the colors match
the same light mode style


210
00:11:10.403 --> 00:11:14.974 line:-1 position:50%
that Maps uses
on iPad and iPhone.


211
00:11:14,974 --> 00:11:17,977 line:0
Apps designed for xrOS
unlock another level


212
00:11:17,977 --> 00:11:21,414 line:0
of immersive,
spatial experiences.


213
00:11:21,414 --> 00:11:24,350 line:0
Several frameworks,
like ARKit and RealityKit,


214
00:11:24,350 --> 00:11:27,287 line:0
have evolved functionality
that's only available


215
00:11:27,287 --> 00:11:30,323 position:50%
in apps designed
for this platform.


216
00:11:30,323 --> 00:11:33,192 position:50%
Refer to the other videos
or the documentation


217
00:11:33,192 --> 00:11:35,261 line:0
to learn about
all the new experiences


218
00:11:35,261 --> 00:11:39,766 position:50%
that are possible
thanks to these updates.


219
00:11:39.766 --> 00:11:41.634 line:-1 position:50%
In addition to windows,


220
00:11:41.634 --> 00:11:44.837 line:-1 position:50%
apps designed for this device
also support volumes


221
00:11:44,837 --> 00:11:47,407 line:-1
to display 3D objects
in containers


222
00:11:47.407 --> 00:11:49.876 line:-1 position:50%
that grow to fit their contents,


223
00:11:49.876 --> 00:11:54.047 line:-1 position:50%
as well as Immersive Spaces
for immersive experiences.


224
00:11:54.047 --> 00:11:56.115 line:-1 position:50%
Here's what the Keynote
rehearsal space looks like


225
00:11:56,115 --> 00:11:58,051 line:-1
in headset.


226
00:11:58,051 --> 00:12:00,420 line:-1
By hiding passthrough
and other apps,


227
00:12:00.420 --> 00:12:03.156 line:-1 position:50%
Keynote keeps you fully
immersed and focused


228
00:12:03,156 --> 00:12:05,792 line:-1
on your presentation.


229
00:12:05,792 --> 00:12:08,261 line:-1
In both the headset
and the simulator,


230
00:12:08.261 --> 00:12:12.865 line:-1 position:50%
apps designed for this platform
use the system look and feel.


231
00:12:12.865 --> 00:12:14.968 line:-1 position:50%
Their backgrounds
are a glass material


232
00:12:14,968 --> 00:12:17,236 line:-1
that grounds people
in their surroundings


233
00:12:17,236 --> 00:12:20,940 line:-1
and dynamically adjusts
color balance and contrast


234
00:12:20.940 --> 00:12:23.476 line:-1 position:50%
to promote legibility.


235
00:12:23,476 --> 00:12:27,814 position:50%
They can also take advantage
of the new Ornament API.


236
00:12:27,814 --> 00:12:32,619 position:50%
Like the tab bar on the left and
buttons at the bottom of Photos,


237
00:12:32,619 --> 00:12:34,787 position:50%
ornaments anchor
to the sides of a window


238
00:12:34,787 --> 00:12:36,956 line:0
to enhance its functionality.


239
00:12:36,956 --> 00:12:40,727 position:50%
And they leave the app more room
to draw within the window.


240
00:12:40,727 --> 00:12:47,100 position:50%
Most frequently, ornaments are
used for navigation or toolbars.


241
00:12:47,100 --> 00:12:50,670 line:0
Designing for xrOS is perfect
for apps that want to create


242
00:12:50,670 --> 00:12:54,907 line:0
immersive experiences, adopt
new framework functionality,


243
00:12:54,907 --> 00:12:57,910 position:50%
or match the system
look and feel.


244
00:12:57,910 --> 00:13:00,880 position:50%
If you would rather preserve
your app's existing experience,


245
00:13:00,880 --> 00:13:04,183 line:0
designing for iPad
is the road for you.


246
00:13:04,183 --> 00:13:08,655 line:-1
This platform shares a common
foundation with iOS and iPadOS,


247
00:13:08,655 --> 00:13:10,923 line:-1
so no matter which SDK
you choose,


248
00:13:10.923 --> 00:13:13.092 line:-1 position:50%
the work you do
for those platforms


249
00:13:13.092 --> 00:13:17.130 line:-1 position:50%
will continue to benefit
your experience on this one.


250
00:13:17,130 --> 00:13:19,732 line:0
If you decide that designing
for this new platform


251
00:13:19,732 --> 00:13:21,668 line:0
is the best fit for your app,


252
00:13:21,668 --> 00:13:24,103 line:0
the "Meet SwiftUI
for spatial computing"


253
00:13:24,103 --> 00:13:26,706 position:50%
and "Meet UIKit
for spatial computing" videos


254
00:13:26,706 --> 00:13:30,109 line:0
are great places to start.


255
00:13:30,109 --> 00:13:31,811 line:-1
Your next step
is to try your app


256
00:13:31.811 --> 00:13:34.313 line:-1 position:50%
on this exciting new platform!


257
00:13:34.313 --> 00:13:38.885 line:-1 position:50%
The vast majority of apps work
without any code changes at all.


258
00:13:38,885 --> 00:13:43,122 line:-1
Pay special attention to the
compatibility areas I covered:


259
00:13:43,122 --> 00:13:45,858 line:-1
ensure your Info.plist keys
are up to date,


260
00:13:45,858 --> 00:13:47,760 line:-1
opt into new platform
experiences


261
00:13:47.760 --> 00:13:49.362 line:-1 position:50%
you're interested in,


262
00:13:49,362 --> 00:13:51,364 line:-1
and verify that
your framework dependencies


263
00:13:51.364 --> 00:13:55.268 line:-1 position:50%
are available
before you use them.


264
00:13:55.268 --> 00:13:56.803 line:-1 position:50%
Once you've done all that, watch


265
00:13:56,803 --> 00:14:00,273 line:-1
"Enhance your iPad and iPhone
apps for the Shared Space"


266
00:14:00,273 --> 00:14:02,175 line:-1
to learn how
to make your iOS app


267
00:14:02.175 --> 00:14:05.344 line:-1 position:50%
feel right at home
on this device.


268
00:14:05,344 --> 00:14:06,412 line:-1
Thanks for watching,


269
00:14:06.412 --> 00:14:09.816 line:-1 position:50%
and I look forward to trying
your app on this new platform.


270
00:14:09,816 --> 00:14:13,853 align:right size:2% position:90%
♪

