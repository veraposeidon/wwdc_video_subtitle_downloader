2
00:00:00.033 --> 00:00:04.037 line:-1 position:50%
♪ Mellow instrumental hip-hop ♪


3
00:00:04,037 --> 00:00:09,910 line:0 position:90% size:2%
♪


4
00:00:09.910 --> 00:00:12.012 line:-1 position:50%
Hi, I'm Dhruv Govil,


5
00:00:12.012 --> 00:00:13.547 line:-1 position:50%
a 3D Software Engineer.


6
00:00:13,547 --> 00:00:15,515 line:-1
And in this session,
I'll be walking you through


7
00:00:15,515 --> 00:00:16,683 line:-1
what's new and exciting


8
00:00:16.683 --> 00:00:20.888 line:-1 position:50%
in our 3D Content Technologies
ecosystem on our platforms.


9
00:00:20.888 --> 00:00:24.825 line:-1 position:50%
3D is an amazing form of media,
and it's even more important


10
00:00:24.825 --> 00:00:28.195 line:-1 position:50%
with the introduction of xrOS,
where the third dimension


11
00:00:28.195 --> 00:00:31.164 line:-1 position:50%
will allow for even more
immersive experiences.


12
00:00:31,164 --> 00:00:34,268 line:-1
It's become far more accessible
for everyone to get started


13
00:00:34.268 --> 00:00:37.037 line:-1 position:50%
with creating amazing visuals
on Apple computers


14
00:00:37,037 --> 00:00:41,008 line:-1
they have at home or even the
ones in your hands like an iPad.


15
00:00:41,008 --> 00:00:43,343 line:-1
To enable this wave
of creative content,


16
00:00:43.343 --> 00:00:45.479 line:-1 position:50%
we've been building on
the foundation based on


17
00:00:45.479 --> 00:00:50.083 line:-1 position:50%
the key technologies that power
the creative industry worldwide.


18
00:00:50,083 --> 00:00:53,353 line:-1
The first of these technologies
is Universal Scene Description,


19
00:00:53,353 --> 00:00:54,855 line:-1
or USD for short.


20
00:00:54.855 --> 00:00:58.025 line:-1 position:50%
It allows for a standard form
of representing 3D content


21
00:00:58,025 --> 00:00:59,927 line:-1
to share between applications.


22
00:00:59.927 --> 00:01:03.497 line:-1 position:50%
And we're now also introducing
support for MaterialX on xrOS


23
00:01:03.497 --> 00:01:07.067 line:-1 position:50%
to portably represent the visual
appearance of objects.


24
00:01:07,067 --> 00:01:10,270 line:-1
USD is an open source project,
created by Pixar,


25
00:01:10.270 --> 00:01:12.606 line:-1 position:50%
recently renamed to OpenUSD.


26
00:01:12.606 --> 00:01:15.175 line:-1 position:50%
It is production proven
and scales from creators


27
00:01:15.175 --> 00:01:17.511 line:-1 position:50%
making single assets
to large studios


28
00:01:17,511 --> 00:01:20,047 line:-1
working on AAA games and films.


29
00:01:20.047 --> 00:01:21.748 line:-1 position:50%
USD allows for expressing


30
00:01:21.748 --> 00:01:23.684 line:-1 position:50%
complex and flexible
relationships


31
00:01:23.684 --> 00:01:26.687 line:-1 position:50%
between asset data
via composition.


32
00:01:26,687 --> 00:01:28,789 line:-1
Apple was
an early adopter of USD,


33
00:01:28,789 --> 00:01:33,093 line:-1
adding it to our platforms in
2017 and growing support since.


34
00:01:33,093 --> 00:01:37,564 line:-1
Today, USD is at the heart
of 3D Content on xrOS.


35
00:01:37.564 --> 00:01:40.067 line:-1 position:50%
MaterialX is also
an open source project,


36
00:01:40.067 --> 00:01:41.969 line:-1 position:50%
created at
Industrial Light & Magic


37
00:01:41.969 --> 00:01:43.503 line:-1 position:50%
for their work on Star Wars,


38
00:01:43.503 --> 00:01:46.340 line:-1 position:50%
now developed in conjunction
with others like Autodesk


39
00:01:46.340 --> 00:01:49.476 line:-1 position:50%
and adopted by
the Academy Software Foundation.


40
00:01:49.476 --> 00:01:52.913 line:-1 position:50%
It allows artists to combine
shader logic into a node graph


41
00:01:52,913 --> 00:01:54,915 line:-1
within their 3D applications,


42
00:01:54,915 --> 00:01:57,084 line:-1
all without needing
to know how to code.


43
00:01:57,084 --> 00:01:59,920 line:-1
This graph can also be
embedded inside USD,


44
00:01:59.920 --> 00:02:02.289 line:-1 position:50%
so it travels
with your scene data.


45
00:02:02.289 --> 00:02:06.059 line:-1 position:50%
We're supporting MaterialX
first on xrOS with RealityKit,


46
00:02:06,059 --> 00:02:08,862 line:-1
Apple's real-time
3D rendering framework


47
00:02:08.862 --> 00:02:12.165 line:-1 position:50%
for building immersive
spatial experiences.


48
00:02:12,165 --> 00:02:14,401 line:-1
We have four areas to cover
as we discover


49
00:02:14.401 --> 00:02:17.337 line:-1 position:50%
how these 3D content
technologies can be used.


50
00:02:17,337 --> 00:02:19,639 line:-1
To start, we'll go over
how our applications


51
00:02:19.639 --> 00:02:22.809 line:-1 position:50%
are enabling new uses
for 3D content.


52
00:02:22.809 --> 00:02:26.279 line:-1 position:50%
Next, we dive deeper into
how we support MaterialX


53
00:02:26.279 --> 00:02:29.616 line:-1 position:50%
as well as color management
in RealityKit.


54
00:02:29.616 --> 00:02:32.519 line:-1 position:50%
Finally, we'll return to USD
and go over the changes


55
00:02:32.519 --> 00:02:35.288 line:-1 position:50%
that you should be aware
of since last year.


56
00:02:35,288 --> 00:02:38,191 line:-1
Let's begin by looking
at the new ways you can use 3D


57
00:02:38,191 --> 00:02:39,593 line:-1
in our applications,


58
00:02:39,593 --> 00:02:42,796 line:-1
before we get into the
technologies that power them.


59
00:02:42,796 --> 00:02:44,464 line:-1
Building on the success
of Quick Look


60
00:02:44.464 --> 00:02:46.533 line:-1 position:50%
for USDZ files on iOS,


61
00:02:46,533 --> 00:02:49,036 line:-1
we're now bringing
Quick Look to xrOS.


62
00:02:49,036 --> 00:02:51,805 line:-1
It's so simple to just open up
a USDZ file


63
00:02:51,805 --> 00:02:54,741 line:-1
and see it beautifully
and spatially represented,


64
00:02:54.741 --> 00:02:56.810 line:-1 position:50%
walking around it
and connecting it


65
00:02:56,810 --> 00:02:58,645 line:-1
to your surroundings.


66
00:02:58,645 --> 00:03:01,882 line:-1
We have a great talk as well
on how to easily author content


67
00:03:01,882 --> 00:03:04,684 line:-1
that will look great
on this new platform.


68
00:03:04,684 --> 00:03:06,753 line:-1
Last year,
we introduced Freeform,


69
00:03:06,753 --> 00:03:09,623 line:-1
a powerful and easy-to-use
brainstorming app.


70
00:03:09,623 --> 00:03:13,093 line:-1
Freeform now gives you the
ability to embed USDZ content,


71
00:03:13,093 --> 00:03:15,529 line:-1
so you can now collaborate
on your 3D assets


72
00:03:15,529 --> 00:03:17,431 line:-1
just like you would
for other content types,


73
00:03:17.431 --> 00:03:22.369 line:-1 position:50%
across all supported platforms
like macOS, iOS, iPadOS,


74
00:03:22.369 --> 00:03:24.938 line:-1 position:50%
and now xrOS.


75
00:03:24,938 --> 00:03:27,741 line:-1
Safari also introduces
new support for 3D Content


76
00:03:27,741 --> 00:03:29,109 line:-1
with the Model element.


77
00:03:29,109 --> 00:03:31,945 line:-1
The Model element is available
on all Apple platforms


78
00:03:31.945 --> 00:03:34.915 line:-1 position:50%
with Safari and can be enabled
under the Developer menu


79
00:03:34.915 --> 00:03:37.984 line:-1 position:50%
on macOS or Settings
on other platforms.


80
00:03:37,984 --> 00:03:40,120 line:-1
Just as easy to use
as the audio,


81
00:03:40,120 --> 00:03:42,155 line:-1
video, and image elements,
the Model element


82
00:03:42.155 --> 00:03:45.158 line:-1 position:50%
lets you embed a USDZ file
into your web page


83
00:03:45.158 --> 00:03:46.693 line:-1 position:50%
with an interactive view,


84
00:03:46,693 --> 00:03:49,229 line:-1
with the ability to rotate
around objects.


85
00:03:49,229 --> 00:03:52,099 line:-1
This allows creation
of more interactive websites,


86
00:03:52.099 --> 00:03:54.568 line:-1 position:50%
providing your users
incredible experiences


87
00:03:54,568 --> 00:03:57,437 line:-1
no matter which of the supported
devices they're on.


88
00:03:57.437 --> 00:04:00.273 line:-1 position:50%
We're working with the W3C
Immersive Web Working Group


89
00:04:00,273 --> 00:04:02,442 line:-1
on standardization.


90
00:04:02,442 --> 00:04:04,678 line:-1
We also have
Reality Composer Pro,


91
00:04:04,678 --> 00:04:07,414 line:-1
a new macOS application
joining our suite of tools


92
00:04:07,414 --> 00:04:09,583 line:-1
for creators and developers.


93
00:04:09.583 --> 00:04:12.018 line:-1 position:50%
Using USD's
composition features,


94
00:04:12,018 --> 00:04:14,588 line:-1
it lets multiple people
work in parallel,


95
00:04:14,588 --> 00:04:17,924 line:-1
enabling each person to tackle
a different aspect of the scene


96
00:04:17.924 --> 00:04:21.561 line:-1 position:50%
and see them combined together
as each asset updates.


97
00:04:21,561 --> 00:04:23,430 line:-1
Assets can be authored to USD


98
00:04:23,430 --> 00:04:25,665 line:-1
in your own content creation
applications,


99
00:04:25.665 --> 00:04:28.101 line:-1 position:50%
and Reality Composer Pro
lets you prepare them


100
00:04:28.101 --> 00:04:31.037 line:-1 position:50%
for use in xrOS apps
and experiences.


101
00:04:31.037 --> 00:04:33.173 line:-1 position:50%
Check out our
Reality Composer Pro sessions


102
00:04:33.173 --> 00:04:34.908 line:-1 position:50%
to learn more.


103
00:04:34,908 --> 00:04:37,010 line:-1
As important
as the 3D models you make


104
00:04:37.010 --> 00:04:38.945 line:-1 position:50%
is the shaders and materials
that give them


105
00:04:38,945 --> 00:04:41,448 line:-1
the individual
visual aesthetic.


106
00:04:41.448 --> 00:04:44.718 line:-1 position:50%
MaterialX gives you the power
to have bespoke visuals


107
00:04:44,718 --> 00:04:47,254 line:-1
that can be transported
inside your USD scenes


108
00:04:47,254 --> 00:04:51,324 line:-1
into RealityKit applications
on xrOS.


109
00:04:51,324 --> 00:04:54,327 line:0
Reality Composer Pro
introduces a Shader Graph


110
00:04:54,327 --> 00:04:58,131 line:0
that authors MaterialX nodes
embedded inside of USD files.


111
00:04:58,131 --> 00:05:00,233 position:50%
This enables the creation
of shaders


112
00:05:00,233 --> 00:05:04,271 position:50%
using an interactive node graph
to compose the shader logic.


113
00:05:04,271 --> 00:05:06,306 line:0
MaterialX shader graphs
are how creators


114
00:05:06,306 --> 00:05:10,510 line:0
will be constructing custom
shaders for xrOS content.


115
00:05:10,510 --> 00:05:13,446 line:-1
In addition to many of
the standard MaterialX nodes,


116
00:05:13,446 --> 00:05:16,650 line:-1
Reality Composer Pro also has
a few custom MaterialX nodes


117
00:05:16.650 --> 00:05:21.154 line:-1 position:50%
that enable a range of
xrOS-specific platform features.


118
00:05:21,154 --> 00:05:24,457 line:-1
Some of these shader nodes are:
RealityKit PBR,


119
00:05:24.457 --> 00:05:26.493 line:-1 position:50%
our physically based
rendering shader


120
00:05:26.493 --> 00:05:29.763 line:-1 position:50%
which enables
realistic-looking 3D content;


121
00:05:29.763 --> 00:05:32.032 line:-1 position:50%
RealityKit Unlit,
an unlit shader


122
00:05:32.032 --> 00:05:34.000 line:-1 position:50%
that lets you do more
stylized shading;


123
00:05:34.000 --> 00:05:36.069 line:-1 position:50%
Geometry Modifiers
that allow us to modify


124
00:05:36,069 --> 00:05:37,938 line:-1
surface deformations;


125
00:05:37.938 --> 00:05:40.607 line:-1 position:50%
as well as several
custom utility nodes.


126
00:05:40,607 --> 00:05:42,275 line:0
We have a great
developer session


127
00:05:42,275 --> 00:05:44,744 position:50%
on how to use the Shader Graph
to get you up and running


128
00:05:44,744 --> 00:05:47,547 line:0
with creating custom looks
for your assets.


129
00:05:47.547 --> 00:05:49.549 line:-1 position:50%
Support for MaterialX
with USD grows


130
00:05:49.549 --> 00:05:52.319 line:-1 position:50%
across established
third-party 3D applications,


131
00:05:52.319 --> 00:05:53.954 line:-1 position:50%
like SideFX's Houdini


132
00:05:53.954 --> 00:05:56.856 line:-1 position:50%
and LookdevX
in Autodesk's Maya, shown here.


133
00:05:56.856 --> 00:05:59.593 line:-1 position:50%
Reality Composer Pro then
lets you preview your shaders


134
00:05:59.593 --> 00:06:03.230 line:-1 position:50%
to see how they'll look before
deploying to your device.


135
00:06:03.230 --> 00:06:06.600 line:-1 position:50%
As I mentioned, MaterialX
is an open source project


136
00:06:06.600 --> 00:06:09.369 line:-1 position:50%
which enables creators
and developers to make use of it


137
00:06:09.369 --> 00:06:12.205 line:-1 position:50%
in their own workflows
and applications directly.


138
00:06:12.205 --> 00:06:14.274 line:-1 position:50%
The MaterialX project
includes support


139
00:06:14,274 --> 00:06:18,144 line:-1
for generating shader code
from your MaterialX node graphs.


140
00:06:18,144 --> 00:06:20,180 line:-1
Apple has added support
to the project


141
00:06:20,180 --> 00:06:22,616 line:-1
for creating Metal shader code
to make the most use


142
00:06:22,616 --> 00:06:24,918 line:-1
of our powerful GPUs.


143
00:06:24.918 --> 00:06:29.456 line:-1 position:50%
This is now available
in the MaterialX 1.38.7 release.


144
00:06:29,456 --> 00:06:32,859 line:-1
For developers who use USD,
this also enables the future use


145
00:06:32.859 --> 00:06:36.630 line:-1 position:50%
of MaterialX
within USD on macOS.


146
00:06:36,630 --> 00:06:39,432 line:-1
Having confidence in how your
shaders behave is important,


147
00:06:39.432 --> 00:06:42.502 line:-1 position:50%
but so is having confidence
in what your colors look like.


148
00:06:42,502 --> 00:06:45,071 line:-1
So we've expanded our handling
of color space management


149
00:06:45.071 --> 00:06:46.573 line:-1 position:50%
for RealityKit,


150
00:06:46,573 --> 00:06:49,009 line:-1
so you can make
accurate-looking 3D content


151
00:06:49.009 --> 00:06:52.078 line:-1 position:50%
capable of using
our wide gamut color range.


152
00:06:52.078 --> 00:06:56.116 line:-1 position:50%
But first, a quick recap of why
color spaces are important.


153
00:06:56.116 --> 00:06:58.718 line:-1 position:50%
Color spaces are how
graphics programs understand


154
00:06:58,718 --> 00:07:01,621 line:-1
how to represent colors
from digital values,


155
00:07:01,621 --> 00:07:04,157 line:-1
including the range
of colors available.


156
00:07:04.157 --> 00:07:05.959 line:-1 position:50%
This allows
multiple applications


157
00:07:05,959 --> 00:07:08,962 line:-1
to reliably display
and edit the same colors.


158
00:07:08,962 --> 00:07:12,999 line:-1
Apple displays primarily use
Display P3 as their color space,


159
00:07:12,999 --> 00:07:17,570 line:-1
whereas many other platforms may
use the more commonplace sRGB.


160
00:07:17.570 --> 00:07:21.341 line:-1 position:50%
DisplayP3 marries the wider
primary range of digital cinema


161
00:07:21,341 --> 00:07:24,778 line:-1
with the sRGB gamma curves
used by computer displays.


162
00:07:24.778 --> 00:07:26.746 line:-1 position:50%
In fact, it's capable
of displaying


163
00:07:26.746 --> 00:07:30.450 line:-1 position:50%
up to 25 percent more colors
than traditional sRGB,


164
00:07:30,450 --> 00:07:32,152 line:-1
shown here as the black line


165
00:07:32,152 --> 00:07:35,188 line:-1
within the greater
Display P3 color space.


166
00:07:35.188 --> 00:07:37.757 line:-1 position:50%
This allows for representing
more of the colors we see


167
00:07:37,757 --> 00:07:39,025 line:-1
in the real world,


168
00:07:39.025 --> 00:07:41.061 line:-1 position:50%
such as the vibrant feathers
of a parrot,


169
00:07:41.061 --> 00:07:44.064 line:-1 position:50%
or the deep colors
of your favorite clothes.


170
00:07:44.064 --> 00:07:47.367 line:-1 position:50%
Most color and image workflows
tend to use sRGB,


171
00:07:47,367 --> 00:07:49,569 line:-1
which represents a standard
range of colors


172
00:07:49.569 --> 00:07:52.005 line:-1 position:50%
used by many monitors
for decades.


173
00:07:52.005 --> 00:07:54.908 line:-1 position:50%
These are still capable of
creating good-looking content,


174
00:07:54.908 --> 00:07:57.477 line:-1 position:50%
but can't take full advantage
of the beautiful,


175
00:07:57.477 --> 00:08:01.548 line:-1 position:50%
wider-range displays
that Apple products ship with.


176
00:08:01.548 --> 00:08:04.851 line:-1 position:50%
If you instead make use
of the Display P3 color profile,


177
00:08:04.851 --> 00:08:06.786 line:-1 position:50%
you're now able to use
the wider color range


178
00:08:06,786 --> 00:08:09,723 line:-1
that RealityKit can provide
on these displays.


179
00:08:09,723 --> 00:08:11,825 line:-1
Textures authored
with Display P3 in mind,


180
00:08:11.825 --> 00:08:13.993 line:-1 position:50%
and appropriately tagged,
are able to express


181
00:08:13.993 --> 00:08:16.062 line:-1 position:50%
a much larger range of colors,


182
00:08:16.062 --> 00:08:18.832 line:-1 position:50%
with deeper and more
saturated tones.


183
00:08:18.832 --> 00:08:21.234 line:-1 position:50%
This effect may be subtle,
but allows for the creation


184
00:08:21.234 --> 00:08:24.037 line:-1 position:50%
of more vibrant
and authentic-looking assets.


185
00:08:24.037 --> 00:08:27.374 line:-1 position:50%
Notice the richer reds
and the lush greens.


186
00:08:27.374 --> 00:08:29.576 line:-1 position:50%
Most importantly,
color space tagging


187
00:08:29.576 --> 00:08:31.778 line:-1 position:50%
means your colors are accurate
to what you saw


188
00:08:31,778 --> 00:08:33,146 line:-1
when you made your content,


189
00:08:33.146 --> 00:08:35.415 line:-1 position:50%
avoiding accidental
color shifts.


190
00:08:35,415 --> 00:08:37,917 line:-1
MaterialX and Color Management
are great new additions


191
00:08:37,917 --> 00:08:39,853 line:-1
to our USD ecosystem.


192
00:08:39,853 --> 00:08:42,389 line:-1
We also have more to share
about what's new in USD


193
00:08:42.389 --> 00:08:45.525 line:-1 position:50%
for our platforms
and the greater ecosystem.


194
00:08:45,525 --> 00:08:47,527 line:-1
All our first
party applications,


195
00:08:47.527 --> 00:08:49.396 line:-1 position:50%
such as Motion and Quick Look,


196
00:08:49.396 --> 00:08:53.299 line:-1 position:50%
now benefit from an updated
and more efficient USD version.


197
00:08:53,299 --> 00:08:56,069 line:-1
USD supports a wide range
of object types,


198
00:08:56,069 --> 00:08:58,004 line:-1
also known as schemas.


199
00:08:58.004 --> 00:09:00.840 line:-1 position:50%
This update also allows
the Storm renderer in Preview


200
00:09:00.840 --> 00:09:02.609 line:-1 position:50%
on macOS to support rendering


201
00:09:02,609 --> 00:09:05,445 line:-1
even more USD schemas
and features.


202
00:09:05.445 --> 00:09:07.847 line:-1 position:50%
We also continue to update
our documentation


203
00:09:07.847 --> 00:09:10.650 line:-1 position:50%
to highlight features and
schemas that are newly supported


204
00:09:10.650 --> 00:09:14.154 line:-1 position:50%
on our renderers and which
platforms support them.


205
00:09:14.154 --> 00:09:17.056 line:-1 position:50%
Additionally, we make note
of other changes in behaviors,


206
00:09:17.056 --> 00:09:19.826 line:-1 position:50%
so we recommend that you
periodically refresh yourself


207
00:09:19.826 --> 00:09:23.663 line:-1 position:50%
on the documentation
linked in the video description.


208
00:09:23.663 --> 00:09:26.433 line:-1 position:50%
USD also allows
for custom schema types.


209
00:09:26.433 --> 00:09:28.535 line:-1 position:50%
And this year,
RealityKit is introducing


210
00:09:28.535 --> 00:09:31.671 line:-1 position:50%
new Component schemas
for its Entity Component System,


211
00:09:31.671 --> 00:09:34.541 line:-1 position:50%
or ECS for short, on xrOS.


212
00:09:34,541 --> 00:09:37,577 line:-1
RealityKit's ECS splits
the systems that process data


213
00:09:37,577 --> 00:09:39,512 line:-1
from the Component data itself,


214
00:09:39.512 --> 00:09:42.248 line:-1 position:50%
allowing it to live
alongside your 3D content.


215
00:09:42.248 --> 00:09:43.750 line:-1 position:50%
Thanks to these custom schemas,


216
00:09:43.750 --> 00:09:45.518 line:-1 position:50%
you can now use
RealityKitComponent


217
00:09:45.518 --> 00:09:48.521 line:-1 position:50%
for built-in Components,
and RealityKitCustomComponent


218
00:09:48.521 --> 00:09:50.924 line:-1 position:50%
for your own Swift
custom components.


219
00:09:50.924 --> 00:09:53.293 line:-1 position:50%
Your Swift components structs
and dictionaries can be


220
00:09:53.293 --> 00:09:57.363 line:-1 position:50%
represented by the equivalent
RealityKit USD schemas.


221
00:09:57,363 --> 00:10:00,366 line:-1
RealityKit also builds
upon USD's spatialAudio


222
00:10:00.366 --> 00:10:04.137 line:-1 position:50%
with RealityKit's Audio File,
Audio File Group, and MixGroup


223
00:10:04,137 --> 00:10:07,140 line:-1
to create even more
immersive audio.


224
00:10:07,140 --> 00:10:09,609 line:-1
Let's take a look at a USD file
that represents


225
00:10:09.609 --> 00:10:11.978 line:-1 position:50%
some custom component data,
as a USD prim,


226
00:10:11,978 --> 00:10:15,615 line:-1
which is what USD calls
objects in its hierarchy.


227
00:10:15.615 --> 00:10:17.417 line:-1 position:50%
This allows your custom
component data


228
00:10:17.417 --> 00:10:20.587 line:-1 position:50%
to live alongside your other
prims such as geometry.


229
00:10:20.587 --> 00:10:23.289 line:-1 position:50%
Since this is all in USD,
you can use any app


230
00:10:23.289 --> 00:10:25.992 line:-1 position:50%
that lets you author USD prims
directly to create them


231
00:10:25,992 --> 00:10:28,728 line:-1
alongside the rest
of your scene.


232
00:10:28,728 --> 00:10:31,297 line:-1
This aligns with your
corresponding Swift Component


233
00:10:31,297 --> 00:10:33,032 line:-1
that can then be used
to read these values


234
00:10:33,032 --> 00:10:35,502 line:-1
from your USD components,
such as here


235
00:10:35,502 --> 00:10:37,470 line:-1
where different objects
in your app may have


236
00:10:37,470 --> 00:10:40,240 line:-1
specific Engagement Points
associated with them.


237
00:10:40,240 --> 00:10:42,475 line:0
Please check out our talks
on building applications


238
00:10:42,475 --> 00:10:45,812 position:50%
with Reality Composer Pro
to learn more.


239
00:10:45.812 --> 00:10:48.248 line:-1 position:50%
We continue to contribute
to growing these technologies


240
00:10:48,248 --> 00:10:50,683 line:-1
in the industry,
as a growing ecosystem


241
00:10:50,683 --> 00:10:53,319 line:-1
makes content creation
easier for everyone.


242
00:10:53.319 --> 00:10:55.588 line:-1 position:50%
So we've worked with Pixar
and the community


243
00:10:55.588 --> 00:10:57.490 line:-1 position:50%
to list many of
the software packages


244
00:10:57,490 --> 00:11:00,393 line:-1
that now support USD
on the OpenUSD webpage.


245
00:11:00.393 --> 00:11:02.896 line:-1 position:50%
This allows creators to see
how easily they can create


246
00:11:02.896 --> 00:11:07.300 line:-1 position:50%
USD-based content with their own
existing workflows on a Mac.


247
00:11:07.300 --> 00:11:09.302 line:-1 position:50%
We've also been working
on making it easy


248
00:11:09,302 --> 00:11:12,505 line:-1
to build USD for
our portable platforms like iOS,


249
00:11:12,505 --> 00:11:15,041 line:-1
so that as developers,
you, too, can integrate USD


250
00:11:15.041 --> 00:11:16.976 line:-1 position:50%
into your own applications.


251
00:11:16.976 --> 00:11:19.512 line:-1 position:50%
This enables you to create
applications that can author


252
00:11:19,512 --> 00:11:22,315 line:-1
immersive USD content.


253
00:11:22.315 --> 00:11:23.716 line:-1 position:50%
Additionally,
we're collaborating


254
00:11:23,716 --> 00:11:25,852 line:-1
to reduce dependencies
in the USD library


255
00:11:25.852 --> 00:11:27.820 line:-1 position:50%
so that it's easier to get up
and running with USD


256
00:11:27,820 --> 00:11:31,224 line:-1
across all platforms,
with minimal work.


257
00:11:31,224 --> 00:11:33,860 line:-1
USD includes a technology
called Hydra,


258
00:11:33,860 --> 00:11:35,828 line:-1
an abstraction framework
for renderers,


259
00:11:35.828 --> 00:11:39.799 line:-1 position:50%
and Storm, a real-time renderer
that makes use of Hydra.


260
00:11:39,799 --> 00:11:43,336 line:-1
Apple has worked with Pixar
to add Metal support to Storm,


261
00:11:43,336 --> 00:11:45,305 line:-1
making use
of our modern graphics API


262
00:11:45.305 --> 00:11:48.074 line:-1 position:50%
that enables developers
to create high-performance,


263
00:11:48,074 --> 00:11:51,711 line:-1
GPU-based applications
on our platforms.


264
00:11:51,711 --> 00:11:53,346 line:-1
Let's take a look
at one scenario


265
00:11:53,346 --> 00:11:55,181 line:-1
where this performance helps.


266
00:11:55,181 --> 00:11:57,817 line:-1
The Animal Logic ALab scene
is representative


267
00:11:57.817 --> 00:12:00.286 line:-1 position:50%
of many feature
film-level assets.


268
00:12:00.286 --> 00:12:02.455 line:-1 position:50%
When set to full resolution,
this scene can take


269
00:12:02.455 --> 00:12:05.091 line:-1 position:50%
over 26GB of graphics memory,


270
00:12:05.091 --> 00:12:09.028 line:-1 position:50%
previously requiring desktop
workstation GPUs.


271
00:12:09.028 --> 00:12:10.897 line:-1 position:50%
Now, with Metal in Hydra Storm,


272
00:12:10,897 --> 00:12:12,932 line:-1
and unified memory
on Apple silicon,


273
00:12:12.932 --> 00:12:15.068 line:-1 position:50%
a MacBook Pro lets you
work on the go,


274
00:12:15,068 --> 00:12:17,003 line:-1
even on demanding scenes
like this,


275
00:12:17.003 --> 00:12:20.139 line:-1 position:50%
while retaining
interactive performance.


276
00:12:20,139 --> 00:12:22,375 line:-1
This high-performance rendering
in Storm also enables


277
00:12:22,375 --> 00:12:25,812 line:-1
Blackmagic Design to add fast
viewport rendering of USD


278
00:12:25,812 --> 00:12:29,282 line:-1
to Fusion in DaVinci Resolve.


279
00:12:29.282 --> 00:12:31.784 line:-1 position:50%
Building on the collaboration
from previous years,


280
00:12:31,784 --> 00:12:33,319 line:-1
we continue to work
with Autodesk


281
00:12:33.319 --> 00:12:36.022 line:-1 position:50%
on their open source
Maya USD plugin.


282
00:12:36,022 --> 00:12:38,625 line:-1
We've made several
contributions to the project,


283
00:12:38.625 --> 00:12:40.827 line:-1 position:50%
including enhancements
to the export of geometry


284
00:12:40,827 --> 00:12:42,895 line:-1
and materials for your assets.


285
00:12:42.895 --> 00:12:46.165 line:-1 position:50%
We also have improvements
to animation import.


286
00:12:46.165 --> 00:12:49.002 line:-1 position:50%
All of this helps you have
more seamless workflows


287
00:12:49,002 --> 00:12:51,704 line:-1
to create spatial content
for xrOS.


288
00:12:51.704 --> 00:12:53.373 line:-1 position:50%
Some of these features
may be released


289
00:12:53.373 --> 00:12:55.575 line:-1 position:50%
in later releases of Maya USD,


290
00:12:55.575 --> 00:12:58.978 line:-1 position:50%
so we recommend keeping
your plug-ins up to date.


291
00:12:58.978 --> 00:13:01.180 line:-1 position:50%
We've also been working
with the Blender Foundation,


292
00:13:01,180 --> 00:13:03,716 line:-1
many individuals
and partners like AMD,


293
00:13:03,716 --> 00:13:06,853 line:-1
NVIDIA, and Unity,
to deliver updates to Blender,


294
00:13:06,853 --> 00:13:09,789 line:-1
an open-source 3D application.


295
00:13:09.789 --> 00:13:12.291 line:-1 position:50%
This collaboration has enabled
significantly improved


296
00:13:12.291 --> 00:13:15.928 line:-1 position:50%
USD import and export
in Blender 3.5.


297
00:13:15.928 --> 00:13:18.931 line:-1 position:50%
This includes USDZ support
for the first time,


298
00:13:18,931 --> 00:13:21,801 line:-1
allowing you to go directly
to Quick Look.


299
00:13:21,801 --> 00:13:23,903 line:-1
Apple also worked
with the Blender Foundation


300
00:13:23.903 --> 00:13:27.907 line:-1 position:50%
to introduce Metal support for
their Eevee and Cycles renderer.


301
00:13:27,907 --> 00:13:30,810 line:-1
Now with Blender 3.5,
you can run Blender


302
00:13:30.810 --> 00:13:33.179 line:-1 position:50%
as a fully native
Metal application,


303
00:13:33,179 --> 00:13:36,983 line:-1
speeding up your UI, viewport,
and final render.


304
00:13:36.983 --> 00:13:39.619 line:-1 position:50%
Final renders can make use
of your GPU to complete


305
00:13:39,619 --> 00:13:43,022 line:-1
in up to half the time when
compared to CPU based renders,


306
00:13:43.022 --> 00:13:47.360 line:-1 position:50%
and the viewport can now render
up to 4 times faster than OpenGL


307
00:13:47.360 --> 00:13:49.295 line:-1 position:50%
in certain scenes.


308
00:13:49,295 --> 00:13:53,533 line:-1
That wraps up this overview of
what's new in the USD Ecosystem.


309
00:13:53,533 --> 00:13:56,636 line:-1
xrOS adds a whole new,
exciting dimension to apps


310
00:13:56.636 --> 00:13:58.771 line:-1 position:50%
and experiences,
built on a foundation


311
00:13:58.771 --> 00:14:00.973 line:-1 position:50%
of technologies like USD.


312
00:14:00,973 --> 00:14:02,775 position:50%
I recommend continuing
by checking out


313
00:14:02,775 --> 00:14:04,544 position:50%
these related talks
about Quick Look


314
00:14:04,544 --> 00:14:07,180 position:50%
and Reality Composer Pro.


315
00:14:07,180 --> 00:14:09,215 line:-1
By collaborating
on these open standards,


316
00:14:09.215 --> 00:14:11.150 line:-1 position:50%
we're building
a strong ecosystem


317
00:14:11,150 --> 00:14:13,853 line:-1
to make it faster and easier
to create content


318
00:14:13.853 --> 00:14:16.222 line:-1 position:50%
for xrOS
and all our platforms,


319
00:14:16,222 --> 00:14:19,292 line:-1
and we can't wait to see
what you create.


320
00:14:19,292 --> 00:14:23,062 line:0 position:90% size:2%
♪

