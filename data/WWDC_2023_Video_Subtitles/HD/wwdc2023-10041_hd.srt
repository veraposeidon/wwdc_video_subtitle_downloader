2
00:00:00,334 --> 00:00:06,340 line:-1
♪ ♪


3
00:00:10.444 --> 00:00:13.514 line:-2 align:center
Cyrus: Hello and welcome
to the "Explore advances


4
00:00:13.547 --> 00:00:15.883 line:-1 align:center
in declarative device management" session.


5
00:00:15.916 --> 00:00:19.286 line:-2 align:center
My name is Cyrus Daboo,
and I am an engineer


6
00:00:19.319 --> 00:00:21.555 line:-1 align:center
on the device management client team.


7
00:00:21,588 --> 00:00:25,058 line:-2
I am here to describe
to you the exciting new features


8
00:00:25,092 --> 00:00:27,160 line:-1
of declarative device management.


9
00:00:27.194 --> 00:00:31.098 line:-2 align:center
Declarative device management
is the new device management solution


10
00:00:31,131 --> 00:00:34,067 line:-1
for all your Apple devices.


11
00:00:34.101 --> 00:00:38.438 line:-2 align:center
It provides an autonomous
and proactive management capability


12
00:00:38,472 --> 00:00:43,243 line:-2
that allows devices to apply management
logic without prompting from the server,


13
00:00:43.277 --> 00:00:45.879 line:-2 align:center
and supports
asynchronous status reporting,


14
00:00:45.913 --> 00:00:49.416 line:-2 align:center
avoiding the need
for servers to poll devices.


15
00:00:50,551 --> 00:00:54,555 line:-2
Also, it is built into MDM
to allow an easy transition


16
00:00:54,588 --> 00:00:57,024 line:-1
and integration with existing products.


17
00:00:58,192 --> 00:01:03,964 line:-2
At WWDC22, we said,
"The focus of future protocol features


18
00:01:03,997 --> 00:01:07,367 line:-1
will be declarative device management."


19
00:01:07,401 --> 00:01:10,804 line:-2
And we are following up
on that for this release with,


20
00:01:10.838 --> 00:01:15.976 line:-2 align:center
"The focus of new protocol features
is declarative device management."


21
00:01:16,009 --> 00:01:18,912 line:-2
This release has
new and compelling features


22
00:01:18,946 --> 00:01:22,416 line:-2
that are only available
via declarative device management.


23
00:01:22.449 --> 00:01:25.819 line:-2 align:center
These include features
that provide more parity with MDM


24
00:01:25,853 --> 00:01:29,289 line:-1
and help with transitioning from MDM.


25
00:01:29,323 --> 00:01:32,759 line:-1
First introduced at WWDC21


26
00:01:32.793 --> 00:01:38.198 line:-2 align:center
and enhanced with more
foundational capabilities at WWDC22,


27
00:01:38,232 --> 00:01:41,935 line:-2
declarative device management
has generated a lot of excitement


28
00:01:41.969 --> 00:01:45.606 line:-2 align:center
amongst MDM developers
and enterprise administrators.


29
00:01:46,940 --> 00:01:51,445 line:-2
Several MDM developers have already
implemented and shipped MDM servers


30
00:01:51.478 --> 00:01:54.114 line:-2 align:center
with declarative
device management support.


31
00:01:55,015 --> 00:01:59,253 line:-2
With the new features in this release,
even more will want to do so


32
00:01:59.286 --> 00:02:02.823 line:-2 align:center
to provide their customers
with an enhanced management feature set.


33
00:02:04,892 --> 00:02:08,562 align:center
Please review the sessions from WWDC21


34
00:02:08,595 --> 00:02:12,366 align:center
and WWDC22 for an in-depth look at what


35
00:02:12,399 --> 00:02:14,468 line:1
declarative device management is


36
00:02:14,501 --> 00:02:17,104 align:center
and how to adopt it in your products.


37
00:02:18.972 --> 00:02:21.775 line:-1 align:center
A quick update on platform support.


38
00:02:22,943 --> 00:02:28,015 line:-2
MDM and declarative device management
are now available for watchOS.


39
00:02:29,216 --> 00:02:34,655 line:-3
Full details can be found in the session
"Meet device management for Apple Watch."


40
00:02:37.057 --> 00:02:39.626 line:-2 align:center
Declarative device management
is a collaboration


41
00:02:39.660 --> 00:02:42.129 line:-1 align:center
between many different teams within Apple,


42
00:02:42.162 --> 00:02:45.399 line:-2 align:center
aiming to provide robust
and secure solutions


43
00:02:45.432 --> 00:02:48.769 line:-2 align:center
for MDM developers
and enterprise administrators.


44
00:02:49,770 --> 00:02:53,807 line:-2
Our focus is always on providing
a seamless user experience


45
00:02:53.841 --> 00:02:58.145 line:-2 align:center
that protects the privacy and security
of users and their devices,


46
00:02:58,178 --> 00:03:02,783 line:-2
while giving administrators the tools
needed to protect enterprise data


47
00:03:02.816 --> 00:03:05.919 line:-1 align:center
and to enforce compliance with policies.


48
00:03:07,654 --> 00:03:12,826 line:-2
It is also a collaboration with MDM
developers and enterprise administrators.


49
00:03:13.794 --> 00:03:16.496 line:-2 align:center
Your feedback has helped us
prioritize the features


50
00:03:16,530 --> 00:03:19,066 line:-1
we are delivering in this release.


51
00:03:21,368 --> 00:03:24,304 line:-2
With the foundational elements
of declarative device management


52
00:03:24,338 --> 00:03:27,574 line:-1
now in place, our focus has moved


53
00:03:27,608 --> 00:03:30,511 line:-1
to implementing core management features.


54
00:03:30,544 --> 00:03:33,013 line:-1
Let’s examine what those are.


55
00:03:33.046 --> 00:03:37.050 line:-2 align:center
First, is a new way
to enforce software updates.


56
00:03:37,084 --> 00:03:39,920 line:-1
Second, is managing apps.


57
00:03:41,054 --> 00:03:45,125 line:-2
Third, is securing devices
by locking down system services


58
00:03:45,158 --> 00:03:47,261 line:-1
and monitoring background tasks.


59
00:03:48,328 --> 00:03:51,765 line:-2
That is followed by installing
certificate and identity credentials


60
00:03:51.798 --> 00:03:54.268 line:-1 align:center
for use on a device.


61
00:03:54,301 --> 00:03:57,504 line:-2
And finally,
a new behavior to make transitioning


62
00:03:57.538 --> 00:04:01.775 line:-2 align:center
profiles from MDM
to declarative device management easier.


63
00:04:03,610 --> 00:04:06,146 line:-2
In partnership
with our software update team,


64
00:04:06.180 --> 00:04:10.450 line:-2 align:center
we are bringing a new managed
software update experience to macOS,


65
00:04:10.484 --> 00:04:16.256 line:-2 align:center
iOS, and iPadOS devices
built on declarative device management.


66
00:04:16.290 --> 00:04:19.826 line:-2 align:center
I.T. administrators need
to ensure their users’ devices


67
00:04:19.860 --> 00:04:22.529 line:-2 align:center
have the latest system
software updates installed


68
00:04:22.563 --> 00:04:26.600 line:-2 align:center
to guarantee required features
and fixes are in place.


69
00:04:26,633 --> 00:04:29,837 line:-2
Administrators need
to enforce software updates,


70
00:04:29.870 --> 00:04:33.006 line:-2 align:center
as well as defer them
for a short period of time


71
00:04:33.040 --> 00:04:35.709 line:-1 align:center
to allow the new OS release to be tested


72
00:04:35,742 --> 00:04:40,147 line:-2
to ensure it is compatible
with organization apps and services.


73
00:04:41.081 --> 00:04:44.618 line:-2 align:center
They also need to verify
that devices have been properly updated


74
00:04:44.651 --> 00:04:46.954 line:-1 align:center
when commanded to do so.


75
00:04:46.987 --> 00:04:51.258 line:-2 align:center
For large fleets of devices,
this can be a time consuming task.


76
00:04:52.125 --> 00:04:56.230 line:-2 align:center
Today, administrators can use
MDM commands to install updates


77
00:04:56,263 --> 00:04:58,198 line:-1
on supervised devices.


78
00:04:59.032 --> 00:05:01.535 line:-2 align:center
They can receive feedback
on the state of an update


79
00:05:01.568 --> 00:05:03.670 line:-1 align:center
when the server polls the device.


80
00:05:04.771 --> 00:05:09.510 line:-2 align:center
Administrators can also defer
minor and major updates via profiles,


81
00:05:09,543 --> 00:05:12,713 line:-2
preventing supervised devices
from offering software updates


82
00:05:12.746 --> 00:05:16.750 line:-2 align:center
to users
during a specified period of time.


83
00:05:16.783 --> 00:05:19.820 line:-2 align:center
But based on your feedback,
we want to improve


84
00:05:19,853 --> 00:05:22,322 line:-2
the overall managed
software update experience


85
00:05:22.356 --> 00:05:24.758 line:-1 align:center
for both administrators and users.


86
00:05:27.294 --> 00:05:30.898 line:-2 align:center
Declarative device management
is the mechanism to provide administrators


87
00:05:30,931 --> 00:05:33,634 line:-1
more control over the update process


88
00:05:33,667 --> 00:05:36,470 line:-2
and give users
a more informative experience,


89
00:05:36.503 --> 00:05:40.574 line:-2 align:center
while also ensuring
updates happen in a timely fashion.


90
00:05:40,607 --> 00:05:42,442 line:-1
Here’s how.


91
00:05:44.111 --> 00:05:47.881 line:-2 align:center
Configurations can be used
to define software update behavior.


92
00:05:47.915 --> 00:05:51.351 line:-2 align:center
The device can proactively
carry out those instructions,


93
00:05:51,385 --> 00:05:54,321 line:-2
while keeping the user informed
of the update process


94
00:05:54.354 --> 00:05:57.658 line:-2 align:center
and giving them the opportunity
to do the update themselves


95
00:05:57.691 --> 00:05:59.660 line:-1 align:center
ahead of any deadline.


96
00:06:00.861 --> 00:06:04.498 line:-2 align:center
Predicates can be used
to power sophisticated logic to control


97
00:06:04.531 --> 00:06:07.701 line:-2 align:center
the ordering of software updates
as devices get upgraded


98
00:06:07.734 --> 00:06:09.570 line:-1 align:center
to seed and GM builds


99
00:06:09,603 --> 00:06:12,940 line:-2
or as rapid security responses
become available.


100
00:06:14.174 --> 00:06:18.111 line:-2 align:center
And asynchronous status reporting
keeps the administrator up to date


101
00:06:18,145 --> 00:06:20,214 line:-1
with the software update flow


102
00:06:20,247 --> 00:06:23,917 line:-2
so that issues
can be quickly resolved if they arise.


103
00:06:23.951 --> 00:06:26.687 line:-1 align:center
Let’s examine how this is implemented.


104
00:06:28.322 --> 00:06:32.125 line:-2 align:center
A configuration has been added
to manage an enforced software update


105
00:06:32,159 --> 00:06:35,295 line:-1
of a supervised device by a specific time.


106
00:06:36.063 --> 00:06:38.599 line:-1 align:center
There is also a set of new status items


107
00:06:38,632 --> 00:06:41,668 line:-2
that report on the software update flow
on the device,


108
00:06:41,702 --> 00:06:46,740 line:-2
including details of the installation
state and any failure reasons.


109
00:06:46.773 --> 00:06:48.976 line:-1 align:center
Let’s study some examples.


110
00:06:50.944 --> 00:06:54.448 line:-2 align:center
This example configuration
enforces a software update


111
00:06:54,481 --> 00:06:58,619 line:-2
for a specific OS version
and build at a specific time.


112
00:06:59,419 --> 00:07:04,791 line:-2
The TargetOSVersion key indicates the OS
version that the device should update to.


113
00:07:06,026 --> 00:07:11,999 line:-2
The optional TargetBuildVersion key allows
targeting specific seed builds if needed.


114
00:07:12.032 --> 00:07:17.104 line:-2 align:center
TargetBuildVersion will take precedence
over TargetOSVersion if both are set.


115
00:07:17.905 --> 00:07:20.741 line:-2 align:center
If no update is found
for the specified version,


116
00:07:20,774 --> 00:07:25,312 line:-2
the device will search for the default
update vended by Software Update servers.


117
00:07:26,580 --> 00:07:30,450 line:-2
The TargetLocalDateTime key
specifies a local date and time


118
00:07:30,484 --> 00:07:32,920 line:-1
at which the update will be forced.


119
00:07:34.388 --> 00:07:38.725 line:-2 align:center
Here is an example status report
for softwareupdate status items.


120
00:07:40.160 --> 00:07:43.664 line:-2 align:center
The install-reasons status item
is an array of reasons


121
00:07:43,697 --> 00:07:46,233 line:-1
describing why an install happened.


122
00:07:46,266 --> 00:07:48,335 line:-1
This includes showing whether the update


123
00:07:48.368 --> 00:07:50.470 line:-1 align:center
was initiated by a declaration,


124
00:07:50,504 --> 00:07:52,573 line:-1
the system, or the user,


125
00:07:52.606 --> 00:07:54.942 line:-1 align:center
or any combination of those.


126
00:07:55,909 --> 00:07:59,980 line:-2
The pending-version status item
indicates which software update version


127
00:08:00.013 --> 00:08:02.549 line:-1 align:center
the system is trying to install.


128
00:08:03,517 --> 00:08:06,687 line:-2
The install-state status item
identifies what state


129
00:08:06,720 --> 00:08:10,324 line:-2
the system is currently in
with respect to the update.


130
00:08:11,458 --> 00:08:15,863 align:center
The failure-reason status item
specifies the count of any errors


131
00:08:15,896 --> 00:08:19,333 line:0
and the reason and timestamp
for the latest error.


132
00:08:19,366 --> 00:08:22,870 align:center
Let’s examine what this looks like
from the user’s perspective.


133
00:08:24,404 --> 00:08:29,576 line:-2
Users will be able to clearly identify
what update is being enforced and by when.


134
00:08:30.811 --> 00:08:34.381 line:-2 align:center
They can easily choose to update
ahead of the deadline or schedule it


135
00:08:34,414 --> 00:08:35,916 line:-1
for that night.


136
00:08:36,984 --> 00:08:39,520 line:-1
If a user chooses "Update Tonight,"


137
00:08:39,553 --> 00:08:41,955 line:-2
the update will be downloaded
and prepared,


138
00:08:41,989 --> 00:08:44,391 line:-1
and then queued to update that night


139
00:08:44.424 --> 00:08:47.261 line:-2 align:center
when the device has enough charge
and is sufficiently inactive.


140
00:08:49,229 --> 00:08:51,965 align:center
If the user
doesn’t immediately trigger the update,


141
00:08:51,999 --> 00:08:55,469 align:center
then Software Update will post
an Updates Available notification


142
00:08:55,502 --> 00:08:58,138 align:center
every day until the deadline.


143
00:08:58,172 --> 00:09:00,507 align:center
On macOS, the user has the option


144
00:09:00,541 --> 00:09:05,946 line:1
to choose "Install" or "Try Tonight"
when the notification appears.


145
00:09:05,979 --> 00:09:08,115 line:1
24 hours before the deadline,


146
00:09:08,148 --> 00:09:12,085 line:1
this notification appears hourly
and ignores Do Not Disturb.


147
00:09:12,119 --> 00:09:16,056 align:center
One hour before the deadline,
the notification appears every 30 minutes,


148
00:09:16,089 --> 00:09:18,525 line:1
and then every 10 minutes.


149
00:09:19,660 --> 00:09:23,897 line:-2
Let’s say the user had their device
turned off because they were on vacation,


150
00:09:23.931 --> 00:09:26.500 line:-1 align:center
and as a result, the deadline was missed.


151
00:09:27,434 --> 00:09:31,805 line:-2
When the user restarts the device,
Software Update will post a notification


152
00:09:31.839 --> 00:09:34.374 line:-1 align:center
telling them an update is past due,


153
00:09:34.408 --> 00:09:37.244 line:-2 align:center
and the update will be tried
within the next hour.


154
00:09:39,012 --> 00:09:43,116 align:center
A similar experience happens
on iOS and iPadOS.


155
00:09:45,018 --> 00:09:49,122 line:0
Here, an administrator
is enforcing an update to iOS 17.0,


156
00:09:49,156 --> 00:09:52,326 align:center
as shown in the highlighted section
at the bottom.


157
00:09:53,293 --> 00:09:57,331 line:-2
The user can easily choose
Update Now or Update Tonight,


158
00:09:57,364 --> 00:10:01,802 line:-2
ensuring the update installs
ahead of the deadline, just like macOS.


159
00:10:03,504 --> 00:10:06,940 line:-5
And like macOS,
reminder notifications will be sent


160
00:10:06.974 --> 00:10:09.142 line:-4 align:center
on an increasing cadence if they choose


161
00:10:09.176 --> 00:10:11.678 line:-4 align:center
not to trigger the update themselves.


162
00:10:11,712 --> 00:10:14,681 line:-4
And the same past due behavior will occur.


163
00:10:16.350 --> 00:10:21.355 line:-2 align:center
Software update declarations and MDM
commands and profiles can co-exist.


164
00:10:22,422 --> 00:10:25,792 line:-2
However,
software updates enforced by declarations


165
00:10:25,826 --> 00:10:29,730 line:-2
will always take precedence
over MDM commands and profiles.


166
00:10:31,131 --> 00:10:35,736 line:-2
The software update configuration
and status items are available on macOS,


167
00:10:35.769 --> 00:10:38.472 line:-1 align:center
iOS, and iPadOS.


168
00:10:40.073 --> 00:10:42.009 line:-1 align:center
Now let’s turn our attention


169
00:10:42.042 --> 00:10:45.179 line:-2 align:center
to another important aspect
of managing devices:


170
00:10:45,212 --> 00:10:46,880 line:-1
Apps.


171
00:10:48.048 --> 00:10:50.918 line:-2 align:center
Administrators are required
to manage the licensing,


172
00:10:50.951 --> 00:10:56.223 line:-2 align:center
installation, updating,
and removal of apps on managed devices.


173
00:10:56,256 --> 00:10:59,826 line:-2
This includes providing support
if problems arise


174
00:10:59,860 --> 00:11:03,397 line:-2
and re-provisioning devices
as they are assigned to different users


175
00:11:03,430 --> 00:11:05,699 line:-1
with varying roles in the organization.


176
00:11:08,268 --> 00:11:13,240 line:-2
MDM developers provide a variety of tools
to help administrators manage apps,


177
00:11:13.273 --> 00:11:16.476 line:-2 align:center
making use
of the MDM app-related commands


178
00:11:16.510 --> 00:11:21.949 line:-2 align:center
and using Apple server APIs to look up
app metadata and manage licensing.


179
00:11:23.016 --> 00:11:26.186 line:-2 align:center
The imperative,
polling nature of MDM means


180
00:11:26.220 --> 00:11:29.489 line:-2 align:center
administrators often struggle
to respond in a timely fashion


181
00:11:29.523 --> 00:11:33.227 line:-2 align:center
when problems arise,
or when users change roles,


182
00:11:33,260 --> 00:11:37,030 line:-2
or devices need
to be cycled between users.


183
00:11:37.064 --> 00:11:40.000 line:-2 align:center
Also, users have
their devices react slowly


184
00:11:40,033 --> 00:11:42,369 line:-2
when they first set them up
or make changes.


185
00:11:44.872 --> 00:11:48.408 line:-2 align:center
Declarative device management
can provide administrators with a new,


186
00:11:48,442 --> 00:11:52,112 line:-2
more efficient experience
when it comes to managing apps,


187
00:11:52,145 --> 00:11:56,650 line:-2
and also provide users with a more
responsive and reliable experience.


188
00:11:56,683 --> 00:11:58,018 line:-1
Here’s how.


189
00:11:59.820 --> 00:12:03.557 line:-2 align:center
Configurations can be used
to specify an app that can be available


190
00:12:03,590 --> 00:12:05,392 line:-1
on a device when needed.


191
00:12:05,425 --> 00:12:07,928 line:-2
They can be sent
to the device ahead of time


192
00:12:07,961 --> 00:12:12,199 line:-2
so that they are already present
when device conditions dictate their use.


193
00:12:13,300 --> 00:12:16,737 line:-2
Predicates can be used to power logic
to control which sets of apps


194
00:12:16,770 --> 00:12:20,507 line:-2
are available to which users,
based on device status


195
00:12:20,541 --> 00:12:23,844 line:-2
or management properties
set by the server.


196
00:12:23.877 --> 00:12:28.048 line:-2 align:center
So administrators can quickly switch
between sets of apps as needed.


197
00:12:29.416 --> 00:12:33.187 line:-2 align:center
An app can be shown to a user
without it having to be installed,


198
00:12:33.220 --> 00:12:35.722 line:-2 align:center
so that the user
can choose when to install it,


199
00:12:35,756 --> 00:12:38,492 line:-1
without the need for server intervention.


200
00:12:38.525 --> 00:12:43.130 line:-2 align:center
This also avoids the need
for intrusive user consent prompts.


201
00:12:43,163 --> 00:12:47,668 line:-2
And asynchronous status reporting keeps
the administrator up to date with changes


202
00:12:47,701 --> 00:12:52,239 line:-2
to managed apps so that issues
can be quickly resolved if they arise.


203
00:12:53,273 --> 00:12:55,342 line:-1
Let’s examine how this is implemented.


204
00:12:56,710 --> 00:13:00,113 line:-2
A configuration has been added
to manage the installation,


205
00:13:00.147 --> 00:13:03.884 line:-1 align:center
update, and removal of an individual app.


206
00:13:03.917 --> 00:13:08.822 line:-2 align:center
There is also a new status item
that reports on the list of managed apps.


207
00:13:09,723 --> 00:13:13,260 line:-2
Apps can come from the App Store
or be enterprise apps


208
00:13:13,293 --> 00:13:16,763 line:-1
specified by a manifest, similar to MDM.


209
00:13:17.898 --> 00:13:23.637 line:-2 align:center
On macOS, packages are supported,
but they must contain only a single app.


210
00:13:23,670 --> 00:13:26,573 line:-2
Also,
app installs can be marked as optional


211
00:13:26.607 --> 00:13:28.876 line:-1 align:center
to be triggered by the user.


212
00:13:28,909 --> 00:13:31,111 line:-1
Let’s study some examples.


213
00:13:32.579 --> 00:13:35.015 line:-1 align:center
This example managed app configuration


214
00:13:35.048 --> 00:13:38.151 line:-2 align:center
will install the Pages app
from the app store.


215
00:13:39.052 --> 00:13:42.890 line:-2 align:center
The install behavior
indicates the app is required.


216
00:13:42,923 --> 00:13:46,426 line:-2
That causes the app to be
immediately installed and managed


217
00:13:46.460 --> 00:13:49.496 line:-1 align:center
when the configuration is activated.


218
00:13:49.530 --> 00:13:53.100 line:-2 align:center
The app will also
not be removable by the user.


219
00:13:54,401 --> 00:13:58,572 line:-2
Alternatively, the install behavior
can be set to “Optional.”


220
00:14:00,641 --> 00:14:04,111 line:-2
When the configuration is activated,
the app is made available


221
00:14:04.144 --> 00:14:06.813 line:-2 align:center
for the user
to download when they want it.


222
00:14:06,847 --> 00:14:10,751 line:-2
The user will also be able
to remove the app whenever they want.


223
00:14:12,019 --> 00:14:15,989 line:-2
Other attributes to control management
are present in the configuration,


224
00:14:16.023 --> 00:14:18.425 line:-1 align:center
such as per-app VPN.


225
00:14:20,394 --> 00:14:23,664 line:-2
This example shows a status item
for the Pages app


226
00:14:23.697 --> 00:14:25.566 line:-1 align:center
that has finished installing.


227
00:14:26,667 --> 00:14:30,704 line:-2
The Identifier key is the unique
identifier for the status object


228
00:14:30,737 --> 00:14:33,407 line:-1
and is set to the app’s bundle identifier.


229
00:14:34,208 --> 00:14:37,177 line:-2
The declaration-identifier key
is the identifier


230
00:14:37,211 --> 00:14:39,479 line:-2
of the configuration
that is managing the app.


231
00:14:39,513 --> 00:14:43,750 line:-2
The status updates asynchronously
as changes are occurring on the device,


232
00:14:43,784 --> 00:14:46,386 line:-1
so polling is not needed.


233
00:14:46.420 --> 00:14:50.524 line:-2 align:center
Now let’s turn our attention
to the user experience.


234
00:14:50.557 --> 00:14:53.060 line:-1 align:center
Many MDM developers provide an app


235
00:14:53.093 --> 00:14:57.497 line:-2 align:center
that gives users options
for controlling the management experience.


236
00:14:57.531 --> 00:14:59.833 line:-1 align:center
Often, a list of apps is present


237
00:14:59.867 --> 00:15:04.037 line:-2 align:center
to give users the choice
of what to install and when.


238
00:15:04.071 --> 00:15:08.408 line:-2 align:center
Users can tap on an app
to trigger its installation.


239
00:15:08.442 --> 00:15:11.445 line:-2 align:center
To implement this,
a private protocol is needed


240
00:15:11.478 --> 00:15:15.582 line:-2 align:center
between the app and the MDM server
to convey the list of apps,


241
00:15:15,616 --> 00:15:19,486 line:-2
and then send actions
from the user back to the server.


242
00:15:19,520 --> 00:15:24,057 line:-2
The server has to then send
an MDM command to trigger the install.


243
00:15:24.091 --> 00:15:27.327 line:-2 align:center
All this back-and-forth
introduces additional latency


244
00:15:27.361 --> 00:15:29.396 line:-1 align:center
into the user experience.


245
00:15:29.429 --> 00:15:34.968 line:-2 align:center
We want to improve this by making
optional app installs simple and fast,


246
00:15:35.002 --> 00:15:36.870 line:-1 align:center
while remaining secure.


247
00:15:37.905 --> 00:15:41.475 line:-2 align:center
A new managed app
distribution framework is available


248
00:15:41.508 --> 00:15:44.244 line:-1 align:center
for third party management app use.


249
00:15:44.278 --> 00:15:48.549 line:-2 align:center
An entitlement will be required to use it,
and that can be applied for


250
00:15:48.582 --> 00:15:51.985 line:-2 align:center
as part
of the App Store submission process.


251
00:15:52.019 --> 00:15:57.057 line:-2 align:center
The framework contains a SwiftUI view
extension that exposes each managed app


252
00:15:57.090 --> 00:16:02.696 line:-2 align:center
as a SwiftUI view that can then
be placed in a customizable layout.


253
00:16:02.729 --> 00:16:06.733 line:-2 align:center
Users can view details of an app
and tap to install.


254
00:16:06.767 --> 00:16:10.771 line:-2 align:center
This improves the user experience
by removing the roundtrip latency


255
00:16:10,804 --> 00:16:15,008 line:-2
to the MDM server, allowing the app
to be immediately installed,


256
00:16:15.042 --> 00:16:19.112 line:-2 align:center
and also by providing
better feedback on progress.


257
00:16:19.146 --> 00:16:22.816 line:-2 align:center
Let’s examine what this might look like
in an app that you could build.


258
00:16:24.718 --> 00:16:28.355 line:-2 align:center
This slide shows
an MDM management app on iOS,


259
00:16:28,388 --> 00:16:32,426 line:-2
using the new view service
to show a list of apps to the user.


260
00:16:33,460 --> 00:16:36,029 line:-1
One app is currently installed.


261
00:16:36.063 --> 00:16:39.299 line:-1 align:center
One is downloading, showing live progress.


262
00:16:39,333 --> 00:16:42,836 line:-2
And another is optional
and waiting to be installed.


263
00:16:42.870 --> 00:16:45.806 line:-2 align:center
The style of the app view
is customizable and,


264
00:16:45,839 --> 00:16:48,509 line:-2
in this case,
uses a standard list style.


265
00:16:49,610 --> 00:16:53,280 line:-2
On macOS,
a more expansive layout can be used,


266
00:16:53,313 --> 00:16:58,085 line:-2
such as the grid layout shown here,
using a different style of app view.


267
00:16:59,920 --> 00:17:03,490 line:-2
The app using the view service
can sort and group the set of apps


268
00:17:03,524 --> 00:17:05,626 line:-1
in whatever way is appropriate.


269
00:17:06.560 --> 00:17:10.097 line:-2 align:center
If you already have a management app
that shows an app list,


270
00:17:10,130 --> 00:17:12,933 line:-2
this view service can be used
as an alternative


271
00:17:12.966 --> 00:17:16.303 line:-2 align:center
and provide users
with a better experience.


272
00:17:16,336 --> 00:17:19,006 line:-2
If you are planning
on providing a management app,


273
00:17:19.039 --> 00:17:22.843 line:-2 align:center
this view service will give you
a head start to implementing it.


274
00:17:24,344 --> 00:17:28,315 line:-2
Note that if you intend
to use the optional install behavior


275
00:17:28.348 --> 00:17:30.617 line:-1 align:center
of the new managed app configuration,


276
00:17:30.651 --> 00:17:34.254 line:-2 align:center
then you must provide
your own management app for users.


277
00:17:35.822 --> 00:17:39.159 line:-2 align:center
The management apps
configuration and status item,


278
00:17:39.193 --> 00:17:41.528 line:-1 align:center
public framework and view extension,


279
00:17:41,562 --> 00:17:45,899 line:-2
will be available for macOS,
iOS, and iPadOS.


280
00:17:48.268 --> 00:17:51.104 line:-2 align:center
Additionally,
as part of our goal to improve


281
00:17:51,138 --> 00:17:54,341 line:-2
the experience of managing apps,
I am pleased to announce


282
00:17:54.374 --> 00:17:58.879 line:-2 align:center
a new "Apps and Books for Organizations"
server API,


283
00:17:58,912 --> 00:18:01,148 line:-1
available for immediate use.


284
00:18:02.282 --> 00:18:07.054 line:-2 align:center
This replaces the existing
contentMetadataLookup server API.


285
00:18:08.322 --> 00:18:12.159 line:-2 align:center
The new API provides new
customization and versioning features,


286
00:18:12.192 --> 00:18:15.696 line:-2 align:center
in addition
to better performance and uptime.


287
00:18:15.729 --> 00:18:21.535 line:-2 align:center
Please visit the developer.apple.com site
for full details of using the new API.


288
00:18:22.436 --> 00:18:27.474 line:-2 align:center
Now let’s examine how declarative device
management can be used to help enforce


289
00:18:27.508 --> 00:18:33.146 line:-2 align:center
and verify security compliance for macOS
system services and background tasks.


290
00:18:34,314 --> 00:18:37,384 line:-2
Administrators are often required
to ensure the devices


291
00:18:37,417 --> 00:18:41,388 line:-2
they support behave
in a consistent and secure manner.


292
00:18:42.356 --> 00:18:45.292 line:-2 align:center
Ensuring consistency means
that it is easier


293
00:18:45.325 --> 00:18:47.995 line:-1 align:center
to support a large fleet of devices,


294
00:18:48.028 --> 00:18:51.164 line:-2 align:center
given that they are
all configured in the same way.


295
00:18:52.032 --> 00:18:57.171 line:-2 align:center
Ensuring compliance means that devices are
known to have a base level of security,


296
00:18:57.204 --> 00:19:01.108 line:-2 align:center
providing assurances
that organization data is secure.


297
00:19:02,142 --> 00:19:05,479 line:-2
And when changes need
to be made across all devices


298
00:19:05.512 --> 00:19:08.348 line:-2 align:center
or when new devices
are added to the inventory,


299
00:19:08,382 --> 00:19:11,585 line:-2
this needs to be done
in a quick and efficient way.


300
00:19:12,953 --> 00:19:16,490 line:-2
One part of this requirement
involves configuring and monitoring


301
00:19:16.523 --> 00:19:20.460 line:-2 align:center
system or third party services
installed on a device.


302
00:19:22.429 --> 00:19:25.632 line:-2 align:center
macOS ships with many system services
that are controlled


303
00:19:25.666 --> 00:19:28.135 line:-1 align:center
via system configuration files.


304
00:19:28.168 --> 00:19:31.872 line:-2 align:center
For example,
sshd is configured via the files


305
00:19:31.905 --> 00:19:35.843 line:-1 align:center
in the directory /etc/ssh.


306
00:19:37,611 --> 00:19:42,516 line:-2
Many of these system services must be
securely configured by the administrator


307
00:19:42.549 --> 00:19:47.588 line:-2 align:center
to guarantee the consistency and
compliance required by the organization.


308
00:19:47.621 --> 00:19:51.225 line:-2 align:center
Thus, it is important to ensure
users cannot deliberately


309
00:19:51,258 --> 00:19:55,095 line:-2
or inadvertently change
these system configurations.


310
00:19:56,163 --> 00:20:00,434 line:-2
However, this is hard to achieve,
as users often have the ability


311
00:20:00.467 --> 00:20:03.136 line:-1 align:center
to modify the system configuration files


312
00:20:03.170 --> 00:20:07.508 line:-2 align:center
or override the system service
to use a custom configuration file.


313
00:20:09,676 --> 00:20:13,947 line:-2
Declarative device management
is ideally positioned to provide a secure


314
00:20:13.981 --> 00:20:18.452 line:-2 align:center
and reliable mechanism to support
the configuration of system services


315
00:20:18.485 --> 00:20:22.556 line:-2 align:center
protected by System Integrity Protection
and provide a means


316
00:20:22.589 --> 00:20:26.660 line:-2 align:center
to monitor background tasks
to help guarantee device consistency


317
00:20:26,693 --> 00:20:29,062 line:-1
and security compliance.


318
00:20:29.096 --> 00:20:30.364 line:-1 align:center
Here’s how.


319
00:20:31,365 --> 00:20:35,335 line:-2
Declarative device management
configurations can be used to specify sets


320
00:20:35,369 --> 00:20:40,774 line:-2
of tamper-resistant system configuration
files for different system services.


321
00:20:40,807 --> 00:20:45,145 line:-2
Status can be used to monitor
background tasks as they come and go.


322
00:20:46,113 --> 00:20:49,750 line:-2
And predicates can power
sophisticated compliance rules


323
00:20:49.783 --> 00:20:54.721 line:-2 align:center
triggered off device state,
in a purely autonomous manner if needed.


324
00:20:54,755 --> 00:20:57,591 line:-1
Let’s examine how this is implemented.


325
00:20:59.359 --> 00:21:02.563 line:-2 align:center
A declarative device management
configuration has been added


326
00:21:02.596 --> 00:21:05.866 line:-2 align:center
to support managing system
service configuration files.


327
00:21:07,034 --> 00:21:11,405 line:-2
The configuration references a data asset
that provides a ZIP archive.


328
00:21:12.539 --> 00:21:17.010 line:-2 align:center
When the configuration is activated,
the archive is downloaded and expanded


329
00:21:17,044 --> 00:21:20,447 line:-2
into a tamper resistant,
service-specific location.


330
00:21:22,282 --> 00:21:24,852 line:-2
This location
can be programmatically found


331
00:21:24,885 --> 00:21:27,421 line:-1
by calling a function in a new library


332
00:21:27,454 --> 00:21:32,092 line:-2
so that any system service can
adopt managed service configuration files.


333
00:21:33.193 --> 00:21:35.696 line:-1 align:center
Built-in system services will be modified


334
00:21:35.729 --> 00:21:38.332 line:-2 align:center
to look for the managed
service configuration files


335
00:21:38,365 --> 00:21:43,770 line:-2
and always use those ahead of any default
or overridden system configuration.


336
00:21:44.972 --> 00:21:49.209 line:-2 align:center
Third party services can also adopt
managed service configuration files


337
00:21:49,243 --> 00:21:51,445 line:-1
in the same manner.


338
00:21:51.478 --> 00:21:56.216 line:-2 align:center
We encourage you to contact developers
of any third party services you use


339
00:21:56.250 --> 00:21:59.720 line:-1 align:center
and have them adopt the new feature.


340
00:21:59,753 --> 00:22:01,722 line:-1
Let’s examine how this works.


341
00:22:04.024 --> 00:22:08.529 line:-2 align:center
This example configuration will install
managed service configuration files


342
00:22:08,562 --> 00:22:11,064 line:-1
for the sshd service.


343
00:22:12,366 --> 00:22:15,135 line:-1
It includes a reference to a data asset.


344
00:22:16.270 --> 00:22:18.872 line:-1 align:center
Here is the example data asset.


345
00:22:19.873 --> 00:22:24.444 line:-2 align:center
The asset type is a new type
and is used for conveying arbitrary data.


346
00:22:25.946 --> 00:22:30.083 line:-2 align:center
Also new is a way for assets
to indicate what type of authentication


347
00:22:30,117 --> 00:22:33,253 line:-1
is used when retrieving the asset data.


348
00:22:33.287 --> 00:22:36.557 line:-2 align:center
This allows greater flexibility
in where assets are hosted


349
00:22:36.590 --> 00:22:42.095 line:-2 align:center
and how authentication and authorization
is achieved to securely access the data.


350
00:22:43,564 --> 00:22:46,466 line:-2
The data URL
in the asset points to a location


351
00:22:46,500 --> 00:22:49,336 line:-2
where a ZIP archive file
can be downloaded


352
00:22:49,369 --> 00:22:52,606 line:-2
when the referencing configuration
is activated.


353
00:22:54.241 --> 00:22:57.244 line:-2 align:center
The archive is expanded
into a tamper-resistant,


354
00:22:57,277 --> 00:23:01,782 line:-2
service-specific location,
where the sshd process can access it


355
00:23:01.815 --> 00:23:04.818 line:-2 align:center
and use it
as its managed service configuration.


356
00:23:06.553 --> 00:23:10.390 line:-2 align:center
The first built-in services
to adopt this feature are:


357
00:23:10.424 --> 00:23:15.829 line:-1 align:center
sshd, sudo, PAM,


358
00:23:15.863 --> 00:23:19.766 line:-1 align:center
CUPS, Apache httpd,


359
00:23:19,800 --> 00:23:22,402 line:-1
and finally, bash and zee shells


360
00:23:24.238 --> 00:23:27.741 line:-2 align:center
In addition to locking down
system service configuration,


361
00:23:27.774 --> 00:23:30.711 line:-1 align:center
this release also adds a new status item


362
00:23:30,744 --> 00:23:33,780 line:-2
that reports the list
of installed background tasks.


363
00:23:34.915 --> 00:23:37.384 line:-2 align:center
This allows administrators
to quickly verify


364
00:23:37,417 --> 00:23:41,722 line:-2
that required tasks are running
and that unwanted tasks are not running.


365
00:23:42,556 --> 00:23:44,758 line:-1
Let’s examine what this looks like.


366
00:23:46.226 --> 00:23:50.864 line:-2 align:center
This example shows a status array item
for a background task.


367
00:23:50.898 --> 00:23:55.869 line:-2 align:center
The details include:
The unique identifier of the task.


368
00:23:55.903 --> 00:23:59.640 line:-2 align:center
The uid of the user account
running the task.


369
00:23:59.673 --> 00:24:01.942 line:-1 align:center
Its state.


370
00:24:01.975 --> 00:24:04.845 line:-1 align:center
The type of task, which is either daemon,


371
00:24:04.878 --> 00:24:09.349 line:-1 align:center
agent, login item, app, or user item.


372
00:24:09,383 --> 00:24:14,421 line:-2
Also available are any launchd details,
such as label and program arguments,


373
00:24:14,454 --> 00:24:19,526 line:-2
as well as a checksum hash of the launchd
properties used to load the service.


374
00:24:21.328 --> 00:24:24.164 line:-2 align:center
Additionally,
this release adds a status item


375
00:24:24.198 --> 00:24:29.269 line:-2 align:center
to report on the FileVault enabled state
of the macOS boot volume.


376
00:24:29.303 --> 00:24:33.574 line:-2 align:center
It returns a boolean value to indicate
whether FileVault is enabled or not,


377
00:24:33,607 --> 00:24:37,144 line:-2
and it is easy to use
in an activation predicate,


378
00:24:37.177 --> 00:24:40.447 line:-2 align:center
so that security sensitive configurations
can be installed


379
00:24:40.480 --> 00:24:42.749 line:-1 align:center
only when it is safe to do so.


380
00:24:44,351 --> 00:24:45,586 line:-1
With this combination


381
00:24:45,619 --> 00:24:47,754 line:-1
of managed service configuration files,


382
00:24:47.788 --> 00:24:49.122 line:-1 align:center
background task,


383
00:24:49.156 --> 00:24:50.924 line:-1 align:center
and FileVault status reporting,


384
00:24:50.958 --> 00:24:53.393 line:-1 align:center
administrators now have a powerful way


385
00:24:53.427 --> 00:24:56.063 line:-1 align:center
to ensure consistency and compliance


386
00:24:56.096 --> 00:24:58.031 line:-1 align:center
across all macOS devices


387
00:24:58.065 --> 00:24:59.733 line:-1 align:center
in the organization.


388
00:25:00,467 --> 00:25:04,104 line:-2
Now lets discuss
security certificates and identities


389
00:25:04,137 --> 00:25:06,173 line:-1
in declarative device management.


390
00:25:07.207 --> 00:25:11.678 line:-2 align:center
Administrators need to ensure
secure access to organization resources


391
00:25:11,712 --> 00:25:15,148 line:-1
hosted on internal and external networks.


392
00:25:16,550 --> 00:25:20,153 line:-2
Often this requires adding certificates
and identities to devices


393
00:25:20.187 --> 00:25:25.425 line:-2 align:center
to ensure transport layer security
or authenticated access to app services.


394
00:25:26.527 --> 00:25:30.464 line:-2 align:center
Different app services may use
the same certificate or identity,


395
00:25:30.497 --> 00:25:33.901 line:-2 align:center
and it is important to be able
to manage such relationships.


396
00:25:35,569 --> 00:25:38,172 line:-1
Certificates also have a finite lifetime,


397
00:25:38,205 --> 00:25:41,308 line:-2
so there needs
to be a reliable way to refresh them.


398
00:25:42,843 --> 00:25:48,015 line:-2
Also, it is desirable to replace password
authentication with secure technology,


399
00:25:48.048 --> 00:25:53.320 line:-2 align:center
such as passkeys, which are faster,
easier to use, and phishing resistant.


400
00:25:54,054 --> 00:25:59,359 line:-2
It is thus critical for MDM developers
to provide a reliable and efficient way


401
00:25:59.393 --> 00:26:02.596 line:-2 align:center
for administrators
to manage certificates and identities.


402
00:26:04,898 --> 00:26:07,734 line:-1
MDM already includes profile payloads


403
00:26:07.768 --> 00:26:09.570 line:-1 align:center
that can be used to create certificates


404
00:26:09,603 --> 00:26:12,539 line:-1
and identities in the keychain on devices.


405
00:26:13.674 --> 00:26:16.043 line:-1 align:center
It also supports provisioning identities


406
00:26:16.076 --> 00:26:19.413 line:-1 align:center
via the ACME and SCEP protocols


407
00:26:19.446 --> 00:26:21.415 line:-1 align:center
and supports retrieving certificates


408
00:26:21.448 --> 00:26:24.218 line:-1 align:center
via a certificate list command.


409
00:26:24.251 --> 00:26:25.953 line:-1 align:center
But there are some limitations


410
00:26:25.986 --> 00:26:27.754 line:-1 align:center
on what MDM can do.


411
00:26:29,723 --> 00:26:32,693 line:-2
MDM certificate
or identity payloads can be referenced


412
00:26:32.726 --> 00:26:35.796 line:-2 align:center
by one or more other payloads
within the same profile.


413
00:26:37,598 --> 00:26:41,768 line:-2
However, references to certificates
or identities in other profiles


414
00:26:41.802 --> 00:26:43.237 line:-1 align:center
are not allowed.


415
00:26:44.371 --> 00:26:48.742 line:-2 align:center
This means profiles either have to
become larger to accommodate all payloads


416
00:26:48.775 --> 00:26:53.647 line:-2 align:center
referencing the same item
or certificates and identities


417
00:26:53,680 --> 00:26:56,750 line:-2
have to be duplicated
across multiple profiles,


418
00:26:56,783 --> 00:26:59,753 line:-2
which means more work
to keep them up to date.


419
00:27:00.954 --> 00:27:05.959 line:-2 align:center
Also, when a certificate
or identity does need to be refreshed,


420
00:27:05.993 --> 00:27:09.630 line:-2 align:center
all the other payloads in the profile
will be updated in the system,


421
00:27:09.663 --> 00:27:12.466 line:-2 align:center
which can be disruptive
to the user experience.


422
00:27:14.835 --> 00:27:18.372 line:-2 align:center
Declarative device management
can provide a more efficient mechanism


423
00:27:18,405 --> 00:27:20,707 line:-1
for managing certificates and identities


424
00:27:20.741 --> 00:27:24.711 line:-2 align:center
by utilizing the full power
of its declaration data model.


425
00:27:24,745 --> 00:27:26,079 line:-1
Here’s how.


426
00:27:28.215 --> 00:27:33.187 line:-2 align:center
Certificates and identities
can be defined as asset declarations,


427
00:27:33,220 --> 00:27:35,956 line:-2
and configurations
can reference those assets.


428
00:27:37,524 --> 00:27:42,429 line:-2
Multiple configurations can reference
the same certificate or identity,


429
00:27:42,462 --> 00:27:45,232 line:-2
and multiple certificates
or identities can be referenced


430
00:27:45.265 --> 00:27:47.201 line:-1 align:center
by the same configuration.


431
00:27:48.502 --> 00:27:51.738 line:-2 align:center
And only the asset needs
to be updated when the certificate


432
00:27:51.772 --> 00:27:54.007 line:-1 align:center
or identity needs to be refreshed.


433
00:27:54,842 --> 00:27:57,444 line:-2
This combination
of assets and configurations


434
00:27:57.477 --> 00:28:01.515 line:-2 align:center
resolves many of the limitations
of MDM profile payloads.


435
00:28:02.583 --> 00:28:05.919 line:-2 align:center
In addition,
status for certificates and identities


436
00:28:05,953 --> 00:28:09,156 line:-2
can also be reported,
including providing quick feedback


437
00:28:09.189 --> 00:28:11.892 line:-2 align:center
when ACME and SCEP identities
are provisioned


438
00:28:11,925 --> 00:28:14,661 line:-1
without the need for polling.


439
00:28:14.695 --> 00:28:17.030 line:-1 align:center
Let’s examine how all this is implemented.


440
00:28:18.932 --> 00:28:23.270 line:-2 align:center
A set of assets has been added
to provide certificate or identity data.


441
00:28:24.605 --> 00:28:29.309 line:-2 align:center
Certificates use either
the PEM or DER data formats.


442
00:28:30,577 --> 00:28:34,781 line:-2
Identities use the PKCS #12 format,
or can be provisioned


443
00:28:34.815 --> 00:28:37.217 line:-1 align:center
via the ACME or SCEP protocols.


444
00:28:37,251 --> 00:28:40,787 line:-2
This includes use of hardware
bound keys where available.


445
00:28:41.922 --> 00:28:45.859 line:-2 align:center
A new status item is also available
to report on each certificate


446
00:28:45.893 --> 00:28:48.862 line:-1 align:center
or identity installed via assets.


447
00:28:48.896 --> 00:28:51.031 line:-1 align:center
Let’s study some examples.


448
00:28:52.533 --> 00:28:55.636 line:-2 align:center
This example asset
will install a certificate.


449
00:28:56.637 --> 00:28:58.972 line:-1 align:center
The reference details provide a URL


450
00:28:59.006 --> 00:29:02.342 line:-2 align:center
that delivers the actual certificate data
to the device.


451
00:29:03.610 --> 00:29:08.849 line:-2 align:center
Another example shows an asset to
provision an identity via an ACME server.


452
00:29:09,883 --> 00:29:13,353 line:-2
In this case,
the reference details provide a URL


453
00:29:13,387 --> 00:29:16,890 position:49% line:-2
that delivers a JSON document
containing the properties needed


454
00:29:16.924 --> 00:29:19.359 line:-1 align:center
for the ACME protocol exchange.


455
00:29:19,393 --> 00:29:23,330 line:-2
Here is an example of the ACME
properties JSON document.


456
00:29:24.498 --> 00:29:28.502 line:-2 align:center
The directory URL specifies
the URL of the ACME server.


457
00:29:29.236 --> 00:29:33.473 line:-2 align:center
There are a set of properties that define
what type of key is generated


458
00:29:34.308 --> 00:29:37.377 line:-2 align:center
and a set of properties
for the generated certificate.


459
00:29:39,012 --> 00:29:41,982 line:-1
Now, lets look at the status.


460
00:29:42.015 --> 00:29:46.820 line:-2 align:center
This example shows
a status array item with two certificates.


461
00:29:46,854 --> 00:29:51,491 line:-2
Each item includes the declaration
identifier of the associated assets,


462
00:29:51.525 --> 00:29:55.696 line:-2 align:center
as well
as the DER encoded certificate data


463
00:29:55,729 --> 00:29:58,265 line:-2
and an indicator
of whether the certificate


464
00:29:58,298 --> 00:30:00,667 line:-1
corresponds to an identity.


465
00:30:01,802 --> 00:30:03,370 line:-1
Now that we have assets


466
00:30:03,403 --> 00:30:05,172 line:1
for certificates and identities,


467
00:30:05,205 --> 00:30:07,174 line:1
we can make use of them in some new


468
00:30:07,207 --> 00:30:09,510 align:center
and existing configurations.


469
00:30:12.412 --> 00:30:15.749 line:-2 align:center
First, we have two new configurations
that can be used


470
00:30:15,782 --> 00:30:19,586 line:-2
to install
stand-alone certificates and identities.


471
00:30:19.620 --> 00:30:21.588 line:-1 align:center
Both reference a credential asset


472
00:30:21.622 --> 00:30:25.025 line:-2 align:center
to provide the actual certificate
or identity data.


473
00:30:26.426 --> 00:30:31.665 line:-2 align:center
The certificate configuration installs
a single certificate into the keychain.


474
00:30:31.698 --> 00:30:35.903 line:-2 align:center
If the certificate is self-signed
and is a certificate authority,


475
00:30:35.936 --> 00:30:39.006 line:-2 align:center
then it will also be added
to the trust store.


476
00:30:40.374 --> 00:30:44.645 line:-2 align:center
The identity configuration installs
a single identity into the keychain.


477
00:30:45.879 --> 00:30:47.681 line:-1 align:center
These configurations are available


478
00:30:47,714 --> 00:30:49,516 line:-1
on all platforms.


479
00:30:52.419 --> 00:30:57.124 line:-2 align:center
Next, we have a configuration
for deploying enterprise passkeys.


480
00:30:58.158 --> 00:31:03.430 line:-2 align:center
WWDC22 introduced passkeys
as a solution for eliminating the use


481
00:31:03,463 --> 00:31:06,934 line:-1
of passwords on websites and in apps.


482
00:31:06.967 --> 00:31:11.038 line:-2 align:center
In this release, our focus has turned
to making passkeys easy


483
00:31:11,071 --> 00:31:15,175 line:-2
to deploy in the enterprise
by ensuring that only authorized devices


484
00:31:15,209 --> 00:31:17,211 line:-1
and users can provision them.


485
00:31:18.679 --> 00:31:23.717 line:-2 align:center
To support this, there is a new enterprise
passkey attestation configuration


486
00:31:23.750 --> 00:31:27.354 line:-2 align:center
that can be used
to securely generate a passkey for a user


487
00:31:27,387 --> 00:31:32,125 line:-2
on a device when they visit any site
specified by the configuration.


488
00:31:33,360 --> 00:31:36,363 line:-2
The configuration
references an identity asset.


489
00:31:37.564 --> 00:31:42.135 line:-2 align:center
The identity is then used to perform
a standard WebAuthn attestation


490
00:31:42.169 --> 00:31:44.204 line:-1 align:center
of a generated passkey.


491
00:31:45.172 --> 00:31:48.709 line:-2 align:center
The WebAuthn relying party
can then verify this attestation


492
00:31:48,742 --> 00:31:51,845 line:-1
and allow access to the relevant sites.


493
00:31:51.879 --> 00:31:56.583 line:-2 align:center
Thus, administrators can restrict
certain passkeys to only managed devices.


494
00:31:57,985 --> 00:32:02,823 line:-2
This feature is available
for macOS, iOS, and iPadOS.


495
00:32:03,857 --> 00:32:05,959 line:-1
Details of how the MDM server


496
00:32:05,993 --> 00:32:07,728 line:-2
and relying party work together


497
00:32:07.761 --> 00:32:09.997 line:-2 align:center
to implement this flow can be found


498
00:32:10.030 --> 00:32:13.333 line:-2 align:center
in the session "Deploy passkeys at work."


499
00:32:14,301 --> 00:32:17,971 line:-2
Finally, the Mail and Exchange
account configurations


500
00:32:18.005 --> 00:32:21.708 line:-2 align:center
have been updated
to support S/MIME to bring feature parity


501
00:32:21.742 --> 00:32:24.745 line:-2 align:center
with their MDM profile
payload equivalents.


502
00:32:25,746 --> 00:32:29,983 line:-2
The configurations can now reference
identity assets that can be used


503
00:32:30,017 --> 00:32:33,086 line:-1
for S/MIME signing and encryption.


504
00:32:33.120 --> 00:32:36.623 line:-1 align:center
This is available for iOS and iPadOS.


505
00:32:38.358 --> 00:32:41.828 line:-2 align:center
For our final item,
let's discuss a new behavior


506
00:32:41.862 --> 00:32:47.067 line:-2 align:center
that makes it easy for you to transition
from MDM profiles to configurations.


507
00:32:48,769 --> 00:32:50,370 line:-1
Declarative device management


508
00:32:50.404 --> 00:32:52.739 line:-1 align:center
is built into MDM and can be used


509
00:32:52,773 --> 00:32:54,608 line:-1
in parallel with MDM to add


510
00:32:54,641 --> 00:32:56,743 line:-1
new management capabilities,


511
00:32:56,777 --> 00:32:59,213 line:-1
allowing you to transition your products


512
00:32:59.246 --> 00:33:00.681 line:-1 align:center
over time.


513
00:33:01.582 --> 00:33:06.053 line:-2 align:center
Implementing declarative device management
in MDM is as simple as sending


514
00:33:06,086 --> 00:33:09,223 line:-2
the MDM DeclarativeManagement
command to the device,


515
00:33:09.256 --> 00:33:13.994 line:-2 align:center
and syncing over a set of declarations
that get activated on the device.


516
00:33:14.995 --> 00:33:18.699 line:-2 align:center
Then the server listens
to incoming status reports.


517
00:33:20.200 --> 00:33:24.972 line:-2 align:center
To make this transition easy,
a legacy profile configuration was created


518
00:33:25,005 --> 00:33:29,376 line:-2
to allow existing MDM profiles
to be sent as a configuration,


519
00:33:29,409 --> 00:33:32,913 line:-2
enabling profiles to take
full advantage of the autonomous


520
00:33:32.946 --> 00:33:36.049 line:-2 align:center
and proactive behavior
of declarative device management.


521
00:33:37.918 --> 00:33:43.123 line:-2 align:center
Doing that involves first removing
the existing MDM profile,


522
00:33:43,156 --> 00:33:45,726 line:-2
then sending
and activating a configuration


523
00:33:45.759 --> 00:33:47.895 line:-1 align:center
that installs that same profile.


524
00:33:49,429 --> 00:33:53,367 line:-2
This can be a disruptive process,
causing things like accounts to have


525
00:33:53.400 --> 00:33:56.837 line:-2 align:center
to refresh all their data,
or leaving a management gap


526
00:33:56,870 --> 00:34:01,041 line:-2
in which restrictions are missing
from the device for a short while.


527
00:34:01,074 --> 00:34:04,711 line:-2
MDM developers have asked
for an easier way to transition


528
00:34:04.745 --> 00:34:08.916 line:-2 align:center
from using MDM profiles
to the legacy profile configurations.


529
00:34:08,949 --> 00:34:11,451 line:-1
And now this is possible.


530
00:34:11.485 --> 00:34:13.253 line:-1 align:center
Here’s how.


531
00:34:13.287 --> 00:34:16.990 line:-2 align:center
Declarative device management
now supports taking over management


532
00:34:17,024 --> 00:34:22,196 line:-2
of already installed MDM profiles
without the need to remove them.


533
00:34:22,229 --> 00:34:27,568 line:-2
To use this, all a server has to do
is send and activate a configuration


534
00:34:27,601 --> 00:34:33,140 line:-2
that contains the same profile
as one already installed by MDM.


535
00:34:33.173 --> 00:34:37.010 line:-2 align:center
The declarative device management system
will then take over management


536
00:34:37,044 --> 00:34:40,480 line:-2
of that profile
without reinstalling or updating it.


537
00:34:40.514 --> 00:34:44.418 line:-2 align:center
At that point, declarative
device management owns the profile.


538
00:34:44.451 --> 00:34:47.588 line:-2 align:center
MDM will not be able
to make changes to it.


539
00:34:48,488 --> 00:34:52,860 line:-2
There is no disruption to the device state
the profile is managing.


540
00:34:52,893 --> 00:34:55,629 line:-1
And there is no management gap.


541
00:34:55.662 --> 00:35:00.968 line:-2 align:center
This makes it much easier to transition
from MDM to declarative device management.


542
00:35:02.135 --> 00:35:05.405 line:-2 align:center
This new behavior
is available on all platforms.


543
00:35:06.573 --> 00:35:11.011 line:-2 align:center
That concludes the last of our agenda
items covering the exciting new features


544
00:35:11.044 --> 00:35:15.249 line:-2 align:center
we are bringing you for this release
of declarative device management.


545
00:35:15,282 --> 00:35:17,684 line:-1
Now let’s wrap up.


546
00:35:17,718 --> 00:35:22,322 line:-2
With the foundational elements in place,
this release has focused on building out


547
00:35:22.356 --> 00:35:26.293 line:-2 align:center
key management features using the power
of declarative device management.


548
00:35:27.861 --> 00:35:31.098 line:-2 align:center
Many of these features
are the results of requests received


549
00:35:31.131 --> 00:35:34.234 line:-2 align:center
via your feedback,
and we thank you for that.


550
00:35:35,202 --> 00:35:38,238 line:-2
As declarative device management
continues to advance,


551
00:35:38.272 --> 00:35:39.907 line:-1 align:center
we welcome more feedback


552
00:35:39.940 --> 00:35:43.944 line:-2 align:center
to help us prioritize the features
that are important to you.


553
00:35:45,846 --> 00:35:49,983 line:-2
With new management features being added
only to declarative device management,


554
00:35:50.017 --> 00:35:53.720 line:-2 align:center
it is now critical for you
to build support into your products


555
00:35:53.754 --> 00:35:56.456 line:-1 align:center
if you have not already done so.


556
00:35:56,490 --> 00:35:59,860 line:-2
If you already have support,
the new features in this release


557
00:35:59.893 --> 00:36:01.995 line:-1 align:center
will give you even more opportunity


558
00:36:02.029 --> 00:36:05.165 line:-2 align:center
to make great products
your customers will love.


559
00:36:06.700 --> 00:36:09.970 line:-3 align:center
Information about other new
management features in this release


560
00:36:10.003 --> 00:36:15.075 line:-3 align:center
can be found in the session
"What’s new in managing Apple devices."


561
00:36:15,108 --> 00:36:18,946 line:-3
The schema for new configurations,
assets, and status items


562
00:36:18.979 --> 00:36:21.849 line:-3 align:center
is available
in our open source schema repository,


563
00:36:21.882 --> 00:36:24.885 line:-3 align:center
which you can find linked
in the session reference details.


564
00:36:26,253 --> 00:36:28,188 line:-1
Thanks for watching.


565
00:36:28,222 --> 00:36:32,359 line:-1
♪ ♪

