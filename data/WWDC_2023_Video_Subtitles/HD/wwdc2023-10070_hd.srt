2
00:00:00.000 --> 00:00:03.136 line:-1 position:50%
♪ Mellow instrumental hip-hop ♪


3
00:00:03,136 --> 00:00:10,477 line:0 position:90% size:2%
♪


4
00:00:10.477 --> 00:00:11.578 line:-1 position:50%
Hi, my name is Jeremy,


5
00:00:11.578 --> 00:00:14.348 line:-1 position:50%
and I'm a media experience
software engineer.


6
00:00:14.348 --> 00:00:16.016 line:-1 position:50%
This talk will explain
how to create


7
00:00:16.016 --> 00:00:19.686 line:-1 position:50%
a great spatial experience
for video playback in your app.


8
00:00:19.686 --> 00:00:22.222 line:-1 position:50%
A great experience
is optimized for the platform,


9
00:00:22.222 --> 00:00:24.825 line:-1 position:50%
takes advantage of its powerful
media capabilities,


10
00:00:24.825 --> 00:00:27.961 line:-1 position:50%
and integrates
with the whole system.


11
00:00:27.961 --> 00:00:29.963 line:-1 position:50%
First, we'll explore
the media experience


12
00:00:29.963 --> 00:00:31.798 line:-1 position:50%
with a minimal app.


13
00:00:31.798 --> 00:00:35.402 line:-1 position:50%
Next, I'll go over some more
advanced UI features.


14
00:00:35.402 --> 00:00:39.606 line:-1 position:50%
Then, I'll go over some other
methods of displaying video.


15
00:00:39.606 --> 00:00:42.776 line:-1 position:50%
Finally, I'll compare
the options.


16
00:00:42.776 --> 00:00:47.114 line:-1 position:50%
If you have used
the media APIs on iOS or tvOS,


17
00:00:47.114 --> 00:00:49.783 line:-1 position:50%
then this may feel familiar.


18
00:00:49.783 --> 00:00:52.753 line:-1 position:50%
This platform builds
on those same APIs


19
00:00:52.753 --> 00:00:57.524 line:-1 position:50%
and extends them
for its unique capabilities.


20
00:00:57.524 --> 00:01:00.727 line:-1 position:50%
AVFoundation handles
all the work of playing movies:


21
00:01:00.727 --> 00:01:04.631 line:-1 position:50%
streaming, parsing,
decoding, synchronizing.


22
00:01:04.631 --> 00:01:08.468 line:-1 position:50%
And AVKit builds on AVFoundation
and UI Frameworks,


23
00:01:08.468 --> 00:01:10.837 line:-1 position:50%
to create a playback experience
that's customized


24
00:01:10.837 --> 00:01:13.640 line:-1 position:50%
and integrated
for each platform.


25
00:01:13.640 --> 00:01:17.044 line:-1 position:50%
On this platform,
AVFoundation has been enhanced


26
00:01:17.044 --> 00:01:19.813 line:-1 position:50%
to support new media formats
that take advantage


27
00:01:19.813 --> 00:01:23.917 line:-1 position:50%
of its unique capabilities,
such as 3D video.


28
00:01:23,917 --> 00:01:29,056 position:50%
Refer to this session for more
details about these formats.


29
00:01:29.056 --> 00:01:32.225 line:-1 position:50%
AVFoundation has also been
enhanced to render performantly


30
00:01:32.225 --> 00:01:34.895 line:-1 position:50%
and with high quality
using RealityKit,


31
00:01:34.895 --> 00:01:36.997 line:-1 position:50%
so that video can be
composited seamlessly


32
00:01:36.997 --> 00:01:38.432 line:-1 position:50%
into the world around you,


33
00:01:38.432 --> 00:01:42.703 line:-1 position:50%
and so that audio also responds
to the world around you.


34
00:01:42.703 --> 00:01:45.138 line:-1 position:50%
And AVKit's
AVPlayerViewController


35
00:01:45.138 --> 00:01:48.575 line:-1 position:50%
has been extended to make use
of the power of RealityKit


36
00:01:48.575 --> 00:01:51.144 line:-1 position:50%
and the unique capabilities
of the platform


37
00:01:51.144 --> 00:01:54.147 line:-1 position:50%
to create a highly refined
experience.


38
00:01:54.147 --> 00:01:56.883 line:-1 position:50%
This includes all the playback
controls you expect,


39
00:01:56.883 --> 00:02:00.387 line:-1 position:50%
but also has many
unique capabilities.


40
00:02:00.387 --> 00:02:03.523 line:-1 position:50%
What's required to take
advantage of this in your app?


41
00:02:03.523 --> 00:02:07.995 line:-1 position:50%
First, the Xcode target must
build with this platform's SDK.


42
00:02:07.995 --> 00:02:11.498 line:-1 position:50%
Compatible iOS apps
built with the iOS SDK


43
00:02:11.498 --> 00:02:14.601 line:-1 position:50%
will get an iOS compatible
experience.


44
00:02:14.601 --> 00:02:16.636 line:-1 position:50%
Use AVPlayerViewController


45
00:02:16.636 --> 00:02:19.439 line:-1 position:50%
just like you do
on iOS or tvOS.


46
00:02:19.439 --> 00:02:21.375 line:-1 position:50%
And finally,
present the view controller


47
00:02:21.375 --> 00:02:23.543 line:-1 position:50%
so it fills the window.


48
00:02:23.543 --> 00:02:26.980 line:-1 position:50%
Let's demonstrate this
with some code.


49
00:02:26.980 --> 00:02:30.417 line:-1 position:50%
First, we'll import
AVFoundation and AVKit.


50
00:02:30.417 --> 00:02:33.286 line:-1 position:50%
Next, create an
AVPlayerViewController


51
00:02:33.286 --> 00:02:35.756 line:-1 position:50%
and connect an AVPlayer to it.


52
00:02:35.756 --> 00:02:39.026 line:-1 position:50%
Then, create a new player item
with the content URL


53
00:02:39.026 --> 00:02:41.261 line:-1 position:50%
and set it on the player.


54
00:02:41.261 --> 00:02:43.130 line:-1 position:50%
Adding the item
after setting the player


55
00:02:43.130 --> 00:02:45.565 line:-1 position:50%
on the view controller
can improve performance


56
00:02:45.565 --> 00:02:47.267 line:-1 position:50%
because the player
will understand


57
00:02:47.267 --> 00:02:51.938 line:-1 position:50%
how it will be displayed before
it starts loading the media.


58
00:02:51.938 --> 00:02:54.608 line:-1 position:50%
Then, to use it in SwiftUI,


59
00:02:54.608 --> 00:02:57.878 line:-1 position:50%
wrap that code in a
UIViewControllerRepresentable.


60
00:02:57.878 --> 00:03:01.248 line:-1 position:50%
We'll call this one PlayerView.


61
00:03:01.248 --> 00:03:02.783 line:-1 position:50%
Then, we'll create our app,


62
00:03:02.783 --> 00:03:06.853 line:-1 position:50%
which we'll call
MoviePlayingApp.


63
00:03:06.853 --> 00:03:09.556 line:-1 position:50%
Add the view controller,
which we just defined,


64
00:03:09.556 --> 00:03:11.825 line:-1 position:50%
so it fills the window.


65
00:03:11.825 --> 00:03:15.328 line:-1 position:50%
Just like that,
you've got a movie playing app.


66
00:03:15.328 --> 00:03:17.230 line:-1 position:50%
If you're thinking this code
looks very similar


67
00:03:17.230 --> 00:03:19.566 line:-1 position:50%
to what you would write
on other Apple platforms,


68
00:03:19.566 --> 00:03:21.368 line:-1 position:50%
that's because it is.


69
00:03:21.368 --> 00:03:23.970 line:-1 position:50%
AVPlayerViewController
and AVPlayer are doing


70
00:03:23.970 --> 00:03:27.541 line:-1 position:50%
a lot of the heavy lifting
so you don't have to.


71
00:03:27.541 --> 00:03:28.809 line:-1 position:50%
Let me show you
the media experience


72
00:03:28.809 --> 00:03:32.479 line:-1 position:50%
a simple app like this has.


73
00:03:32.479 --> 00:03:36.183 line:-1 position:50%
Before the app is launched,
just the room is visible.


74
00:03:36.183 --> 00:03:37.384 line:-1 position:50%
When the app launches,


75
00:03:37.384 --> 00:03:39.920 line:-1 position:50%
a large screen appears
right in front


76
00:03:39.920 --> 00:03:43.356 line:-1 position:50%
and the room darkens,
creating a nice ambiance.


77
00:03:43.356 --> 00:03:45.926 line:-1 position:50%
When moving,
the screen stays in place,


78
00:03:45.926 --> 00:03:49.162 line:-1 position:50%
and the audio stays
anchored to the screen.


79
00:03:49.162 --> 00:03:54.267 line:-1 position:50%
To show playback controls,
look at the screen and tap.


80
00:03:54.267 --> 00:03:57.370 line:-1 position:50%
The controls float
just in front of the video.


81
00:03:57.370 --> 00:03:58.405 line:-1 position:50%
While playing,


82
00:03:58.405 --> 00:04:01.074 line:-1 position:50%
do nothing and they will
disappear on their own.


83
00:04:01.074 --> 00:04:02.142 line:-1 position:50%
Or make them disappear


84
00:04:02.142 --> 00:04:05.378 line:-1 position:50%
by looking at the screen
and tapping again.


85
00:04:05.378 --> 00:04:07.380 line:-1 position:50%
Grab the window bar
below the screen


86
00:04:07.380 --> 00:04:10.050 line:-1 position:50%
to reposition it.


87
00:04:14,054 --> 00:04:18,859 position:50%
Grab the corner of the screen
to resize.


88
00:04:18,859 --> 00:04:21,194 position:50%
Notice that
as the screen resizes,


89
00:04:21,194 --> 00:04:25,799 position:50%
it animates smoothly and matches
the aspect ratio of the video.


90
00:04:25.799 --> 00:04:29.069 line:-1 position:50%
Adjust the volume
by turning the Digital Crown.


91
00:04:29.069 --> 00:04:35.709 line:-1 position:50%
Or use the Digital Crown to
open an environment, like this.


92
00:04:35.709 --> 00:04:37.878 line:-1 position:50%
I love watching movies this way.


93
00:04:37.878 --> 00:04:40.680 line:-1 position:50%
You've got to experience
this for yourself.


94
00:04:42.682 --> 00:04:45.318 line:-1 position:50%
Now, let's examine the playback
controls more closely


95
00:04:45.318 --> 00:04:48.321 line:-1 position:50%
to see the features
they provide.


96
00:04:48.321 --> 00:04:50.991 line:-1 position:50%
Here is our player interface.


97
00:04:50.991 --> 00:04:53.226 line:-1 position:50%
At the top right
is the volume control


98
00:04:53.226 --> 00:04:55.762 line:-1 position:50%
to make quick adjustments
or to mute.


99
00:04:55.762 --> 00:04:57.898 line:-1 position:50%
As I mentioned,
volume can also be adjusted


100
00:04:57.898 --> 00:05:00.367 line:-1 position:50%
with the Digital Crown.


101
00:05:00,367 --> 00:05:02,602 position:50%
At the bottom left
are the familiar play/pause


102
00:05:02,602 --> 00:05:05,438 position:50%
and back/forward buttons.


103
00:05:05,438 --> 00:05:07,274 position:50%
In the bottom middle
is the scrubber


104
00:05:07,274 --> 00:05:09,976 position:50%
to jump to a different time
in the movie.


105
00:05:09,976 --> 00:05:10,977 position:50%
And in the bottom right


106
00:05:10,977 --> 00:05:15,415 position:50%
is this button
with more options.


107
00:05:15,415 --> 00:05:18,818 position:50%
Here are options to adjust
the playback speed.


108
00:05:18,818 --> 00:05:22,155 position:50%
When movies contain multiple
audio tracks or caption tracks,


109
00:05:22,155 --> 00:05:24,224 position:50%
use these options
to choose the language


110
00:05:24,224 --> 00:05:25,659 position:50%
for the audio track,


111
00:05:25,659 --> 00:05:29,496 position:50%
or to enable captions
in the preferred language.


112
00:05:29,496 --> 00:05:32,065 position:50%
This last option
is Dimming Effect.


113
00:05:32,065 --> 00:05:33,567 position:50%
I love watching movies
in the dark


114
00:05:33,567 --> 00:05:35,468 position:50%
to really focus on them,


115
00:05:35,468 --> 00:05:38,705 position:50%
but sometimes a video
isn't my only focus.


116
00:05:38,705 --> 00:05:40,207 position:50%
Here, I can turn off
Dimming Effect


117
00:05:40,207 --> 00:05:42,876 position:50%
to better see what's around me.


118
00:05:42.876 --> 00:05:45.178 line:-1 position:50%
We've covered the basics
that are built in.


119
00:05:45.178 --> 00:05:49.149 line:-1 position:50%
Now, let's explore some more
advanced features.


120
00:05:49.149 --> 00:05:51.084 line:-1 position:50%
Thumbnail scrubbing
shows a small image


121
00:05:51.084 --> 00:05:52.652 line:-1 position:50%
of the video while scrubbing,


122
00:05:52.652 --> 00:05:55.822 line:-1 position:50%
allowing seamless navigation
of the content.


123
00:05:55.822 --> 00:05:58.325 line:-1 position:50%
The controls will automatically
display a thumbnail


124
00:05:58.325 --> 00:06:00.126 line:-1 position:50%
when scrubbing for HLS streams


125
00:06:00.126 --> 00:06:02.229 line:-1 position:50%
that have an I-frame only
playlist,


126
00:06:02.229 --> 00:06:04.698 line:-1 position:50%
also known as
a Trick Play track.


127
00:06:04.698 --> 00:06:06.099 line:-1 position:50%
Small Trick Play tracks


128
00:06:06.099 --> 00:06:09.769 line:-1 position:50%
with a width of 145 pixels
are preferred.


129
00:06:09.769 --> 00:06:15.108 line:-1 position:50%
Refer to this document
for more details.


130
00:06:15.108 --> 00:06:18.411 line:-1 position:50%
Sometimes media needs to be
inserted into the timeline


131
00:06:18.411 --> 00:06:21.848 line:-1 position:50%
for a logo, a recap, or an ad.


132
00:06:21.848 --> 00:06:25.185 line:-1 position:50%
Interstitials support
enables this ability.


133
00:06:25.185 --> 00:06:26.786 line:-1 position:50%
When interstitials are present,


134
00:06:26.786 --> 00:06:28.888 line:-1 position:50%
the controls will automatically
reflect them


135
00:06:28.888 --> 00:06:31.157 line:-1 position:50%
with an indicator
in the timeline.


136
00:06:31.157 --> 00:06:33.860 line:-1 position:50%
These interstitials can be
configured programmatically


137
00:06:33.860 --> 00:06:37.297 line:-1 position:50%
with an AVPlayerInterstital
EventController,


138
00:06:37.297 --> 00:06:41.167 line:-1 position:50%
or they can be described
within the HLS stream.


139
00:06:41,167 --> 00:06:45,772 position:50%
Refer to this session
for more details.


140
00:06:45.772 --> 00:06:47.173 line:-1 position:50%
There are some
additional UI options


141
00:06:47.173 --> 00:06:49.943 line:-1 position:50%
commonly used
by video playing apps.


142
00:06:49.943 --> 00:06:52.212 line:-1 position:50%
Contextual actions allow you
to add buttons like


143
00:06:52.212 --> 00:06:55.081 line:-1 position:50%
Skip intro
or Play next episode.


144
00:06:55.081 --> 00:06:58.818 line:-1 position:50%
They can have a title
and an optional image.


145
00:06:58.818 --> 00:07:00.620 line:-1 position:50%
Custom info view controllers
can be used


146
00:07:00.620 --> 00:07:02.756 line:-1 position:50%
to show metadata
about the content


147
00:07:02.756 --> 00:07:05.325 line:-1 position:50%
or to suggest related content.


148
00:07:05.325 --> 00:07:09.062 line:-1 position:50%
These APIs work the same
as on other Apple platforms.


149
00:07:09,062 --> 00:07:13,099 position:50%
Refer to this session
for more details.


150
00:07:13.099 --> 00:07:15.802 line:-1 position:50%
Your app can also transport you
to another place


151
00:07:15.802 --> 00:07:18.605 line:-1 position:50%
with a feature called
Immersive Spaces.


152
00:07:18.605 --> 00:07:20.607 line:-1 position:50%
When your app creates
an Immersive Space,


153
00:07:20.607 --> 00:07:23.710 line:-1 position:50%
you get to decide
what that space looks like.


154
00:07:23.710 --> 00:07:25.779 line:-1 position:50%
And even better,
your video screen


155
00:07:25.779 --> 00:07:28.014 line:-1 position:50%
will automatically
move into that space


156
00:07:28.014 --> 00:07:31.685 line:-1 position:50%
and anchor itself at
a predictable size and position


157
00:07:31.685 --> 00:07:35.288 line:-1 position:50%
to guarantee an excellent
viewing angle every time.


158
00:07:35.288 --> 00:07:37.891 line:-1 position:50%
And the controls detach
and move closer


159
00:07:37.891 --> 00:07:40.327 line:-1 position:50%
to make them easier
to interact with.


160
00:07:40.327 --> 00:07:43.163 line:-1 position:50%
Let's check out some code.


161
00:07:43.163 --> 00:07:46.199 line:-1 position:50%
Here is our MoviePlayingApp
from earlier.


162
00:07:46.199 --> 00:07:48.535 line:-1 position:50%
First, we'll add
an Immersive Space.


163
00:07:48.535 --> 00:07:50.136 line:-1 position:50%
The 3D content
will be described


164
00:07:50.136 --> 00:07:52.939 line:-1 position:50%
by RealityKit entities.


165
00:07:52.939 --> 00:07:55.375 line:-1 position:50%
Then we'll use onAppear
on our PlayerView


166
00:07:55.375 --> 00:07:58.111 line:-1 position:50%
to open the space.


167
00:07:58.111 --> 00:08:00.580 line:-1 position:50%
Make sure your Immersive Space
is designed to accommodate


168
00:08:00.580 --> 00:08:02.716 line:-1 position:50%
the movie player
when it's docked.


169
00:08:02,716 --> 00:08:04,651 position:50%
For more information
about how to build


170
00:08:04,651 --> 00:08:09,255 position:50%
and present spaces,
refer to this session.


171
00:08:09.255 --> 00:08:11.925 line:-1 position:50%
AVPlayerViewController
has been thoroughly refined


172
00:08:11.925 --> 00:08:15.328 line:-1 position:50%
and designed for a great
experience on this platform.


173
00:08:15.328 --> 00:08:17.397 line:-1 position:50%
We really want
AVPlayerViewController


174
00:08:17.397 --> 00:08:18.798 line:-1 position:50%
to work for you.


175
00:08:18.798 --> 00:08:21.868 line:-1 position:50%
So, if there are features or
behaviors you'd like to suggest,


176
00:08:21.868 --> 00:08:24.204 line:-1 position:50%
please provide feedback
so we can continue


177
00:08:24.204 --> 00:08:27.006 line:-1 position:50%
to improve it
for your use cases.


178
00:08:27.006 --> 00:08:29.509 line:-1 position:50%
Now, there could still be
rare situations


179
00:08:29.509 --> 00:08:32.879 line:-1 position:50%
where someone needs to build
custom playback controls.


180
00:08:32.879 --> 00:08:35.982 line:-1 position:50%
In that case,
please provide feedback.


181
00:08:35.982 --> 00:08:39.219 line:-1 position:50%
And we recommend
you use AVPlayerViewController.


182
00:08:39.219 --> 00:08:40.453 line:-1 position:50%
You can hide the controls


183
00:08:40.453 --> 00:08:43.390 line:-1 position:50%
and supply an overlay
for your custom UI.


184
00:08:43.390 --> 00:08:46.760 line:-1 position:50%
This is preferred over using
a lower-level API because,


185
00:08:46.760 --> 00:08:49.529 line:-1 position:50%
as we've demonstrated,
AVPlayerViewController


186
00:08:49.529 --> 00:08:51.965 line:-1 position:50%
provides a lot
of system integration features


187
00:08:51.965 --> 00:08:54.401 line:-1 position:50%
beyond just playback controls.


188
00:08:54.401 --> 00:08:59.606 line:-1 position:50%
And you'll continue to get great
system integration features.


189
00:08:59.606 --> 00:09:02.142 line:-1 position:50%
We've explored
AVPlayerViewController's


190
00:09:02.142 --> 00:09:04.144 line:-1 position:50%
fullscreen experience.


191
00:09:04.144 --> 00:09:08.648 line:-1 position:50%
Now let's look at some other
use cases for video playback.


192
00:09:08.648 --> 00:09:12.185 line:-1 position:50%
Sometimes you want a movie
to play inline in a window.


193
00:09:12.185 --> 00:09:15.555 line:-1 position:50%
It could be part of a document
or to play a preview.


194
00:09:15.555 --> 00:09:21.194 line:-1 position:50%
AVPlayerViewController inline
is great for this situation too.


195
00:09:21.194 --> 00:09:23.363 line:-1 position:50%
How do you get the inline view?


196
00:09:23.363 --> 00:09:24.864 line:-1 position:50%
It will automatically
use this mode


197
00:09:24.864 --> 00:09:27.534 line:-1 position:50%
whenever it's displayed
without filling the window.


198
00:09:27.534 --> 00:09:32.071 line:-1 position:50%
Its inline controls are also
redesigned for the OS.


199
00:09:32.071 --> 00:09:34.541 line:-1 position:50%
Note, because video is
composited within the window


200
00:09:34.541 --> 00:09:36.209 line:-1 position:50%
using AVPlayerLayer,


201
00:09:36.209 --> 00:09:40.313 line:-1 position:50%
it won't be able to display
3D video.


202
00:09:40.313 --> 00:09:42.282 line:-1 position:50%
Sometimes your app
may want to play video


203
00:09:42.282 --> 00:09:45.552 line:-1 position:50%
as an entity of a 3D scene.


204
00:09:45.552 --> 00:09:49.389 line:-1 position:50%
It could be a splash screen
or a video transition.


205
00:09:49.389 --> 00:09:51.891 line:-1 position:50%
In these cases, you don't want
playback controls


206
00:09:51.891 --> 00:09:55.395 line:-1 position:50%
and you also don't want
system integration like docking.


207
00:09:55.395 --> 00:09:56.329 line:-1 position:50%
For those cases,


208
00:09:56.329 --> 00:10:00.834 line:-1 position:50%
use RealityKit's
VideoPlayerComponent.


209
00:10:00.834 --> 00:10:03.837 line:-1 position:50%
VideoPlayerComponent
connects a RealityKit Entity


210
00:10:03.837 --> 00:10:05.605 line:-1 position:50%
to an AVPlayer.


211
00:10:05.605 --> 00:10:07.841 line:-1 position:50%
You can position it
in your RealityKit scene


212
00:10:07.841 --> 00:10:09.943 line:-1 position:50%
just like any other entity.


213
00:10:09.943 --> 00:10:13.713 line:-1 position:50%
It creates an aspect ratio
correct mesh for the video,


214
00:10:13.713 --> 00:10:16.349 line:-1 position:50%
and it supports
displaying captions.


215
00:10:16.349 --> 00:10:20.286 line:-1 position:50%
Whenever possible,
prefer it over AVPlayerLayer.


216
00:10:20.286 --> 00:10:22.755 line:-1 position:50%
Because it takes advantage
of RealityKit's optimizations


217
00:10:22.755 --> 00:10:26.526 line:-1 position:50%
for video, it gets better
performance than AVPlayerLayer,


218
00:10:26.526 --> 00:10:29.729 line:-1 position:50%
and it supports
new 3D video formats.


219
00:10:29,729 --> 00:10:34,801 position:50%
Refer to this session
for more details.


220
00:10:34.801 --> 00:10:37.604 line:-1 position:50%
Sometimes you may want
to use video in a 3D scene


221
00:10:37.604 --> 00:10:40.273 line:-1 position:50%
where the video
is used as an effect.


222
00:10:40.273 --> 00:10:43.076 line:-1 position:50%
In this case, you may want
to create your own geometry


223
00:10:43.076 --> 00:10:46.379 line:-1 position:50%
and have more control
over how the video is displayed.


224
00:10:46.379 --> 00:10:49.048 line:-1 position:50%
VideoMaterial
is a lower-level API


225
00:10:49.048 --> 00:10:52.418 line:-1 position:50%
that will display video
on arbitrary geometry.


226
00:10:52.418 --> 00:10:55.655 line:-1 position:50%
This means it can't ensure
the original aspect ratio


227
00:10:55.655 --> 00:10:58.791 line:-1 position:50%
and it doesn't have the ability
to display captions.


228
00:10:58,791 --> 00:11:03,963 position:50%
Check out this related talk
for more details.


229
00:11:03.963 --> 00:11:05.965 line:-1 position:50%
We've talked about some
additional UI features


230
00:11:05.965 --> 00:11:07.934 line:-1 position:50%
and some other use cases.


231
00:11:07.934 --> 00:11:09.469 line:-1 position:50%
The DestinationVideo sample app


232
00:11:09.469 --> 00:11:11.638 line:-1 position:50%
demonstrates
some of these features.


233
00:11:11.638 --> 00:11:13.640 line:-1 position:50%
It has a video browser
for choosing videos


234
00:11:13.640 --> 00:11:16.209 line:-1 position:50%
and plays them
in an Immersive Space.


235
00:11:16.209 --> 00:11:18.177 line:-1 position:50%
Here it is.


236
00:11:18.177 --> 00:11:20.480 line:-1 position:50%
Choose a video
to show the info page


237
00:11:20.480 --> 00:11:23.016 line:-1 position:50%
and an Immersive Space opens.


238
00:11:23.016 --> 00:11:26.286 line:-1 position:50%
Notice the use of an inline
player with custom UI controls


239
00:11:26.286 --> 00:11:28.187 line:-1 position:50%
for the preview.


240
00:11:28.187 --> 00:11:32.158 line:-1 position:50%
Then, play the movie.


241
00:11:32.158 --> 00:11:34.727 line:-1 position:50%
The player UI appears
and immediately docks


242
00:11:34.727 --> 00:11:36.229 line:-1 position:50%
into the Immersive Space


243
00:11:36.229 --> 00:11:40.366 line:-1 position:50%
at a fixed size and location
for optimal viewing.


244
00:11:40.366 --> 00:11:42.735 line:-1 position:50%
Another nice detail is that
when the screen is docked


245
00:11:42.735 --> 00:11:46.506 line:-1 position:50%
in an Immersive Space like this,
the playback controls detach


246
00:11:46.506 --> 00:11:49.175 line:-1 position:50%
and come a little closer
to make them more convenient


247
00:11:49.175 --> 00:11:54.247 line:-1 position:50%
to interact with.


248
00:11:54,247 --> 00:11:55,848 position:50%
Tap the list button.


249
00:11:55,848 --> 00:11:58,952 position:50%
The app has supplied
custom info view controllers


250
00:11:58,952 --> 00:12:01,321 position:50%
to display more info
about the content


251
00:12:01,321 --> 00:12:06,693 position:50%
and related content
while watching the video.


252
00:12:06.693 --> 00:12:08.261 line:-1 position:50%
Near the end of the video,


253
00:12:08.261 --> 00:12:11.364 line:-1 position:50%
a contextual action button
labeled Play Next


254
00:12:11.364 --> 00:12:15.768 line:-1 position:50%
appears in the
bottom-right corner.


255
00:12:15.768 --> 00:12:18.938 line:-1 position:50%
We've covered the spatial
experience for video playback.


256
00:12:18.938 --> 00:12:21.908 line:-1 position:50%
It has a large screen floating
in space in front of you


257
00:12:21.908 --> 00:12:25.211 line:-1 position:50%
with beautiful visuals
and great spatial audio.


258
00:12:25.211 --> 00:12:28.948 line:-1 position:50%
It includes playback controls
for everything you need to do,


259
00:12:28.948 --> 00:12:32.318 line:-1 position:50%
and we've talked about some
other playback use cases.


260
00:12:32.318 --> 00:12:35.121 line:-1 position:50%
There are several ways
to display video in your app.


261
00:12:35.121 --> 00:12:37.824 line:-1 position:50%
Let's compare them.


262
00:12:37,824 --> 00:12:39,993 position:50%
These are the APIs
to show video.


263
00:12:39,993 --> 00:12:42,161 position:50%
Each has different
capabilities.


264
00:12:42,161 --> 00:12:45,698 position:50%
Use the correct API for
the media experience you need.


265
00:12:45,698 --> 00:12:48,034 position:50%
Make sure your media
is displayed accurately


266
00:12:48,034 --> 00:12:49,936 position:50%
and is accessible.


267
00:12:49,936 --> 00:12:52,071 position:50%
Make sure it's optimized
for the platform


268
00:12:52,071 --> 00:12:56,342 position:50%
and enables 3D video formats
by rendering with RealityKit.


269
00:12:56,342 --> 00:12:58,578 position:50%
And make sure it has
powerful playback controls


270
00:12:58,578 --> 00:13:00,780 position:50%
tuned for the platform.


271
00:13:00,780 --> 00:13:03,316 position:50%
And make sure it's integrated
with the whole system


272
00:13:03,316 --> 00:13:06,419 position:50%
to get a great experience.


273
00:13:06.419 --> 00:13:08.655 line:-1 position:50%
AVPlayerViewController
will allow your app


274
00:13:08.655 --> 00:13:11.424 line:-1 position:50%
to take full advantage
of features you've been using


275
00:13:11.424 --> 00:13:12.992 line:-1 position:50%
in other Apple platforms


276
00:13:12.992 --> 00:13:16.462 line:-1 position:50%
and the new, unique features
of this platform.


277
00:13:16.462 --> 00:13:19.065 line:-1 position:50%
You can deliver a great
movie playback experience


278
00:13:19.065 --> 00:13:21.768 line:-1 position:50%
for your users.


279
00:13:21.768 --> 00:13:25.338 line:-1 position:50%
Spatial media capabilities
represent an opportunity


280
00:13:25.338 --> 00:13:28.641 line:-1 position:50%
for people to experience video
in a whole new way.


281
00:13:28.641 --> 00:13:32.779 line:-1 position:50%
To get started, check out
DestinationVideo Sample Project.


282
00:13:32.779 --> 00:13:36.015 line:-1 position:50%
It demonstrates many of
the features discussed here.


283
00:13:36,015 --> 00:13:40,687 position:50%
And check out these
related talks.


284
00:13:40.687 --> 00:13:42.822 line:-1 position:50%
I can't wait for people
to see what you make


285
00:13:42.822 --> 00:13:45.191 line:-1 position:50%
with these powerful tools.


286
00:13:45.191 --> 00:13:48.061 line:-1 position:50%
But now, I've got to get back
to watching a show.


287
00:13:48.061 --> 00:13:50.263 line:-1 position:50%
Enjoy!
[CRUNCHING]


288
00:13:50,263 --> 00:13:54,467 line:0 position:90% size:2%
♪

