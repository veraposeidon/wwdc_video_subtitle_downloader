2
00:00:00,334 --> 00:00:06,340 line:-1
♪ ♪


3
00:00:10.811 --> 00:00:12.980 line:-2 align:center
Jerry: Hi, I'm Jerry,
an Engineering Manager


4
00:00:13.013 --> 00:00:14.481 line:-1 align:center
for Siri and App Shortcuts.


5
00:00:14.515 --> 00:00:17.017 line:-2 align:center
Today, I'm gonna share with you
how you can spotlight your app


6
00:00:17.050 --> 00:00:19.086 line:-1 align:center
with App Shortcuts.


7
00:00:19,119 --> 00:00:21,722 line:-2
I'll start by looking
at why you should adopt App Shortcuts


8
00:00:21.755 --> 00:00:24.024 line:-2 align:center
to help your app create quick,
habitual actions


9
00:00:24.057 --> 00:00:27.127 line:-2 align:center
that can be used
from all over the operating system.


10
00:00:27.160 --> 00:00:31.698 line:-2 align:center
Then I will go over the basics
of implementing an App Shortcut.


11
00:00:31.732 --> 00:00:34.735 line:-2 align:center
After that, I will go over how
to make your App Shortcuts great


12
00:00:34.768 --> 00:00:36.637 line:-1 align:center
for both visual and voice use,


13
00:00:36,670 --> 00:00:40,774 line:-2
as well as new ways
App Shortcuts have improved in iOS 17.


14
00:00:40.807 --> 00:00:43.777 line:-2 align:center
And finally,
I'll wrap by looking at new ways


15
00:00:43.810 --> 00:00:46.680 line:-2 align:center
App Shortcuts can be extended
across a number of Apple devices


16
00:00:46.713 --> 00:00:48.882 line:-1 align:center
beyond iPhone.


17
00:00:48,916 --> 00:00:51,818 line:-2
To start, App Shortcuts
make it easy to discover


18
00:00:51.852 --> 00:00:54.655 line:-1 align:center
and use your app's functionality.


19
00:00:54,688 --> 00:00:57,624 line:-2
They are automatically available
as soon as your app is installed


20
00:00:57.658 --> 00:01:00.227 line:-1 align:center
and require zero user setup.


21
00:01:00.260 --> 00:01:04.131 line:-2 align:center
Unlike in iOS 15 and before,
there's no need to use the Shortcuts app


22
00:01:04.164 --> 00:01:08.001 line:-2 align:center
or use the Add To Siri button
to set up an App Shortcut before using it.


23
00:01:08.836 --> 00:01:13.440 line:-2 align:center
App Shortcuts can be run from Siri
by speaking one of their trigger phrases.


24
00:01:13,473 --> 00:01:15,976 line:-2
They're also featured prominently
right in the search results


25
00:01:16.009 --> 00:01:18.312 line:-1 align:center
when searching in Spotlight,


26
00:01:18.345 --> 00:01:20.581 line:-2 align:center
and they're found in the Shortcuts app
where they can be part


27
00:01:20,614 --> 00:01:23,717 line:-2
of powerful user Shortcuts
and Automations.


28
00:01:25.185 --> 00:01:28.121 line:-2 align:center
App Shortcuts can help raise
the visibility of your app's features


29
00:01:28.155 --> 00:01:29.857 line:-1 align:center
to your users throughout the system


30
00:01:29,890 --> 00:01:32,893 line:-2
and be great launching points
for both functionality that opens your app


31
00:01:32,926 --> 00:01:37,064 line:-2
or simply do things in the background,
so the user can maintain their focus.


32
00:01:37.097 --> 00:01:39.566 line:-2 align:center
They are fast,
memorable ways to lower the friction


33
00:01:39,600 --> 00:01:41,235 line:-1
for using your app's core features,


34
00:01:41.268 --> 00:01:43.470 line:-2 align:center
and also make them usable
for more contexts,


35
00:01:43.504 --> 00:01:48.008 line:-2 align:center
including hands-free with just your voice
or in the home with HomePod.


36
00:01:48.041 --> 00:01:51.478 line:-2 align:center
With memorable App Shortcuts targeting
your app's most important features,


37
00:01:51.512 --> 00:01:56.016 line:-2 align:center
you can help people discover, remember,
and build a habit around using your app.


38
00:01:56.884 --> 00:01:58.519 line:-1 align:center
For example, throughout this session,


39
00:01:58,552 --> 00:02:00,787 line:-2
I will be working
with a hypothetical app called "Demo"


40
00:02:00.821 --> 00:02:02.990 line:-1 align:center
for managing my to-do lists.


41
00:02:03.023 --> 00:02:05.158 line:-2 align:center
I want to expose
a new bit of functionality,


42
00:02:05,192 --> 00:02:07,895 line:-1
summarizing my lists, to the system.


43
00:02:07,928 --> 00:02:10,664 line:-2
This will let me get a quick idea
of what's left to do


44
00:02:10,697 --> 00:02:14,067 line:-1
either via Shortcuts or by asking Siri.


45
00:02:14.101 --> 00:02:17.437 line:-2 align:center
This sort of quick and lightweight feature
is perfect for App Shortcuts.


46
00:02:17,471 --> 00:02:19,873 line:-2
They let people get what they need
from my app seamlessly


47
00:02:19.907 --> 00:02:21.441 line:-1 align:center
and be on their way.


48
00:02:22,309 --> 00:02:24,845 line:-2
I'll quickly walk through how
you would implement an App Intent


49
00:02:24.878 --> 00:02:28.182 line:-2 align:center
for summarizing a to-do list,
and then implement an App Shortcut,


50
00:02:28.215 --> 00:02:30.918 line:-2 align:center
so my users can summarize a list
with a verbal command


51
00:02:30,951 --> 00:02:33,754 line:-2
from Shortcuts
and be highlighted in Spotlight.


52
00:02:34,922 --> 00:02:37,558 line:-2
App Shortcuts are built
with the App Intents framework,


53
00:02:37.591 --> 00:02:39.893 line:-2 align:center
our Swift only framework built
from the ground up


54
00:02:39,927 --> 00:02:42,462 line:-2
to make it faster and easier
to build great intents


55
00:02:42.496 --> 00:02:44.798 line:-1 align:center
right in your Swift source code.


56
00:02:44.831 --> 00:02:48.669 line:-2 align:center
All App Shortcuts begin
by defining an intent in your source code.


57
00:02:48.702 --> 00:02:52.105 line:-2 align:center
Intents represent individual tasks
that can be completed with your app,


58
00:02:52.139 --> 00:02:54.842 line:-2 align:center
like creating a to-do list,
summarizing its contents,


59
00:02:54,875 --> 00:02:57,077 line:-1
or checking off an item.


60
00:02:57.110 --> 00:03:00.047 line:-2 align:center
After you create an app intent,
you can create an app shortcut with it,


61
00:03:00.080 --> 00:03:02.516 line:-1 align:center
so it can be used from Spotlight or Siri.


62
00:03:02.549 --> 00:03:05.185 line:-2 align:center
This associates your intent
with Siri trigger phrases,


63
00:03:05.219 --> 00:03:07.955 line:-1 align:center
titles, and symbols that are needed.


64
00:03:07.988 --> 00:03:10.657 line:-2 align:center
Once you have both definitions,
all you have to do is build


65
00:03:10.691 --> 00:03:12.726 line:-1 align:center
and test your app to see it work.


66
00:03:13.694 --> 00:03:16.563 line:-2 align:center
I'm going to start by creating
a very simple app shortcut.


67
00:03:16,597 --> 00:03:19,366 line:-2
This app shortcut
will let me create a new empty to-do list


68
00:03:19.399 --> 00:03:22.903 line:-2 align:center
right from Spotlight or Siri
by entering the name of the list.


69
00:03:22,936 --> 00:03:25,439 line:-2
Implementing this will be
a simple two-step process:


70
00:03:25,472 --> 00:03:29,243 line:-2
define the app intent
and define the app shortcut.


71
00:03:29.276 --> 00:03:32.446 line:-2 align:center
I start by importing
the App Intents framework.


72
00:03:32.479 --> 00:03:34.781 line:-2 align:center
And then I implement a new struct
for my intent,


73
00:03:34.815 --> 00:03:37.251 line:-1 align:center
conforming to the AppIntent protocol.


74
00:03:37,284 --> 00:03:40,187 line:-2
I include my intent's actual functionality
in the perform method


75
00:03:40.220 --> 00:03:42.322 line:-1 align:center
that will be called by the system.


76
00:03:44,725 --> 00:03:48,061 line:-2
And finally, I implement
an AppShortcutsProvider struct.


77
00:03:48.095 --> 00:03:51.698 line:-2 align:center
Each app can have at most one struct
conforming to this protocol.


78
00:03:51,732 --> 00:03:55,102 line:-2
In the AppShortcutsProvider,
I can specify all the app shortcuts


79
00:03:55,135 --> 00:03:56,203 line:-1
my app supports.


80
00:03:56.236 --> 00:03:58.939 line:-2 align:center
Here I've added
the Create List app shortcut.


81
00:03:58.972 --> 00:04:01.441 line:-1 align:center
Each app shortcut has a few components:


82
00:04:01,475 --> 00:04:04,678 line:-2
The intent that will be invoked
when triggered.


83
00:04:04.711 --> 00:04:08.148 line:-2 align:center
The phrases that Siri should recognize
to perform this app shortcut.


84
00:04:08,182 --> 00:04:11,285 line:-2
You can have multiple
of these per App Shortcut.


85
00:04:11.318 --> 00:04:14.188 line:-2 align:center
A short title and system image name,
so the system knows how


86
00:04:14.221 --> 00:04:16.456 line:-1 align:center
to represent this app shortcut visually.


87
00:04:17,291 --> 00:04:20,127 line:-2
That's all I need to implement
for a simple app shortcut.


88
00:04:20.160 --> 00:04:22.829 line:-2 align:center
By running my app I can
immediately start creating to-do lists


89
00:04:22,863 --> 00:04:24,498 line:-1
right from Siri or the Shortcuts app,


90
00:04:24,531 --> 00:04:27,134 line:-2
all by only creating two structs
in my code.


91
00:04:28.235 --> 00:04:30.270 line:-2 align:center
I want to try something
a bit more advanced though,


92
00:04:30,304 --> 00:04:32,139 line:-2
where I can get
a quick summary of my tasks


93
00:04:32.172 --> 00:04:35.075 line:-2 align:center
by providing a specific list
to be summarized.


94
00:04:35.108 --> 00:04:37.811 line:-2 align:center
This will touch
on two key concepts in App Intents:


95
00:04:37.845 --> 00:04:39.813 line:-1 align:center
Entities and queries.


96
00:04:39,847 --> 00:04:41,982 line:-1
Let's try it out.


97
00:04:42.015 --> 00:04:45.619 line:-2 align:center
First, I need to implement
a SummarizeList App Intent.


98
00:04:45.652 --> 00:04:50.490 line:-2 align:center
Like before, I need to create a struct
that conforms to the AppIntent protocol.


99
00:04:50,524 --> 00:04:53,527 line:-2
For the TodoList struct,
I've left a stub implementation.


100
00:04:53.560 --> 00:04:55.662 line:-1 align:center
I'll come back to that.


101
00:04:55.696 --> 00:04:59.499 line:-2 align:center
I have a convenient function already in
my app that returns the summary of a list,


102
00:04:59,533 --> 00:05:01,635 line:-1
so I will just use that.


103
00:05:01,668 --> 00:05:04,338 line:-2
I can return this summary
as a custom dialog as part


104
00:05:04.371 --> 00:05:05.906 line:-1 align:center
of the app intent's results.


105
00:05:05,939 --> 00:05:08,809 line:-2
This will let Siri speak
or show the result.


106
00:05:09.877 --> 00:05:12.980 line:-2 align:center
Every intent needs a title
that the system can display.


107
00:05:14,014 --> 00:05:17,017 line:-2
Intents can take inputs
by simply declaring variables


108
00:05:17.050 --> 00:05:20.354 line:-2 align:center
and annotating them
with the @Parameter property wrapper.


109
00:05:20,387 --> 00:05:23,023 line:-2
In this case,
I've referenced a ToDoList struct that,


110
00:05:23.056 --> 00:05:25.292 line:-1 align:center
as mentioned, is just a stub for now.


111
00:05:27,194 --> 00:05:29,796 line:-2
Now I'd like to tell you
about two concepts that are useful


112
00:05:29.830 --> 00:05:33.100 line:-2 align:center
for many app intents:
entities and queries.


113
00:05:33,133 --> 00:05:37,604 line:-2
Entities are concepts relating to your app
that your users will want to reference.


114
00:05:37.638 --> 00:05:40.207 line:-2 align:center
In my app, it makes sense
to have a to-do list entity,


115
00:05:40,240 --> 00:05:42,809 line:-2
since that's a logical object
that people will want to refer to


116
00:05:42,843 --> 00:05:45,112 line:-1
when performing tasks in my app.


117
00:05:45.145 --> 00:05:51.051 line:-2 align:center
In other apps, you might have entities
for users, documents, orders, and so on.


118
00:05:51.084 --> 00:05:53.687 line:-2 align:center
Entities from your app
can be put to use in app intents


119
00:05:53.720 --> 00:05:56.757 line:-2 align:center
when those intents use the entities
as input parameters.


120
00:05:56.790 --> 00:06:01.962 line:-2 align:center
In my app, my "SummarizeList" intent
takes a to-do list entity as a parameter.


121
00:06:01.995 --> 00:06:03.931 line:-1 align:center
In order to find entity instances


122
00:06:03,964 --> 00:06:05,933 line:-2
that fit into the parameters
of an app intent,


123
00:06:05.966 --> 00:06:08.135 line:-1 align:center
the system relies on queries.


124
00:06:08,168 --> 00:06:11,371 line:1
At runtime, the system instantiates
and calls query objects


125
00:06:11,405 --> 00:06:14,308 line:1
to find entities based
on various search parameters.


126
00:06:14,341 --> 00:06:18,245 align:center
Queries return instances
of relevant entities to the system.


127
00:06:18,278 --> 00:06:21,882 line:1
The system later uses these entities
when running an intent.


128
00:06:21,915 --> 00:06:24,618 line:-2
For my app I'll need
to implement the to-do list entity,


129
00:06:24,651 --> 00:06:29,056 line:-2
as well as a query to help the system
search for relevant to-do lists.


130
00:06:29.089 --> 00:06:32.226 line:-2 align:center
Back to the list summary app shortcut
I was working on.


131
00:06:32,259 --> 00:06:34,628 line:-2
I'll expand
my stub implementation of ToDoList


132
00:06:34.661 --> 00:06:36.964 line:-1 align:center
by conforming it to AppEntity.


133
00:06:36,997 --> 00:06:39,867 line:-2
I'll implement
the typeDisplayRepresentation property


134
00:06:39,900 --> 00:06:43,070 line:-2
so that the system knows
how to describe this entity type.


135
00:06:43.103 --> 00:06:45.873 line:-2 align:center
Likewise, I'll implement
a displayRepresentation,


136
00:06:45.906 --> 00:06:49.309 line:-2 align:center
so the system knows how
to describe this specific instance.


137
00:06:49.343 --> 00:06:53.146 line:-2 align:center
Note that if I want the entity shown at
the top level in Spotlight or Shortcuts,


138
00:06:53,180 --> 00:06:57,351 line:-2
my entities need to have an image
or symbol in the display representation.


139
00:06:57.384 --> 00:07:00.821 line:-2 align:center
And finally,
I declare a default query for this entity.


140
00:07:01.655 --> 00:07:04.591 line:-2 align:center
I've implemented a simple query
for my to-do list entity.


141
00:07:04.625 --> 00:07:09.162 line:-2 align:center
At a minimum, my query must be able to
retrieve a to-do list by its identifier.


142
00:07:09,196 --> 00:07:11,465 line:-2
I'll also want
to implement suggestedEntities.


143
00:07:11,498 --> 00:07:13,534 line:-2
This lets my app have control
over what to-do lists


144
00:07:13.567 --> 00:07:15.769 line:-1 align:center
I think are most relevant to my user.


145
00:07:15,802 --> 00:07:17,804 line:-2
The system
will use these suggested entities


146
00:07:17.838 --> 00:07:20.340 line:-1 align:center
to populate my app shortcut automatically.


147
00:07:20,374 --> 00:07:23,844 line:-2
With just the SummarizeList app intent
and its associated entity


148
00:07:23.877 --> 00:07:26.346 line:-2 align:center
and query structs,
I can now use this function


149
00:07:26,380 --> 00:07:29,683 line:-2
from inside the Shortcuts app
and as part of Automations.


150
00:07:29.716 --> 00:07:31.451 line:-1 align:center
I'm not done yet though.


151
00:07:31.485 --> 00:07:34.254 line:-2 align:center
I want to make sure this functionality
is accessible from Siri


152
00:07:34,288 --> 00:07:36,456 line:-1
and is fully featured in Spotlight.


153
00:07:36,490 --> 00:07:38,992 line:-2
To do this,
I need to implement an app shortcut.


154
00:07:40.060 --> 00:07:42.429 line:-2 align:center
I will start by extending
the AppShortcutsProvider


155
00:07:42.462 --> 00:07:43.597 line:-1 align:center
I started earlier.


156
00:07:43.630 --> 00:07:46.500 line:-2 align:center
I'll add a new App Shortcut
to the existing one.


157
00:07:46,533 --> 00:07:49,336 line:-2
I'll also include an array
of spoken phrases that will invoke


158
00:07:49.369 --> 00:07:51.371 line:-1 align:center
my App Shortcut from Siri.


159
00:07:51.405 --> 00:07:53.707 line:-2 align:center
Notice that rather
than using my application's name


160
00:07:53,740 --> 00:07:56,677 line:-2
directly in the string,
I've used a special token.


161
00:07:56.710 --> 00:07:59.546 line:-2 align:center
This allows Siri
to not only recognize my app's main name,


162
00:07:59.580 --> 00:08:02.382 line:-1 align:center
but any app name synonyms I've defined.


163
00:08:02,416 --> 00:08:06,887 line:-2
I've also added the intent's parameter,
"list," into some of the phrases.


164
00:08:06.920 --> 00:08:10.624 line:-2 align:center
App Shortcuts supports extending trigger
phrases with pre-defined parameters


165
00:08:10,657 --> 00:08:14,528 line:-2
so that users can provide a parameter
immediately upon invoking Siri.


166
00:08:14.561 --> 00:08:17.698 line:-2 align:center
In this case, the system will
call the suggestedEntities method


167
00:08:17,731 --> 00:08:22,069 line:-2
on my ToDoListQuery
to get the array of possible values.


168
00:08:22,102 --> 00:08:25,439 line:-2
Note that I've also provided a phrase
that does not have the "list" parameter.


169
00:08:25.472 --> 00:08:28.509 line:-2 align:center
This is a good idea in general
so that if my App Shortcut


170
00:08:28,542 --> 00:08:33,080 line:-2
is used without a list, Siri or Shortcuts
can prompt the user to select one.


171
00:08:33,113 --> 00:08:36,917 line:-2
App Shortcuts automatically prompts
for a value prior to performing the intent


172
00:08:36,950 --> 00:08:38,919 line:-1
if the parameter is not optional.


173
00:08:38,952 --> 00:08:41,221 line:-2
For optional parameters,
you can manually prompt


174
00:08:41.255 --> 00:08:44.324 line:-1 align:center
for a value inside your perform method.


175
00:08:44.358 --> 00:08:47.995 line:-2 align:center
As before, we need to include
a short title and system image.


176
00:08:49.129 --> 00:08:51.732 line:-2 align:center
Picking a good short title
and system image are important,


177
00:08:51.765 --> 00:08:53.901 line:-2 align:center
since they're the first things
my users will see


178
00:08:53,934 --> 00:08:56,203 line:-1
when they search for my app in Spotlight.


179
00:08:57,070 --> 00:08:59,606 line:-2
App Shortcuts supports parameters
that have a fixed set


180
00:08:59.640 --> 00:09:03.143 line:-2 align:center
of well-known parameter values that
you can specify to Siri ahead of time.


181
00:09:03.177 --> 00:09:06.747 line:-2 align:center
They do not support open-ended values
like "Search my app for X,"


182
00:09:06.780 --> 00:09:09.383 line:-1 align:center
where X can be any input from the user.


183
00:09:09,416 --> 00:09:11,818 line:-1
You can use parameters that are App Enums,


184
00:09:11.852 --> 00:09:14.054 line:-2 align:center
in which case,
the values are known ahead of time,


185
00:09:14,087 --> 00:09:18,025 line:-2
or you could use parameters
that are App Entities to be fully dynamic.


186
00:09:18.058 --> 00:09:20.727 line:-2 align:center
All you need to do is return a list
of entities in your query


187
00:09:20,761 --> 00:09:22,996 line:-1 align:center
via suggestedEntities, like in my app.


188
00:09:24,097 --> 00:09:27,434 line:-2
And as a final step,
I need to call updateAppShortcutParameters


189
00:09:27.467 --> 00:09:29.837 line:-1 align:center
on my AppShortcutsProvider object.


190
00:09:29,870 --> 00:09:33,106 line:-2
Calling this method signals to the system
that your App Shortcut parameters


191
00:09:33.140 --> 00:09:36.143 line:-2 align:center
have changed and will cause the system
to call suggestedEntities


192
00:09:36.176 --> 00:09:38.946 line:-1 align:center
on any relevant queries to re-fetch them.


193
00:09:38,979 --> 00:09:41,715 line:-2
I need to do this each time
my to-do lists have changed.


194
00:09:41,748 --> 00:09:45,886 line:-2
That includes additions and deletions,
but also mutations such as renaming.


195
00:09:45,919 --> 00:09:49,056 line:-2
For example, if any part
of my entities' displayRepresentation


196
00:09:49,089 --> 00:09:51,458 line:-2
has changed,
I'll need to call this method.


197
00:09:52.559 --> 00:09:56.396 line:-2 align:center
It's important to remember to also
call this upon your app's first launch.


198
00:09:56.430 --> 00:09:59.533 line:-2 align:center
App Shortcut phrases
referencing entity parameters won't work


199
00:09:59.566 --> 00:10:02.836 line:-2 align:center
until the system has successfully
fetched entities for the first time.


200
00:10:03.904 --> 00:10:07.541 line:-2 align:center
And that's everything I need to implement
for my Summarize List App Shortcut.


201
00:10:07.574 --> 00:10:09.576 line:-1 align:center
Now when using my app, I can say,


202
00:10:09.610 --> 00:10:12.346 line:-2 align:center
"Hey, Siri.
Summarize my groceries list with Demo."


203
00:10:12.379 --> 00:10:15.516 line:-2 align:center
And immediately get a verbal
and visual response.


204
00:10:15,549 --> 00:10:18,585 line:-2
With just a small amount of code,
I've now made it easier for people


205
00:10:18.619 --> 00:10:21.855 line:-2 align:center
to get the information they need
in a quick, seamless way.


206
00:10:22,623 --> 00:10:25,092 line:-2
When you've implemented
a great full-fledged App Shortcut,


207
00:10:25.125 --> 00:10:28.061 line:-2 align:center
it's important
to help your users discover it.


208
00:10:28,095 --> 00:10:31,164 line:-2
There are two powerful ways
people can discover your App Shortcuts


209
00:10:31.198 --> 00:10:33.333 line:-2 align:center
throughout the course
of simply using their device:


210
00:10:33,367 --> 00:10:36,003 line:-1
Spotlight and Siri Tips.


211
00:10:36,036 --> 00:10:40,507 line:-2
Spotlight is one of the most popular ways
people launch apps on iPhone and iPad.


212
00:10:40.541 --> 00:10:44.811 line:-2 align:center
The Spotlight Top Hits section shows not
only apps, but also their App Shortcuts.


213
00:10:44.845 --> 00:10:48.182 line:-2 align:center
This is a great way to make
your App Shortcuts discoverable.


214
00:10:48.215 --> 00:10:51.652 line:-2 align:center
People can find your App Shortcuts
right away when they search for your app,


215
00:10:51.685 --> 00:10:53.587 line:-1 align:center
and your app is the top hit.


216
00:10:53.620 --> 00:10:57.157 line:-2 align:center
Or they can find them by searching
for the title of the App Shortcut itself,


217
00:10:57.191 --> 00:10:59.126 line:-1 align:center
like "Summarize List" here.


218
00:10:59,960 --> 00:11:02,529 line:-2
In addition to Spotlight,
the Siri Tip is a great way


219
00:11:02.563 --> 00:11:04.398 line:-2 align:center
to let your users
discover your App Shortcuts


220
00:11:04.431 --> 00:11:06.300 line:-1 align:center
while they are still using your app.


221
00:11:06.333 --> 00:11:09.303 line:-2 align:center
Here I've added one in the list view,
since that feels like the place


222
00:11:09.336 --> 00:11:11.772 line:-1 align:center
where people would find this tip useful.


223
00:11:11.805 --> 00:11:14.908 line:-2 align:center
The Tip View is available
in both SwiftUI and UIKit,


224
00:11:14.942 --> 00:11:18.879 line:-2 align:center
and we've provided a number of styles,
so they look great in any application.


225
00:11:18.912 --> 00:11:20.948 line:-1 align:center
Siri Tips are best placed contextually


226
00:11:20,981 --> 00:11:23,951 line:-2
so that they are relevant
to the content onscreen.


227
00:11:23,984 --> 00:11:27,120 line:-2
Between Spotlight and Siri Tips,
there are ways for your users


228
00:11:27.154 --> 00:11:30.524 line:-2 align:center
to find out about App Shortcuts
both in and outside your app.


229
00:11:31,692 --> 00:11:34,761 line:-2
If you want to dig more deeply
into both App Intents and App Shortcuts,


230
00:11:34,795 --> 00:11:38,131 line:1
check out two sessions from WWDC22.


231
00:11:38,165 --> 00:11:42,803 align:center
"Dive into App Intents" is great for
an overview of the App Intents framework,


232
00:11:42,836 --> 00:11:46,106 align:center
and "Implement App Shortcuts with App
Intents" explores a greater variety


233
00:11:46,139 --> 00:11:48,475 align:center
of user experiences
available throughout App Shortcuts,


234
00:11:48,509 --> 00:11:52,446 line:1
such as disambiguating between
multiple possible parameter values.


235
00:11:53,547 --> 00:11:55,816 line:-2
Now that I've implemented
my first App Shortcut,


236
00:11:55.849 --> 00:11:58.685 line:-2 align:center
I'd like to tell you about what's new
this year to help you make the most


237
00:11:58.719 --> 00:12:02.689 line:-2 align:center
out of App Shortcuts and all
of the great new features of iOS 17.


238
00:12:03.824 --> 00:12:06.326 line:-1 align:center
In iOS 17, we've updated how App Intents


239
00:12:06.360 --> 00:12:08.662 line:-2 align:center
and App Shortcuts
are shown in the Shortcuts app.


240
00:12:08.695 --> 00:12:11.632 line:-2 align:center
This new design lets people
find your app's intents more easily,


241
00:12:11,665 --> 00:12:15,502 line:-2
and gives one-tap access
to the app's most important actions.


242
00:12:15,536 --> 00:12:18,805 line:-2
App Shortcuts also now get
prominent placement in Spotlight.


243
00:12:18,839 --> 00:12:21,241 line:-2
Not only are frequently-used
App Shortcuts shown here,


244
00:12:21,275 --> 00:12:24,144 line:-2
but we've also added new APIs this year
to make your App Shortcuts


245
00:12:24.178 --> 00:12:26.613 line:-2 align:center
more visually distinctive,
and also introduced the ability


246
00:12:26.647 --> 00:12:29.249 line:-2 align:center
for Spotlight
to highlight entities of interest.


247
00:12:30.250 --> 00:12:33.820 line:-2 align:center
The Shortcuts Automation setup
has been redesigned to be easier to use,


248
00:12:33.854 --> 00:12:35.322 line:-1 align:center
and your App Shortcuts are featured,


249
00:12:35,355 --> 00:12:37,891 line:-2
so people can get started
with them more simply.


250
00:12:38.959 --> 00:12:41.128 line:-2 align:center
To take advantage of all
of these great new features


251
00:12:41.161 --> 00:12:45.432 line:-2 align:center
and bring attention to your App Shortcuts,
we've introduced new APIs around colors,


252
00:12:45,465 --> 00:12:48,402 line:-2
entity thumbnails,
and short titles with symbols.


253
00:12:48.435 --> 00:12:50.838 line:-2 align:center
These new APIs are required
for all App Shortcuts


254
00:12:50.871 --> 00:12:52.840 line:-1 align:center
and will help your app really stand out.


255
00:12:53,841 --> 00:12:55,242 line:-1
I'll start with colors.


256
00:12:55.275 --> 00:12:58.111 line:-2 align:center
You can now set up
to two colors in your app's Info plist


257
00:12:58,145 --> 00:13:00,013 line:-2
that the system will use
when your app appears


258
00:13:00.047 --> 00:13:02.015 line:-1 align:center
in Spotlight or Shortcuts.


259
00:13:02.049 --> 00:13:05.285 line:-2 align:center
Consider adopting colors
similar to your app's in-app style,


260
00:13:05.319 --> 00:13:07.487 line:-2 align:center
so you can bring a little bit
of your in-app experience


261
00:13:07.521 --> 00:13:09.890 line:-1 align:center
into the rest of the system.


262
00:13:09.923 --> 00:13:14.561 line:-2 align:center
Next, each entity instance in your app
can now have an optional thumbnail image.


263
00:13:14,595 --> 00:13:18,432 line:-2
This is an extension of the existing
DisplayRepresentation API.


264
00:13:18,465 --> 00:13:22,402 line:-2
Your thumbnail can be provided
either as a URL where the image resides,


265
00:13:22,436 --> 00:13:24,605 line:-1
a Data object representing the image,


266
00:13:24,638 --> 00:13:28,509 line:-2
a named bundled image resource,
or a system image name.


267
00:13:28,542 --> 00:13:31,078 line:-2
Choosing a unique and distinctive image
for your entities


268
00:13:31.111 --> 00:13:34.214 line:-2 align:center
will help make
your Spotlight appearance more engaging.


269
00:13:34,248 --> 00:13:38,418 line:-2
And finally, every app shortcut now
requires a short title and system image.


270
00:13:38,452 --> 00:13:41,588 line:-2
When shown in Spotlight or Shortcuts,
the short title and system image


271
00:13:41,622 --> 00:13:43,290 line:-1
are used to style the action.


272
00:13:43.323 --> 00:13:46.727 line:-2 align:center
Pick something that's distinctive and
represents what your app shortcut does.


273
00:13:47,794 --> 00:13:50,964 line:-2
In addition to all of the great new ways
App Shortcuts are visually featured


274
00:13:50,998 --> 00:13:53,066 line:-2
in the system,
we've also made big improvements


275
00:13:53,100 --> 00:13:56,436 line:-2
this year to how App Shortcuts
can be used with Siri.


276
00:13:56,470 --> 00:14:00,607 line:-2
In iOS 16, Siri will only recognize
your App Shortcut trigger phrases


277
00:14:00.641 --> 00:14:02.609 line:-2 align:center
if they are spoken
exactly as you've defined them


278
00:14:02,643 --> 00:14:04,611 line:-1
in your source code and strings files.


279
00:14:04.645 --> 00:14:07.548 line:-2 align:center
But people using your app may
use different words and phrasings


280
00:14:07.581 --> 00:14:09.783 line:-1 align:center
when trying to access your App Shortcut.


281
00:14:09,816 --> 00:14:13,987 line:-2
For example, in my app, I provided,
"Summarize my groceries list with Demo,"


282
00:14:14.021 --> 00:14:16.423 line:-2 align:center
as a phrase,
so it triggers my App Shortcut


283
00:14:16.456 --> 00:14:20.494 line:-2 align:center
as expected when spoken, but something
quite similar and reasonable like,


284
00:14:20.527 --> 00:14:24.798 line:-2 align:center
"Tell me the summary of my groceries list
with Demo," would not work.


285
00:14:24.831 --> 00:14:28.202 line:-2 align:center
In iOS 17, we're giving you the ability
to speak more naturally


286
00:14:28,235 --> 00:14:29,903 line:-1
to trigger your App Shortcuts.


287
00:14:29.937 --> 00:14:33.240 line:-2 align:center
This takes advantage of on-device
machine learning to allow phrases similar


288
00:14:33,273 --> 00:14:36,844 line:-2
to the ones you've provided
in your App Shortcut to also just work.


289
00:14:36.877 --> 00:14:40.314 line:-2 align:center
This is powered
by a new Semantic Similarity Index.


290
00:14:41,582 --> 00:14:43,584 line:-1
With this new flexible matching feature,


291
00:14:43,617 --> 00:14:46,320 line:-2
people can use more natural ways
of invoking app shortcuts,


292
00:14:46.353 --> 00:14:49.523 line:-2 align:center
and you don't have to provide
every possible different phrasing.


293
00:14:49.556 --> 00:14:53.594 line:-2 align:center
And most importantly, there are no code
changes required to get flexible matching.


294
00:14:53,627 --> 00:14:57,397 line:-2
Simply rebuild your app with Xcode 15,
and phrases similar to the ones


295
00:14:57.431 --> 00:14:59.933 line:-1 align:center
you already have will just work.


296
00:14:59.967 --> 00:15:02.169 line:-2 align:center
If you're not yet ready
to adopt flexible matching,


297
00:15:02,202 --> 00:15:03,770 line:-1
you can opt-out by disabling


298
00:15:03.804 --> 00:15:06.673 line:-2 align:center
the "Enable App Shortcuts
Flexible Matching" build setting,


299
00:15:06,707 --> 00:15:10,344 line:-2
and revert to having exact-match only
on your app shortcuts phrases.


300
00:15:11,745 --> 00:15:14,748 line:-2
To help further broaden the naturalness
of App Shortcuts phrases,


301
00:15:14.781 --> 00:15:17.451 line:-1 align:center
there is also a new synonyms API.


302
00:15:17,484 --> 00:15:20,354 line:-2
This is a small addition
to the DisplayRepresentation API


303
00:15:20,387 --> 00:15:24,892 line:-2
so that you can define additional synonyms
for AppEntities and AppEnum cases.


304
00:15:24.925 --> 00:15:27.027 line:-2 align:center
This will further broaden the reach
of your App Shortcuts


305
00:15:27.060 --> 00:15:30.030 line:-2 align:center
by making it possible
to speak more naturally to Siri.


306
00:15:30.964 --> 00:15:33.600 line:-2 align:center
For example, in my app,
I can now refer to my lists


307
00:15:33.634 --> 00:15:36.069 line:-2 align:center
by alternate names
right in the trigger phrase.


308
00:15:37,504 --> 00:15:40,307 line:-2
The synonyms also work
if Siri prompts me for a list,


309
00:15:40.340 --> 00:15:42.643 line:-1 align:center
if I didn't specify one upfront.


310
00:15:42.676 --> 00:15:45.712 line:-2 align:center
These synonyms are associated
with each instance of an entity,


311
00:15:45.746 --> 00:15:49.316 line:-2 align:center
and if they change, you should
call updateAppShortcutParameters again.


312
00:15:50,584 --> 00:15:54,888 line:-2
In order to support Flexible Matching,
there is also a new Negative Phrases API.


313
00:15:54.922 --> 00:15:57.891 line:-2 align:center
You only need to use this if you find
that phrases that do not belong


314
00:15:57,925 --> 00:16:01,261 line:-2
to your App Shortcuts are nonetheless
incorrectly invoking your app.


315
00:16:01,295 --> 00:16:04,398 line:-2
In this case,
"Send a Demo summary to my grocery store,"


316
00:16:04.431 --> 00:16:06.366 line:-1 align:center
might incorrectly trigger my App Shortcut,


317
00:16:06,400 --> 00:16:09,102 line:-2
so I will include this
in my negative phrases.


318
00:16:10,204 --> 00:16:12,606 line:-2
And finally,
testing App Shortcuts with Siri


319
00:16:12,639 --> 00:16:15,742 line:-2
can be slow-going,
requiring you to build and launch your app


320
00:16:15.776 --> 00:16:17.945 line:-1 align:center
and speak to Siri each time.


321
00:16:17.978 --> 00:16:22.683 line:-2 align:center
This is especially time-consuming
if you want to test in multiple locales.


322
00:16:22.716 --> 00:16:25.786 line:-2 align:center
To help make authoring
App Shortcuts faster and easier,


323
00:16:25,819 --> 00:16:30,057 line:-2
we're introducing a powerful new tool
in Xcode called App Shortcuts Preview.


324
00:16:30,090 --> 00:16:32,860 line:-2
You should note that App Shortcuts Preview
is only available


325
00:16:32.893 --> 00:16:35.863 line:-1 align:center
when running Xcode 15 on macOS Sonoma.


326
00:16:35.896 --> 00:16:38.165 line:-1 align:center
Let's take a look at a demo.


327
00:16:39.032 --> 00:16:41.001 line:-1 align:center
Here I have the project for my Demo app,


328
00:16:41,034 --> 00:16:43,737 line:-2
where I've
previously implemented App Shortcuts.


329
00:16:43.770 --> 00:16:47.407 line:-2 align:center
I can test my App Shortcuts
by launching my app and speaking to Siri,


330
00:16:47.441 --> 00:16:51.645 line:-2 align:center
but I want to show you a faster way of
quickly previewing the effects of phrases.


331
00:16:51.678 --> 00:16:55.782 line:-2 align:center
This new feature can be found in Product,
App Shortcuts Preview.


332
00:16:55,816 --> 00:16:59,319 line:-2
It requires building my app first
so that the Semantic Similarity Index


333
00:16:59.353 --> 00:17:01.522 line:-1 align:center
has an opportunity to generate.


334
00:17:01,555 --> 00:17:05,025 line:-2
After building,
I can simply select my app on the left


335
00:17:05,058 --> 00:17:08,662 line:-2
and immediately start entering phrases
that I think people may speak to Siri.


336
00:17:09,630 --> 00:17:11,732 line:-2
Let's try a couple of phrases
that I know will work,


337
00:17:11.765 --> 00:17:13.934 line:-1 align:center
since it's the one I defined in my code.


338
00:17:13.967 --> 00:17:16.803 line:-1 align:center
Summarize the shopping list with Demo.


339
00:17:16.837 --> 00:17:20.107 line:-2 align:center
That correctly matches
with my SummarizeList intent.


340
00:17:21,341 --> 00:17:23,477 line:-2
Let's try a phrase
that's similar to the first,


341
00:17:23.510 --> 00:17:25.946 line:-1 align:center
but not one I provided.


342
00:17:25.979 --> 00:17:28.916 line:-2 align:center
Give me the summary
of the shopping list with Demo.


343
00:17:30,050 --> 00:17:32,519 line:-2
Thanks to Flexible Matching,
this phrase also matches


344
00:17:32,553 --> 00:17:35,989 line:-2
with the same intent without me
having to do any additional work.


345
00:17:37,224 --> 00:17:40,394 line:-2
Now let's try with a third phrase
that might be a little bit too different


346
00:17:40,427 --> 00:17:43,030 line:-1
to be recognized reliably.


347
00:17:43,063 --> 00:17:45,933 line:-2
Give me the gist
of the shopping list with Demo.


348
00:17:46.867 --> 00:17:49.703 line:-2 align:center
This has no match
with any App Shortcuts in my app.


349
00:17:49,736 --> 00:17:54,074 line:0
I can very quickly add a new phrase
to my App Shortcut,


350
00:17:54,107 --> 00:17:57,611 line:0
rebuild, and test the phrase again.


351
00:18:01.949 --> 00:18:05.752 line:-2 align:center
Give me the gist
of the shopping list with Demo.


352
00:18:05.786 --> 00:18:07.054 line:-1 align:center
And the new phrase matches,


353
00:18:07.087 --> 00:18:09.623 line:-2 align:center
and I am able to verify that
without running my app.


354
00:18:10,591 --> 00:18:13,126 align:center
Now I want to test my app in Mandarin.


355
00:18:13,160 --> 00:18:16,363 align:center
Rather than switch my phone's language,
run my app, and ask Siri,


356
00:18:16,396 --> 00:18:19,633 align:center
I can simply use the locale selector
in the Preview.


357
00:18:19,666 --> 00:18:22,803 align:center
This lets me immediately test
a new phrase.


358
00:18:22,836 --> 00:18:25,105 line:0
[speaking Mandarin]


359
00:18:26,306 --> 00:18:28,775 line:0
And there,
the Mandarin phrase works as expected,


360
00:18:28,809 --> 00:18:31,478 align:center
all without me needing
to use a development device.


361
00:18:32,646 --> 00:18:35,048 line:-2
App Shortcuts Preview
is a faster alternative


362
00:18:35.082 --> 00:18:37.718 line:-2 align:center
to manually testing
how your App Shortcuts work with Siri,


363
00:18:37.751 --> 00:18:40.454 line:-2 align:center
and it's gonna make developing
your App Shortcuts easier.


364
00:18:41.355 --> 00:18:44.291 line:-2 align:center
In iOS 17,
we're also improving how you can localize


365
00:18:44.324 --> 00:18:45.659 line:-1 align:center
your App Shortcuts trigger phrases,


366
00:18:45,692 --> 00:18:48,428 line:-2
along with the new
String Catalog file format.


367
00:18:48.462 --> 00:18:50.664 line:-2 align:center
Previously,
you were limited in how many phrases


368
00:18:50,697 --> 00:18:53,367 line:-2
you could have
for each App Shortcut in each locale.


369
00:18:53.400 --> 00:18:56.069 line:-2 align:center
If you define five phrases
for an App Shortcut in your Swift code,


370
00:18:56.103 --> 00:18:59.973 line:-2 align:center
for example, you would be limited
to five phrases in each locale.


371
00:19:00,007 --> 00:19:02,676 line:-2
In iOS 17,
with the help of String Catalogs,


372
00:19:02,709 --> 00:19:05,512 line:-2
we're lifting this limitation
so that you can have as many phrases


373
00:19:05,546 --> 00:19:08,549 line:-2
as is naturally needed
for each and every locale.


374
00:19:08.582 --> 00:19:10.450 line:-2 align:center
You should note
that this feature is available only


375
00:19:10,484 --> 00:19:13,921 line:-1
to apps targeting iOS 17 later.


376
00:19:13,954 --> 00:19:16,456 line:-2
Taking advantage
of this new feature is simple.


377
00:19:16.490 --> 00:19:19.626 line:-2 align:center
If you have not adopted App Shortcuts
in your app before this year,


378
00:19:19,660 --> 00:19:23,797 line:-2
simply create a new String Catalog
called "AppShortcuts."


379
00:19:29,970 --> 00:19:32,873 align:center
After rebuilding your app,
you will see the phrases you defined


380
00:19:32,906 --> 00:19:35,809 align:center
in your AppShortcutsProvider
populated automatically.


381
00:19:37.477 --> 00:19:39.646 line:-2 align:center
As you edit your Swift source code
and rebuild,


382
00:19:39,680 --> 00:19:42,549 line:-2
the new String Catalog format
will keep up with any phrases


383
00:19:42,583 --> 00:19:44,985 line:-1
you add or remove automatically.


384
00:19:45,919 --> 00:19:49,489 line:-2
Alternatively, if you've already adopted
App Shortcuts prior to this year,


385
00:19:49,523 --> 00:19:53,727 line:-2
simply migrate your AppShortcuts.strings
file to String Catalog.


386
00:19:55,128 --> 00:19:59,132 line:0
Right click on it in Xcode
and follow the migration assistant.


387
00:19:59,166 --> 00:20:00,934 line:-1
Upon completion and rebuilding,


388
00:20:00,968 --> 00:20:03,237 line:-2
you will see your phrases
populate automatically,


389
00:20:03.270 --> 00:20:06.273 line:-2 align:center
preserving any localization
you may have done already.


390
00:20:08,108 --> 00:20:11,111 line:-2
Once migrated to String Catalog,
you can add additional phrases


391
00:20:11,144 --> 00:20:13,313 line:-1
for each locale without limitation.


392
00:20:14,314 --> 00:20:16,950 line:-2
Flexible matching,
the new App Shortcuts Preview,


393
00:20:16.984 --> 00:20:20.621 line:-2 align:center
and String Catalogs will make
App Shortcuts far better with Siri.


394
00:20:20.654 --> 00:20:23.957 line:-2 align:center
Here are a few tips
on making your trigger phrases great:


395
00:20:23.991 --> 00:20:26.326 line:-2 align:center
It’s important
to choose memorable phrases.


396
00:20:26,360 --> 00:20:28,795 line:-2
Your app's users will have lots
of other apps on their phones


397
00:20:28.829 --> 00:20:30.931 line:-2 align:center
that support App Shortcuts,
and in practice,


398
00:20:30,964 --> 00:20:34,902 line:-2
they'll have a hard time remembering
exactly how to phrase their shortcuts.


399
00:20:34,935 --> 00:20:37,171 line:-1
Take advantage of app name synonyms.


400
00:20:37.204 --> 00:20:41.608 line:-2 align:center
This will help further broaden how
your users can invoke your App Shortcuts.


401
00:20:41,642 --> 00:20:44,278 line:-2
Avoid using
non-human-readable placeholder keys


402
00:20:44.311 --> 00:20:45.712 line:-1 align:center
in your Swift source code.


403
00:20:45,746 --> 00:20:47,981 line:-2
If you refer to any parameters
in your phrases,


404
00:20:48.015 --> 00:20:50.651 line:-2 align:center
they must be defined
by the interpolated string placeholders


405
00:20:50.684 --> 00:20:52.819 line:-1 align:center
I demonstrated earlier.


406
00:20:52.853 --> 00:20:55.889 line:-2 align:center
This is necessary for the runtime
to load and fill these placeholders


407
00:20:55.923 --> 00:20:57.558 line:-1 align:center
correctly at runtime.


408
00:20:58.425 --> 00:21:01.929 line:-2 align:center
In addition, there are some limitations
to App Shortcuts you should be aware of


409
00:21:01.962 --> 00:21:04.631 line:-1 align:center
as you are adopting them in your app.


410
00:21:04,665 --> 00:21:07,868 line:-2
Your app can have
at most ten App Shortcuts.


411
00:21:07,901 --> 00:21:11,572 line:-2
You may have at most 1,000
trigger phrases for your entire app.


412
00:21:11.605 --> 00:21:14.208 line:-2 align:center
Note that this includes
all combinations of parameters.


413
00:21:14,241 --> 00:21:17,177 line:-2
So for example,
a parameter with ten possible values


414
00:21:17.211 --> 00:21:20.681 line:-2 align:center
would expand the number
of effective phrases by a factor of ten.


415
00:21:20.714 --> 00:21:23.584 line:-2 align:center
You can avoid hitting this limit
by making sure any parameters


416
00:21:23,617 --> 00:21:26,653 line:-2
in phrases
don't have too many possible values.


417
00:21:26.687 --> 00:21:29.823 line:-2 align:center
Testing with App Shortcuts Preview
will also help ensure you don't define


418
00:21:29.857 --> 00:21:33.827 line:-2 align:center
redundant phrases that might be
covered by Flexible Matching already.


419
00:21:33.861 --> 00:21:37.831 line:-2 align:center
All trigger phrases must contain
your app name or an app name synonym.


420
00:21:37.865 --> 00:21:40.634 line:-2 align:center
For a guide on how to define
additional app name synonyms,


421
00:21:40,667 --> 00:21:43,170 line:-2
refer to the link
associated with this video.


422
00:21:44.271 --> 00:21:48.208 line:-2 align:center
App Shortcuts that open the app
are now eligible to be shown in Spotlight.


423
00:21:48.242 --> 00:21:50.711 line:-2 align:center
If you have an app intent
that opens your app with an entity,


424
00:21:50.744 --> 00:21:54.414 line:-2 align:center
you should conform that app intent
to the OpenIntent protocol.


425
00:21:55.649 --> 00:21:58.919 line:-2 align:center
Now that I've gone over how to create
a great App Shortcuts experience,


426
00:21:58,952 --> 00:22:01,255 line:-2
let's talk about how you can bring
this same great experience


427
00:22:01.288 --> 00:22:04.224 line:-2 align:center
across a wider variety
of devices beyond iPhone.


428
00:22:05.092 --> 00:22:08.161 line:-2 align:center
App Shortcuts now work on Apple Watch,
but you should be aware


429
00:22:08,195 --> 00:22:11,765 line:-2
of some limitations
to get the best possible experience.


430
00:22:11,798 --> 00:22:14,701 line:-2
App Shortcuts on Apple Watch
must come from a watchOS app


431
00:22:14.735 --> 00:22:16.603 line:-1 align:center
installed on the device itself.


432
00:22:16,637 --> 00:22:20,374 line:-2
App Shortcuts from a paired iOS device
cannot be run on the Watch.


433
00:22:20.407 --> 00:22:23.510 line:-2 align:center
This means that if you have
an iOS app installed on iPhone,


434
00:22:23.544 --> 00:22:25.412 line:-1 align:center
but not the corresponding watchOS app,


435
00:22:25,445 --> 00:22:28,215 line:-2
your App Shortcuts
will not work from watchOS.


436
00:22:29,516 --> 00:22:32,653 line:-2
Flexible matching with Siri
is not available on Apple Watch,


437
00:22:32,686 --> 00:22:35,322 line:-1
so phrases must be spoken exactly.


438
00:22:35,355 --> 00:22:39,059 line:-2
Apple Watch support was introduced
in watchOS 9.2 and is available


439
00:22:39,092 --> 00:22:41,828 line:-2
on all devices
running that version or later.


440
00:22:43.063 --> 00:22:46.166 line:-2 align:center
App Shortcuts are also now
discoverable on Apple Watch.


441
00:22:46.200 --> 00:22:48.735 line:-2 align:center
Just like on iOS,
the Shortcuts app on watchOS


442
00:22:48.769 --> 00:22:52.039 line:-2 align:center
prominently features App Shortcuts
available on the device.


443
00:22:53.140 --> 00:22:56.577 line:-2 align:center
Secondly, App Shortcuts are
now supported on HomePod.


444
00:22:56.610 --> 00:22:59.313 line:-2 align:center
This requires an App Shortcut enabled app
to be installed


445
00:22:59,346 --> 00:23:02,282 line:-1
on a companion iOS or iPadOS device.


446
00:23:02.316 --> 00:23:05.853 line:-2 align:center
Unlike running on iOS or iPadOS,
where App Shortcuts can result


447
00:23:05,886 --> 00:23:07,554 line:-1
in launching the app, on HomePod,


448
00:23:07.588 --> 00:23:10.424 line:-2 align:center
App Shortcuts
may not launch the app at all.


449
00:23:10.457 --> 00:23:13.694 line:-2 align:center
For example,
by simply having my Demo app on my iPhone,


450
00:23:13.727 --> 00:23:18.131 line:-2 align:center
I can say to my HomePod, "Hey, Siri.
Summarize my groceries list with Demo."


451
00:23:18,966 --> 00:23:23,370 line:-2
HomePod support for App Shortcuts
is available from version 16.2 and newer.


452
00:23:25.305 --> 00:23:29.676 line:-2 align:center
When designing App Shortcuts for HomePod,
consider that it is a voice-only device.


453
00:23:29,710 --> 00:23:33,547 line:-2
Make sure you are returning clear
and concise dialog to be spoken by Siri,


454
00:23:33,580 --> 00:23:36,717 line:-2
since there won't
be any corresponding visuals.


455
00:23:36,750 --> 00:23:39,152 line:-1
The IntentDialog class has an initializer


456
00:23:39.186 --> 00:23:41.989 line:-2 align:center
that takes both a "full"
and "supporting" string.


457
00:23:42.022 --> 00:23:43.824 line:-1 align:center
The HomePod will use the "full" dialog,


458
00:23:43.857 --> 00:23:47.628 line:-2 align:center
while visual devices like iPhone will
use the alternate "supporting" dialog.


459
00:23:47.661 --> 00:23:51.064 line:-2 align:center
This allows you to be more brief
when a user can reference a visual output,


460
00:23:51.098 --> 00:23:53.934 line:-2 align:center
but remain fully descriptive
if no screen is available.


461
00:23:54,968 --> 00:23:57,070 line:0
For more guidance on how
to design App Shortcuts,


462
00:23:57,104 --> 00:23:58,839 align:center
including voice-only use cases,


463
00:23:58,872 --> 00:24:03,177 align:center
check out the "Design App Shortcuts"
session from WWDC22.


464
00:24:05,112 --> 00:24:08,348 line:-2
I want to wrap up
by reiterating some key takeaways.


465
00:24:08,382 --> 00:24:10,384 line:-1
App Shortcuts help raise the visibility


466
00:24:10.417 --> 00:24:12.486 line:-2 align:center
of your app's features
throughout the system,


467
00:24:12.519 --> 00:24:15.522 line:-2 align:center
and lowers the friction
to habitual usage for your app.


468
00:24:16,623 --> 00:24:18,926 line:-2
App Shortcuts
are more discoverable than ever,


469
00:24:18,959 --> 00:24:21,995 line:-2
with prominent placement right
in Spotlight helping drive more usage


470
00:24:22,029 --> 00:24:25,532 line:-2
of your app and more styling options
to help your app stand out.


471
00:24:26.767 --> 00:24:29.837 line:-2 align:center
App Shortcuts with Siri are
hugely improved with Flexible Matching,


472
00:24:29.870 --> 00:24:33.674 line:-2 align:center
allowing users to trigger App Shortcuts
with their voice more easily.


473
00:24:33.707 --> 00:24:37.010 line:-2 align:center
And developing and testing
App Shortcuts is faster and easier


474
00:24:37,044 --> 00:24:39,413 line:-2
with the new App Shortcuts
Preview tool in Xcode.


475
00:24:40,614 --> 00:24:43,150 align:center
For deeper dives into App Intents
and App Shortcuts,


476
00:24:43,183 --> 00:24:46,186 align:center
there are two more sessions
from this year you should check out.


477
00:24:47,254 --> 00:24:50,123 line:-2
With all of these improvements,
I think App Shortcuts will be a great fit


478
00:24:50,157 --> 00:24:51,825 line:-1
for your app and your users.


479
00:24:51,859 --> 00:24:54,595 line:-2
I'm looking forward to seeing
all the great App Shortcuts you'll create.


480
00:24:54,628 --> 00:24:58,732 line:-1
♪ ♪

